{"version":3,"sources":["webpack:///S:/experimente/ngx-i18nsupport/dist/ngx-i18nsupport-lib/fesm5/ngx-i18nsupport-ngx-i18nsupport-lib.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/active-project.guard.ts","webpack:///./src/app/app-material.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auto-translate-summary-page/auto-translate-summary-page.component.html","webpack:///./src/app/auto-translate-summary-page/auto-translate-summary-page.component.ts","webpack:///./src/app/common/abbreviate.pipe.ts","webpack:///./src/app/common/util.ts","webpack:///./src/app/configure-auto-translate-page/configure-auto-translate-page.component.html","webpack:///./src/app/configure-auto-translate-page/configure-auto-translate-page.component.ts","webpack:///./src/app/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/create-project-page/create-project-page.component.html","webpack:///./src/app/create-project-page/create-project-page.component.ts","webpack:///./src/app/edit-project-page/edit-project-page.component.html","webpack:///./src/app/edit-project-page/edit-project-page.component.ts","webpack:///./src/app/file-accessors/common/file-access-service-factory.service.ts","webpack:///./src/app/file-accessors/common/file-accessor-type.ts","webpack:///./src/app/file-accessors/common/file-explorer-dialog/file-explorer-dialog.component.html","webpack:///./src/app/file-accessors/common/file-explorer-dialog/file-explorer-dialog.component.ts","webpack:///./src/app/file-accessors/common/file-explorer/file-explorer.component.html","webpack:///./src/app/file-accessors/common/file-explorer/file-explorer.component.ts","webpack:///./src/app/file-accessors/common/file-to-save/file-to-save.component.html","webpack:///./src/app/file-accessors/common/file-to-save/file-to-save.component.ts","webpack:///./src/app/file-accessors/common/generic-file.ts","webpack:///./src/app/file-accessors/common/i-file-access-service.ts","webpack:///./src/app/file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component.html","webpack:///./src/app/file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component.ts","webpack:///./src/app/file-accessors/common/save-as-explorer/save-as-explorer.component.html","webpack:///./src/app/file-accessors/common/save-as-explorer/save-as-explorer.component.ts","webpack:///./src/app/file-accessors/download-upload/asynchronous-file-reader.service.ts","webpack:///./src/app/file-accessors/download-upload/download-upload-configuration.ts","webpack:///./src/app/file-accessors/download-upload/download-upload-file-description.ts","webpack:///./src/app/file-accessors/download-upload/download-upload.service.ts","webpack:///./src/app/file-accessors/download-upload/downloader.service.ts","webpack:///./src/app/file-accessors/download-upload/translation-file-upload/translation-file-upload.component.html","webpack:///./src/app/file-accessors/download-upload/translation-file-upload/translation-file-upload.component.ts","webpack:///./src/app/file-accessors/github/configure-github-page/configure-github-page.component.html","webpack:///./src/app/file-accessors/github/configure-github-page/configure-github-page.component.ts","webpack:///./src/app/file-accessors/github/github-accessor.service.ts","webpack:///./src/app/file-accessors/github/github-api.service.ts","webpack:///./src/app/file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component.html","webpack:///./src/app/file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component.ts","webpack:///./src/app/file-accessors/github/github-config-editor/github-config-editor.component.html","webpack:///./src/app/file-accessors/github/github-config-editor/github-config-editor.component.ts","webpack:///./src/app/file-accessors/github/github-configuration.ts","webpack:///./src/app/file-accessors/github/github-file-description.ts","webpack:///./src/app/file-accessors/github/github-file.ts","webpack:///./src/app/file-accessors/github/translation-file-from-github/translation-file-from-github.component.html","webpack:///./src/app/file-accessors/github/translation-file-from-github/translation-file-from-github.component.ts","webpack:///./src/app/filter-page/filter-page.component.html","webpack:///./src/app/filter-page/filter-page.component.ts","webpack:///./src/app/filter-status/filter-status.component.html","webpack:///./src/app/filter-status/filter-status.component.ts","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/language/language.component.html","webpack:///./src/app/language/language.component.ts","webpack:///./src/app/model/auto-translate-google.service.ts","webpack:///./src/app/model/auto-translate-result.ts","webpack:///./src/app/model/auto-translate-service-api.ts","webpack:///./src/app/model/auto-translate-summary-report.ts","webpack:///./src/app/model/backend-local-storage.service.ts","webpack:///./src/app/model/backend-service-api.ts","webpack:///./src/app/model/filters/translation-unit-filter-all.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated-failed.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated-ignored.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated.ts","webpack:///./src/app/model/filters/translation-unit-filter-needs-review.ts","webpack:///./src/app/model/filters/translation-unit-filter-substring.ts","webpack:///./src/app/model/filters/translation-unit-filter-untranslated.ts","webpack:///./src/app/model/filters/translation-unit-filter.service.ts","webpack:///./src/app/model/normalized-message.ts","webpack:///./src/app/model/serialization.service.ts","webpack:///./src/app/model/tiny-translator.service.ts","webpack:///./src/app/model/translation-file-view.ts","webpack:///./src/app/model/translation-file.ts","webpack:///./src/app/model/translation-project.ts","webpack:///./src/app/model/translation-unit.ts","webpack:///./src/app/normalized-message-input/normalized-message-input.component.html","webpack:///./src/app/normalized-message-input/normalized-message-input.component.ts","webpack:///./src/app/project-editor/project-editor.component.html","webpack:///./src/app/project-editor/project-editor.component.ts","webpack:///./src/app/project-list/project-list.component.html","webpack:///./src/app/project-list/project-list.component.ts","webpack:///./src/app/project-starter/project-starter.component.html","webpack:///./src/app/project-starter/project-starter.component.ts","webpack:///./src/app/project-status/project-status.component.html","webpack:///./src/app/project-status/project-status.component.ts","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/publish-project-page/publish-project-page.component.html","webpack:///./src/app/publish-project-page/publish-project-page.component.ts","webpack:///./src/app/translate-page/translate-page.component.html","webpack:///./src/app/translate-page/translate-page.component.ts","webpack:///./src/app/translate-unit-list/translate-unit-list.component.html","webpack:///./src/app/translate-unit-list/translate-unit-list.component.ts","webpack:///./src/app/translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component.html","webpack:///./src/app/translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component.ts","webpack:///./src/app/translate-unit/translate-unit.component.html","webpack:///./src/app/translate-unit/translate-unit.component.ts","webpack:///./src/app/translation-file-status/translation-file-status.component.html","webpack:///./src/app/translation-file-status/translation-file-status.component.ts","webpack:///./src/app/update-available/update-available.component.html","webpack:///./src/app/update-available/update-available.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACG;AACe;AACT;AACb;;AAErC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC,UAAU;AACV;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,6BAA6B;AACxD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oDAAa;AACtC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,gDAAS;AAC1C,mBAAmB,EAAE;AACrB;AACA,uBAAuB,wBAAwB;AAC/C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gDAAgD,gDAAgD;AAChG;AACA;AACA,gDAAgD,oCAAoC;AACpF;AACA;AACA,+BAA+B,SAAS;AACxC,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,gDAAgD,iCAAiC;AACjF;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,4CAA4C,iCAAiC;AAC7E;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,EAAE;AACrD;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,EAAE;AACrD,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC,8BAA8B;AAC9B,+BAA+B;AAC/B,gCAAgC;AAChC,uCAAuC;AACvC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAQ;AACpC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,wBAAwB,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mCAAmC,gDAAS;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,2BAA2B,qBAAqB,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,+DAA+D,EAAE;AAC1F,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,qDAAQ;AACpB,4CAA4C,EAAE;AAC9C;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,qCAAQ;AAChC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oCAAoC;AACpC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,mCAAmC;AACnC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,mCAAmC;AACnC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,qBAAqB;AACrB,0CAA0C;AAC1C,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE;AACA;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0CAA0C,mDAAM,OAAO,GAAG;AAC1D,SAAS;AACT,eAAe,mDAAM,GAAG,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA,qBAAqB,qDAAQ;AAC7B;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,4FAA4F,EAAE;AAC9F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6BAA6B,EAAE;AACvD;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD,SAAS,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD,SAAS,MAAM;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B,kEAAkE,EAAE;AACpE;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,4CAA4C,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,+BAA+B,EAAE;AACjC,+CAA+C,EAAE;AACjD;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,qCAAQ;AAChC,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,8DAAiB;AAC3C,mCAAmC,qCAAqC;AACxE,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,8DAAiB;AAC3C,mCAAmC,qCAAqC;AACxE,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,iBAAiB;AAClD,SAAS;AACT;AACA,sBAAsB,UAAU;AAChC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,oCAAoC;AACzE,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,yCAAyC,oCAAoC;AAC7E,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,oBAAoB;AACzD,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,gDAAS;AAC/B,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yBAAyB,8DAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C,kCAAkC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,sCAAsC,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACrG,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE,sCAAsC,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACrG,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,gDAAS;AAChC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,+CAA+C,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,+CAA+C,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,6CAA6C,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,6CAA6C,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,gFAAgF,EAAE;AAClF;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA,mFAAmF,EAAE;AACrF;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA,wFAAwF,EAAE;AAC1F;AACA;AACA,0FAA0F,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,4BAA4B;AAC3D,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iDAAiD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,yBAAyB,EAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD;AACA,0CAA0C,OAAO;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,qBAAqB;AACxC,uBAAuB,EAAE;AACzB;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yEAAyE,EAAE;AAC3E;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0EAA0E,EAAE;AAC5E;AACA,+EAA+E,EAAE;AACjF;AACA,6EAA6E,EAAE;AAC/E;AACA,+EAA+E,EAAE;AACjF;AACA,kFAAkF,EAAE;AACpF;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2CAA2C,QAAQ;AACnD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gKAAgK,qFAAqF;AACrP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6EAA6E,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB,IAAI,KAAK,IAAI,QAAQ,KAAK;AAC/F;AACA,sEAAsE;AACtE,6DAA6D;AAC7D,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,eAAe,MAAM;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,8BAA8B,KAAK,eAAe,MAAM;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,qCAAqC;AAC3D,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oHAAoH,EAAE;AACtH;AACA;AACA,2HAA2H,EAAE;AAC7H;AACA;AACA,6HAA6H,EAAE;AAC/H;AACA;AACA,+BAA+B,EAAE;AACjC,6FAA6F,EAAE;AAC/F;AACA,gCAAgC,sBAAsB,EAAE,yCAAyC,EAAE,wBAAwB;AAC3H;AACA;AACA,+BAA+B,EAAE;AACjC,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+FAA+F,EAAE;AACjG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC,8DAAiB;AACzD;AACA;AACA;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,yBAAyB,EAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,uCAAuC,EAAE;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEsS;AACtS;;;;;;;;;;;;ACpyUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAiG;AAE3B;AAGtE;;;;GAIG;AACH;IAGE,4BAAoB,iBAAwC,EAAU,MAAc;QAAhE,sBAAiB,GAAjB,iBAAiB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExF,wCAAW,GAAX,UACE,KAA6B,EAC7B,WAAgC;QA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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { __spread, __extends } from 'tslib';\nimport { isNullOrUndefined, isString, format } from 'util';\nimport { XMLSerializer, DOMParser } from 'xmldom';\nimport * as Tokenizr from 'tokenizr';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxI18nsupportLibModule = /** @class */ (function () {\r\n    function NgxI18nsupportLibModule() {\r\n    }\r\n    NgxI18nsupportLibModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [],\r\n                    exports: []\r\n                },] }\r\n    ];\r\n    return NgxI18nsupportLibModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 08.05.2017.\r\n * Some constant values used in the API.\r\n */\r\n/**\r\n * supported file formats\r\n * @type {?}\r\n */\r\nvar FORMAT_XLIFF12 = 'xlf';\r\n/** @type {?} */\r\nvar FORMAT_XLIFF20 = 'xlf2';\r\n/** @type {?} */\r\nvar FORMAT_XMB = 'xmb';\r\n/** @type {?} */\r\nvar FORMAT_XTB = 'xtb';\r\n/**\r\n * File types\r\n * (returned by fileType() method)\r\n * @type {?}\r\n */\r\nvar FILETYPE_XLIFF12 = 'XLIFF 1.2';\r\n/** @type {?} */\r\nvar FILETYPE_XLIFF20 = 'XLIFF 2.0';\r\n/** @type {?} */\r\nvar FILETYPE_XMB = 'XMB';\r\n/** @type {?} */\r\nvar FILETYPE_XTB = 'XTB';\r\n/**\r\n * State NEW.\r\n * Signals an untranslated unit.\r\n * @type {?}\r\n */\r\nvar STATE_NEW = 'new';\r\n/**\r\n * State TRANSLATED.\r\n * Signals a translated unit, that is not reviewed until now.\r\n * @type {?}\r\n */\r\nvar STATE_TRANSLATED = 'translated';\r\n/**\r\n * State FINAL.\r\n * Signals a translated unit, that is reviewed and ready for use.\r\n * @type {?}\r\n */\r\nvar STATE_FINAL = 'final';\r\n/**\r\n * Default format, contains placeholders, html markup.\r\n * @type {?}\r\n */\r\nvar NORMALIZATION_FORMAT_DEFAULT = 'default';\r\n/**\r\n * Format for usage in ngxtranslate messages.\r\n * Placeholder are in the form {{n}}, no html markup.\r\n * @type {?}\r\n */\r\nvar NORMALIZATION_FORMAT_NGXTRANSLATE = 'ngxtranslate';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nDOMUtilities = /** @class */ (function () {\r\n    function DOMUtilities() {\r\n    }\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    DOMUtilities.getFirstElementByTagName = /**\r\n     * return the first subelement with the given tag.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    function (element, tagName) {\r\n        /** @type {?} */\r\n        var matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            return matchingElements.item(0);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @param id id\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @param {?} id id\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    DOMUtilities.getElementByTagNameAndId = /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @param {?} id id\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    function (element, tagName, id) {\r\n        /** @type {?} */\r\n        var matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            for (var i = 0; i < matchingElements.length; i++) {\r\n                /** @type {?} */\r\n                var node = matchingElements.item(i);\r\n                if (node.getAttribute('id') === id) {\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.getElementFollowingSibling = /**\r\n     * Get next sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var e = element.nextSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (e));\r\n            }\r\n            e = e.nextSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.getElementPrecedingSibling = /**\r\n     * Get previous sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var e = element.previousSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (e));\r\n            }\r\n            e = e.previousSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param element element\r\n     * @return content of element as string, including all markup.\r\n     */\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param {?} element element\r\n     * @return {?} content of element as string, including all markup.\r\n     */\r\n    DOMUtilities.getXMLContent = /**\r\n     * return content of element as string, including all markup.\r\n     * @param {?} element element\r\n     * @return {?} content of element as string, including all markup.\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var result = new XMLSerializer().serializeToString(element);\r\n        /** @type {?} */\r\n        var tagName = element.nodeName;\r\n        /** @type {?} */\r\n        var reStartMsg = new RegExp('<' + tagName + '[^>]*>', 'g');\r\n        result = result.replace(reStartMsg, '');\r\n        /** @type {?} */\r\n        var reEndMsg = new RegExp('</' + tagName + '>', 'g');\r\n        result = result.replace(reEndMsg, '');\r\n        return result;\r\n    };\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param element element\r\n     * @return PCDATA content of element.\r\n     */\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param {?} element element\r\n     * @return {?} PCDATA content of element.\r\n     */\r\n    DOMUtilities.getPCDATA = /**\r\n     * return PCDATA content of element.\r\n     * @param {?} element element\r\n     * @return {?} PCDATA content of element.\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var result = '';\r\n        /** @type {?} */\r\n        var childNodes = element.childNodes;\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            /** @type {?} */\r\n            var child = childNodes.item(i);\r\n            if (child.nodeType === child.TEXT_NODE || child.nodeType === child.CDATA_SECTION_NODE) {\r\n                result = result + child.nodeValue;\r\n            }\r\n        }\r\n        return result.length === 0 ? null : result;\r\n    };\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param element element\r\n     * @param pcdata pcdata\r\n     */\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param {?} element element\r\n     * @param {?} pcdata pcdata\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.replaceContentWithXMLContent = /**\r\n     * replace PCDATA content with a new one.\r\n     * @param {?} element element\r\n     * @param {?} pcdata pcdata\r\n     * @return {?}\r\n     */\r\n    function (element, pcdata) {\r\n        // remove all children\r\n        while (element.firstChild) {\r\n            element.removeChild(element.firstChild);\r\n        }\r\n        // parseICUMessage pcdata\r\n        /** @type {?} */\r\n        var pcdataFragment = new DOMParser().parseFromString('<fragment>' + pcdata + '</fragment>', 'application/xml');\r\n        /** @type {?} */\r\n        var newChildren = pcdataFragment.getElementsByTagName('fragment').item(0).childNodes;\r\n        for (var j = 0; j < newChildren.length; j++) {\r\n            /** @type {?} */\r\n            var newChild = newChildren.item(j);\r\n            element.appendChild(element.ownerDocument.importNode(newChild, true));\r\n        }\r\n    };\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param element element\r\n     * @return the previous sibling that is an element or null.\r\n     */\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param {?} element element\r\n     * @return {?} the previous sibling that is an element or null.\r\n     */\r\n    DOMUtilities.getPreviousElementSibling = /**\r\n     * find the previous sibling that is an element.\r\n     * @param {?} element element\r\n     * @return {?} the previous sibling that is an element or null.\r\n     */\r\n    function (element) {\r\n        /** @type {?} */\r\n        var node = element.previousSibling;\r\n        while (node !== null) {\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (node));\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param elementNameToCreate elementNameToCreate\r\n     * @param previousSibling previousSibling\r\n     * @return new element\r\n     */\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param {?} elementNameToCreate elementNameToCreate\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?} new element\r\n     */\r\n    DOMUtilities.createFollowingSibling = /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param {?} elementNameToCreate elementNameToCreate\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?} new element\r\n     */\r\n    function (elementNameToCreate, previousSibling) {\r\n        /** @type {?} */\r\n        var newElement = previousSibling.ownerDocument.createElement(elementNameToCreate);\r\n        return (/** @type {?} */ (DOMUtilities.insertAfter(newElement, previousSibling)));\r\n    };\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param newElement newElement\r\n     * @param previousSibling previousSibling\r\n     */\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.insertAfter = /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?}\r\n     */\r\n    function (newElement, previousSibling) {\r\n        if (previousSibling.nextSibling !== null) {\r\n            previousSibling.parentNode.insertBefore(newElement, previousSibling.nextSibling);\r\n        }\r\n        else {\r\n            previousSibling.parentNode.appendChild(newElement);\r\n        }\r\n        return newElement;\r\n    };\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param newElement newElement\r\n     * @param nextSibling nextSibling\r\n     */\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} nextSibling nextSibling\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.insertBefore = /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} nextSibling nextSibling\r\n     * @return {?}\r\n     */\r\n    function (newElement, nextSibling) {\r\n        nextSibling.parentNode.insertBefore(newElement, nextSibling);\r\n        return newElement;\r\n    };\r\n    return DOMUtilities;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar DEFAULT_INDENT_STRING = '  ';\r\nvar XmlSerializer = /** @class */ (function () {\r\n    function XmlSerializer() {\r\n    }\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param document the document\r\n     * @param options can be used to activate beautifying.\r\n     */\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param {?} document the document\r\n     * @param {?=} options can be used to activate beautifying.\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.serializeToString = /**\r\n     * Serialze xml document to string.\r\n     * @param {?} document the document\r\n     * @param {?=} options can be used to activate beautifying.\r\n     * @return {?}\r\n     */\r\n    function (document, options) {\r\n        /** @type {?} */\r\n        var buf = [];\r\n        /** @type {?} */\r\n        var visibleNamespaces = [];\r\n        /** @type {?} */\r\n        var refNode = document.documentElement;\r\n        /** @type {?} */\r\n        var prefix = refNode.prefix;\r\n        /** @type {?} */\r\n        var uri = refNode.namespaceURI;\r\n        if (uri && prefix == null) {\r\n            prefix = refNode.lookupPrefix(uri);\r\n            if (prefix == null) {\r\n                visibleNamespaces = [\r\n                    { namespace: uri, prefix: null }\r\n                    // {namespace:uri,prefix:''}\r\n                ];\r\n            }\r\n        }\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (options.indentString) {\r\n            if (!this.containsOnlyWhiteSpace(options.indentString)) {\r\n                throw new Error('indentString must not contain non white characters');\r\n            }\r\n        }\r\n        this.doSerializeToString(document, options, buf, 0, false, visibleNamespaces);\r\n        return buf.join('');\r\n    };\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param node the node to be formatted.\r\n     * @param options options\r\n     * @param buf outputbuffer, new output will be appended to this array.\r\n     * @param indentLevel Lever of indentation for formatted output.\r\n     * @param partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param visibleNamespaces visibleNamespaces\r\n     */\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @private\r\n     * @param {?} node the node to be formatted.\r\n     * @param {?} options options\r\n     * @param {?} buf outputbuffer, new output will be appended to this array.\r\n     * @param {?} indentLevel Lever of indentation for formatted output.\r\n     * @param {?} partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param {?} visibleNamespaces visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.doSerializeToString = /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @private\r\n     * @param {?} node the node to be formatted.\r\n     * @param {?} options options\r\n     * @param {?} buf outputbuffer, new output will be appended to this array.\r\n     * @param {?} indentLevel Lever of indentation for formatted output.\r\n     * @param {?} partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param {?} visibleNamespaces visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    function (node, options, buf, indentLevel, partOfMixedContent, visibleNamespaces) {\r\n        /** @type {?} */\r\n        var child;\r\n        switch (node.nodeType) {\r\n            case node.ELEMENT_NODE:\r\n                /** @type {?} */\r\n                var elementNode = (/** @type {?} */ (node));\r\n                /** @type {?} */\r\n                var attrs = elementNode.attributes;\r\n                /** @type {?} */\r\n                var len = attrs.length;\r\n                child = elementNode.firstChild;\r\n                /** @type {?} */\r\n                var nodeName = elementNode.tagName;\r\n                /** @type {?} */\r\n                var elementHasMixedContent = this.isMixedContentElement(nodeName, options);\r\n                if (partOfMixedContent) {\r\n                    buf.push('<', nodeName);\r\n                }\r\n                else {\r\n                    this.outputIndented(options, buf, indentLevel, '<', nodeName);\r\n                }\r\n                for (var i = 0; i < len; i++) {\r\n                    // add namespaces for attributes\r\n                    /** @type {?} */\r\n                    var attr = attrs.item(i);\r\n                    if (attr.prefix === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\r\n                    }\r\n                    else if (attr.nodeName === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: '', namespace: attr.value });\r\n                    }\r\n                }\r\n                for (var i = 0; i < len; i++) {\r\n                    /** @type {?} */\r\n                    var attr = attrs.item(i);\r\n                    if (this.needNamespaceDefine(attr, visibleNamespaces)) {\r\n                        /** @type {?} */\r\n                        var prefix = attr.prefix || '';\r\n                        /** @type {?} */\r\n                        var uri = attr.namespaceURI;\r\n                        /** @type {?} */\r\n                        var ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                        buf.push(ns, '=\"', uri, '\"');\r\n                        visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                    }\r\n                    this.doSerializeToString(attr, options, buf, indentLevel, false, visibleNamespaces);\r\n                }\r\n                // add namespace for current node\r\n                if (this.needNamespaceDefine(elementNode, visibleNamespaces)) {\r\n                    /** @type {?} */\r\n                    var prefix = elementNode.prefix || '';\r\n                    /** @type {?} */\r\n                    var uri = node.namespaceURI;\r\n                    /** @type {?} */\r\n                    var ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                    buf.push(ns, '=\"', uri, '\"');\r\n                    visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                }\r\n                if (child) {\r\n                    buf.push('>');\r\n                    // if is cdata child node\r\n                    /** @type {?} */\r\n                    var hasComplexContent = false;\r\n                    while (child) {\r\n                        if (child.nodeType === child.ELEMENT_NODE) {\r\n                            hasComplexContent = true;\r\n                        }\r\n                        this.doSerializeToString(child, options, buf, indentLevel + 1, partOfMixedContent || elementHasMixedContent, visibleNamespaces);\r\n                        child = child.nextSibling;\r\n                    }\r\n                    if (!partOfMixedContent && !elementHasMixedContent && hasComplexContent) {\r\n                        this.outputIndented(options, buf, indentLevel, '</', nodeName, '>');\r\n                    }\r\n                    else {\r\n                        buf.push('</', nodeName, '>');\r\n                    }\r\n                }\r\n                else {\r\n                    buf.push('/>');\r\n                }\r\n                return;\r\n            case node.DOCUMENT_NODE:\r\n            case node.DOCUMENT_FRAGMENT_NODE:\r\n                child = node.firstChild;\r\n                while (child) {\r\n                    this.doSerializeToString(child, options, buf, indentLevel, false, visibleNamespaces);\r\n                    child = child.nextSibling;\r\n                }\r\n                return;\r\n            case node.ATTRIBUTE_NODE:\r\n                /** @type {?} */\r\n                var attrNode = (/** @type {?} */ (node));\r\n                return buf.push(' ', attrNode.name, '=\"', attrNode.value.replace(/[<&\"]/g, this._xmlEncoder), '\"');\r\n            case node.TEXT_NODE:\r\n                /** @type {?} */\r\n                var textNode = (/** @type {?} */ (node));\r\n                if (!options.beautify || partOfMixedContent || !this.containsOnlyWhiteSpace(textNode.data)) {\r\n                    return buf.push(textNode.data.replace(/[<&]/g, this._xmlEncoder));\r\n                }\r\n                return;\r\n            case node.CDATA_SECTION_NODE:\r\n                /** @type {?} */\r\n                var cdatasectionNode = (/** @type {?} */ (node));\r\n                return buf.push('<![CDATA[', cdatasectionNode.data, ']]>');\r\n            case node.COMMENT_NODE:\r\n                /** @type {?} */\r\n                var commentNode = (/** @type {?} */ (node));\r\n                return buf.push('<!--', commentNode.data, '-->');\r\n            case node.DOCUMENT_TYPE_NODE:\r\n                /** @type {?} */\r\n                var documenttypeNode = (/** @type {?} */ (node));\r\n                /** @type {?} */\r\n                var pubid = documenttypeNode.publicId;\r\n                /** @type {?} */\r\n                var sysid = documenttypeNode.systemId;\r\n                buf.push('<!DOCTYPE ', documenttypeNode.name);\r\n                if (pubid) {\r\n                    buf.push(' PUBLIC \"', pubid);\r\n                    if (sysid && sysid !== '.') {\r\n                        buf.push('\" \"', sysid);\r\n                    }\r\n                    buf.push('\">');\r\n                }\r\n                else if (sysid && sysid !== '.') {\r\n                    buf.push(' SYSTEM \"', sysid, '\">');\r\n                }\r\n                else {\r\n                    buf.push('>');\r\n                }\r\n                return;\r\n            case node.PROCESSING_INSTRUCTION_NODE:\r\n                /** @type {?} */\r\n                var piNode = (/** @type {?} */ (node));\r\n                return buf.push('<?', piNode.target, ' ', piNode.data, '?>');\r\n            case node.ENTITY_REFERENCE_NODE:\r\n                return buf.push('&', node.nodeName, ';');\r\n            // case ENTITY_NODE:\r\n            // case NOTATION_NODE:\r\n            default:\r\n                buf.push('??', node.nodeName);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} node\r\n     * @param {?} visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.needNamespaceDefine = /**\r\n     * @private\r\n     * @param {?} node\r\n     * @param {?} visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    function (node, visibleNamespaces) {\r\n        /** @type {?} */\r\n        var prefix = node.prefix || '';\r\n        /** @type {?} */\r\n        var uri = node.namespaceURI;\r\n        if (!prefix && !uri) {\r\n            return false;\r\n        }\r\n        if (prefix === 'xml' && uri === 'http://www.w3.org/XML/1998/namespace'\r\n            || uri === 'http://www.w3.org/2000/xmlns/') {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var i = visibleNamespaces.length;\r\n        while (i--) {\r\n            /** @type {?} */\r\n            var ns = visibleNamespaces[i];\r\n            // get namespace prefix\r\n            if (ns.prefix === prefix) {\r\n                return ns.namespace !== uri;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} c\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype._xmlEncoder = /**\r\n     * @private\r\n     * @param {?} c\r\n     * @return {?}\r\n     */\r\n    function (c) {\r\n        return c === '<' && '&lt;' ||\r\n            c === '>' && '&gt;' ||\r\n            c === '&' && '&amp;' ||\r\n            c === '\"' && '&quot;' ||\r\n            '&#' + c.charCodeAt(0) + ';';\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} options\r\n     * @param {?} buf\r\n     * @param {?} indentLevel\r\n     * @param {...?} outputParts\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.outputIndented = /**\r\n     * @private\r\n     * @param {?} options\r\n     * @param {?} buf\r\n     * @param {?} indentLevel\r\n     * @param {...?} outputParts\r\n     * @return {?}\r\n     */\r\n    function (options, buf, indentLevel) {\r\n        var outputParts = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            outputParts[_i - 3] = arguments[_i];\r\n        }\r\n        if (options.beautify) {\r\n            buf.push('\\n');\r\n            if (indentLevel > 0) {\r\n                buf.push(this.indentationString(options, indentLevel));\r\n            }\r\n        }\r\n        buf.push.apply(buf, __spread(outputParts));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} options\r\n     * @param {?} indentLevel\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.indentationString = /**\r\n     * @private\r\n     * @param {?} options\r\n     * @param {?} indentLevel\r\n     * @return {?}\r\n     */\r\n    function (options, indentLevel) {\r\n        /** @type {?} */\r\n        var indent = (options.indentString) ? options.indentString : DEFAULT_INDENT_STRING;\r\n        /** @type {?} */\r\n        var result = '';\r\n        for (var i = 0; i < indentLevel; i++) {\r\n            result = result + indent;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param tagName tagName\r\n     * @param options options\r\n     */\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @private\r\n     * @param {?} tagName tagName\r\n     * @param {?} options options\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.isMixedContentElement = /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @private\r\n     * @param {?} tagName tagName\r\n     * @param {?} options options\r\n     * @return {?}\r\n     */\r\n    function (tagName, options) {\r\n        if (options && options.mixedContentElements) {\r\n            return !!options.mixedContentElements.find((/**\r\n             * @param {?} tag\r\n             * @return {?}\r\n             */\r\n            function (tag) { return tag === tagName; }));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.containsOnlyWhiteSpace = /**\r\n     * @private\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        for (var i = 0; i < text.length; i++) {\r\n            /** @type {?} */\r\n            var c = text.charAt(i);\r\n            if (!(c === ' ' || c === '\\t' || c === '\\r' || c === '\\n')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return XmlSerializer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n * @abstract\r\n */\r\nAbstractTranslationMessagesFile = /** @class */ (function () {\r\n    function AbstractTranslationMessagesFile() {\r\n        this.transUnits = null;\r\n        this._warnings = [];\r\n    }\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param xmlString xmlString\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMaster optionalMaster\r\n     */\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @protected\r\n     * @param {?} xmlString xmlString\r\n     * @param {?} path path\r\n     * @param {?} encoding encoding\r\n     * @param {?=} optionalMaster optionalMaster\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.parseContent = /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @protected\r\n     * @param {?} xmlString xmlString\r\n     * @param {?} path path\r\n     * @param {?} encoding encoding\r\n     * @param {?=} optionalMaster optionalMaster\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding, optionalMaster) {\r\n        this._filename = path;\r\n        this._encoding = encoding;\r\n        this._parsedDocument = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n        this._fileEndsWithEOL = xmlString.endsWith('\\n');\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.lazyInitializeTransUnits = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this.transUnits)) {\r\n            this.initializeTransUnits();\r\n            this.countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * count units after changes of trans units\r\n     */\r\n    /**\r\n     * count units after changes of trans units\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.countNumbers = /**\r\n     * count units after changes of trans units\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this._numberOfUntranslatedTransUnits = 0;\r\n        this._numberOfReviewedTransUnits = 0;\r\n        this.forEachTransUnit((/**\r\n         * @param {?} tu\r\n         * @return {?}\r\n         */\r\n        function (tu) {\r\n            if (isNullOrUndefined(tu.id) || tu.id === '') {\r\n                _this._numberOfTransUnitsWithMissingId++;\r\n            }\r\n            /** @type {?} */\r\n            var state = tu.targetState();\r\n            if (isNullOrUndefined(state) || state === STATE_NEW) {\r\n                _this._numberOfUntranslatedTransUnits++;\r\n            }\r\n            if (state === STATE_TRANSLATED) {\r\n                _this._numberOfReviewedTransUnits++;\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.warnings = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._warnings;\r\n    };\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     */\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfTransUnits = /**\r\n     * Total number of translation units found in the file.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.length;\r\n    };\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfUntranslatedTransUnits = /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfUntranslatedTransUnits;\r\n    };\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     */\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfReviewedTransUnits = /**\r\n     * Number of translation units with state 'final'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfReviewedTransUnits;\r\n    };\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfTransUnitsWithMissingId = /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfTransUnitsWithMissingId;\r\n    };\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param callback callback\r\n     */\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param {?} callback callback\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.forEachTransUnit = /**\r\n     * Loop over all Translation Units.\r\n     * @param {?} callback callback\r\n     * @return {?}\r\n     */\r\n    function (callback) {\r\n        this.lazyInitializeTransUnits();\r\n        this.transUnits.forEach((/**\r\n         * @param {?} tu\r\n         * @return {?}\r\n         */\r\n        function (tu) { return callback(tu); }));\r\n    };\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param id id\r\n     * @return trans-unit with given id.\r\n     */\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param {?} id id\r\n     * @return {?} trans-unit with given id.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.transUnitWithId = /**\r\n     * Get trans-unit with given id.\r\n     * @param {?} id id\r\n     * @return {?} trans-unit with given id.\r\n     */\r\n    function (id) {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.find((/**\r\n         * @param {?} tu\r\n         * @return {?}\r\n         */\r\n        function (tu) { return tu.id === id; }));\r\n    };\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetPraefix targetPraefix\r\n     */\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetPraefix targetPraefix\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.setNewTransUnitTargetPraefix = /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetPraefix targetPraefix\r\n     * @return {?}\r\n     */\r\n    function (targetPraefix) {\r\n        this.targetPraefix = targetPraefix;\r\n    };\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the praefix used when copying source to target.\r\n     */\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the praefix used when copying source to target.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.getNewTransUnitTargetPraefix = /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the praefix used when copying source to target.\r\n     */\r\n    function () {\r\n        return isNullOrUndefined(this.targetPraefix) ? '' : this.targetPraefix;\r\n    };\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetSuffix targetSuffix\r\n     */\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetSuffix targetSuffix\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.setNewTransUnitTargetSuffix = /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetSuffix targetSuffix\r\n     * @return {?}\r\n     */\r\n    function (targetSuffix) {\r\n        this.targetSuffix = targetSuffix;\r\n    };\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the suffix used when copying source to target.\r\n     */\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the suffix used when copying source to target.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.getNewTransUnitTargetSuffix = /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the suffix used when copying source to target.\r\n     */\r\n    function () {\r\n        return isNullOrUndefined(this.targetSuffix) ? '' : this.targetSuffix;\r\n    };\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param id id\r\n     */\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param {?} id id\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.removeTransUnitWithId = /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param {?} id id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var tuNode = this._parsedDocument.getElementById(id);\r\n        if (tuNode) {\r\n            tuNode.parentNode.removeChild(tuNode);\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits = this.transUnits.filter((/**\r\n             * @param {?} tu\r\n             * @return {?}\r\n             */\r\n            function (tu) { return tu.id !== id; }));\r\n            this.countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * The filename where the data is read from.\r\n     */\r\n    /**\r\n     * The filename where the data is read from.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.filename = /**\r\n     * The filename where the data is read from.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._filename;\r\n    };\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     */\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.encoding = /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._encoding;\r\n    };\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param {?=} beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.editedContent = /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param {?=} beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     * @return {?}\r\n     */\r\n    function (beautifyOutput) {\r\n        /** @type {?} */\r\n        var options = {};\r\n        if (beautifyOutput === true) {\r\n            options.beautify = true;\r\n            options.indentString = '  ';\r\n            options.mixedContentElements = this.elementsWithMixedContent();\r\n        }\r\n        /** @type {?} */\r\n        var result = new XmlSerializer().serializeToString(this._parsedDocument, options);\r\n        if (this._fileEndsWithEOL) {\r\n            // add eol if there was eol in original source\r\n            return result + '\\n';\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    };\r\n    return AbstractTranslationMessagesFile;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n * @abstract\r\n */\r\nAbstractTransUnit = /** @class */ (function () {\r\n    function AbstractTransUnit(_element, _id, _translationMessagesFile) {\r\n        this._element = _element;\r\n        this._id = _id;\r\n        this._translationMessagesFile = _translationMessagesFile;\r\n    }\r\n    Object.defineProperty(AbstractTransUnit.prototype, \"id\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The file the unit belongs to.,\r\n     */\r\n    /**\r\n     * The file the unit belongs to.,\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.translationMessagesFile = /**\r\n     * The file the unit belongs to.,\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._translationMessagesFile;\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.sourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this._sourceContentNormalized)) {\r\n            this._sourceContentNormalized = this.createSourceContentNormalized();\r\n        }\r\n        return this._sourceContentNormalized;\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.targetState = /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var nativeState = this.nativeTargetState();\r\n        return this.mapNativeStateToState(nativeState);\r\n    };\r\n    /**\r\n     * Modify the target state.\r\n     * @param newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     */\r\n    /**\r\n     * Modify the target state.\r\n     * @param {?} newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.setTargetState = /**\r\n     * Modify the target state.\r\n     * @param {?} newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     * @return {?}\r\n     */\r\n    function (newState) {\r\n        this.setNativeTargetState(this.mapStateToNativeState(newState));\r\n        if (this.translationMessagesFile() instanceof AbstractTranslationMessagesFile) {\r\n            ((/** @type {?} */ (this.translationMessagesFile()))).countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetSourceReferences = /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Check notes\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    /**\r\n     * Check notes\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @protected\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.checkNotes = /**\r\n     * Check notes\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @protected\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // check from values\r\n        /** @type {?} */\r\n        var errorInFromNote = newNotes.find((/**\r\n         * @param {?} note\r\n         * @return {?}\r\n         */\r\n        function (note) { return note.from === 'description' || note.from === 'meaning'; }));\r\n        if (!isNullOrUndefined(errorInFromNote)) {\r\n            throw new Error('description or meaning are not allowed as from atttribute');\r\n        }\r\n    };\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return real xml element used for the trans unit.\r\n     */\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return {?} real xml element used for the trans unit.\r\n     */\r\n    AbstractTransUnit.prototype.asXmlElement = /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return {?} real xml element used for the trans unit.\r\n     */\r\n    function () {\r\n        return this._element;\r\n    };\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     */\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param {?} translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.translate = /**\r\n     * Translate the trans unit.\r\n     * @param {?} translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var translationNative;\r\n        if (isString(translation)) {\r\n            translationNative = (/** @type {?} */ (translation));\r\n        }\r\n        else {\r\n            translationNative = ((/** @type {?} */ (translation))).asNativeString();\r\n        }\r\n        this.translateNative(translationNative);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param message message\r\n     * @return wether message looks like ICU message.\r\n     */\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param {?} message message\r\n     * @return {?} wether message looks like ICU message.\r\n     */\r\n    AbstractTransUnit.prototype.isICUMessage = /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param {?} message message\r\n     * @return {?} wether message looks like ICU message.\r\n     */\r\n    function (message) {\r\n        return this.messageParser().isICUMessageStart(message);\r\n    };\r\n    return AbstractTransUnit;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A part of a parsed message.\r\n * Can be a text, a placeholder, a tag\r\n */\r\n/** @enum {number} */\r\nvar ParsedMessagePartType = {\r\n    TEXT: 0,\r\n    PLACEHOLDER: 1,\r\n    START_TAG: 2,\r\n    END_TAG: 3,\r\n    EMPTY_TAG: 4,\r\n    ICU_MESSAGE: 5,\r\n    ICU_MESSAGE_REF: 6,\r\n};\r\nParsedMessagePartType[ParsedMessagePartType.TEXT] = 'TEXT';\r\nParsedMessagePartType[ParsedMessagePartType.PLACEHOLDER] = 'PLACEHOLDER';\r\nParsedMessagePartType[ParsedMessagePartType.START_TAG] = 'START_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.END_TAG] = 'END_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.EMPTY_TAG] = 'EMPTY_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE] = 'ICU_MESSAGE';\r\nParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE_REF] = 'ICU_MESSAGE_REF';\r\n/**\r\n * @abstract\r\n */\r\nvar /**\r\n * @abstract\r\n */\r\nParsedMessagePart = /** @class */ (function () {\r\n    function ParsedMessagePart(type) {\r\n        this.type = type;\r\n    }\r\n    return ParsedMessagePart;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nParsedMessagePartText = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartText, _super);\r\n    function ParsedMessagePartText(text) {\r\n        var _this = _super.call(this, ParsedMessagePartType.TEXT) || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartText.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format) {\r\n        return this.text;\r\n    };\r\n    return ParsedMessagePartText;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nParsedMessagePartPlaceholder = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartPlaceholder, _super);\r\n    function ParsedMessagePartPlaceholder(index, disp) {\r\n        var _this = _super.call(this, ParsedMessagePartType.PLACEHOLDER) || this;\r\n        _this._index = index;\r\n        _this._disp = disp;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format) {\r\n        if (format === NORMALIZATION_FORMAT_NGXTRANSLATE) {\r\n            return '{{' + this._index + '}}';\r\n        }\r\n        return '{{' + this._index + '}}';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.index = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.disp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._disp;\r\n    };\r\n    return ParsedMessagePartPlaceholder;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nParsedMessagePartStartTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartStartTag, _super);\r\n    function ParsedMessagePartStartTag(tagname, idcounter) {\r\n        var _this = _super.call(this, ParsedMessagePartType.START_TAG) || this;\r\n        _this._tagname = tagname;\r\n        _this._idcounter = idcounter;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.idCounter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._idcounter;\r\n    };\r\n    return ParsedMessagePartStartTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nParsedMessagePartEndTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartEndTag, _super);\r\n    function ParsedMessagePartEndTag(tagname) {\r\n        var _this = _super.call(this, ParsedMessagePartType.END_TAG) || this;\r\n        _this._tagname = tagname;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEndTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format) {\r\n        return '</' + this._tagname + '>';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEndTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    return ParsedMessagePartEndTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Tokens\r\n/**\r\n * Created by martin on 04.06.2017.\r\n * A tokenizer for ICU messages.\r\n * @type {?}\r\n */\r\nvar TEXT = 'TEXT';\r\n/** @type {?} */\r\nvar CURLY_BRACE_OPEN = 'CURLY_BRACE_OPEN';\r\n/** @type {?} */\r\nvar CURLY_BRACE_CLOSE = 'CURLY_BRACE_CLOSE';\r\n/** @type {?} */\r\nvar COMMA = 'COMMA';\r\n/** @type {?} */\r\nvar PLURAL = 'PLURAL';\r\n/** @type {?} */\r\nvar SELECT = 'SELECT';\r\n// states: default normal in_message\r\n/** @type {?} */\r\nvar STATE_DEFAULT = 'default';\r\n/** @type {?} */\r\nvar STATE_NORMAL = 'normal';\r\n/** @type {?} */\r\nvar STATE_IN_MESSAGE = 'in_message';\r\nvar ICUMessageTokenizer = /** @class */ (function () {\r\n    function ICUMessageTokenizer() {\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.getLexer = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var lexer = new Tokenizr();\r\n        /** @type {?} */\r\n        var plaintext = '';\r\n        /** @type {?} */\r\n        var openedCurlyBracesInTextCounter = 0;\r\n        lexer.before((/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @param {?} rule\r\n         * @return {?}\r\n         */\r\n        function (ctx, match, rule) {\r\n            if (rule.name !== TEXT) {\r\n                if (_this.containsNonWhiteSpace(plaintext)) {\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                }\r\n                else {\r\n                    ctx.ignore();\r\n                }\r\n            }\r\n        }));\r\n        lexer.finish((/**\r\n         * @param {?} ctx\r\n         * @return {?}\r\n         */\r\n        function (ctx) {\r\n            if (_this.containsNonWhiteSpace(plaintext)) {\r\n                ctx.accept(TEXT, plaintext);\r\n            }\r\n        }));\r\n        // curly brace\r\n        lexer.rule(STATE_DEFAULT, /{/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_NORMAL);\r\n        }), CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /{/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_IN_MESSAGE);\r\n        }), CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /}/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.pop();\r\n            ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n        }), CURLY_BRACE_CLOSE);\r\n        // masked ' { and }\r\n        lexer.rule(STATE_IN_MESSAGE, /'[{}]?'/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            if (match[0] === '\\'\\'') {\r\n                plaintext += '\\'';\r\n            }\r\n            else if (match[0] === '\\'{\\'') {\r\n                plaintext += '{';\r\n            }\r\n            else if (match[0] === '\\'}\\'') {\r\n                plaintext += '}';\r\n            }\r\n            ctx.ignore();\r\n        }), TEXT);\r\n        lexer.rule(STATE_IN_MESSAGE, /./, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            /** @type {?} */\r\n            var char = match[0];\r\n            if (char === '{') {\r\n                openedCurlyBracesInTextCounter++;\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n            else if (char === '}') {\r\n                if (openedCurlyBracesInTextCounter > 0) {\r\n                    openedCurlyBracesInTextCounter--;\r\n                    plaintext += match[0];\r\n                    ctx.ignore();\r\n                }\r\n                else {\r\n                    ctx.pop();\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                    ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n                }\r\n            }\r\n            else {\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n        }), TEXT);\r\n        // comma\r\n        lexer.rule(STATE_NORMAL, /,/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(COMMA, match[0]);\r\n        }), COMMA);\r\n        // keywords plural and select\r\n        lexer.rule(STATE_NORMAL, /plural/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(PLURAL, match[0]);\r\n        }), PLURAL);\r\n        lexer.rule(STATE_NORMAL, /select/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(SELECT, match[0]);\r\n        }), SELECT);\r\n        // text\r\n        lexer.rule(/./, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }), TEXT);\r\n        lexer.rule(/[\\s]+/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }), TEXT);\r\n        return lexer;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.containsNonWhiteSpace = /**\r\n     * @private\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        for (var i = 0; i < text.length; i++) {\r\n            if (!/\\s/.test(text.charAt(i))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.tokenize = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        /** @type {?} */\r\n        var lexer = this.getLexer();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.input = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        this.lexer = this.getLexer();\r\n        this.lexer.input(normalizedMessage);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.next = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lexer.token();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.peek = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lexer.peek();\r\n    };\r\n    return ICUMessageTokenizer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MessageCategory = /** @class */ (function () {\r\n    function MessageCategory(_category, _message) {\r\n        this._category = _category;\r\n        this._message = _message;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MessageCategory.prototype.getCategory = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._category;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MessageCategory.prototype.getMessageNormalized = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._message;\r\n    };\r\n    return MessageCategory;\r\n}());\r\n/**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nvar /**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nICUMessage = /** @class */ (function () {\r\n    function ICUMessage(_parser, isPluralMessage) {\r\n        this._parser = _parser;\r\n        this._isPluralMessage = isPluralMessage;\r\n        this._categories = [];\r\n    }\r\n    /**\r\n     * @param {?} category\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.addCategory = /**\r\n     * @param {?} category\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (category, message) {\r\n        this._categories.push(new MessageCategory(category, message));\r\n    };\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return ICU message as native string.\r\n     */\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return {?} ICU message as native string.\r\n     */\r\n    ICUMessage.prototype.asNativeString = /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return {?} ICU message as native string.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var varname = (this.isPluralMessage()) ? 'VAR_PLURAL' : 'VAR_SELECT';\r\n        /** @type {?} */\r\n        var type = (this.isPluralMessage()) ? 'plural' : 'select';\r\n        /** @type {?} */\r\n        var choiceString = '';\r\n        this._categories.forEach((/**\r\n         * @param {?} category\r\n         * @return {?}\r\n         */\r\n        function (category) {\r\n            choiceString = choiceString + format(' %s {%s}', category.getCategory(), category.getMessageNormalized().asNativeString());\r\n        }));\r\n        return format('{%s, %s,%s}', varname, type, choiceString);\r\n    };\r\n    /**\r\n     * Is it a plural message?\r\n     */\r\n    /**\r\n     * Is it a plural message?\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.isPluralMessage = /**\r\n     * Is it a plural message?\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._isPluralMessage;\r\n    };\r\n    /**\r\n     * Is it a select message?\r\n     */\r\n    /**\r\n     * Is it a select message?\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.isSelectMessage = /**\r\n     * Is it a select message?\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return !this._isPluralMessage;\r\n    };\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     */\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.getCategories = /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._categories;\r\n    };\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @param translation the translation (hashmap of categories and translations).\r\n     * @return new message wit translated content.\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     */\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     * @param {?} translation the translation (hashmap of categories and translations).\r\n     * @return {?} new message wit translated content.\r\n     */\r\n    ICUMessage.prototype.translate = /**\r\n     * Translate message and return a new, translated message\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     * @param {?} translation the translation (hashmap of categories and translations).\r\n     * @return {?} new message wit translated content.\r\n     */\r\n    function (translation) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var message = new ICUMessage(this._parser, this.isPluralMessage());\r\n        /** @type {?} */\r\n        var translatedCategories = new Set();\r\n        this._categories.forEach((/**\r\n         * @param {?} category\r\n         * @return {?}\r\n         */\r\n        function (category) {\r\n            /** @type {?} */\r\n            var translatedMessage;\r\n            /** @type {?} */\r\n            var translationForCategory = translation[category.getCategory()];\r\n            if (isNullOrUndefined(translationForCategory)) {\r\n                translatedMessage = category.getMessageNormalized();\r\n            }\r\n            else if (isString(translationForCategory)) {\r\n                translatedCategories.add(category.getCategory());\r\n                translatedMessage = _this._parser.parseNormalizedString((/** @type {?} */ (translationForCategory)), null);\r\n            }\r\n            else {\r\n                // TODO embedded ICU Message\r\n                translatedMessage = null;\r\n            }\r\n            message.addCategory(category.getCategory(), translatedMessage);\r\n        }));\r\n        // new categories, which are not part of the original message\r\n        Object.keys(translation).forEach((/**\r\n         * @param {?} categoryName\r\n         * @return {?}\r\n         */\r\n        function (categoryName) {\r\n            if (!translatedCategories.has(categoryName)) {\r\n                if (_this.isSelectMessage()) {\r\n                    throw new Error(format('adding a new category not allowed for select messages (\"%s\" is not part of message)', categoryName));\r\n                }\r\n                else {\r\n                    _this.checkValidPluralCategory(categoryName);\r\n                    // TODO embedded ICU Message\r\n                    /** @type {?} */\r\n                    var translatedMessage = _this._parser.parseNormalizedString((/** @type {?} */ (translation[categoryName])), null);\r\n                    message.addCategory(categoryName, translatedMessage);\r\n                }\r\n            }\r\n        }));\r\n        return message;\r\n    };\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @param categoryName category\r\n     * @throws an error, if it is not a valid category name\r\n     */\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @throws an error, if it is not a valid category name\r\n     * @private\r\n     * @param {?} categoryName category\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.checkValidPluralCategory = /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @throws an error, if it is not a valid category name\r\n     * @private\r\n     * @param {?} categoryName category\r\n     * @return {?}\r\n     */\r\n    function (categoryName) {\r\n        /** @type {?} */\r\n        var allowedKeywords = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n        if (categoryName.match(/=\\d+/)) {\r\n            return;\r\n        }\r\n        if (allowedKeywords.find((/**\r\n         * @param {?} key\r\n         * @return {?}\r\n         */\r\n        function (key) { return key === categoryName; }))) {\r\n            return;\r\n        }\r\n        throw new Error(format('invalid plural category \"%s\", allowed are =<n> and %s', categoryName, allowedKeywords));\r\n    };\r\n    return ICUMessage;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nvar /**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nParsedMessagePartICUMessage = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartICUMessage, _super);\r\n    function ParsedMessagePartICUMessage(icuMessageText, _parser) {\r\n        var _this = _super.call(this, ParsedMessagePartType.ICU_MESSAGE) || this;\r\n        _this._parser = _parser;\r\n        if (icuMessageText) {\r\n            _this.parseICUMessage(icuMessageText);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param icuMessageText icuMessageText\r\n     * @return wether text might be an ICU message.\r\n     */\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} icuMessageText icuMessageText\r\n     * @return {?} wether text might be an ICU message.\r\n     */\r\n    ParsedMessagePartICUMessage.looksLikeICUMessage = /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} icuMessageText icuMessageText\r\n     * @return {?} wether text might be an ICU message.\r\n     */\r\n    function (icuMessageText) {\r\n        /** @type {?} */\r\n        var part = new ParsedMessagePartICUMessage(null, null);\r\n        return part.looksLikeICUMessage(icuMessageText);\r\n    };\r\n    /**\r\n     * @param {?=} displayFormat\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.asDisplayString = /**\r\n     * @param {?=} displayFormat\r\n     * @return {?}\r\n     */\r\n    function (displayFormat) {\r\n        return '<ICU-Message/>';\r\n    };\r\n    /**\r\n     * return the parsed message.\r\n     * @return parsed message\r\n     */\r\n    /**\r\n     * return the parsed message.\r\n     * @return {?} parsed message\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.getICUMessage = /**\r\n     * return the parsed message.\r\n     * @return {?} parsed message\r\n     */\r\n    function () {\r\n        return this._message;\r\n    };\r\n    /**\r\n     * Parse the message.\r\n     * @param text message text to parse\r\n     * @throws an error if the syntax is not ok in any way.\r\n     */\r\n    /**\r\n     * Parse the message.\r\n     * @throws an error if the syntax is not ok in any way.\r\n     * @private\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.parseICUMessage = /**\r\n     * Parse the message.\r\n     * @throws an error if the syntax is not ok in any way.\r\n     * @private\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._messageText = text;\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        this.expectNext(CURLY_BRACE_OPEN);\r\n        this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n        this.expectNext(COMMA);\r\n        /** @type {?} */\r\n        var token = this._tokenizer.next();\r\n        if (token.type === PLURAL) {\r\n            this._message = new ICUMessage(this._parser, true);\r\n        }\r\n        else if (token.type === SELECT) {\r\n            this._message = new ICUMessage(this._parser, false);\r\n        }\r\n        this.expectNext(COMMA);\r\n        token = this._tokenizer.peek();\r\n        while (token.type !== CURLY_BRACE_CLOSE) {\r\n            /** @type {?} */\r\n            var category = this.expectNext(TEXT).value.trim();\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            /** @type {?} */\r\n            var message = this.expectNext(TEXT).value;\r\n            this._message.addCategory(category, this.parseNativeSubMessage(message));\r\n            this.expectNext(CURLY_BRACE_CLOSE);\r\n            token = this._tokenizer.peek();\r\n        }\r\n        this.expectNext(CURLY_BRACE_CLOSE);\r\n        this.expectNext('EOF');\r\n    };\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param text message text to parse\r\n     */\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @private\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.looksLikeICUMessage = /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @private\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        try {\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n            this.expectNext(COMMA);\r\n            /** @type {?} */\r\n            var token = this._tokenizer.next();\r\n            if (token.type !== PLURAL && token.type !== SELECT) {\r\n                return false;\r\n            }\r\n            this.expectNext(COMMA);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @param tokentype expected type.\r\n     * @return Token\r\n     * @throws error, if next token has wrong type.\r\n     */\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @throws error, if next token has wrong type.\r\n     * @private\r\n     * @param {?} tokentype expected type.\r\n     * @return {?} Token\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.expectNext = /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @throws error, if next token has wrong type.\r\n     * @private\r\n     * @param {?} tokentype expected type.\r\n     * @return {?} Token\r\n     */\r\n    function (tokentype) {\r\n        /** @type {?} */\r\n        var token = this._tokenizer.next();\r\n        if (token.type !== tokentype) {\r\n            throw new Error(format('Error parsing ICU Message: expected %s, found %s (%s) (message %s)', tokentype, token.type, token.value, this._messageText));\r\n        }\r\n        return token;\r\n    };\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param message message in format dependent xml syntax.\r\n     * @return normalized message\r\n     */\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @private\r\n     * @param {?} message message in format dependent xml syntax.\r\n     * @return {?} normalized message\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.parseNativeSubMessage = /**\r\n     * Parse XML text to normalized message.\r\n     * @private\r\n     * @param {?} message message in format dependent xml syntax.\r\n     * @return {?} normalized message\r\n     */\r\n    function (message) {\r\n        return this._parser.createNormalizedMessageFromXMLString(message, null);\r\n    };\r\n    return ParsedMessagePartICUMessage;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nParsedMessagePartICUMessageRef = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartICUMessageRef, _super);\r\n    function ParsedMessagePartICUMessageRef(index, disp) {\r\n        var _this = _super.call(this, ParsedMessagePartType.ICU_MESSAGE_REF) || this;\r\n        _this._index = index;\r\n        _this._disp = disp;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format) {\r\n        return '<ICU-Message-Ref_' + this._index + '/>';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.index = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.disp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._disp;\r\n    };\r\n    return ParsedMessagePartICUMessageRef;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nvar /**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nParsedMessagePartEmptyTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartEmptyTag, _super);\r\n    function ParsedMessagePartEmptyTag(tagname, idcounter) {\r\n        var _this = _super.call(this, ParsedMessagePartType.EMPTY_TAG) || this;\r\n        _this._tagname = tagname;\r\n        _this._idcounter = idcounter;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.idCounter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._idcounter;\r\n    };\r\n    return ParsedMessagePartEmptyTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nParsedMessage = /** @class */ (function () {\r\n    function ParsedMessage(parser, sourceMessage) {\r\n        this._parser = parser;\r\n        this.sourceMessage = sourceMessage;\r\n        this._parts = [];\r\n    }\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return parser\r\n     */\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return {?} parser\r\n     */\r\n    ParsedMessage.prototype.getParser = /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return {?} parser\r\n     */\r\n    function () {\r\n        return this._parser;\r\n    };\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @param normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     */\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     * @param {?} normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translate = /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     * @param {?} normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @return {?}\r\n     */\r\n    function (normalizedString) {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return this._parser.parseNormalizedString((/** @type {?} */ (normalizedString)), this);\r\n        }\r\n        else {\r\n            throw new Error(format('cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")', normalizedString, this.asNativeString()));\r\n        }\r\n    };\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @param icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     */\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     * @param {?} icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translateICUMessage = /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     * @param {?} icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @return {?}\r\n     */\r\n    function (icuTranslation) {\r\n        /** @type {?} */\r\n        var icuMessage = this.getICUMessage();\r\n        if (isNullOrUndefined(icuMessage)) {\r\n            throw new Error(format('this is not an ICU message, use translate() instead (\"%s\", \"%s\")', icuTranslation, this.asNativeString()));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var translatedICUMessage = icuMessage.translate(icuTranslation);\r\n            return this._parser.parseICUMessage(translatedICUMessage.asNativeString(), this);\r\n        }\r\n    };\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     */\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param {?} nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translateNativeString = /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param {?} nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     * @return {?}\r\n     */\r\n    function (nativeString) {\r\n        return this._parser.createNormalizedMessageFromXMLString(nativeString, this);\r\n    };\r\n    /**\r\n     * normalized message as string.\r\n     * @param displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     */\r\n    /**\r\n     * normalized message as string.\r\n     * @param {?=} displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.asDisplayString = /**\r\n     * normalized message as string.\r\n     * @param {?=} displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     * @return {?}\r\n     */\r\n    function (displayFormat) {\r\n        return this._parts.map((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) { return part.asDisplayString(displayFormat); })).join('');\r\n    };\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     */\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.asNativeString = /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return DOMUtilities.getXMLContent(this._xmlRepresentation);\r\n        }\r\n        else {\r\n            return this.getICUMessage().asNativeString();\r\n        }\r\n    };\r\n    /**\r\n     * Validate the message.\r\n     * @return null, if ok, error object otherwise.\r\n     */\r\n    /**\r\n     * Validate the message.\r\n     * @return {?} null, if ok, error object otherwise.\r\n     */\r\n    ParsedMessage.prototype.validate = /**\r\n     * Validate the message.\r\n     * @return {?} null, if ok, error object otherwise.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var hasErrors = false;\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var e;\r\n        e = this.checkPlaceholderAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.placeholderAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefRemoved();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefRemoved = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        return hasErrors ? errors : null;\r\n    };\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return null, if no warning, warnings as error object otherwise.\r\n     */\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return {?} null, if no warning, warnings as error object otherwise.\r\n     */\r\n    ParsedMessage.prototype.validateWarnings = /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return {?} null, if no warning, warnings as error object otherwise.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var hasWarnings = false;\r\n        /** @type {?} */\r\n        var warnings = {};\r\n        /** @type {?} */\r\n        var w;\r\n        w = this.checkPlaceholderRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.placeholderRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagAdded();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagAdded = w;\r\n            hasWarnings = true;\r\n        }\r\n        return hasWarnings ? warnings : null;\r\n    };\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return ICUMessage or null.\r\n     */\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return {?} ICUMessage or null.\r\n     */\r\n    ParsedMessage.prototype.getICUMessage = /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return {?} ICUMessage or null.\r\n     */\r\n    function () {\r\n        if (this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE) {\r\n            /** @type {?} */\r\n            var icuPart = (/** @type {?} */ (this._parts[0]));\r\n            return icuPart.getICUMessage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added placeholder.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkPlaceholderAdded = /**\r\n     * Check for added placeholder.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourcePlaceholders_1 = this.sourceMessage.allPlaceholders();\r\n            /** @type {?} */\r\n            var myPlaceholders = this.allPlaceholders();\r\n            myPlaceholders.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!sourcePlaceholders_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            }));\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added placeholder ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_1 = '';\r\n            /** @type {?} */\r\n            var first_1 = true;\r\n            suspiciousIndexes.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!first_1) {\r\n                    allSuspiciousIndexes_1 = allSuspiciousIndexes_1 + ', ';\r\n                }\r\n                allSuspiciousIndexes_1 = allSuspiciousIndexes_1 + index;\r\n                first_1 = false;\r\n            }));\r\n            e = 'added placeholders ' + allSuspiciousIndexes_1 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkPlaceholderRemoved = /**\r\n     * Check for removed placeholder.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var w = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            /** @type {?} */\r\n            var myPlaceholders_1 = this.allPlaceholders();\r\n            sourcePlaceholders.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!myPlaceholders_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            }));\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            w = 'removed placeholder ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_2 = '';\r\n            /** @type {?} */\r\n            var first_2 = true;\r\n            suspiciousIndexes.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!first_2) {\r\n                    allSuspiciousIndexes_2 = allSuspiciousIndexes_2 + ', ';\r\n                }\r\n                allSuspiciousIndexes_2 = allSuspiciousIndexes_2 + index;\r\n                first_2 = false;\r\n            }));\r\n            w = 'removed placeholders ' + allSuspiciousIndexes_2 + ' from original message';\r\n        }\r\n        return w;\r\n    };\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkICUMessageRefAdded = /**\r\n     * Check for added ICU Message Refs.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceICURefs_1 = this.sourceMessage.allICUMessageRefs();\r\n            /** @type {?} */\r\n            var myICURefs = this.allICUMessageRefs();\r\n            myICURefs.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!sourceICURefs_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            }));\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added ICU message reference ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_3 = '';\r\n            /** @type {?} */\r\n            var first_3 = true;\r\n            suspiciousIndexes.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!first_3) {\r\n                    allSuspiciousIndexes_3 = allSuspiciousIndexes_3 + ', ';\r\n                }\r\n                allSuspiciousIndexes_3 = allSuspiciousIndexes_3 + index;\r\n                first_3 = false;\r\n            }));\r\n            e = 'added ICU message references ' + allSuspiciousIndexes_3 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkICUMessageRefRemoved = /**\r\n     * Check for removed ICU Message Refs.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            /** @type {?} */\r\n            var myICURefs_1 = this.allICUMessageRefs();\r\n            sourceICURefs.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!myICURefs_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            }));\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'removed ICU message reference ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_4 = '';\r\n            /** @type {?} */\r\n            var first_4 = true;\r\n            suspiciousIndexes.forEach((/**\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (index) {\r\n                if (!first_4) {\r\n                    allSuspiciousIndexes_4 = allSuspiciousIndexes_4 + ', ';\r\n                }\r\n                allSuspiciousIndexes_4 = allSuspiciousIndexes_4 + index;\r\n                first_4 = false;\r\n            }));\r\n            e = 'removed ICU message references ' + allSuspiciousIndexes_4 + ' from original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     */\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allPlaceholders = /**\r\n     * Get all indexes of placeholders used in the message.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                /** @type {?} */\r\n                var index = ((/** @type {?} */ (part))).index();\r\n                result.add(index);\r\n            }\r\n        }));\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param index index of placeholder\r\n     * @return disp or null\r\n     */\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param {?} index index of placeholder\r\n     * @return {?} disp or null\r\n     */\r\n    ParsedMessage.prototype.getPlaceholderDisp = /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param {?} index index of placeholder\r\n     * @return {?} disp or null\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var placeHolder = null;\r\n        this.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                /** @type {?} */\r\n                var phPart = (/** @type {?} */ (part));\r\n                if (phPart.index() === index) {\r\n                    placeHolder = phPart;\r\n                }\r\n            }\r\n        }));\r\n        return placeHolder ? placeHolder.disp() : null;\r\n    };\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     */\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allICUMessageRefs = /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                /** @type {?} */\r\n                var index = ((/** @type {?} */ (part))).index();\r\n                result.add(index);\r\n            }\r\n        }));\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param index of ref\r\n     * @return disp or null\r\n     */\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param {?} index of ref\r\n     * @return {?} disp or null\r\n     */\r\n    ParsedMessage.prototype.getICUMessageRefDisp = /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param {?} index of ref\r\n     * @return {?} disp or null\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var icuMessageRefPart = null;\r\n        this.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                /** @type {?} */\r\n                var refPart = (/** @type {?} */ (part));\r\n                if (refPart.index() === index) {\r\n                    icuMessageRefPart = refPart;\r\n                }\r\n            }\r\n        }));\r\n        return icuMessageRefPart ? icuMessageRefPart.disp() : null;\r\n    };\r\n    /**\r\n     * Check for added tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added tags.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkTagAdded = /**\r\n     * Check for added tags.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceTags_1 = this.sourceMessage.allTags();\r\n            /** @type {?} */\r\n            var myTags = this.allTags();\r\n            myTags.forEach((/**\r\n             * @param {?} tagName\r\n             * @return {?}\r\n             */\r\n            function (tagName) {\r\n                if (!sourceTags_1.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            }));\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            e = 'added tag <' + suspiciousTags[0] + '>, which is not in original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousTags_1 = '';\r\n            /** @type {?} */\r\n            var first_5 = true;\r\n            suspiciousTags.forEach((/**\r\n             * @param {?} tag\r\n             * @return {?}\r\n             */\r\n            function (tag) {\r\n                if (!first_5) {\r\n                    allSuspiciousTags_1 = allSuspiciousTags_1 + ', ';\r\n                }\r\n                allSuspiciousTags_1 = allSuspiciousTags_1 + '<' + tag + '>';\r\n                first_5 = false;\r\n            }));\r\n            e = 'added tags ' + allSuspiciousTags_1 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed tags.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkTagRemoved = /**\r\n     * Check for removed tags.\r\n     * @private\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var w = null;\r\n        /** @type {?} */\r\n        var suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceTags = this.sourceMessage.allTags();\r\n            /** @type {?} */\r\n            var myTags_1 = this.allTags();\r\n            sourceTags.forEach((/**\r\n             * @param {?} tagName\r\n             * @return {?}\r\n             */\r\n            function (tagName) {\r\n                if (!myTags_1.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            }));\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            w = 'removed tag <' + suspiciousTags[0] + '> from original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousTags_2 = '';\r\n            /** @type {?} */\r\n            var first_6 = true;\r\n            suspiciousTags.forEach((/**\r\n             * @param {?} tag\r\n             * @return {?}\r\n             */\r\n            function (tag) {\r\n                if (!first_6) {\r\n                    allSuspiciousTags_2 = allSuspiciousTags_2 + ', ';\r\n                }\r\n                allSuspiciousTags_2 = allSuspiciousTags_2 + '<' + tag + '>';\r\n                first_6 = false;\r\n            }));\r\n            w = 'removed tags ' + allSuspiciousTags_2 + ' from original message';\r\n        }\r\n        return w;\r\n    };\r\n    /**\r\n     * Get all tag names used in the message.\r\n     */\r\n    /**\r\n     * Get all tag names used in the message.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allTags = /**\r\n     * Get all tag names used in the message.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            if (part.type === ParsedMessagePartType.START_TAG || part.type === ParsedMessagePartType.EMPTY_TAG) {\r\n                /** @type {?} */\r\n                var tagName = ((/** @type {?} */ (part))).tagName();\r\n                result.add(tagName);\r\n            }\r\n        }));\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.parts = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._parts;\r\n    };\r\n    /**\r\n     * @param {?} xmlRepresentation\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.setXmlRepresentation = /**\r\n     * @param {?} xmlRepresentation\r\n     * @return {?}\r\n     */\r\n    function (xmlRepresentation) {\r\n        this._xmlRepresentation = xmlRepresentation;\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addText = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        this._parts.push(new ParsedMessagePartText(text));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addPlaceholder = /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    function (index, disp) {\r\n        this._parts.push(new ParsedMessagePartPlaceholder(index, disp));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addStartTag = /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    function (tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartStartTag(tagname, idcounter));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addEndTag = /**\r\n     * @param {?} tagname\r\n     * @return {?}\r\n     */\r\n    function (tagname) {\r\n        // check if well formed\r\n        /** @type {?} */\r\n        var openTag = this.calculateOpenTagName();\r\n        if (!openTag || openTag !== tagname) {\r\n            // oops, not well formed\r\n            throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagname, openTag, this.asNativeString()));\r\n        }\r\n        this._parts.push(new ParsedMessagePartEndTag(tagname));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addEmptyTag = /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    function (tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartEmptyTag(tagname, idcounter));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addICUMessageRef = /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    function (index, disp) {\r\n        this._parts.push(new ParsedMessagePartICUMessageRef(index, disp));\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addICUMessage = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        this._parts.push(new ParsedMessagePartICUMessage(text, this._parser));\r\n    };\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     */\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.calculateOpenTagName = /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var openTags = [];\r\n        this._parts.forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.START_TAG:\r\n                    openTags.push(((/** @type {?} */ (part))).tagName());\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    /** @type {?} */\r\n                    var tagName = ((/** @type {?} */ (part))).tagName();\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== tagName) {\r\n                        // oops, not well formed\r\n                        /** @type {?} */\r\n                        var openTag = (openTags.length === 0) ? 'nothing' : openTags[openTags.length - 1];\r\n                        throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagName, openTag, _this.asNativeString()));\r\n                    }\r\n                    openTags.pop();\r\n            }\r\n        }));\r\n        return openTags.length === 0 ? null : openTags[openTags.length - 1];\r\n    };\r\n    return ParsedMessage;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Tokens\r\n/**\r\n * Created by martin on 14.05.2017.\r\n * A tokenizer for normalized messages.\r\n * @type {?}\r\n */\r\nvar TEXT$1 = 'TEXT';\r\n/** @type {?} */\r\nvar START_TAG = 'START_TAG';\r\n/** @type {?} */\r\nvar END_TAG = 'END_TAG';\r\n/** @type {?} */\r\nvar EMPTY_TAG = 'EMPTY_TAG';\r\n/** @type {?} */\r\nvar PLACEHOLDER = 'PLACEHOLDER';\r\n/** @type {?} */\r\nvar ICU_MESSAGE_REF = 'ICU_MESSAGE_REF';\r\n/** @type {?} */\r\nvar ICU_MESSAGE = 'ICU_MESSAGE';\r\nvar ParsedMesageTokenizer = /** @class */ (function () {\r\n    function ParsedMesageTokenizer() {\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ParsedMesageTokenizer.prototype.getLexer = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var lexer = new Tokenizr();\r\n        /** @type {?} */\r\n        var plaintext = '';\r\n        lexer.before((/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @param {?} rule\r\n         * @return {?}\r\n         */\r\n        function (ctx, match, rule) {\r\n            if (rule.name !== TEXT$1 && plaintext !== '') {\r\n                ctx.accept(TEXT$1, { text: plaintext });\r\n                plaintext = '';\r\n            }\r\n        }));\r\n        lexer.finish((/**\r\n         * @param {?} ctx\r\n         * @return {?}\r\n         */\r\n        function (ctx) {\r\n            if (plaintext !== '') {\r\n                ctx.accept(TEXT$1, { text: plaintext });\r\n            }\r\n        }));\r\n        // empty tag, there are only a few allowed (see tag-mappings): ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR']\r\n        // format is <name id=\"nr\">, nr ist optional, z.B. <img> oder <img id=\"2\">\r\n        lexer.rule(/<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            /** @type {?} */\r\n            var idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(EMPTY_TAG, { name: match[1], idcounter: idcount });\r\n        }), EMPTY_TAG);\r\n        // start tag, Format <name id=\"nr\">, nr ist optional, z.B. <mytag> oder <mytag id=\"2\">\r\n        lexer.rule(/<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            /** @type {?} */\r\n            var idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(START_TAG, { name: match[1], idcounter: idcount });\r\n        }), START_TAG);\r\n        // end tag\r\n        lexer.rule(/<\\/([a-zA-Z][a-zA-Z-0-9]*)>/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(END_TAG, { name: match[1] });\r\n        }), END_TAG);\r\n        // placeholder\r\n        lexer.rule(/{{([0-9]+)}}/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(PLACEHOLDER, { idcounter: parseInt(match[1], 10) });\r\n        }), PLACEHOLDER);\r\n        // icu message ref\r\n        lexer.rule(/<ICU-Message-Ref_([0-9]+)\\/>/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(ICU_MESSAGE_REF, { idcounter: parseInt(match[1], 10) });\r\n        }), ICU_MESSAGE_REF);\r\n        // icu message\r\n        lexer.rule(/<ICU-Message\\/>/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            ctx.accept(ICU_MESSAGE, { message: match[0] });\r\n        }), ICU_MESSAGE);\r\n        // text\r\n        lexer.rule(/./, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }), TEXT$1);\r\n        lexer.rule(/[\\t\\r\\n]+/, (/**\r\n         * @param {?} ctx\r\n         * @param {?} match\r\n         * @return {?}\r\n         */\r\n        function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }), TEXT$1);\r\n        return lexer;\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ParsedMesageTokenizer.prototype.tokenize = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        /** @type {?} */\r\n        var lexer = this.getLexer();\r\n        lexer.reset();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    };\r\n    return ParsedMesageTokenizer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n * @abstract\r\n */\r\nAbstractMessageParser = /** @class */ (function () {\r\n    function AbstractMessageParser() {\r\n    }\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param xmlElement the xml representation\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param {?} xmlElement the xml representation\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createNormalizedMessageFromXML = /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param {?} xmlElement the xml representation\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    function (xmlElement, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        if (xmlElement) {\r\n            message.setXmlRepresentation(xmlElement);\r\n            this.addPartsOfNodeToMessage(xmlElement, message, false);\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param {?} xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createNormalizedMessageFromXMLString = /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param {?} xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    function (xmlString, sourceMessage) {\r\n        /** @type {?} */\r\n        var doc = new DOMParser().parseFromString('<dummy>' + xmlString + '</dummy>', 'text/xml');\r\n        /** @type {?} */\r\n        var xmlElement = (/** @type {?} */ (doc.childNodes.item(0)));\r\n        return this.createNormalizedMessageFromXML(xmlElement, sourceMessage);\r\n    };\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param node node\r\n     * @param message message to be generated.\r\n     * @param includeSelf if true, add node by itself, otherwise only children.\r\n     */\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @private\r\n     * @param {?} node node\r\n     * @param {?} message message to be generated.\r\n     * @param {?} includeSelf if true, add node by itself, otherwise only children.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.addPartsOfNodeToMessage = /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @private\r\n     * @param {?} node node\r\n     * @param {?} message message to be generated.\r\n     * @param {?} includeSelf if true, add node by itself, otherwise only children.\r\n     * @return {?}\r\n     */\r\n    function (node, message, includeSelf) {\r\n        /** @type {?} */\r\n        var processChildren = true;\r\n        if (includeSelf) {\r\n            if (node.nodeType === node.TEXT_NODE) {\r\n                message.addText(node.textContent);\r\n                return;\r\n            }\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                processChildren = this.processStartElement((/** @type {?} */ (node)), message);\r\n            }\r\n        }\r\n        if (processChildren) {\r\n            /** @type {?} */\r\n            var icuMessageText = this.getICUMessageText(node);\r\n            /** @type {?} */\r\n            var isICU = !isNullOrUndefined(icuMessageText);\r\n            if (isICU) {\r\n                try {\r\n                    message.addICUMessage(icuMessageText);\r\n                }\r\n                catch (error) {\r\n                    // if it is not parsable, handle it as non ICU\r\n                    console.log('non ICU message: ', icuMessageText, error);\r\n                    isICU = false;\r\n                }\r\n            }\r\n            if (!isICU) {\r\n                /** @type {?} */\r\n                var children = node.childNodes;\r\n                for (var i = 0; i < children.length; i++) {\r\n                    this.addPartsOfNodeToMessage(children.item(i), message, true);\r\n                }\r\n            }\r\n        }\r\n        if (node.nodeType === node.ELEMENT_NODE) {\r\n            this.processEndElement((/** @type {?} */ (node)), message);\r\n        }\r\n    };\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @protected\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    AbstractMessageParser.prototype.getICUMessageText = /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @protected\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    function (node) {\r\n        /** @type {?} */\r\n        var children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var firstChild = children.item(0);\r\n        if (firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                return DOMUtilities.getXMLContent((/** @type {?} */ (node)));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param text text\r\n     */\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param {?} text text\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.isICUMessageStart = /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param {?} text text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        return ParsedMessagePartICUMessage.looksLikeICUMessage(text);\r\n        //        return text.startsWith('{VAR_PLURAL') || text.startsWith('{VAR_SELECT');\r\n    };\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param normalizedString normalized string\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param {?} normalizedString normalized string\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    AbstractMessageParser.prototype.parseNormalizedString = /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param {?} normalizedString normalized string\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    function (normalizedString, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        /** @type {?} */\r\n        var openTags = [];\r\n        /** @type {?} */\r\n        var tokens;\r\n        try {\r\n            tokens = new ParsedMesageTokenizer().tokenize(normalizedString);\r\n        }\r\n        catch (error) {\r\n            throw new Error(format('unexpected error while parsing message: \"%s\" (parsed \"%\")', error.message, normalizedString));\r\n        }\r\n        tokens.forEach((/**\r\n         * @param {?} token\r\n         * @return {?}\r\n         */\r\n        function (token) {\r\n            /** @type {?} */\r\n            var disp = null;\r\n            switch (token.type) {\r\n                case TEXT$1:\r\n                    message.addText(token.value.text);\r\n                    break;\r\n                case START_TAG:\r\n                    message.addStartTag(token.value.name, token.value.idcounter);\r\n                    openTags.push(token.value.name);\r\n                    break;\r\n                case END_TAG:\r\n                    message.addEndTag(token.value.name);\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== token.value.name) {\r\n                        // oops, not well formed\r\n                        throw new Error(format('unexpected close tag \"%s\" (parsed \"%s\")', token.value.name, normalizedString));\r\n                    }\r\n                    openTags.pop();\r\n                    break;\r\n                case EMPTY_TAG:\r\n                    message.addEmptyTag(token.value.name, token.value.idcounter);\r\n                    break;\r\n                case PLACEHOLDER:\r\n                    disp = (sourceMessage) ? sourceMessage.getPlaceholderDisp(token.value.idcounter) : null;\r\n                    message.addPlaceholder(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE_REF:\r\n                    disp = (sourceMessage) ? sourceMessage.getICUMessageRefDisp(token.value.idcounter) : null;\r\n                    message.addICUMessageRef(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE:\r\n                    throw new Error(format('<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")', normalizedString));\r\n                default:\r\n                    break;\r\n            }\r\n        }));\r\n        if (openTags.length > 0) {\r\n            // oops, not well closed tags\r\n            throw new Error(format('missing close tag \"%s\" (parsed \"%s\")', openTags[openTags.length - 1], normalizedString));\r\n        }\r\n        message.setXmlRepresentation(this.createXmlRepresentation(message));\r\n        return message;\r\n    };\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param {?} icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    AbstractMessageParser.prototype.parseICUMessage = /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param {?} icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    function (icuMessageString, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        message.addICUMessage(icuMessageString);\r\n        return message;\r\n    };\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param name name\r\n     * @return id count\r\n     */\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @protected\r\n     * @param {?} name name\r\n     * @return {?} id count\r\n     */\r\n    AbstractMessageParser.prototype.parseIdCountFromName = /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @protected\r\n     * @param {?} name name\r\n     * @return {?} id count\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var regex = /.*_([0-9]*)/;\r\n        /** @type {?} */\r\n        var match = regex.exec(name);\r\n        if (isNullOrUndefined(match) || match[1] === '') {\r\n            return 0;\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var num = match[1];\r\n            return parseInt(num, 10);\r\n        }\r\n    };\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param message message\r\n     */\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @protected\r\n     * @param {?} message message\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createXmlRepresentation = /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @protected\r\n     * @param {?} message message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        /** @type {?} */\r\n        var root = new DOMParser().parseFromString('<dummy/>', 'text/xml');\r\n        /** @type {?} */\r\n        var rootElem = root.getElementsByTagName('dummy').item(0);\r\n        this.addXmlRepresentationToRoot(message, rootElem);\r\n        return rootElem;\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createXmlRepresentationOfTextPart = /**\r\n     * @protected\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        return rootElem.ownerDocument.createTextNode(part.asDisplayString());\r\n    };\r\n    return AbstractMessageParser;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 16.05.2017.\r\n * Mapping from normalized tag names to placeholder names.\r\n */\r\n/*\r\ncopied from https://github.com/angular/angular/blob/master/packages/compiler/src/i18n/serializers/placeholder.ts\r\n */\r\n/** @type {?} */\r\nvar TAG_TO_PLACEHOLDER_NAMES = {\r\n    'A': 'LINK',\r\n    'B': 'BOLD_TEXT',\r\n    'BR': 'LINE_BREAK',\r\n    'EM': 'EMPHASISED_TEXT',\r\n    'H1': 'HEADING_LEVEL1',\r\n    'H2': 'HEADING_LEVEL2',\r\n    'H3': 'HEADING_LEVEL3',\r\n    'H4': 'HEADING_LEVEL4',\r\n    'H5': 'HEADING_LEVEL5',\r\n    'H6': 'HEADING_LEVEL6',\r\n    'HR': 'HORIZONTAL_RULE',\r\n    'I': 'ITALIC_TEXT',\r\n    'LI': 'LIST_ITEM',\r\n    'LINK': 'MEDIA_LINK',\r\n    'OL': 'ORDERED_LIST',\r\n    'P': 'PARAGRAPH',\r\n    'Q': 'QUOTATION',\r\n    'S': 'STRIKETHROUGH_TEXT',\r\n    'SMALL': 'SMALL_TEXT',\r\n    'SUB': 'SUBSTRIPT',\r\n    'SUP': 'SUPERSCRIPT',\r\n    'TBODY': 'TABLE_BODY',\r\n    'TD': 'TABLE_CELL',\r\n    'TFOOT': 'TABLE_FOOTER',\r\n    'TH': 'TABLE_HEADER_CELL',\r\n    'THEAD': 'TABLE_HEADER',\r\n    'TR': 'TABLE_ROW',\r\n    'TT': 'MONOSPACED_TEXT',\r\n    'U': 'UNDERLINED_TEXT',\r\n    'UL': 'UNORDERED_LIST',\r\n};\r\n/**\r\n * HTML Tags (in uppercase) that are empty, they have no content, but do not need a close tag, e.g. <br>, <img>, <hr>.\r\n * @type {?}\r\n */\r\nvar VOID_TAGS = ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR'];\r\nvar TagMapping = /** @class */ (function () {\r\n    function TagMapping() {\r\n    }\r\n    /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getStartTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (tag, id) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return \"START_\" + baseName + this.counterString(id);\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getCloseTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return \"CLOSE_\" + baseName;\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getEmptyTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (tag, id) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return baseName + this.counterString(id);\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getCtypeForTag = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n                return 'lb';\r\n            case 'img':\r\n                return 'image';\r\n            default:\r\n                return \"x-\" + tag;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromStartTagPlaceholderName = /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName.startsWith('START_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('START_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('START_')) {\r\n            /** @type {?} */\r\n            var ph_1 = this.stripCounter(placeholderName.substring('START_'.length));\r\n            /** @type {?} */\r\n            var matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((/**\r\n             * @param {?} key\r\n             * @return {?}\r\n             */\r\n            function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph_1; }));\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromCloseTagPlaceholderName = /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName.startsWith('CLOSE_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('CLOSE_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('CLOSE_')) {\r\n            /** @type {?} */\r\n            var ph_2 = this.stripCounter(placeholderName.substring('CLOSE_'.length));\r\n            /** @type {?} */\r\n            var matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((/**\r\n             * @param {?} key\r\n             * @return {?}\r\n             */\r\n            function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph_2; }));\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.isEmptyTagPlaceholderName = /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        /** @type {?} */\r\n        var ph = this.stripCounter(placeholderName);\r\n        /** @type {?} */\r\n        var matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((/**\r\n             * @param {?} key\r\n             * @return {?}\r\n             */\r\n            function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph; }));\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromEmptyTagPlaceholderName = /**\r\n     * tagname of empty tag placeholder.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        /** @type {?} */\r\n        var ph = this.stripCounter(placeholderName);\r\n        /** @type {?} */\r\n        var matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find((/**\r\n             * @param {?} key\r\n             * @return {?}\r\n             */\r\n            function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph; }));\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return matchKey.toLowerCase();\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param placeholderName placeholderName\r\n     * @return placeholderName without counter at end.\r\n     */\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @private\r\n     * @param {?} placeholderName placeholderName\r\n     * @return {?} placeholderName without counter at end.\r\n     */\r\n    TagMapping.prototype.stripCounter = /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @private\r\n     * @param {?} placeholderName placeholderName\r\n     * @return {?} placeholderName without counter at end.\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName) {\r\n            /** @type {?} */\r\n            var re = /(.*)_[0-9]+$/;\r\n            if (placeholderName.match(re)) {\r\n                return placeholderName.replace(re, '$1');\r\n            }\r\n        }\r\n        return placeholderName;\r\n    };\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param id id\r\n     * @return suffix for counter.\r\n     */\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @private\r\n     * @param {?} id id\r\n     * @return {?} suffix for counter.\r\n     */\r\n    TagMapping.prototype.counterString = /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @private\r\n     * @param {?} id id\r\n     * @return {?} suffix for counter.\r\n     */\r\n    function (id) {\r\n        if (id === 0) {\r\n            return '';\r\n        }\r\n        else {\r\n            return '_' + id.toString(10);\r\n        }\r\n    };\r\n    return TagMapping;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nXliffMessageParser = /** @class */ (function (_super) {\r\n    __extends(XliffMessageParser, _super);\r\n    function XliffMessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    XliffMessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        if (tagName === 'x') {\r\n            // placeholder are like <x id=\"INTERPOLATION\"/> or <x id=\"INTERPOLATION_1\">\r\n            /** @type {?} */\r\n            var id = elementNode.getAttribute('id');\r\n            if (!id) {\r\n                return; // should not happen\r\n            }\r\n            if (id.startsWith('INTERPOLATION')) {\r\n                /** @type {?} */\r\n                var index = this.parsePlaceholderIndexFromId(id);\r\n                message.addPlaceholder(index, null);\r\n            }\r\n            else if (id.startsWith('ICU')) {\r\n                /** @type {?} */\r\n                var index = this.parseICUMessageRefIndexFromId(id);\r\n                message.addICUMessageRef(index, null);\r\n            }\r\n            else if (id.startsWith('START_')) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromStartTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    /** @type {?} */\r\n                    var idcount = this.parseIdCountFromName(id);\r\n                    message.addStartTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n            else if (id.startsWith('CLOSE_')) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromCloseTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    message.addEndTag(normalizedTagName);\r\n                }\r\n            }\r\n            else if (tagMapping.isEmptyTagPlaceholderName(id)) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromEmptyTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    /** @type {?} */\r\n                    var idcount = this.parseIdCountFromName(id);\r\n                    message.addEmptyTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return index\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @private\r\n     * @param {?} id id\r\n     * @return {?} index\r\n     */\r\n    XliffMessageParser.prototype.parsePlaceholderIndexFromId = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @private\r\n     * @param {?} id id\r\n     * @return {?} index\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (id === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @private\r\n     * @param {?} id id\r\n     * @return {?} id as number\r\n     */\r\n    XliffMessageParser.prototype.parseICUMessageRefIndexFromId = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @private\r\n     * @param {?} id id\r\n     * @return {?} id as number\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (id === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        message.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            /** @type {?} */\r\n            var child;\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    child = _this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    child = _this.createXmlRepresentationOfStartTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    child = _this.createXmlRepresentationOfEndTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    child = _this.createXmlRepresentationOfEmptyTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    child = _this.createXmlRepresentationOfPlaceholderPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    child = _this.createXmlRepresentationOfICUMessageRefPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n            }\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        /** @type {?} */\r\n        var ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        /** @type {?} */\r\n        var equivTextAttr = '<' + part.tagName() + '>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        /** @type {?} */\r\n        var ctypeAttrib = 'x-' + part.tagName();\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        /** @type {?} */\r\n        var ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        /** @type {?} */\r\n        var equivTextAttr = '<' + part.tagName() + '/>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var idAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        /** @type {?} */\r\n        var equivTextAttr = part.disp();\r\n        xElem.setAttribute('id', idAttrib);\r\n        if (equivTextAttr) {\r\n            xElem.setAttribute('equiv-text', equivTextAttr);\r\n        }\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var idAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        xElem.setAttribute('id', idAttrib);\r\n        return xElem;\r\n    };\r\n    return XliffMessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nXliffTransUnit = /** @class */ (function (_super) {\r\n    __extends(XliffTransUnit, _super);\r\n    function XliffTransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.sourceContent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            source = this._element.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XliffMessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new XliffMessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            return targetElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            targetElement.setAttribute('state', nativeState);\r\n        }\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XliffTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'new';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        switch (nativeState) {\r\n            case 'new':\r\n                return STATE_NEW;\r\n            case 'needs-translation':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-translation':\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            case 'signed-off':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('context-group');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                /** @type {?} */\r\n                var contextElements = elem.getElementsByTagName('context');\r\n                /** @type {?} */\r\n                var sourcefile = null;\r\n                /** @type {?} */\r\n                var linenumber = 0;\r\n                for (var j = 0; j < contextElements.length; j++) {\r\n                    /** @type {?} */\r\n                    var contextElem = contextElements.item(j);\r\n                    if (contextElem.getAttribute('context-type') === 'sourcefile') {\r\n                        sourcefile = DOMUtilities.getPCDATA(contextElem);\r\n                    }\r\n                    if (contextElem.getAttribute('context-type') === 'linenumber') {\r\n                        linenumber = Number.parseInt(DOMUtilities.getPCDATA(contextElem), 10);\r\n                    }\r\n                }\r\n                sourceRefs.push({ sourcefile: sourcefile, linenumber: linenumber });\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        var _this = this;\r\n        this.removeAllSourceReferences();\r\n        sourceRefs.forEach((/**\r\n         * @param {?} ref\r\n         * @return {?}\r\n         */\r\n        function (ref) {\r\n            /** @type {?} */\r\n            var contextGroup = _this._element.ownerDocument.createElement('context-group');\r\n            contextGroup.setAttribute('purpose', 'location');\r\n            /** @type {?} */\r\n            var contextSource = _this._element.ownerDocument.createElement('context');\r\n            contextSource.setAttribute('context-type', 'sourcefile');\r\n            contextSource.appendChild(_this._element.ownerDocument.createTextNode(ref.sourcefile));\r\n            /** @type {?} */\r\n            var contextLine = _this._element.ownerDocument.createElement('context');\r\n            contextLine.setAttribute('context-type', 'linenumber');\r\n            contextLine.appendChild(_this._element.ownerDocument.createTextNode(ref.linenumber.toString(10)));\r\n            contextGroup.appendChild(contextSource);\r\n            contextGroup.appendChild(contextLine);\r\n            _this._element.appendChild(contextGroup);\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeAllSourceReferences = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('context-group');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((/**\r\n         * @param {?} elem\r\n         * @return {?}\r\n         */\r\n        function (elem) { elem.parentNode.removeChild(elem); }));\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('description');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     * @return element or null is absent\r\n     */\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue attrValue\r\n     * @return {?} element or null is absent\r\n     */\r\n    XliffTransUnit.prototype.findNoteElementWithFromAttribute = /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue attrValue\r\n     * @return {?} element or null is absent\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('from') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @private\r\n     * @return {?} elements\r\n     */\r\n    XliffTransUnit.prototype.findAllAdditionalNoteElements = /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @private\r\n     * @return {?} elements\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var result = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            /** @type {?} */\r\n            var fromAttribute = noteElem.getAttribute('from');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param fromAttrValue value of \"from\" attribute\r\n     * @param content text value of note element\r\n     * @return the new created element\r\n     */\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} fromAttrValue value of \"from\" attribute\r\n     * @param {?} content text value of note element\r\n     * @return {?} the new created element\r\n     */\r\n    XliffTransUnit.prototype.createNoteElementWithFromAttribute = /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} fromAttrValue value of \"from\" attribute\r\n     * @param {?} content text value of note element\r\n     * @return {?} the new created element\r\n     */\r\n    function (fromAttrValue, content) {\r\n        /** @type {?} */\r\n        var noteElement = this._element.ownerDocument.createElement('note');\r\n        if (fromAttrValue) {\r\n            noteElement.setAttribute('from', fromAttrValue);\r\n        }\r\n        noteElement.setAttribute('priority', '1');\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        this._element.appendChild(noteElement);\r\n        return noteElement;\r\n    };\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeNoteElementWithFromAttribute = /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElement = this.findNoteElementWithFromAttribute(attrValue);\r\n        if (noteElement) {\r\n            this._element.removeChild(noteElement);\r\n        }\r\n    };\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeAllAdditionalNoteElements = /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((/**\r\n         * @param {?} noteElement\r\n         * @return {?}\r\n         */\r\n        function (noteElement) {\r\n            _this._element.removeChild(noteElement);\r\n        }));\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param  meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('meaning');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map((/**\r\n         * @param {?} elem\r\n         * @return {?}\r\n         */\r\n        function (elem) {\r\n            return {\r\n                from: elem.getAttribute('from'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        }));\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        var _this = this;\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((/**\r\n             * @param {?} note\r\n             * @return {?}\r\n             */\r\n            function (note) {\r\n                /** @type {?} */\r\n                var noteElem = _this.createNoteElementWithFromAttribute(note.from, note.text);\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            /** @type {?} */\r\n            var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, (/** @type {?} */ (translation)));\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this._element.cloneNode(true)));\r\n        /** @type {?} */\r\n        var clone = new XliffTransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            /** @type {?} */\r\n            var sourceString = DOMUtilities.getXMLContent(source);\r\n            /** @type {?} */\r\n            var newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        if (isDefaultLang) {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n        }\r\n        else {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n        }\r\n    };\r\n    return XliffTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nvar /**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nXliffFile = /** @class */ (function (_super) {\r\n    __extends(XliffFile, _super);\r\n    /**\r\n     * Create an xlf-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XliffFile\r\n     */\r\n    function XliffFile(xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.initializeFromContent = /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        /** @type {?} */\r\n        var xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var version = xliffList.item(0).getAttribute('version');\r\n            /** @type {?} */\r\n            var expectedVersion = '1.2';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XLIFF12;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XLIFF12;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['source', 'target', 'tool', 'seg-source', 'g', 'ph', 'bpt', 'ept', 'it', 'sub', 'mrk'];\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.initializeTransUnits = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('trans-unit');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var transunit = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XliffTransUnit(transunit, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    XliffFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('source-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('source-language', language);\r\n        }\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    XliffFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('target-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('target-language', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XliffFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var bodyElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'body');\r\n        if (!bodyElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 1.2 file (should contain a body element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            bodyElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'trans-unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to body\r\n                bodyElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'trans-unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationFile = new XliffFile(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((/**\r\n         * @param {?} transUnit\r\n         * @return {?}\r\n         */\r\n        function (transUnit) {\r\n            ((/** @type {?} */ (transUnit))).useSourceAsTarget(isDefaultLang, copyContent);\r\n        }));\r\n        return translationFile;\r\n    };\r\n    return XliffFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nXmbMessageParser = /** @class */ (function (_super) {\r\n    __extends(XmbMessageParser, _super);\r\n    function XmbMessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    XmbMessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // There are 4 different usages of ph element:\r\n            // 1. placeholders are like <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph>\r\n            // or <ph name=\"INTERPOLATION_1\"><ex>INTERPOLATION_1</ex></ph>\r\n            // 2. start tags:\r\n            // <ph name=\"START_LINK\"><ex>&lt;a&gt;</ex></ph>\r\n            // 3. empty tags:\r\n            // <ph name=\"TAG_IMG\"><ex>&lt;img&gt;</ex></ph>\r\n            // 4. ICU:\r\n            // <ph name=\"ICU\"><ex>ICU</ex></ph>\r\n            /** @type {?} */\r\n            var name_1 = elementNode.getAttribute('name');\r\n            if (!name_1) {\r\n                return true; // should not happen\r\n            }\r\n            if (name_1.startsWith('INTERPOLATION')) {\r\n                /** @type {?} */\r\n                var index = this.parsePlaceholderIndexFromName(name_1);\r\n                message.addPlaceholder(index, null);\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('START_')) {\r\n                /** @type {?} */\r\n                var tag = this.parseTagnameFromPhElement(elementNode);\r\n                /** @type {?} */\r\n                var idcounter = this.parseIdCountFromName(name_1);\r\n                if (tag) {\r\n                    message.addStartTag(tag, idcounter);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('CLOSE_')) {\r\n                /** @type {?} */\r\n                var tag = this.parseTagnameFromPhElement(elementNode);\r\n                if (tag) {\r\n                    message.addEndTag(tag);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(name_1)) {\r\n                /** @type {?} */\r\n                var emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(name_1);\r\n                /** @type {?} */\r\n                var idcounter = this.parseIdCountFromName(name_1);\r\n                message.addEmptyTag(emptyTagName, idcounter);\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('ICU')) {\r\n                /** @type {?} */\r\n                var index = this.parseICUMessageIndexFromName(name_1);\r\n                message.addICUMessageRef(index, null);\r\n                return false; // ignore children\r\n            }\r\n        }\r\n        else if (tagName === 'source') {\r\n            // ignore source\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @protected\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    XmbMessageParser.prototype.getICUMessageText = /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @protected\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    function (node) {\r\n        /** @type {?} */\r\n        var children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var firstChild = null;\r\n        // find first child that is no source element.\r\n        /** @type {?} */\r\n        var i;\r\n        for (i = 0; i < children.length; i++) {\r\n            /** @type {?} */\r\n            var child = children.item(i);\r\n            if (child.nodeType !== child.ELEMENT_NODE || ((/** @type {?} */ (child))).tagName !== 'source') {\r\n                firstChild = child;\r\n                break;\r\n            }\r\n        }\r\n        if (firstChild && firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                /** @type {?} */\r\n                var messageText = DOMUtilities.getXMLContent((/** @type {?} */ (node)));\r\n                if (i > 0) {\r\n                    // drop <source> elements\r\n                    /** @type {?} */\r\n                    var reSource = new RegExp('<source[^>]*>.*</source>', 'g');\r\n                    return messageText.replace(reSource, '');\r\n                }\r\n                else {\r\n                    return messageText;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @private\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    XmbMessageParser.prototype.parsePlaceholderIndexFromName = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @private\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (name === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @private\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    XmbMessageParser.prototype.parseICUMessageIndexFromName = /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @private\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (name === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param phElement phElement\r\n     */\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @private\r\n     * @param {?} phElement phElement\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.parseTagnameFromPhElement = /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @private\r\n     * @param {?} phElement phElement\r\n     * @return {?}\r\n     */\r\n    function (phElement) {\r\n        /** @type {?} */\r\n        var exElement = DOMUtilities.getFirstElementByTagName(phElement, 'ex');\r\n        if (exElement) {\r\n            /** @type {?} */\r\n            var value = DOMUtilities.getPCDATA(exElement);\r\n            if (!value || !value.startsWith('<') || !value.endsWith('>')) {\r\n                // oops\r\n                return null;\r\n            }\r\n            if (value.charAt(1) === '/') {\r\n                return value.substring(2, value.length - 1);\r\n            }\r\n            else {\r\n                return value.substring(1, value.length - 1);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        message.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            /** @type {?} */\r\n            var child = _this.createXmlRepresentationOfPart(part, rootElem);\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfPart = /**\r\n     * @protected\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        switch (part.type) {\r\n            case ParsedMessagePartType.TEXT:\r\n                return this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem);\r\n            case ParsedMessagePartType.START_TAG:\r\n                return this.createXmlRepresentationOfStartTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.END_TAG:\r\n                return this.createXmlRepresentationOfEndTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.EMPTY_TAG:\r\n                return this.createXmlRepresentationOfEmptyTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.PLACEHOLDER:\r\n                return this.createXmlRepresentationOfPlaceholderPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                return this.createXmlRepresentationOfICUMessageRefPart(((/** @type {?} */ (part))), rootElem);\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('</' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var nameAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var nameAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    return XmbMessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nXmbTransUnit = /** @class */ (function (_super) {\r\n    __extends(XmbTransUnit, _super);\r\n    function XmbTransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and linenumber\r\n     */\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @private\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and linenumber\r\n     */\r\n    XmbTransUnit.parseSourceAndPos = /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @private\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and linenumber\r\n     */\r\n    function (sourceAndPos) {\r\n        /** @type {?} */\r\n        var index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: XmbTransUnit.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.parseLineNumber = /**\r\n     * @private\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    function (lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    };\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return source content\r\n     */\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} source content\r\n     */\r\n    XmbTransUnit.prototype.sourceContent = /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} source content\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var msgContent = DOMUtilities.getXMLContent(this._element);\r\n        /** @type {?} */\r\n        var reSourceElem = /<source>.*<\\/source>/g;\r\n        msgContent = msgContent.replace(reSourceElem, '');\r\n        return msgContent;\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        // not supported\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, null);\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // in fact, target and source are just the same in xmb\r\n        return this.sourceContent();\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return null; // not supported in xmb\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XmbTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        return state;\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        return nativeState;\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        // not supported for xmb\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('source');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            /** @type {?} */\r\n            var sourceAndPos = DOMUtilities.getPCDATA(elem);\r\n            sourceRefs.push(XmbTransUnit.parseSourceAndPos(sourceAndPos));\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        /** @type {?} */\r\n        var insertPosition = this._element.childNodes.item(0);\r\n        for (var i = sourceRefs.length - 1; i >= 0; i--) {\r\n            /** @type {?} */\r\n            var ref = sourceRefs[i];\r\n            /** @type {?} */\r\n            var source = this._element.ownerDocument.createElement('source');\r\n            source.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            this._element.insertBefore(source, insertPosition);\r\n            insertPosition = source;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.removeAllSourceReferences = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('source');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            toBeRemoved.push(elem);\r\n        }\r\n        toBeRemoved.forEach((/**\r\n         * @param {?} elem\r\n         * @return {?}\r\n         */\r\n        function (elem) { elem.parentNode.removeChild(elem); }));\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.getAttribute('desc');\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.getAttribute('meaning');\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        // do nothing\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        throw new Error('You cannot translate xmb files, use xtb instead.');\r\n    };\r\n    return XmbTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Doctype of xtb translation file corresponding with thos xmb file.\r\n * @type {?}\r\n */\r\nvar XTB_DOCTYPE = \"<!DOCTYPE translationbundle [\\n  <!ELEMENT translationbundle (translation)*>\\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\\n  <!ELEMENT translation (#PCDATA|ph)*>\\n  <!ATTLIST translation id CDATA #REQUIRED>\\n  <!ELEMENT ph EMPTY>\\n  <!ATTLIST ph name CDATA #REQUIRED>\\n]>\";\r\nvar XmbFile = /** @class */ (function (_super) {\r\n    __extends(XmbFile, _super);\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XmbFile\r\n     */\r\n    function XmbFile(_translationMessageFileFactory, xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.initializeFromContent = /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('messagebundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xmb file (should contain a messagebundle element)', path));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.initializeTransUnits = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('msg');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var msg = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XmbTransUnit(msg, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XMB;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XMB;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['message'];\r\n    };\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return Language or null\r\n     */\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @private\r\n     * @return {?} Language or null\r\n     */\r\n    XmbFile.prototype.guessLanguageFromFilename = /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @private\r\n     * @return {?} Language or null\r\n     */\r\n    function () {\r\n        if (this._filename) {\r\n            /** @type {?} */\r\n            var parts = this._filename.split('.');\r\n            if (parts.length > 2 && parts[parts.length - 1].toLowerCase() === 'xmb') {\r\n                return parts[parts.length - 2];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    XmbFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        return this.guessLanguageFromFilename();\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xmb has no notation for this.\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} target language.\r\n     */\r\n    XmbFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        return this.guessLanguageFromFilename();\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xmb has no notation for this.\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XmbFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        throw Error('xmb file cannot be used to store translations, use xtb file');\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationbundleXMLSource = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + XTB_DOCTYPE + '\\n<translationbundle>\\n</translationbundle>\\n';\r\n        /** @type {?} */\r\n        var translationFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XTB, translationbundleXMLSource, filename, this.encoding(), { xmlContent: this.editedContent(), path: this.filename(), encoding: this.encoding() });\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.setNewTransUnitTargetPraefix(this.getNewTransUnitTargetPraefix());\r\n        translationFile.setNewTransUnitTargetSuffix(this.getNewTransUnitTargetSuffix());\r\n        this.forEachTransUnit((/**\r\n         * @param {?} tu\r\n         * @return {?}\r\n         */\r\n        function (tu) {\r\n            translationFile.importNewTransUnit(tu, isDefaultLang, copyContent);\r\n        }));\r\n        return translationFile;\r\n    };\r\n    return XmbFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nXliff2MessageParser = /** @class */ (function (_super) {\r\n    __extends(Xliff2MessageParser, _super);\r\n    function Xliff2MessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    Xliff2MessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // placeholder are like <ph id=\"0\" equiv=\"INTERPOLATION\" disp=\"{{number()}}\"/>\r\n            // They contain the id and also a name (number in the example)\r\n            // TODO make some use of the name (but it is not available in XLIFF 1.2)\r\n            // ICU message are handled with the same tag\r\n            // Before 4.3.2 they did not have an equiv and disp (Bug #17344):\r\n            // e.g. <ph id=\"0\"/>\r\n            // Beginning with 4.3.2 they do have an equiv ICU and disp:\r\n            // e.g. <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>\r\n            // and empty tags have equiv other then INTERPOLATION:\r\n            // e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n            // or <ph equiv=\"LINE_BREAK\" type=\"lb\" disp=\"&lt;br/>\"/>\r\n            /** @type {?} */\r\n            var isInterpolation = false;\r\n            /** @type {?} */\r\n            var isICU = false;\r\n            /** @type {?} */\r\n            var isEmptyTag = false;\r\n            /** @type {?} */\r\n            var equiv = elementNode.getAttribute('equiv');\r\n            /** @type {?} */\r\n            var disp = elementNode.getAttribute('disp');\r\n            /** @type {?} */\r\n            var indexString = null;\r\n            /** @type {?} */\r\n            var index = 0;\r\n            /** @type {?} */\r\n            var emptyTagName = null;\r\n            if (!equiv) {\r\n                // old ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                indexString = elementNode.getAttribute('id');\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('ICU')) {\r\n                // new ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                if (equiv === 'ICU') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('ICU_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('INTERPOLATION')) {\r\n                isInterpolation = true;\r\n                if (equiv === 'INTERPOLATION') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('INTERPOLATION_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(equiv)) {\r\n                isEmptyTag = true;\r\n                emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(equiv);\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n            if (isInterpolation) {\r\n                message.addPlaceholder(index, disp);\r\n            }\r\n            else if (isICU) {\r\n                message.addICUMessageRef(index, disp);\r\n            }\r\n            else if (isEmptyTag) {\r\n                message.addEmptyTag(emptyTagName, this.parseIdCountFromName(equiv));\r\n            }\r\n        }\r\n        else if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            /** @type {?} */\r\n            var embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addStartTag(embeddedTagName, this.parseIdCountFromName(elementNode.getAttribute('equivStart')));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @protected\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            /** @type {?} */\r\n            var embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addEndTag(embeddedTagName);\r\n            }\r\n            return;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} pcNode\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.tagNameFromPCElement = /**\r\n     * @private\r\n     * @param {?} pcNode\r\n     * @return {?}\r\n     */\r\n    function (pcNode) {\r\n        /** @type {?} */\r\n        var dispStart = pcNode.getAttribute('dispStart');\r\n        if (dispStart.startsWith('<')) {\r\n            dispStart = dispStart.substring(1);\r\n        }\r\n        if (dispStart.endsWith('>')) {\r\n            dispStart = dispStart.substring(0, dispStart.length - 1);\r\n        }\r\n        return dispStart;\r\n    };\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param message message\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @protected\r\n     * @param {?} message message\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @protected\r\n     * @param {?} message message\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var stack = [{ element: rootElem, tagName: 'root' }];\r\n        /** @type {?} */\r\n        var id = 0;\r\n        message.parts().forEach((/**\r\n         * @param {?} part\r\n         * @return {?}\r\n         */\r\n        function (part) {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfPlaceholderPart((/** @type {?} */ (part)), rootElem, id++));\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfICUMessageRefPart((/** @type {?} */ (part)), rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    /** @type {?} */\r\n                    var newTagElem = _this.createXmlRepresentationOfStartTagPart((/** @type {?} */ (part)), rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(newTagElem);\r\n                    stack.push({ element: (/** @type {?} */ (newTagElem)), tagName: ((/** @type {?} */ (part))).tagName() });\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    /** @type {?} */\r\n                    var closeTagName = ((/** @type {?} */ (part))).tagName();\r\n                    if (stack.length <= 1 || stack[stack.length - 1].tagName !== closeTagName) {\r\n                        // oops, not well formed\r\n                        throw new Error('unexpected close tag ' + closeTagName);\r\n                    }\r\n                    stack.pop();\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    /** @type {?} */\r\n                    var emptyTagElem = _this.createXmlRepresentationOfEmptyTagPart((/** @type {?} */ (part)), rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(emptyTagElem);\r\n                    break;\r\n            }\r\n        }));\r\n        if (stack.length !== 1) {\r\n            // oops, not well closed tags\r\n            throw new Error('missing close tag ' + stack[stack.length - 1].tagName);\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var pcElem = rootElem.ownerDocument.createElement('pc');\r\n        /** @type {?} */\r\n        var tagName = part.tagName();\r\n        /** @type {?} */\r\n        var equivStart = tagMapping.getStartTagPlaceholderName(tagName, part.idCounter());\r\n        /** @type {?} */\r\n        var equivEnd = tagMapping.getCloseTagPlaceholderName(tagName);\r\n        /** @type {?} */\r\n        var dispStart = '<' + tagName + '>';\r\n        /** @type {?} */\r\n        var dispEnd = '</' + tagName + '>';\r\n        pcElem.setAttribute('id', id.toString(10));\r\n        pcElem.setAttribute('equivStart', equivStart);\r\n        pcElem.setAttribute('equivEnd', equivEnd);\r\n        pcElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        pcElem.setAttribute('dispStart', dispStart);\r\n        pcElem.setAttribute('dispEnd', dispEnd);\r\n        return pcElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        // not used\r\n        return null;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagName = part.tagName();\r\n        /** @type {?} */\r\n        var equiv = tagMapping.getEmptyTagPlaceholderName(tagName, part.idCounter());\r\n        /** @type {?} */\r\n        var disp = '<' + tagName + '/>';\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equiv);\r\n        phElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        phElem.setAttribute('disp', disp);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.getTypeForTag = /**\r\n     * @private\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n            case 'b':\r\n            case 'i':\r\n            case 'u':\r\n                return 'fmt';\r\n            case 'img':\r\n                return 'image';\r\n            case 'a':\r\n                return 'link';\r\n            default:\r\n                return 'other';\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var equivAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        /** @type {?} */\r\n        var disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @protected\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var equivAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', part.index().toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        /** @type {?} */\r\n        var disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    };\r\n    return Xliff2MessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nvar /**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nXliff2TransUnit = /** @class */ (function (_super) {\r\n    __extends(Xliff2TransUnit, _super);\r\n    function Xliff2TransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.sourceContent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            /** @type {?} */\r\n            var segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n            source = segment.parentNode.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Xliff2MessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new Xliff2MessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            return segmentElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        /** @type {?} */\r\n        var segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            segmentElement.setAttribute('state', nativeState);\r\n        }\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    Xliff2TransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'initial';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        switch (nativeState) {\r\n            case 'initial':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'reviewed': // same as translated\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // Source is found as <file>:<line> in <note category=\"location\">...\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === 'location') {\r\n                /** @type {?} */\r\n                var sourceAndPos = DOMUtilities.getPCDATA(noteElem);\r\n                sourceRefs.push(this.parseSourceAndPos(sourceAndPos));\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and line number\r\n     */\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @private\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and line number\r\n     */\r\n    Xliff2TransUnit.prototype.parseSourceAndPos = /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @private\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and line number\r\n     */\r\n    function (sourceAndPos) {\r\n        /** @type {?} */\r\n        var index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: this.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.parseLineNumber = /**\r\n     * @private\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    function (lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        var _this = this;\r\n        this.removeAllSourceReferences();\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (sourceRefs.length === 0 && !isNullOrUndefined(notesElement) && notesElement.childNodes.length === 0) {\r\n            // remove empty notes element\r\n            notesElement.parentNode.removeChild(notesElement);\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(notesElement)) {\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.insertBefore(notesElement, this._element.childNodes.item(0));\r\n        }\r\n        sourceRefs.forEach((/**\r\n         * @param {?} ref\r\n         * @return {?}\r\n         */\r\n        function (ref) {\r\n            /** @type {?} */\r\n            var note = _this._element.ownerDocument.createElement('note');\r\n            note.setAttribute('category', 'location');\r\n            note.appendChild(_this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            notesElement.appendChild(note);\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeAllSourceReferences = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = noteElements.item(i);\r\n            if (elem.getAttribute('category') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach((/**\r\n         * @param {?} elem\r\n         * @return {?}\r\n         */\r\n        function (elem) { elem.parentNode.removeChild(elem); }));\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('description');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param attrValue value of category attribute\r\n     * @return element or null is absent\r\n     */\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue value of category attribute\r\n     * @return {?} element or null is absent\r\n     */\r\n    Xliff2TransUnit.prototype.findNoteElementWithCategoryAttribute = /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue value of category attribute\r\n     * @return {?} element or null is absent\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @private\r\n     * @return {?} elements\r\n     */\r\n    Xliff2TransUnit.prototype.findAllAdditionalNoteElements = /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @private\r\n     * @return {?} elements\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var result = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            /** @type {?} */\r\n            var fromAttribute = noteElem.getAttribute('category');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param attrValue category attribute value\r\n     * @param content content of note element\r\n     * @return the new created element\r\n     */\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue category attribute value\r\n     * @param {?} content content of note element\r\n     * @return {?} the new created element\r\n     */\r\n    Xliff2TransUnit.prototype.createNoteElementWithCategoryAttribute = /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue category attribute value\r\n     * @param {?} content content of note element\r\n     * @return {?} the new created element\r\n     */\r\n    function (attrValue, content) {\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (isNullOrUndefined(notesElement)) {\r\n            // create it\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.appendChild(notesElement);\r\n        }\r\n        /** @type {?} */\r\n        var noteElement = this._element.ownerDocument.createElement('note');\r\n        if (attrValue) {\r\n            noteElement.setAttribute('category', attrValue);\r\n        }\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        notesElement.appendChild(noteElement);\r\n        return noteElement;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeNotesElementIfEmpty = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (notesElement) {\r\n            /** @type {?} */\r\n            var childNote = DOMUtilities.getFirstElementByTagName(this._element, 'note');\r\n            if (!childNote) {\r\n                // remove notes element\r\n                notesElement.parentNode.removeChild(notesElement);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeNoteElementWithCategoryAttribute = /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @private\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElement = this.findNoteElementWithCategoryAttribute(attrValue);\r\n        if (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        }\r\n        this.removeNotesElementIfEmpty();\r\n    };\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeAllAdditionalNoteElements = /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach((/**\r\n         * @param {?} noteElement\r\n         * @return {?}\r\n         */\r\n        function (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        }));\r\n        this.removeNotesElementIfEmpty();\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('meaning');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map((/**\r\n         * @param {?} elem\r\n         * @return {?}\r\n         */\r\n        function (elem) {\r\n            return {\r\n                from: elem.getAttribute('category'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        }));\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        var _this = this;\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach((/**\r\n             * @param {?} note\r\n             * @return {?}\r\n             */\r\n            function (note) {\r\n                _this.createNoteElementWithCategoryAttribute(note.from, note.text);\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            /** @type {?} */\r\n            var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, (/** @type {?} */ (translation)));\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this._element.cloneNode(true)));\r\n        /** @type {?} */\r\n        var clone = new Xliff2TransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            /** @type {?} */\r\n            var sourceString = DOMUtilities.getXMLContent(source);\r\n            /** @type {?} */\r\n            var newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        /** @type {?} */\r\n        var segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segment) {\r\n            if (isDefaultLang) {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n            }\r\n            else {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n            }\r\n        }\r\n    };\r\n    return Xliff2TransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nvar /**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nXliff2File = /** @class */ (function (_super) {\r\n    __extends(Xliff2File, _super);\r\n    /**\r\n     * Create an XLIFF 2.0-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return xliff file\r\n     */\r\n    function Xliff2File(xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.initializeFromContent = /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        /** @type {?} */\r\n        var xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var version = xliffList.item(0).getAttribute('version');\r\n            /** @type {?} */\r\n            var expectedVersion = '2.0';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XLIFF20;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XLIFF20;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['skeleton', 'note', 'data', 'source', 'target', 'pc', 'mrk'];\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.initializeTransUnits = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('unit');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var transunit = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new Xliff2TransUnit(transunit, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    Xliff2File.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('srcLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('srcLang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    Xliff2File.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('trgLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('trgLang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    Xliff2File.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var fileElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (!fileElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 2.0 file (should contain a file element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            fileElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to first file element\r\n                fileElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationFile = new Xliff2File(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit((/**\r\n         * @param {?} transUnit\r\n         * @return {?}\r\n         */\r\n        function (transUnit) {\r\n            ((/** @type {?} */ (transUnit))).useSourceAsTarget(isDefaultLang, copyContent);\r\n        }));\r\n        return translationFile;\r\n    };\r\n    return Xliff2File;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nvar /**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nXtbTransUnit = /** @class */ (function (_super) {\r\n    __extends(XtbTransUnit, _super);\r\n    function XtbTransUnit(_element, _id, _translationMessagesFile, _sourceTransUnitFromMaster) {\r\n        var _this = _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n        _this._sourceTransUnitFromMaster = _sourceTransUnitFromMaster;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return content to translate.\r\n     */\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} content to translate.\r\n     */\r\n    XtbTransUnit.prototype.sourceContent = /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} content to translate.\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceContent();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        // xtb has no source content, they are part of the master\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser(); // no typo!, Same as for Xmb\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.createSourceContentNormalized();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return DOMUtilities.getXMLContent(this._element);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            /** @type {?} */\r\n            var sourceContent = this._sourceTransUnitFromMaster.sourceContent();\r\n            if (!sourceContent || sourceContent === this.targetContent() || !this.targetContent()) {\r\n                return 'new';\r\n            }\r\n            else {\r\n                return 'final';\r\n            }\r\n        }\r\n        return null; // not supported in xmb\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XtbTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @protected\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        return state;\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        return nativeState;\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @protected\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        // TODO some logic to store it anywhere\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceReferences();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetSourceReferences = /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        // xtb has no source refs, they are part of the master\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.description();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.meaning();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        // do nothing\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @protected\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = this._element;\r\n        if (isNullOrUndefined(translation)) {\r\n            translation = '';\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n    };\r\n    return XtbTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nvar /**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nXtbFile = /** @class */ (function (_super) {\r\n    __extends(XtbFile, _super);\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * @return XmbFile\r\n     */\r\n    function XtbFile(_translationMessageFileFactory, xmlString, path, encoding, optionalMaster) {\r\n        var _this = _super.call(this) || this;\r\n        _this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding, optionalMaster);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @param {?=} optionalMaster\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.initializeFromContent = /**\r\n     * @private\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @param {?=} optionalMaster\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding, optionalMaster) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('translationbundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', path));\r\n        }\r\n        if (optionalMaster) {\r\n            try {\r\n                this._masterFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XMB, optionalMaster.xmlContent, optionalMaster.path, optionalMaster.encoding);\r\n                // check, wether this can be the master ...\r\n                /** @type {?} */\r\n                var numberInMaster = this._masterFile.numberOfTransUnits();\r\n                /** @type {?} */\r\n                var myNumber = this.numberOfTransUnits();\r\n                if (numberInMaster !== myNumber) {\r\n                    this._warnings.push(format('%s trans units found in master, but this file has %s. Check if it is the correct master', numberInMaster, myNumber));\r\n                }\r\n            }\r\n            catch (error) {\r\n                throw new Error(format('File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.', optionalMaster.path));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.initializeTransUnits = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('translation');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var msg = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            /** @type {?} */\r\n            var masterUnit = null;\r\n            if (this._masterFile) {\r\n                masterUnit = this._masterFile.transUnitWithId(id);\r\n            }\r\n            this.transUnits.push(new XtbTransUnit(msg, id, this, (/** @type {?} */ (masterUnit))));\r\n        }\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XTB;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XTB;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['translation'];\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    XtbFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        if (this._masterFile) {\r\n            return this._masterFile.sourceLanguage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xtb has no notation for this.\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    XtbFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            return translationbundleElem.getAttribute('lang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            translationbundleElem.setAttribute('lang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XtbFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newMasterTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (!translationbundleElem) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var translationElement = translationbundleElem.ownerDocument.createElement('translation');\r\n        translationElement.setAttribute('id', foreignTransUnit.id);\r\n        /** @type {?} */\r\n        var newContent = (copyContent || isDefaultLang) ? foreignTransUnit.sourceContent() : '';\r\n        if (!((/** @type {?} */ (foreignTransUnit))).isICUMessage(newContent)) {\r\n            newContent = this.getNewTransUnitTargetPraefix() + newContent + this.getNewTransUnitTargetSuffix();\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(translationElement, newContent);\r\n        /** @type {?} */\r\n        var newTu = new XtbTransUnit(translationElement, foreignTransUnit.id, this, newMasterTu);\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            translationbundleElem.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstTranslationElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translation');\r\n            if (firstTranslationElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstTranslationElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to bundle at end\r\n                translationbundleElem.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'translation', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        throw new Error(format('File \"%s\", xtb files are not translatable, they are already translations', filename));\r\n    };\r\n    return XtbFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nvar  /**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nTranslationMessagesFileFactory = /** @class */ (function () {\r\n    function TranslationMessagesFileFactory() {\r\n    }\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.fromFileContent = /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster);\r\n    };\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.fromUnknownFormatFileContent = /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster);\r\n    };\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.prototype.createFileFromFileContent = /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        if (i18nFormat === FORMAT_XLIFF12) {\r\n            return new XliffFile(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XLIFF20) {\r\n            return new Xliff2File(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return new XmbFile(this, xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XTB) {\r\n            return new XtbFile(this, xmlContent, path, encoding, optionalMaster);\r\n        }\r\n        throw new Error(format('oops, unsupported format \"%s\"', i18nFormat));\r\n    };\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.prototype.createFileFromUnknownFormatFileContent = /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (xmlContent, path, encoding, optionalMaster) {\r\n        /** @type {?} */\r\n        var formatCandidates = [FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB];\r\n        if (path && path.endsWith('xmb')) {\r\n            formatCandidates = [FORMAT_XMB, FORMAT_XTB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        if (path && path.endsWith('xtb')) {\r\n            formatCandidates = [FORMAT_XTB, FORMAT_XMB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        // try all candidate formats to get the right one\r\n        for (var i = 0; i < formatCandidates.length; i++) {\r\n            /** @type {?} */\r\n            var formatCandidate = formatCandidates[i];\r\n            try {\r\n                /** @type {?} */\r\n                var translationFile = TranslationMessagesFileFactory.fromFileContent(formatCandidate, xmlContent, path, encoding, optionalMaster);\r\n                if (translationFile) {\r\n                    return translationFile;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // seams to be the wrong format\r\n            }\r\n        }\r\n        throw new Error(format('could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB'));\r\n    };\r\n    return TranslationMessagesFileFactory;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { FILETYPE_XLIFF12, FILETYPE_XLIFF20, FILETYPE_XMB, FILETYPE_XTB, FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB, NORMALIZATION_FORMAT_DEFAULT, NORMALIZATION_FORMAT_NGXTRANSLATE, NgxI18nsupportLibModule, STATE_FINAL, STATE_NEW, STATE_TRANSLATED, TranslationMessagesFileFactory };\n//# sourceMappingURL=ngx-i18nsupport-ngx-i18nsupport-lib.js.map\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n/**\r\n * Created by martin on 30.03.2017.\r\n * Guard that checks wether there is an active project selected.\r\n * If not, it redirects to the home page, where you can select one.\r\n */\r\n@Injectable()\r\nexport class ActiveProjectGuard implements CanActivate {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    routerState: RouterStateSnapshot\r\n  ): Observable<boolean>|Promise<boolean>|boolean {\r\n      if (this.translatorService.currentProject()) {\r\n        return true;\r\n      } else {\r\n        this.router.navigateByUrl('home');\r\n        return false;\r\n      }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatOptionModule } from \"@angular/material/core\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatTreeModule } from \"@angular/material/tree\";\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\n/**\r\n * All imports of used material components.\r\n */\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n      MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    FlexLayoutModule\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n      MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    FlexLayoutModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' }}\r\n  ],\r\n})\r\nexport class AppMaterialModule { }\r\n","<div id=\"container\" fxLayout=\"column\">\r\n  <mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n      <span id=\"apptitle\">Tiny Translator</span>\r\n      <span>&nbsp;</span>\r\n      <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\" fxLayoutGap=\"10px\">\r\n        <app-language code=\"en\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"de\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"fr\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"en-us\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"ru\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"zh\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"ar\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"in\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"pt-br\" [showCode]=\"false\"></app-language>\r\n      </div>\r\n    </mat-toolbar-row>\r\n    <mat-toolbar-row>\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" matTooltip=\"Open menu... (configuration options, ...)\" i18n-matTooltip>\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <a mat-icon-button routerLink=\"/home\" routerLinkActive=\"active\" matTooltip=\"List of available projects...\" i18n-matTooltip>\r\n        <mat-icon>home</mat-icon>\r\n      </a>\r\n      <a mat-icon-button routerLink=\"/editproject\" routerLinkActive=\"active\" matTooltip=\"Details of the project (click to open)\" i18n-matTooltip>\r\n        <mat-icon>edit</mat-icon>\r\n      </a>\r\n      <a mat-icon-button routerLink=\"/translate\" routerLinkActive=\"active\" matTooltip=\"Translate the project\" i18n-matTooltip>\r\n        <mat-icon>translate</mat-icon>\r\n        {{currentProjectName() | abbreviate: 30}}\r\n      </a>\r\n      <!-- main menu -->\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"download()\"\r\n                matTooltip=\"export current translation state to file (download)\" i18n-matTooltip>\r\n          <mat-icon>save</mat-icon>\r\n          <span i18n>Save...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"publish()\" [disabled]=\"!publishEnabled()\"\r\n                matTooltip=\"publish translated state to Github...\" i18n-matTooltip>\r\n          <mat-icon>publish</mat-icon>\r\n          <span i18n>Publish...</span>\r\n        </button>\r\n        <button mat-menu-item [matMenuTriggerFor]=\"configMenu\">\r\n          <mat-icon>settings</mat-icon>\r\n          <span i18n>Settings...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"autoTranslate()\"\r\n          matTooltip=\"Translate all untranslated units with Google Translate\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n          <span i18n>Google Translate units...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"navigateToAutoTranslateSummary()\"\r\n                matTooltip=\"Open summary page of last autotranslate run\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n          <span i18n>Last results...</span>\r\n        </button>\r\n      </mat-menu>\r\n      <!-- config menu -->\r\n      <mat-menu #configMenu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"configureAutoTranslate()\"\r\n                matTooltip=\"configure Google Translate API Key\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n          <span i18n>Google Translate settings...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"configureGithub()\"\r\n                matTooltip=\"configure Github API access\" i18n-matTooltip>\r\n          <span class=\"mat-icon\" id=\"githublogo\">&nbsp;</span>\r\n          <span i18n>Github access settings..</span>\r\n        </button>\r\n      </mat-menu>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <div id=\"main\" fxFlex=\"1 1 auto\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <div id=\"footer\">\r\n    Version <span id=\"buildversion\">{{buildversion()}}</span>; buildtime <span id=\"buildtime\">{{buildtime()}}</span>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit, Optional} from '@angular/core';\r\nimport {AppConfig, APP_CONFIG} from './app.config';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {SwUpdate} from '@angular/service-worker';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {UpdateAvailableEvent} from '@angular/service-worker';\r\nimport {UpdateAvailableComponent} from './update-available/update-available.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app works!';\r\n\r\n  constructor(\r\n    @Inject(APP_CONFIG) private appConfig: AppConfig,\r\n    private translatorService: TinyTranslatorService,\r\n    private router: Router,\r\n    @Optional() private swUpdate: SwUpdate,\r\n    private matSnackBar: MatSnackBar\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.swUpdate) {\r\n      this.swUpdate.available.subscribe((event: UpdateAvailableEvent) => {\r\n        console.log('[App] Update available: current version is ', event.current, ', available version is', event.available);\r\n        this.matSnackBar.openFromComponent(UpdateAvailableComponent, {duration: 3000});\r\n      });\r\n    }\r\n  }\r\n\r\n  buildtime() {\r\n    return this.appConfig.BUILDTIME;\r\n  }\r\n\r\n  buildversion() {\r\n    return this.appConfig.BUILDVERSION;\r\n  }\r\n\r\n  currentProjectName(): string {\r\n    const project = this.translatorService.currentProject();\r\n    return project ? project.name : '';\r\n  }\r\n\r\n  /**\r\n   * Download using Browser functionality..\r\n   */\r\n  download() {\r\n    this.translatorService.downloadProject(this.translatorService.currentProject());\r\n  }\r\n\r\n  /**\r\n   * Publish to the configured backend (Github, ...)\r\n   */\r\n  publish() {\r\n    this.router.navigateByUrl('publishproject');\r\n  }\r\n\r\n  publishEnabled(): boolean {\r\n    return this.translatorService.currentProject() && this.translatorService.currentProject().canPublish();\r\n  }\r\n  /**\r\n   * Auto translate all untranslated units.\r\n   * Redirects to a config page, if Google Translate is currently not available.\r\n   * Otherwise auto translates all untranslated units..\r\n   */\r\n  autoTranslate() {\r\n    this.translatorService.canAutoTranslate().subscribe((canTranslate: boolean) => {\r\n      if (canTranslate) {\r\n        this.translatorService.autoTranslate().subscribe((summary) => {\r\n          console.log('Summary: ', summary.content(), summary); // TODO show Toast or result page...\r\n          this.translatorService.currentProject().setAutoTranslateSummaryReport(summary);\r\n          this.router.navigateByUrl('autotranslatesummary');\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl('configureautotranslate');\r\n      }\r\n    });\r\n  }\r\n\r\n  configureAutoTranslate() {\r\n    this.router.navigateByUrl('configureautotranslate');\r\n  }\r\n\r\n  navigateToAutoTranslateSummary() {\r\n    this.router.navigateByUrl('autotranslatesummary');\r\n  }\r\n\r\n  configureGithub() {\r\n    this.router.navigateByUrl('configuregithub');\r\n  }\r\n\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\nimport {environment} from '../environments/environment';\r\n/**\r\n * Created by martin on 23.03.2017.\r\n * Configuration Data of the application.\r\n */\r\n\r\nexport class AppConfig {\r\n  // URL to Google translate API (optional)\r\n  GOOGLETRANSLATE_API_ROOT_URL?: string;\r\n  // Your API Key, should not be set here, because it is secret\r\n  // can be typed in in the application, but test config needs it\r\n  GOOGLETRANSLATE_API_KEY?: string;\r\n  // a setting for tests!!\r\n  // if set to true, all autotranslations containing placeholder or tags will FAIL BY DESIGN\r\n  // Used to allow testing of report page and filters for failed translations.\r\n  GOOGLETRANSLATE_PROVOKE_FAILURES?: boolean;\r\n  // URL to Github API (optional)\r\n  GITHUB_API_ROOT_URL?: string;\r\n  // Your API Key, should not be set here, because it is secret\r\n  // can be typed in in the application, but test config needs it\r\n  GITHUB_API_KEY?: string;\r\n  GITHUB_PROVOKE_FAILURES?: boolean;\r\n  BUILDVERSION: string;\r\n  BUILDTIME: string;\r\n}\r\n\r\nexport const APP_CONFIG_VALUE: AppConfig = {\r\n  // set values here\r\n  'BUILDVERSION': '0.16.0',\r\n  'BUILDTIME': '2019-05-31', // TODO should be dynamic\r\n  GOOGLETRANSLATE_API_ROOT_URL: 'https://translation.googleapis.com/',\r\n  GOOGLETRANSLATE_API_KEY: environment.googletranslate_api_key,\r\n  GOOGLETRANSLATE_PROVOKE_FAILURES: environment.googletranslate_provoke_failures,\r\n  GITHUB_API_ROOT_URL: 'https://api.github.com/',\r\n  GITHUB_API_KEY: environment.github_api_key,\r\n  GITHUB_PROVOKE_FAILURES: environment.github_provoke_failures,\r\n};\r\n\r\nexport let APP_CONFIG = new InjectionToken<AppConfig>('app.config');\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ServiceWorkerModule} from '@angular/service-worker';\r\nimport {environment} from '../environments/environment';\r\n\r\nimport {APP_CONFIG, APP_CONFIG_VALUE} from './app.config';\r\nimport {routing, appRoutingProviders} from './app.routing';\r\n\r\nimport 'hammerjs';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProjectStarterComponent } from './project-starter/project-starter.component';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport { TranslationFileStatusComponent } from './translation-file-status/translation-file-status.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { TranslatePageComponent } from './translate-page/translate-page.component';\r\nimport { TranslateUnitComponent } from './translate-unit/translate-unit.component';\r\nimport {DownloaderService} from './file-accessors/download-upload/downloader.service';\r\nimport { TranslateUnitListComponent } from './translate-unit-list/translate-unit-list.component';\r\nimport { AbbreviatePipe } from './common/abbreviate.pipe';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport {ActiveProjectGuard} from './active-project.guard';\r\nimport {BackendServiceAPI} from './model/backend-service-api';\r\nimport {BackendLocalStorageService} from './model/backend-local-storage.service';\r\nimport {AutoTranslateServiceAPI} from './model/auto-translate-service-api';\r\nimport {AutoTranslateGoogleService} from './model/auto-translate-google.service';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { ProjectListComponent } from './project-list/project-list.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { CreateProjectPageComponent } from './create-project-page/create-project-page.component';\r\nimport { ProjectStatusComponent } from './project-status/project-status.component';\r\nimport {AsynchronousFileReaderService} from './file-accessors/download-upload/asynchronous-file-reader.service';\r\nimport { NormalizedMessageInputComponent } from './normalized-message-input/normalized-message-input.component';\r\nimport {TranslateUnitWarningConfirmDialogComponent} from './translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component';\r\nimport {AppMaterialModule} from './app-material.module';\r\nimport { EditProjectPageComponent } from './edit-project-page/edit-project-page.component';\r\nimport { ProjectEditorComponent } from './project-editor/project-editor.component';\r\nimport { ConfigureAutoTranslatePageComponent } from './configure-auto-translate-page/configure-auto-translate-page.component';\r\nimport { AutoTranslateSummaryPageComponent } from './auto-translate-summary-page/auto-translate-summary-page.component';\r\nimport { TranslationUnitFilterService } from './model/filters/translation-unit-filter.service';\r\nimport { FilterStatusComponent } from './filter-status/filter-status.component';\r\nimport { FilterPageComponent } from './filter-page/filter-page.component';\r\nimport { UpdateAvailableComponent } from './update-available/update-available.component';\r\nimport {TranslationFileUploadComponent} from './file-accessors/download-upload/translation-file-upload/translation-file-upload.component';\r\nimport {DownloadUploadService} from './file-accessors/download-upload/download-upload.service';\r\nimport {TranslationFileFromGithubComponent} from './file-accessors/github/translation-file-from-github/translation-file-from-github.component';\r\nimport {GithubAccessorService} from './file-accessors/github/github-accessor.service';\r\nimport {GithubConfigEditorComponent} from './file-accessors/github/github-config-editor/github-config-editor.component';\r\nimport {ConfigureGithubPageComponent} from './file-accessors/github/configure-github-page/configure-github-page.component';\r\nimport {FileExplorerComponent} from './file-accessors/common/file-explorer/file-explorer.component';\r\nimport {FileExplorerDialogComponent} from './file-accessors/common/file-explorer-dialog/file-explorer-dialog.component';\r\nimport {PublishProjectPageComponent} from './publish-project-page/publish-project-page.component';\r\nimport {GithubConfigEditorDialogComponent} from './file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component';\r\nimport {ConfirmDialogComponent} from './confirm-dialog/confirm-dialog.component';\r\nimport {SaveAsExplorerComponent} from './file-accessors/common/save-as-explorer/save-as-explorer.component';\r\nimport {FileToSaveComponent} from './file-accessors/common/file-to-save/file-to-save.component';\r\nimport {SaveAsExplorerDialogComponent} from './file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AbbreviatePipe,\r\n    AppComponent,\r\n    AutoTranslateSummaryPageComponent,\r\n    ConfigureAutoTranslatePageComponent,\r\n    ConfigureGithubPageComponent,\r\n    ConfirmDialogComponent,\r\n    CreateProjectPageComponent,\r\n    EditProjectPageComponent,\r\n    FileToSaveComponent,\r\n    FileExplorerComponent,\r\n    FileExplorerDialogComponent,\r\n    FilterStatusComponent,\r\n    FilterPageComponent,\r\n    GithubConfigEditorComponent,\r\n    GithubConfigEditorDialogComponent,\r\n    HomePageComponent,\r\n    LanguageComponent,\r\n    NormalizedMessageInputComponent,\r\n    ProjectComponent,\r\n    ProjectEditorComponent,\r\n    ProjectListComponent,\r\n    ProjectStarterComponent,\r\n    ProjectStatusComponent,\r\n    PublishProjectPageComponent,\r\n    SaveAsExplorerComponent,\r\n    SaveAsExplorerDialogComponent,\r\n    TranslationFileStatusComponent,\r\n    TranslatePageComponent,\r\n    TranslateUnitComponent,\r\n    TranslateUnitListComponent,\r\n    TranslationFileUploadComponent,\r\n    TranslationFileFromGithubComponent,\r\n    TranslateUnitWarningConfirmDialogComponent,\r\n    UpdateAvailableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppMaterialModule,\r\n    routing,\r\n    ServiceWorkerModule.register(environment.base_href + 'ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    {provide: APP_CONFIG, useValue: APP_CONFIG_VALUE},\r\n    appRoutingProviders,\r\n    TinyTranslatorService,\r\n    AsynchronousFileReaderService,\r\n    DownloaderService,\r\n    DownloadUploadService,\r\n    GithubAccessorService,\r\n    ActiveProjectGuard,\r\n    {provide: BackendServiceAPI, useClass: BackendLocalStorageService},\r\n    {provide: AutoTranslateServiceAPI, useClass: AutoTranslateGoogleService},\r\n    TranslationUnitFilterService,\r\n  ],\r\n  entryComponents: [\r\n    ConfirmDialogComponent,\r\n    FileExplorerDialogComponent,\r\n    GithubConfigEditorDialogComponent,\r\n    SaveAsExplorerDialogComponent,\r\n    TranslateUnitWarningConfirmDialogComponent,\r\n    UpdateAvailableComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h3 i18n>Autotranslate Run Result</h3>\r\n<div *ngIf=\"!hasTranslateSummaryReport()\">\r\n  <p i18n>No Autotranslate run result available.</p>\r\n</div>\r\n<div *ngIf=\"hasTranslateSummaryReport()\">\r\n  <p>{{autoTranslateSummaryReport().content()}}</p>\r\n  <div *ngIf=\"ignoredResults().length > 0\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"50px\">\r\n      <h4 i18n>Ignored</h4>\r\n      <button fxFlexAlign=\"start\" mat-raised-button color=\"accent\" (click)=\"navigateToAutoTranslatedIgnored()\"\r\n              i18n matTooltip=\"show all untranslated that were ignored by auto translation\" i18n-matTooltip>navigate to ignored units</button>\r\n    </div>\r\n    <mat-list>\r\n      <mat-list-item *ngFor=\"let result of ignoredResults()\">\r\n        <h4 matLine>{{showTransUnitOfResult(result)}}</h4>\r\n        <p matLine>{{result.details()}}</p>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </div>\r\n  <div *ngIf=\"failedResults().length > 0\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"50px\">\r\n      <h4 i18n>Failed</h4>\r\n      <button fxFlexAlign=\"start\" mat-raised-button color=\"accent\" (click)=\"navigateToAutoTranslatedFailed()\"\r\n              i18n matTooltip=\"show all untranslated where auto translation failed\" i18n-matTooltip>navigate to failed units</button>\r\n    </div>\r\n    <mat-list>\r\n      <mat-list-item *ngFor=\"let result of failedResults()\">\r\n        <h4 matLine>{{showTransUnitOfResult(result)}}</h4>\r\n        <p matLine>{{result.details()}}</p>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"50px\">\r\n    <button *ngIf=\"autoTranslateSummaryReport().success() > 0\"\r\n            fxFlexAlign=\"start\"\r\n            mat-raised-button color=\"accent\"\r\n            (click)=\"navigateToAutoTranslated()\"\r\n            i18n\r\n            matTooltip=\"show overview of auto translated units\" i18n-matTooltip>navigate to translated units</button>\r\n    <button\r\n            fxFlexAlign=\"start\"\r\n            mat-raised-button color=\"accent\"\r\n            (click)=\"navigateToContinueWork()\"\r\n            i18n\r\n            matTooltip=\"continue translation\" i18n-matTooltip>continue</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AutoTranslateSummaryReport} from '../model/auto-translate-summary-report';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationUnitFilterAll} from '../model/filters/translation-unit-filter-all';\r\nimport {TranslationUnitFilterAutoTranslated} from '../model/filters/translation-unit-filter-autotranslated';\r\nimport {AutoTranslateResult} from '../model/auto-translate-result';\r\nimport {TranslationUnitFilterAutoTranslatedFailed} from '../model/filters/translation-unit-filter-autotranslated-failed';\r\nimport {TranslationUnitFilterAutoTranslatedIgnored} from '../model/filters/translation-unit-filter-autotranslated-ignored';\r\nimport {\r\n  FILTER_AUTOTRANSLATED, FILTER_AUTOTRANSLATED_FAILED, FILTER_AUTOTRANSLATED_IGNORED,\r\n  TranslationUnitFilterService\r\n} from '../model/filters/translation-unit-filter.service';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\n\r\n@Component({\r\n  selector: 'app-auto-translate-summary-page',\r\n  templateUrl: './auto-translate-summary-page.component.html',\r\n  styleUrls: ['./auto-translate-summary-page.component.css']\r\n})\r\nexport class AutoTranslateSummaryPageComponent implements OnInit {\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  constructor(private translatorService: TinyTranslatorService,\r\n              private translationUnitFilterService: TranslationUnitFilterService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    const project = this.translatorService.currentProject();\r\n    if (project) {\r\n      this._autoTranslateSummaryReport = project.autoTranslateSummaryReport();\r\n    }\r\n    this.translationUnitFilterService.setAutotranslateSummaryReport(this._autoTranslateSummaryReport);\r\n  }\r\n\r\n  hasTranslateSummaryReport(): boolean {\r\n    return !isNullOrUndefined(this._autoTranslateSummaryReport);\r\n  }\r\n\r\n  autoTranslateSummaryReport() {\r\n    return this._autoTranslateSummaryReport;\r\n  }\r\n\r\n  ignoredResults(): AutoTranslateResult[] {\r\n    return (this._autoTranslateSummaryReport) ? this._autoTranslateSummaryReport.allResults().filter((result) => result.ignored()) : [];\r\n  }\r\n\r\n  failedResults(): AutoTranslateResult[] {\r\n    return (this._autoTranslateSummaryReport) ? this._autoTranslateSummaryReport.allResults().filter((result) => result.failed()) : [];\r\n  }\r\n\r\n  /**\r\n   * Show a brief overview of the transunit of the result.\r\n   * @param result\r\n   */\r\n  showTransUnitOfResult(result: AutoTranslateResult): string {\r\n    const tu: TranslationUnit = result.translationUnit();\r\n    if (tu) {\r\n      return tu.sourceContentNormalized().dislayText(true);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  navigateToAutoTranslated() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToAutoTranslatedFailed() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_FAILED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToAutoTranslatedIgnored() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_IGNORED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToContinueWork() {\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {isNullOrUndefined, isString} from '../common/util';\r\n\r\n/**\r\n * A Pipe to abbreviate long text.\r\n * The text is cut and .. is added at the end.\r\n * The length can be given as parameter.\r\n * Default is 20.\r\n * Examples:\r\n * 'abcdefghijklmnopqrstuvwxyz' | abbreviate -> 'abcdefghijklmnopqrst..'\r\n * 'abcdefghijklmnopqrstuvwxyz' | abbreviate:5 -> 'abcde..'\r\n */\r\n@Pipe({\r\n  name: 'abbreviate'\r\n})\r\nexport class AbbreviatePipe implements PipeTransform {\r\n\r\n  private DEFAULT_LENGTH = 20; // aabreviation length if not given as parameter\r\n\r\n  transform(value: string, lengthParam?: number): any {\r\n    const length = (!isNullOrUndefined(lengthParam))? lengthParam : this.DEFAULT_LENGTH;\r\n    if (isString(value)) {\r\n      if (value.length > length) {\r\n        return value.substring(0, length).concat('..');\r\n      } else {\r\n        return value;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n}\r\n","/**\r\n * Sammlung einfacher Hilfsfunktionen, die man ab und an mal braucht.\r\n */\r\n\r\n/**\r\n * Ersatz für deprecated node isNullOrUndefined-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isNullOrUndefined(value: any) {\r\n    return value === undefined || value === null;\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isString-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isString(value: any) {\r\n    return typeof value === 'string';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isBoolean-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isBoolean(value: any) {\r\n    return typeof value === 'boolean';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isNumber-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isNumber(value: any) {\r\n    return typeof value === 'number';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isArray-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isArray(value: any) {\r\n    return Array.isArray(value);\r\n}\r\n\r\n/**\r\n * Function to filter out duplicates.\r\n * Usage: anArray.filter( onlyUnique )\r\n * @param value\r\n * @param index\r\n * @param self\r\n * @return {boolean}\r\n */\r\nexport function onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n}\r\n\r\n/**\r\n * Liste als kommaseparierter String.\r\n * @param {string[]} list\r\n * @return {string}\r\n */\r\nexport function asCommaSeparatedList(list: string[]): string {\r\n    if (isNullOrUndefined(list)) {\r\n        return '';\r\n    }\r\n    let result = '';\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (i > 0) {\r\n            result = result + ',';\r\n        }\r\n        result = result + list[i];\r\n    }\r\n    return result;\r\n}\r\n","<h3 i18n>Google Translate status for current project</h3>\r\n<div *ngIf=\"autoTranslateDisabled()|async; else okBlock\">\r\n  <p><mat-icon color=\"primary\">error</mat-icon><span i18n>Google Translate is currently disabled due to the following reason:</span></p>\r\n  <p class=\"reason\">{{autoTranslateDisabledReason()|async}}</p>\r\n</div>\r\n<ng-template #okBlock>\r\n  <div>\r\n    <p><mat-icon>done</mat-icon><span i18n>Google Translate is ready to translate from {{sourceLanguage()}} to {{targetLanguage()}}</span></p>\r\n  </div>\r\n</ng-template>\r\n<h3 i18n>Google Translate Settings</h3>\r\n<div class=\"info\">\r\n  <p i18n>To use Google Translate you need an account on <a href=\"https://cloud.google.com\">Google Cloud Platform</a>.</p>\r\n  <p i18n>Then you have to create an API Key.</p>\r\n  <p><span i18n>For details follow:</span> <a href=\"https://support.google.com/cloud/answer/6158862?hl=en\" target=\"_blank\">create an API key for your Google Cloud Platform Console project</a></p>\r\n</div>\r\n<form fxLayout=\"column\">\r\n  <mat-form-field>\r\n    <input matInput [(ngModel)]=\"apiKey\" name=\"apiKey\" placeholder=\"API key\" i18n-placeholder\r\n    matTooltip=\"API Key will be stored in the local storage of your browser. It will not be sent to anywhere but the Google Translate Service.\" i18n-matTooltip>\r\n  </mat-form-field>\r\n  <button color=\"primary\" mat-raised-button i18n (click)=\"setApiKey()\"\r\n          matTooltip=\"API Key will be stored in the local storage of your browser. It will not be sent to anywhere but the Google Translate Service.\" i18n-matTooltip>\r\n    Store API Key\r\n  </button>\r\n</form>\r\n<h3 i18n>Google Translate Test</h3>\r\n<div *ngIf=\"autoTranslateDisabledTest()|async; else okBlockTest\">\r\n  <p><mat-icon color=\"primary\">error</mat-icon><span i18n>Google Translate cannot translate from {{sourceLanguageTest()}} to {{targetLanguageTest()}} due to the following reason:</span></p>\r\n  <p class=\"reason\">{{autoTranslateDisabledReasonTest()|async}}</p>\r\n</div>\r\n<ng-template #okBlockTest>\r\n  <div>\r\n    <p><mat-icon>done</mat-icon><span i18n>Google Translate is ready to translate from {{sourceLanguageTest()}} to {{targetLanguageTest()}}</span></p>\r\n    <p>{{testCallSourceResult}}</p>\r\n    <p>{{testCallTargetResult}}</p>\r\n  </div>\r\n</ng-template>\r\n<form fxLayout=\"column\">\r\n  <mat-form-field>\r\n    <input matInput [(ngModel)]=\"_sourceLanguageTest\" name=\"_sourceLanguageTest\" placeholder=\"Source language code\" i18n-placeholder>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <input matInput [(ngModel)]=\"_targetLanguageTest\" name=\"_targetLanguageTest\" placeholder=\"Target language code\" i18n-placeholder>\r\n  </mat-form-field>\r\n  <button mat-raised-button color=\"accent\" i18n (click)=\"testCall()\"\r\n          matTooltip=\"Test a call\" i18n-matTooltip>\r\n    Test\r\n  </button>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\nconst TEST_MESSAGE = 'Hello world!';\r\n\r\n@Component({\r\n  selector: 'app-configure-auto-translate-page',\r\n  templateUrl: './configure-auto-translate-page.component.html',\r\n  styleUrls: ['./configure-auto-translate-page.component.css']\r\n})\r\nexport class ConfigureAutoTranslatePageComponent implements OnInit {\r\n\r\n  apiKey: string; // connected to input field\r\n\r\n  _sourceLanguage: string;\r\n  _targetLanguage: string;\r\n  _sourceLanguageTest: string;\r\n  _targetLanguageTest: string;\r\n  testCallSourceResult: string;\r\n  testCallTargetResult: string;\r\n\r\n  constructor(private translatorService: TinyTranslatorService) {\r\n    if (this.translatorService.currentProject() && this.translatorService.currentProject().canTranslate()) {\r\n      this._sourceLanguage = this.translatorService.currentProject().translationFile.sourceLanguage();\r\n      this._targetLanguage = this.translatorService.currentProject().translationFile.targetLanguage();\r\n    }\r\n    this._sourceLanguageTest = 'en';\r\n    this._targetLanguageTest = 'de';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiKey = this.translatorService.autoTranslateApiKey();\r\n  }\r\n\r\n  autoTranslateDisabled(): Observable<boolean> {\r\n    return this.translatorService.canAutoTranslate().pipe(map((val) => !val));\r\n  }\r\n\r\n  autoTranslateDisabledReason(): Observable<string> {\r\n    return this.translatorService.autoTranslateDisabledReason();\r\n  }\r\n\r\n  sourceLanguage(): string {\r\n    return this._sourceLanguage;\r\n  }\r\n\r\n  targetLanguage(): string {\r\n    return this._targetLanguage;\r\n  }\r\n\r\n  autoTranslateDisabledTest(): Observable<boolean> {\r\n    return this.translatorService.canAutoTranslateForLanguages(this._sourceLanguageTest, this._targetLanguageTest).pipe(map((val) => !val));\r\n  }\r\n\r\n  autoTranslateDisabledReasonTest(): Observable<string> {\r\n    return this.translatorService.autoTranslateDisabledReasonForLanguages(this._sourceLanguageTest, this._targetLanguageTest);\r\n  }\r\n\r\n  sourceLanguageTest(): string {\r\n    return this._sourceLanguageTest;\r\n  }\r\n\r\n  targetLanguageTest(): string {\r\n    return this._targetLanguageTest;\r\n  }\r\n\r\n  setApiKey() {\r\n    this.translatorService.setAutoTranslateApiKey(this.apiKey);\r\n  }\r\n\r\n  testCall() {\r\n    this.testCallSourceResult = null;\r\n    this.testCallTargetResult = null;\r\n    if (this._sourceLanguageTest !== 'en') {\r\n      this.translatorService.testAutoTranslate(TEST_MESSAGE, 'en', this._sourceLanguageTest)\r\n        .subscribe((translationToSource) => {\r\n          this.testCallSourceResult = translationToSource;\r\n          this.translatorService.testAutoTranslate(translationToSource, this._sourceLanguageTest, this._targetLanguageTest)\r\n            .subscribe((translationToTarget) => {\r\n              this.testCallTargetResult = translationToTarget;\r\n            });\r\n        });\r\n    } else {\r\n      this.testCallSourceResult = TEST_MESSAGE;\r\n      this.translatorService.testAutoTranslate(this.testCallSourceResult, this._sourceLanguageTest, this._targetLanguageTest)\r\n        .subscribe((translationToTarget) => {\r\n          this.testCallTargetResult = translationToTarget;\r\n        });\r\n    }\r\n  }\r\n}\r\n","<h3 matDialogTitle>{{question}}</h3>\r\n<div mat-dialog-content>\r\n  <p *ngIf=\"info\" class=\"info\">{{info}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button color=\"primary\" matDialogClose (click)=\"cancel()\" i18n>Cancel</button>\r\n  <button mat-button color=\"primary\" matDialogClose (click)=\"accept()\" i18n>Accept</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\nexport interface ConfirmDialogData {\r\n  question: string;\r\n  info: string;\r\n}\r\n\r\n/**\r\n * Dialog used to confirm simple questions.\r\n * There are 2 possible results:\r\n * false: User says no to the question.\r\n * true: User says yes.\r\n */\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  question: string;\r\n  info: string;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) private data: ConfirmDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.question = this.data.question;\r\n    this.info = this.data.info;\r\n  }\r\n\r\n  accept() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<app-project-starter (addProject)=\"addProject($event)\"></app-project-starter>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-project-page',\r\n  templateUrl: './create-project-page.component.html',\r\n  styleUrls: ['./create-project-page.component.css']\r\n})\r\nexport class CreateProjectPageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public addProject(newProject: TranslationProject) {\r\n      this.translatorService.addProject(newProject);\r\n      this.translatorService.setCurrentProject(newProject);\r\n      this.router.navigateByUrl('/translate');\r\n  }\r\n\r\n}\r\n","<app-project-editor [project]=\"currentProject()\" (onEditProject)=\"editProject($event)\"></app-project-editor>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n/**\r\n * Page to show and edit some properties of the current project.\r\n * (name, workflowType).-\r\n */\r\n@Component({\r\n  selector: 'app-edit-project-page',\r\n  templateUrl: './edit-project-page.component.html',\r\n  styleUrls: ['./edit-project-page.component.css']\r\n})\r\nexport class EditProjectPageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public editProject(newProject: TranslationProject) {\r\n    this.translatorService.setCurrentProject(newProject);\r\n    this.translatorService.commitChanges(newProject);\r\n    this.router.navigateByUrl('/translate');\r\n  }\r\n\r\n  public currentProject(): TranslationProject {\r\n    return this.translatorService.currentProject();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {DownloadUploadService} from '../download-upload/download-upload.service';\r\nimport {IFileAccessService} from './i-file-access-service';\r\nimport {FileAccessorType} from './file-accessor-type';\r\nimport {GithubAccessorService} from '../github/github-accessor.service';\r\n\r\n/**\r\n * This service returns a suitable service used to load and save a translation file.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileAccessServiceFactoryService {\r\n\r\n  constructor(\r\n      private downloadUploadService: DownloadUploadService,\r\n      private githubAccessorService: GithubAccessorService\r\n  ) { }\r\n\r\n  getFileAccessService(filetype: FileAccessorType): IFileAccessService {\r\n    switch (filetype) {\r\n      case FileAccessorType.DOWNLOAD_UPLOAD:\r\n        return this.downloadUploadService;\r\n      case FileAccessorType.GITHUB:\r\n        return this.githubAccessorService;\r\n      default:\r\n        throw new Error('Unknown file type ' + filetype);\r\n    }\r\n  }\r\n\r\n}\r\n","export enum FileAccessorType {\r\n    DOWNLOAD_UPLOAD = 'Browser Upload and Download',\r\n    GITHUB = 'Github'\r\n}\r\n","<h1 mat-dialog-title i18n *ngIf=\"selectableFileType === 'file'\">Select a file</h1>\r\n<h1 mat-dialog-title i18n *ngIf=\"selectableFileType === 'dir'\">Select a directory</h1>\r\n<h1 mat-dialog-title i18n *ngIf=\"!selectableFileType\">Select a file or directory</h1>\r\n<div mat-dialog-content id=\"content\">\r\n  <ng-container *ngIf=\"root | async; let currentRoot; else loadingOrError\">\r\n    <h2 mat-dialog-title>{{currentRoot?.configuration.label}}</h2>\r\n    <app-file-explorer\r\n            [configurations]=\"configurations\"\r\n            [root]=\"currentRoot\"\r\n            [file]=\"file\"\r\n            [selectableFileType] = \"selectableFileType\"\r\n            (selectedFile)=\"selectedFile($event)\" >\r\n    </app-file-explorer>\r\n  </ng-container>\r\n  <ng-template #loadingOrError>\r\n    <div *ngIf=\"errorLoading$ | async; let errorMessage; else loading\">\r\n      <ng-container i18n>Error loading: {{errorMessage}}.</ng-container>\r\n    </div>\r\n    <ng-template #loading>\r\n      <ng-container i18n>Loading ...</ng-container>\r\n    </ng-template>\r\n  </ng-template>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"cancel()\" i18n>Cancel</button>\r\n  <button mat-button color=\"primary\" [disabled]=\"!isFileSelected()\" [mat-dialog-close]=\"result()\" cdkFocusInitial i18n>Ok</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Observable, of, Subject} from 'rxjs';\r\nimport {IFileDescription} from '../i-file-description';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {FileAccessServiceFactoryService} from '../file-access-service-factory.service';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\r\n\r\nexport interface FileExplorerDialogData {\r\n  configurations?: IFileAccessConfiguration[];\r\n  configuration?: IFileAccessConfiguration;\r\n  file?: IFileDescription;\r\n  selectableFileType?: 'file'|'dir';\r\n}\r\n\r\n/**\r\n * A dialog containing a file explorer.\r\n */\r\n@Component({\r\n  selector: 'app-file-explorer-dialog',\r\n  templateUrl: './file-explorer-dialog.component.html',\r\n  styleUrls: ['./file-explorer-dialog.component.scss']\r\n})\r\nexport class FileExplorerDialogComponent implements OnInit {\r\n\r\n  configurations?: IFileAccessConfiguration[];\r\n  configuration: IFileAccessConfiguration;\r\n  file: IFileDescription;\r\n  selectableFileType: 'file'|'dir';\r\n  root: Observable<IFileDescription>;\r\n  errorLoading$ = new Subject<string>();\r\n  _selectedFile: IFileDescription;\r\n\r\n  constructor(\r\n      private dialogRef: MatDialogRef<FileExplorerDialogComponent>,\r\n      @Inject(MAT_DIALOG_DATA) data: FileExplorerDialogData,\r\n      private fileAccessServiceFactoryService: FileAccessServiceFactoryService) {\r\n    this.configurations = data.configurations;\r\n    this.configuration = data.configuration;\r\n    this.file = data.file;\r\n    this.selectableFileType = data.selectableFileType;\r\n    this._selectedFile = (this.file) ? this.file : null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const accessService = this.fileAccessServiceFactoryService.getFileAccessService(this.configuration.type);\r\n    const rootDir = this.configuration.rootDescription();\r\n    this.root = accessService.load(rootDir).pipe(\r\n        catchError((error) => {\r\n          this.errorLoading$.next(error.message);\r\n          return of(undefined);\r\n        }));\r\n  }\r\n\r\n  selectedFile(file: IFileDescription) {\r\n    console.log('selected file', file);\r\n    this._selectedFile = file;\r\n  }\r\n\r\n  isFileSelected(): boolean {\r\n    return !!this._selectedFile;\r\n  }\r\n\r\n  result() {\r\n    return this._selectedFile;\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<form [formGroup]=\"form\">\r\n  <mat-form-field *ngIf=\"configurations\">\r\n    <mat-label i18n>select a configuration..</mat-label>\r\n    <mat-select placeholder=\"select a configuration..\" i18n-placeholder formControlName=\"selectedConfigurationIndex\" name=\"selectedConfigurationIndex\">\r\n      <mat-option *ngFor=\"let accessor of configurations; let i = index\" [value]=\"i\">{{accessor.type}} {{accessor.shortLabel()}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-tree *ngIf=\"dataSource\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"file-explorer-tree\">\r\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding\r\n                   (click)=\"selected(node)\"\r\n                   [ngClass]=\"{ 'background-highlight': activeNode === node }\">\r\n      <button mat-icon-button disabled></button>\r\n      {{node.item}}\r\n    </mat-tree-node>\r\n    <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding\r\n                   (click)=\"selected(node)\"\r\n                   [ngClass]=\"{ 'background-highlight': activeNode === node }\">\r\n      <button mat-icon-button matTreeNodeToggle>\r\n        <mat-icon class=\"mat-icon-rtl-mirror\">\r\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n        </mat-icon>\r\n      </button>\r\n      <mat-icon *ngIf=\"node.maticon\">{{node.maticon}}</mat-icon>\r\n      <img *ngIf=\"node.icon\" class=\"mat-icon\" src=\"assets/{{node.icon}}\">\r\n      {{node.item}}\r\n      <mat-progress-bar *ngIf=\"node.isLoading\"\r\n                        mode=\"indeterminate\"\r\n                        class=\"tree-progress-bar\">\r\n      </mat-progress-bar>\r\n    </mat-tree-node>\r\n  </mat-tree>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {IFileDescription} from '../i-file-description';\r\nimport {BehaviorSubject, EMPTY, merge, Observable, of} from 'rxjs';\r\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\r\nimport {expand, last, map, } from 'rxjs/operators';\r\nimport {IFileAccessService} from '../i-file-access-service';\r\nimport {FileAccessServiceFactoryService} from '../file-access-service-factory.service';\r\nimport {isNullOrUndefined} from '../../../common/util';\r\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n/** Flat node with expandable and level information */\r\nclass DynamicFlatNode {\r\n\r\n  item: string;\r\n  maticon?: string;\r\n  icon?: string;\r\n\r\n  constructor(public node: IFileDescription, public level = 1, public expandable = false,\r\n              public isLoading = false) {\r\n    if (level === 0) {\r\n      const configLabel = node.configuration.fullLabel();\r\n      this.item = configLabel.label;\r\n      this.maticon = configLabel.maticon;\r\n      this.icon = configLabel.icon;\r\n    } else {\r\n      this.item = node.name;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Database for dynamic file accesss data. When expanding a node in the tree, the data source will need to fetch\r\n * the descendants data from the service.\r\n */\r\nclass FileData {\r\n\r\n  private rootLevelNodes: IFileDescription[];\r\n\r\n  constructor(root: IFileDescription, private accessService: IFileAccessService, private onlyDirectories: boolean) {\r\n    this.rootLevelNodes = [root];\r\n  }\r\n\r\n  /** Initial data from database */\r\n  initialData(): DynamicFlatNode[] {\r\n    return this.rootLevelNodes.map(dir => new DynamicFlatNode(dir, 0, true));\r\n  }\r\n\r\n  getChildren(node: IFileDescription): Observable<IFileDescription[] | undefined> {\r\n    if (node.type === 'file') {\r\n      return of(undefined);\r\n    } else {\r\n      const children = node.children;\r\n      if (isNullOrUndefined(children)) {\r\n        return this.accessService.load(node).pipe(\r\n            map((result: IFileDescription) => {\r\n                return result.children.filter(fd => !this.onlyDirectories || fd.type === 'dir');\r\n            })\r\n        );\r\n      } else {\r\n        return of(children.filter(fd => !this.onlyDirectories || fd.type === 'dir'));\r\n      }\r\n    }\r\n  }\r\n\r\n  isExpandable(node: IFileDescription): boolean {\r\n    return node.type === 'dir';\r\n  }\r\n}\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\nclass DynamicFileDataSource {\r\n\r\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\r\n\r\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\r\n  set data(value: DynamicFlatNode[]) {\r\n    this.treeControl.dataNodes = value;\r\n    this.dataChange.next(value);\r\n  }\r\n\r\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\r\n              private database: FileData) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\r\n    this.treeControl.expansionModel.changed.subscribe(change => {\r\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\r\n          (change as SelectionChange<DynamicFlatNode>).removed) {\r\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\r\n      }\r\n    });\r\n\r\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\r\n  }\r\n\r\n  /** Handle expand/collapse behaviors */\r\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\r\n    if (change.added) {\r\n      change.added.forEach(node => this.toggleNode(node, true));\r\n    }\r\n    if (change.removed) {\r\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the node, remove from display list\r\n   */\r\n  toggleNode(node: DynamicFlatNode, expandNode: boolean) {\r\n    const children = this.database.getChildren(node.node);\r\n    const index = this.data.indexOf(node);\r\n    if (index < 0) { // If cannot find the node, no op\r\n      return;\r\n    }\r\n\r\n    node.isLoading = true;\r\n    children.subscribe(childrenDescr => {\r\n      if (expandNode) {\r\n        const nodes = childrenDescr.map(filedescr =>\r\n            new DynamicFlatNode(filedescr, node.level + 1, this.database.isExpandable(filedescr)));\r\n        this.data.splice(index + 1, 0, ...nodes);\r\n      } else {\r\n        let count = 0;\r\n        for (let i = index + 1; i < this.data.length\r\n        && this.data[i].level > node.level; i++, count++) {}\r\n        this.data.splice(index + 1, count);\r\n      }\r\n\r\n      // notify the change\r\n      this.dataChange.next(this.data);\r\n      node.isLoading = false;\r\n    }, (error) => {\r\n      console.log('error loading children', error); // TODO\r\n      node.isLoading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open the tree up to the given node.\r\n   * @param node node to be visible\r\n   * @param callBack called when node is contained in the tree.\r\n   */\r\n  openNode(node: IFileDescription, callBack: (node: DynamicFlatNode) => void) {\r\n    const start: {data: DynamicFlatNode[], index: number, path: string, pathIndex: number}\r\n      = {data: this.data, index: 0, path: node.path, pathIndex: 0};\r\n    of(start).pipe(\r\n      expand(current => {\r\n        if (current.index < 0 || current.pathIndex < 0) {\r\n          return EMPTY;\r\n        } else {\r\n          return this.openSubdir(current);\r\n        }\r\n      }),\r\n      last()\r\n    ).subscribe(current => {\r\n      this.dataChange.next(current.data);\r\n      if (current.index >= 0) {\r\n        callBack(current.data[current.index]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openSubdir(current: {data: DynamicFlatNode[], index: number, path: string, pathIndex: number})\r\n    : Observable<{data: DynamicFlatNode[], index: number, path: string, pathIndex: number}> {\r\n    if (current.index < 0 || current.pathIndex < 0) {\r\n      return of(current);\r\n    }\r\n    const nodeToExpand = current.data[current.index];\r\n    const pathParts = (current.path) ? current.path.split('/') : [];\r\n    if (!nodeToExpand || current.pathIndex >= pathParts.length) {\r\n      return of({data: current.data, index: current.index, path: current.path, pathIndex: -1});\r\n    }\r\n    const dirNameToOpen = pathParts[current.pathIndex];\r\n    return this.database.getChildren(nodeToExpand.node).pipe(\r\n      map((childrenDescr: IFileDescription[]) => {\r\n        const nodes = childrenDescr.map(filedescr =>\r\n          new DynamicFlatNode(filedescr, nodeToExpand.level + 1, this.database.isExpandable(filedescr)));\r\n        const newData = current.data.slice();\r\n        newData.splice(current.index + 1, 0, ...nodes);\r\n        const indexInNewNodes = nodes.findIndex((node) => node.node.name === dirNameToOpen);\r\n        if (indexInNewNodes < 0) {\r\n          return {data: current.data, index: -1, path: current.path, pathIndex: current.pathIndex};\r\n        } else {\r\n          const newIndex = current.index + 1 + indexInNewNodes;\r\n          return {\r\n            data: newData,\r\n            index: newIndex,\r\n            path: current.path,\r\n            pathIndex: current.pathIndex + 1\r\n          };\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-file-explorer',\r\n  templateUrl: './file-explorer.component.html',\r\n  styleUrls: ['./file-explorer.component.scss']\r\n})\r\nexport class FileExplorerComponent implements OnInit {\r\n\r\n  /**\r\n   * The selectable configurations.\r\n   * If null, there will be no selection.\r\n   */\r\n  @Input() configurations?: IFileAccessConfiguration[];\r\n\r\n  /**\r\n   * Root file (a directory) to be shown in the explorer.\r\n   */\r\n  @Input() root: IFileDescription;\r\n\r\n  /**\r\n   * Selected file when starting the component.\r\n   */\r\n  @Input() file: IFileDescription;\r\n\r\n  /**\r\n   * Determine what sort of entries can be selected.\r\n   * 'file': only files.\r\n   * 'dir': only directories\r\n   * undefined: everything.\r\n   */\r\n  @Input() selectableFileType?: 'file'|'dir';\r\n\r\n  /**\r\n   * The selected file node.\r\n   */\r\n  @Output() selectedFile: EventEmitter<IFileDescription> = new EventEmitter<IFileDescription>();\r\n\r\n  form: FormGroup;\r\n  _currentRoot: IFileDescription;\r\n  treeControl: FlatTreeControl<DynamicFlatNode>;\r\n  dataSource: DynamicFileDataSource;\r\n\r\n  activeNode: DynamicFlatNode;\r\n\r\n  getLevel = (node: DynamicFlatNode) => node.level;\r\n\r\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\r\n\r\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\r\n\r\n  constructor(private formBuilder: FormBuilder, private fileAccessServiceFactoryService: FileAccessServiceFactoryService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentRoot = this.root.configuration.rootDescription();\r\n    this.initForm();\r\n    this.form.valueChanges.subscribe((val) => {\r\n      this.currentRoot = this.configurations[val.selectedConfigurationIndex].rootDescription();\r\n    });\r\n  }\r\n\r\n  initForm() {\r\n    if (!this.form) {\r\n      const index = (!this.root || !this.configurations) ?\r\n        0 :\r\n        this.configurations.findIndex(conf => conf.id === this.root.configuration.id);\r\n      this.form = this.formBuilder.group(\r\n        {\r\n          selectedConfigurationIndex: [index]\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  get currentRoot(): IFileDescription {\r\n    return this._currentRoot;\r\n  }\r\n\r\n  set currentRoot(newRoot: IFileDescription) {\r\n    if (newRoot) {\r\n      const accessService = this.fileAccessServiceFactoryService.getFileAccessService(newRoot.configuration.type);\r\n      const database = new FileData(newRoot, accessService, (this.selectableFileType === 'dir'));\r\n      this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\r\n      this.dataSource = new DynamicFileDataSource(this.treeControl, database);\r\n\r\n      this.dataSource.data = database.initialData();\r\n      if (this.file && !this._currentRoot) {\r\n        this.dataSource.openNode(this.file, (node) => { this.activeNode = node; });\r\n      } else {\r\n        this.dataSource.openNode(newRoot, (node) => {\r\n          this.activeNode = node;\r\n          this.selected(this.activeNode);\r\n        });\r\n      }\r\n      if (this.fileTypeMatches(newRoot)) {\r\n        this.selectedFile.emit(newRoot);\r\n      }\r\n    } else {\r\n      this.dataSource = null;\r\n    }\r\n    this._currentRoot = newRoot;\r\n  }\r\n\r\n  selected(node: DynamicFlatNode) {\r\n    if (node && this.fileTypeMatches(node.node)) {\r\n      this.selectedFile.emit(node.node);\r\n      this.activeNode = node;\r\n    } else {\r\n      this.selectedFile.emit(null);\r\n      this.activeNode = null;\r\n    }\r\n  }\r\n\r\n  private fileTypeMatches(file: IFileDescription): boolean {\r\n    if (isNullOrUndefined(this.selectableFileType)) {\r\n      return true;\r\n    } else {\r\n      return this.selectableFileType === file.type;\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\">\r\n  <mat-icon *ngIf=\"configuration.fullLabel().maticon\">{{configuration.fullLabel().maticon}}</mat-icon>\r\n  <img *ngIf=\"configuration.fullLabel().icon\" class=\"mat-icon\" src=\"assets/{{configuration.fullLabel().icon}}\">\r\n  <p>{{configuration.fullLabel().label}}/{{file.path}}</p>\r\n  <ng-container *ngIf=\"configurations\">\r\n    <button color=\"accent\" mat-icon-button (click)=\"openSaveAsExplorer()\"\r\n            matTooltip=\"Select another location...\" i18n-matTooltip>\r\n      <mat-icon>edit</mat-icon>\r\n    </button>\r\n  </ng-container>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\r\nimport {IFileDescription} from '../i-file-description';\r\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../file-explorer-dialog/file-explorer-dialog.component';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {SaveAsExplorerDialogComponent, SaveAsExplorerDialogData} from '../save-as-explorer-dialog/save-as-explorer-dialog.component';\r\n\r\n/**\r\n * A component showing a file.\r\n * Normally readonly, but if you set \"configurations\", there will be a button opening a save as dialog.\r\n */\r\n@Component({\r\n  selector: 'app-file-to-save',\r\n  templateUrl: './file-to-save.component.html',\r\n  styleUrls: ['./file-to-save.component.scss']\r\n})\r\nexport class FileToSaveComponent implements OnInit, OnChanges {\r\n\r\n  /**\r\n   * The configurations that can be used to save file.\r\n   * If set, a save as dialog can be opened.\r\n   */\r\n  @Input() configurations: IFileAccessConfiguration[];\r\n\r\n  /**\r\n   * The file to show.\r\n   */\r\n  @Input() file: IFileDescription;\r\n\r\n  /**\r\n   * The file selected in the save as dialog.\r\n   */\r\n  @Output() selectedFile = new EventEmitter<IFileDescription>();\r\n\r\n  configuration: IFileAccessConfiguration;\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.configuration = this.file.configuration;\r\n  }\r\n\r\n  openSaveAsExplorer() {\r\n    const dialogRef = this.dialog.open(SaveAsExplorerDialogComponent, {\r\n      data: {\r\n        configurations: this.configurations,\r\n        configuration: this.configuration,\r\n        file: this.file\r\n      } as SaveAsExplorerDialogData\r\n    });\r\n    dialogRef.afterClosed().subscribe((result: IFileDescription) => {\r\n      if (result) {\r\n        this.selectedFile.emit(result);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {IFile} from './i-file';\r\nimport {IFileDescription} from './i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\n\r\ninterface SerializedFormV1 {\r\n    version: '1';\r\n    description: string;\r\n    name: string;\r\n    size: number;\r\n    content: string;\r\n}\r\n\r\nexport class GenericFile implements IFile {\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GenericFile {\r\n        const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n        return new GenericFile(\r\n            serializationService.deserializeIFileDescription(v1Object.description),\r\n            v1Object.name,\r\n            v1Object.size,\r\n            v1Object.content);\r\n    }\r\n\r\n    constructor(public description: IFileDescription, public name: string, public size: number, public content: string) { }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            version: '1',\r\n            description: this.description.serialize(serializationService),\r\n            name: this.name,\r\n            content: this.content,\r\n            size: this.size\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    /**\r\n     * Return a copy that has some edited content.\r\n     * @param newContent the changed content\r\n     */\r\n    public copyWithNewContent(newContent: string): IFile {\r\n        return new GenericFile(this.description, this.name, newContent.length, newContent);\r\n    }\r\n\r\n    /**\r\n     * Create a copy that can be stored under a new location.\r\n     * @param saveAs new location to save file\r\n     */\r\n    copyForNewDescription(saveAs: IFileDescription): IFile {\r\n        return new GenericFile(saveAs, this.name, this.content.length, this.content);\r\n    }\r\n\r\n}\r\n","/**\r\n * Interface to read and save file like objects from a backend system.\r\n */\r\nimport {Observable} from 'rxjs';\r\nimport {IFile} from './i-file';\r\nimport {IFileAccessConfiguration} from './i-file-access-configuration';\r\nimport {IFileDescription} from './i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\n\r\n/**\r\n * Data needed to save a file.\r\n */\r\nexport interface ICommitData {\r\n    message: string;\r\n    override?: boolean; // if file to save exists and this is false, an error occures\r\n}\r\n\r\n// changed: if existing file was changed after the initial load\r\n// unchanged: if existing file was not changed after the initial load\r\n// exists_not: if file does not exist\r\nexport enum FileStatus {\r\n    CHANGED = 'CHANGED',\r\n    UNCHANGED = 'UNCHANGED',\r\n    'EXISTS_NOT' = 'EXISTS_NOT'\r\n}\r\n\r\nexport interface IFileStats {\r\n    status: FileStatus;\r\n}\r\n\r\nexport interface IFileAccessService {\r\n\r\n    /**\r\n     * Load a file from the backend system.\r\n     * @param description backend dependent description of the file to load.\r\n     * @return Observable of the loaded file or a directory description.\r\n     */\r\n    load(description: IFileDescription): Observable<IFile|IFileDescription>;\r\n\r\n    /**\r\n     * Save a file in the backend.\r\n     * @param file file loaded from the same backend.\r\n     * @param commitData additional data needed to store it in the backend.\r\n     * @return saved file if successful.\r\n     */\r\n    save(file: IFile, commitData?: ICommitData): Observable<IFile>;\r\n\r\n    /**\r\n     * Get some infos about a file.\r\n     * @param file file (existing or not)\r\n     */\r\n    stats(file: IFile): Observable<IFileStats>;\r\n\r\n    /**\r\n     * Serialize a configuration to store it.\r\n     * @param configuration configuration to be serialized.\r\n     * @param serializationService service to be used.\r\n     * @return serialized form that can be deserialized.\r\n     */\r\n    serialize(serializationService: SerializationService, configuration: IFileAccessConfiguration): string;\r\n\r\n    /**\r\n     * Create a configuration from a stored string (generated by serialize()).\r\n     * @param serializationService service to be used.\r\n     * @param serialzedConfiguration stored configuration string\r\n     * @return deserialized version.\r\n     */\r\n    deserialize(serializationService: SerializationService, serialzedConfiguration: string): IFileAccessConfiguration;\r\n}\r\n","<h1 mat-dialog-title i18n>Select a file to save</h1>\r\n<div mat-dialog-content id=\"content\">\r\n  <app-save-as-explorer\r\n          [configurations]=\"configurations\"\r\n          [file]=\"file\"\r\n          (selectedFile)=\"selectedFile($event)\">\r\n  </app-save-as-explorer>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"cancel()\" i18n>Cancel</button>\r\n  <button mat-button [disabled]=\"!isFileSelected()\" [mat-dialog-close]=\"result()\" cdkFocusInitial i18n>Ok</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\r\nimport {IFileDescription} from '../i-file-description';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\nexport interface SaveAsExplorerDialogData {\r\n  configurations?: IFileAccessConfiguration[];\r\n  configuration?: IFileAccessConfiguration;\r\n  file?: IFileDescription;\r\n}\r\n\r\n/**\r\n * A Dialog to choose a file to save.\r\n */\r\n@Component({\r\n  selector: 'app-save-as-explorer-dialog',\r\n  templateUrl: './save-as-explorer-dialog.component.html',\r\n  styleUrls: ['./save-as-explorer-dialog.component.scss']\r\n})\r\nexport class SaveAsExplorerDialogComponent implements OnInit {\r\n\r\n  configurations: IFileAccessConfiguration[];\r\n  file: IFileDescription;\r\n  _result: IFileDescription;\r\n\r\n  constructor(private dialogRef: MatDialogRef<SaveAsExplorerDialogData>,\r\n              @Inject(MAT_DIALOG_DATA) data: SaveAsExplorerDialogData) {\r\n    this.configurations = data.configurations;\r\n    this.file = data.file;\r\n    this._result = this.file;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectedFile(f: IFileDescription) {\r\n    this._result = f;\r\n  }\r\n\r\n  isFileSelected(): boolean {\r\n    return !!this._result;\r\n  }\r\n\r\n  result(): IFileDescription {\r\n    return this._result;\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close(null);\r\n  }\r\n}\r\n","<form [formGroup]=\"form\">\r\n  <app-file-explorer\r\n          [configurations]=\"configurations\"\r\n          [root]=\"configuration.rootDescription()\"\r\n          [file]=\"file\"\r\n          (selectedFile)=\"setSelectedFileFromExplorer($event)\">\r\n  </app-file-explorer>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n    <mat-form-field fxFlex=\"90%\">\r\n      <mat-label i18n>name</mat-label>\r\n      <input type=\"text\" placeholder=\"name\" i18n-placeholder matInput formControlName=\"name\" name=\"name\"/>\r\n    </mat-form-field>\r\n  </div>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {IFileDescription} from '../i-file-description';\r\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-save-as-explorer',\r\n  templateUrl: './save-as-explorer.component.html',\r\n  styleUrls: ['./save-as-explorer.component.css']\r\n})\r\nexport class SaveAsExplorerComponent implements OnInit {\r\n\r\n  @Input() configurations: IFileAccessConfiguration[];\r\n  @Input() file: IFileDescription;\r\n  private _selectedFileInExplorer: IFileDescription;\r\n  @Output() selectedFile = new EventEmitter<IFileDescription>();\r\n\r\n  configuration: IFileAccessConfiguration;\r\n  form: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.configuration = this.file.configuration;\r\n    this._selectedFileInExplorer = this.file;\r\n    this.form.valueChanges.subscribe(val => {\r\n      if (val.name) {\r\n        this.selectedFile.emit(this._selectedFileInExplorer.createFileDescription(val.name));\r\n      }\r\n    });\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        name: [this.file.name]\r\n      });\r\n    }\r\n  }\r\n\r\n  setSelectedFileFromExplorer(newFile: IFileDescription) {\r\n    this._selectedFileInExplorer = newFile;\r\n    if (newFile && newFile.type === 'file') {\r\n      this.form.patchValue({\r\n        name: newFile.name\r\n      });\r\n    } else {\r\n      this.selectedFile.emit(this._selectedFileInExplorer.createFileDescription(this.form.value.name));\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {IFile} from '../common/i-file';\r\n\r\n/**\r\n * Service to read a file.\r\n * (File means an uploaded Blob file object)\r\n * It gives an observable based API instead of just using basic FileReader.\r\n */\r\n\r\ninterface FileResult {\r\n  name: string;\r\n  size: number;\r\n  content: string;\r\n}\r\n\r\n@Injectable()\r\nexport class AsynchronousFileReaderService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Asynchronously read an uploaded file.\r\n   * @param file the file to (may be null, then the Observable will return result with name and content null)\r\n   * @return Observable of file name and content.\r\n   */\r\n  public readFile(file: File): Observable<FileResult> {\r\n    const subject = new ReplaySubject<FileResult>();\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const fileContent = reader.result as string;\r\n        subject.next({name: file.name, size: file.size, content: fileContent});\r\n        subject.complete();\r\n      };\r\n      reader.onerror = () => {\r\n        subject.error(reader.error);\r\n      };\r\n      reader.onabort = () => {\r\n        subject.error('read aborted');\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      subject.next({name: null, size: 0, content: null});\r\n      subject.complete();\r\n    }\r\n    return subject;\r\n  }\r\n\r\n}\r\n","import {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {DownloadUploadFileDescription} from './download-upload-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.DOWNLOAD_UPLOAD;\r\n    version: '1';\r\n}\r\n\r\nexport class DownloadUploadConfiguration implements IFileAccessConfiguration {\r\n\r\n    static _instance = new DownloadUploadConfiguration();\r\n\r\n    readonly type = FileAccessorType.DOWNLOAD_UPLOAD;\r\n\r\n    readonly id = '0';\r\n\r\n    public static singleInstance() {\r\n        return this._instance;\r\n    }\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): DownloadUploadConfiguration {\r\n        return this._instance;\r\n    }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            accessorType: FileAccessorType.DOWNLOAD_UPLOAD,\r\n            version: '1'\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    public equals(another: IFileAccessConfiguration): boolean {\r\n        return another && another.type === FileAccessorType.DOWNLOAD_UPLOAD;\r\n    }\r\n\r\n    public shortLabel(): string {\r\n        return '';\r\n    }\r\n\r\n    public fullLabel(): { maticon?: string; icon?: string; label: string } {\r\n        return {\r\n            maticon: 'save',\r\n            label: ''\r\n        };\r\n    }\r\n\r\n    public rootDescription(): IFileDescription {\r\n        return new DownloadUploadFileDescription('dir', this, null);\r\n    }\r\n\r\n    /**\r\n     * Return a directory with the given path\r\n     */\r\n    public directoryDescription(dirPath: string): IFileDescription {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Check, wether a publish is possible.\r\n     */\r\n    public canPublish(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public copy() {\r\n        return this;\r\n    }\r\n}\r\n","import {SerializationService} from '../../model/serialization.service';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\n\r\ninterface SerializedFormV1 {\r\n    type: FileAccessorType.DOWNLOAD_UPLOAD;\r\n    version: '1';\r\n    name: string;\r\n}\r\n\r\nexport class DownloadUploadFileDescription implements IFileDescription {\r\n\r\n    name: string;\r\n    children = [];\r\n\r\n    static fromBrowserFile(configuration: IFileAccessConfiguration, file: File) {\r\n        return new DownloadUploadFileDescription('file', configuration, file);\r\n    }\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): DownloadUploadFileDescription {\r\n        return DownloadUploadFileDescription.fromBrowserFile(serializationService.deserializeIFileConfiguration(serializedForm), null);\r\n    }\r\n\r\n    constructor(public type: 'file'|'dir',\r\n                public readonly configuration: IFileAccessConfiguration,\r\n                private _file: File, newName?: string) {\r\n        if (!newName && this._file) {\r\n            this.name = this._file.name;\r\n        } else {\r\n            this.name = newName;\r\n        }\r\n    }\r\n\r\n    get browserFile(): File {\r\n        return this._file;\r\n    }\r\n\r\n    get path(): string {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * Download targets are never equal.\r\n     */\r\n    public equals(another: IFileDescription): boolean {\r\n        return false;\r\n    }\r\n\r\n    public isDirectory(): boolean {\r\n        return this.type === 'dir';\r\n    }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        return JSON.stringify({\r\n            type: FileAccessorType.DOWNLOAD_UPLOAD,\r\n            version: '1',\r\n            name: this.name\r\n        } as SerializedFormV1);\r\n    }\r\n\r\n    public dirname(): IFileDescription|null {\r\n        return null;\r\n    }\r\n\r\n    public createFileDescription(newName: string): IFileDescription {\r\n        return new DownloadUploadFileDescription('file', this.configuration, this._file, newName);\r\n    }\r\n}\r\n","import {Observable, of} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {FileStatus, IFileAccessService, IFileStats} from '../common/i-file-access-service';\r\nimport {IFile} from '../common/i-file';\r\nimport {DownloadUploadFileDescription} from './download-upload-file-description';\r\nimport {AsynchronousFileReaderService} from './asynchronous-file-reader.service';\r\nimport {DownloaderService} from './downloader.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {DownloadUploadConfiguration} from './download-upload-configuration';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {GenericFile} from '../common/generic-file';\r\nimport {IFileDescription} from '../common/i-file-description';\r\n\r\n@Injectable()\r\nexport class DownloadUploadService implements IFileAccessService {\r\n\r\n    constructor(\r\n        private fileReaderService: AsynchronousFileReaderService,\r\n        private downloaderService: DownloaderService) {}\r\n\r\n    load(description: DownloadUploadFileDescription): Observable<IFile|IFileDescription> {\r\n        if (description.isDirectory()) {\r\n            return of(description);\r\n        }\r\n        const file = description.browserFile;\r\n        return this.fileReaderService.readFile(file).pipe(\r\n            map(result => {\r\n                return new GenericFile(description, result.name, result.size, result.content);\r\n            })\r\n        );\r\n    }\r\n\r\n    save(file: IFile): Observable<IFile> {\r\n        this.downloaderService.downloadXliffFile(file.description.name, file.content);\r\n        return of(file);\r\n    }\r\n\r\n    stats(file: IFile): Observable<IFileStats> {\r\n        return of({status: FileStatus.EXISTS_NOT});\r\n    }\r\n\r\n    serialize(serializationService: SerializationService, configuration: IFileAccessConfiguration): string {\r\n        return 'DOWNLOAD_UPLOAD';\r\n    }\r\n\r\n    deserialize(serializationService: SerializationService, serialzedConfiguration: string): IFileAccessConfiguration {\r\n        return DownloadUploadConfiguration.singleInstance();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {saveAs} from 'file-saver';\r\n\r\n@Injectable()\r\nexport class DownloaderService {\r\n\r\n  constructor() { }\r\n\r\n  downloadFile(filename: string, content: string, filetype: string) {\r\n    const blob = new Blob([content], {type: filetype});\r\n    saveAs(blob, filename);\r\n  }\r\n\r\n  downloadXliffFile(filename: string, content: string) {\r\n    this.downloadFile(filename, content, 'application/xml');\r\n  }\r\n}\r\n","<form id=\"fileUploadForm\" fxLayout=\"column\" [formGroup]=\"form\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n        <p fxFlex=\"50%\" i18n>Select the file you want to translate.<br>\r\n            The file can be of format XLIFF 1.2, XLIFF 2.0 or XMB.<br>\r\n            The file will be stored in your browser local storage until you export the translated version.</p>\r\n        <div fxLayout=\"column\" fxFlexAlign=\"end\" fxFlex=\"40%\">\r\n            <input type=\"file\" id=\"fileupload\" (change)=\"fileSelectionChange(input)\" formControlName=\"selectedFiles\"\r\n                   name=\"selectedFiles\" class=\"inputfile\" #input/>\r\n            <label for=\"fileupload\">\r\n                <mat-icon>open_in_browser</mat-icon>&nbsp;<span i18n>Upload a translation file (xlf, xtb)</span></label>\r\n            <div><span i18n>selected: </span>{{selectedFilesFormatted()}}</div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"isMasterXmbFileNeeded()\" fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n        <p fxFlex=\"50%\" i18n>You selected an xtb file.<br>\r\n            This file type only contains one language, the target language.<br>\r\n            To show you the original source texts, you should also select the master xmb file.</p>\r\n        <div fxFlex=\"50%\" fxLayout=\"column\">\r\n            <input type=\"file\" id=\"masterfileupload\" (change)=\"masterXmlFileSelectionChange(masterinput)\"\r\n                   formControlName=\"selectedMasterXmbFiles\" name=\"selectedMasterXmbFiles\" class=\"inputfile\"\r\n                   #masterinput/>\r\n            <label for=\"masterfileupload\">\r\n                <mat-icon>open_in_browser</mat-icon>&nbsp;<span i18n>Upload master xmb file</span></label>\r\n            <div><span i18n>selected: </span>{{selectedMasterFilesFormatted()}}</div>\r\n        </div>\r\n    </div>\r\n</form>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {TranslationProject} from '../../../model/translation-project';\r\nimport {FILETYPE_XTB} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {IFileDescription} from '../../common/i-file-description';\r\nimport {DownloadUploadFileDescription} from '../download-upload-file-description';\r\nimport {DownloadUploadConfiguration} from '../download-upload-configuration';\r\n\r\n@Component({\r\n  selector: 'app-translation-file-upload',\r\n  templateUrl: './translation-file-upload.component.html',\r\n  styleUrls: ['./translation-file-upload.component.scss']\r\n})\r\nexport class TranslationFileUploadComponent implements OnInit {\r\n\r\n  @Input() createdProject?: TranslationProject;\r\n  @Input() configuration: DownloadUploadConfiguration;\r\n  @Output() fileSelected: EventEmitter<IFileDescription> = new EventEmitter();\r\n  @Output() masterXmlFileSelected: EventEmitter<IFileDescription> = new EventEmitter();\r\n\r\n  form: FormGroup;\r\n  private selectedFiles: FileList;\r\n  private selectedMasterXmbFiles: FileList;\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        selectedFiles: [''],\r\n        selectedMasterXmbFiles: ['']\r\n      });\r\n    }\r\n  }\r\n\r\n  fileSelectionChange(input: HTMLInputElement) {\r\n    if (input) {\r\n      this.selectedFiles = input.files;\r\n    }\r\n    if (input.files && input.files.length > 0) {\r\n      const file: File = input.files.item(0);\r\n      this.fileSelected.emit(\r\n        DownloadUploadFileDescription.fromBrowserFile(DownloadUploadConfiguration.singleInstance(), file));\r\n    }\r\n  }\r\n\r\n  masterXmlFileSelectionChange(input: HTMLInputElement) {\r\n    if (input) {\r\n      this.selectedMasterXmbFiles = input.files;\r\n    }\r\n    if (input.files && input.files.length > 0) {\r\n      const file: File = input.files.item(0);\r\n      this.masterXmlFileSelected.emit(\r\n        DownloadUploadFileDescription.fromBrowserFile(DownloadUploadConfiguration.singleInstance(), file));\r\n    }\r\n  }\r\n\r\n  selectedFilesFormatted(): string {\r\n    return this.fileListFormatted(this.selectedFiles);\r\n  }\r\n\r\n  selectedMasterFilesFormatted(): string {\r\n    return this.fileListFormatted(this.selectedMasterXmbFiles);\r\n  }\r\n\r\n  private fileListFormatted(fileList: FileList): string {\r\n    if (fileList) {\r\n      let result = '';\r\n      for (let i = 0; i < fileList.length; i++) {\r\n        if (i > 0) {\r\n          result = result + ', ';\r\n        }\r\n        result = result + fileList.item(i).name;\r\n      }\r\n      return result;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If the first file was a xmb file, master is needed.\r\n   * Enables the input for a second file, the master xmb.\r\n   */\r\n  isMasterXmbFileNeeded(): boolean {\r\n    return this.isFileSelected() &&\r\n        this.createdProject &&\r\n        this.createdProject.translationFile &&\r\n        this.createdProject.translationFile.fileType() === FILETYPE_XTB;\r\n  }\r\n\r\n  isFileSelected(): boolean {\r\n    return this.selectedFiles && this.selectedFiles.length > 0 && !!this.createdProject;\r\n  }\r\n\r\n}\r\n","<h3 i18n>Github access settings</h3>\r\n<p i18n>\r\n  By configuring an access to Github you can directly import translation files to TinyTranslator and store the translation in your Github repositories.\r\n</p>\r\n<div class=\"info\">\r\n  <p i18n>To use Github you need a <a href=\"https://github.blog/2013-05-16-personal-api-tokens/\" target=\"_blank\">Github Personal API token</a>.</p>\r\n  <p>The link above describes its purpose and how to create it.</p>\r\n</div>\r\n<div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n  <mat-expansion-panel *ngFor=\"let configuration of githubConfigurations | async; let i = index\" [expanded]=\"isExpanded(configuration)\">\r\n    <mat-expansion-panel-header>{{configuration.fullLabel().label}}</mat-expansion-panel-header>\r\n    <app-github-config-editor\r\n            [githubConfiguration]=\"configuration\"\r\n            (storeConfiguration)=\"storeConfiguration($event)\"\r\n            (deleteConfiguration)=\"deleteConfiguration($event)\">\r\n    </app-github-config-editor>\r\n  </mat-expansion-panel>\r\n  <button mat-fab (click)=\"addConfiguration()\" [disabled]=\"addedConfiguration.getValue()\" matTooltip=\"Add another configuration\" i18n-matTooltip><mat-icon>add</mat-icon></button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FileAccessorType} from '../../common/file-accessor-type';\r\nimport {GithubConfiguration} from '../github-configuration';\r\nimport {BackendServiceAPI} from '../../../model/backend-service-api';\r\nimport {map} from 'rxjs/operators';\r\nimport {BehaviorSubject, combineLatest, Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-configure-github-page',\r\n  templateUrl: './configure-github-page.component.html',\r\n  styleUrls: ['./configure-github-page.component.css']\r\n})\r\nexport class ConfigureGithubPageComponent implements OnInit {\r\n\r\n  githubConfigurations: Observable<GithubConfiguration[]>;\r\n  addedConfiguration: BehaviorSubject<GithubConfiguration>;\r\n\r\n  constructor(\r\n      private backendServiceAPI: BackendServiceAPI) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.addedConfiguration = new BehaviorSubject<GithubConfiguration>(null);\r\n    this.githubConfigurations = combineLatest(\r\n      this.backendServiceAPI.fileAccessConfigurations().pipe(\r\n        map(configs => configs\r\n          .filter(config => config.type === FileAccessorType.GITHUB)\r\n          .map(config => config  as GithubConfiguration))\r\n      ), this.addedConfiguration\r\n    ).pipe(\r\n        map(values => {\r\n          const configs = values[0];\r\n          const added = values[1];\r\n          return (added === null) ? configs : configs.concat([added]);\r\n        })\r\n    );\r\n  }\r\n\r\n  addConfiguration() {\r\n    this.addedConfiguration.next(new GithubConfiguration(null, '', '', null, null, null));\r\n  }\r\n\r\n  storeConfiguration(configuration: GithubConfiguration) {\r\n    if (!configuration.id) {\r\n      this.addedConfiguration.next(null);\r\n    }\r\n    this.backendServiceAPI.storeFileAccessConfiguration(configuration);\r\n  }\r\n\r\n  deleteConfiguration(configuration: GithubConfiguration) {\r\n    if (!configuration.id) {\r\n      this.addedConfiguration.next(null);\r\n    } else {\r\n      this.backendServiceAPI.deleteFileAccessConfiguration(configuration);\r\n    }\r\n  }\r\n\r\n  isExpanded(configuration: GithubConfiguration): boolean {\r\n    return configuration.id === null;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {FileStatus, ICommitData, IFileAccessService, IFileStats} from '../common/i-file-access-service';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {Observable, of, throwError} from 'rxjs';\r\nimport {GithubConfiguration} from './github-configuration';\r\nimport {catchError, first, map, switchMap} from 'rxjs/operators';\r\nimport {GithubApiService, GithubBranch, GithubDirectory, GithubFileContents} from './github-api.service';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFile} from '../common/i-file';\r\nimport {GithubFileDescription} from './github-file-description';\r\nimport {GithubFile} from './github-file';\r\n\r\nfunction pathjoin(path: string, subdir: string) {\r\n  if (subdir && subdir.startsWith('/')) {\r\n    subdir = subdir.substr(1);\r\n  }\r\n  if (path && path.endsWith('/')) {\r\n    return path + subdir;\r\n  }\r\n  return (path) ? path + '/' + subdir : subdir;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GithubAccessorService implements IFileAccessService {\r\n\r\n  constructor(private githubApiService: GithubApiService) { }\r\n\r\n  load(description: IFileDescription): Observable<GithubFile|IFileDescription> {\r\n    const configuration: GithubConfiguration = description.configuration as GithubConfiguration;\r\n    const branch: GithubBranch = {\r\n      repo: {\r\n        owner: configuration.owner,\r\n        name: configuration.repo\r\n      },\r\n      name: configuration.branch\r\n    };\r\n    const apiToken = configuration.apiToken;\r\n    const path = pathjoin(configuration.path, description.path);\r\n    return this.githubApiService.content(branch, path, apiToken).pipe(\r\n        first(),\r\n        map((content: GithubFileContents|GithubDirectory) => {\r\n          if (content.type === 'dir') {\r\n            const children = content.entries.map((entry: GithubFileContents|GithubDirectory) => {\r\n              if (entry.type === 'dir') {\r\n                return new GithubFileDescription('dir', configuration, pathjoin(description.path, entry.name), entry.name);\r\n              } else {\r\n                return new GithubFileDescription('file', configuration, pathjoin(description.path, entry.name), entry.name);\r\n              }\r\n            });\r\n            return new GithubFileDescription('dir', configuration, description.path, description.name, children);\r\n          } else {\r\n            const descr = new GithubFileDescription('file', configuration, description.path, description.name);\r\n            return new GithubFile(descr, content.name, content.size, content.content, content.sha);\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  save(file: GithubFile, commitData: ICommitData): Observable<GithubFile> {\r\n    const configuration: GithubConfiguration = file.description.configuration as GithubConfiguration;\r\n    const branch: GithubBranch = {\r\n      name: configuration.branch,\r\n      repo: {\r\n        name: configuration.repo,\r\n        owner: configuration.owner\r\n      },\r\n    };\r\n    const content: GithubFileContents = {\r\n      type: 'file',\r\n      name: file.description.name,\r\n      branch: branch,\r\n      path: pathjoin(configuration.path, file.description.path),\r\n      size: file.size,\r\n      content: file.content,\r\n      sha: file.sha\r\n    };\r\n    const apiKey = configuration.apiToken;\r\n    if (!commitData || !commitData.message) {\r\n      return throwError('no commit message');\r\n    }\r\n    const message = commitData.message;\r\n    return this.stats(file).pipe(\r\n      map((stats: IFileStats) => {\r\n        console.log('stats', stats, commitData);\r\n        if (stats.status !== FileStatus.EXISTS_NOT) {\r\n          if (commitData.override) {\r\n            console.log('sha', (stats as any).sha);\r\n            return (stats as any).sha;\r\n          } else {\r\n            throw Error('file exists');\r\n          }\r\n        } else {\r\n          return null;\r\n        }\r\n      }),\r\n      switchMap((sha: string) => {\r\n        console.log('sha', sha);\r\n        content.sha = sha;\r\n        return this.githubApiService.updateContent(branch, content, message, apiKey).pipe(\r\n          map((newFileContent: GithubFileContents) => {\r\n            return new GithubFile(\r\n              file.description,\r\n              newFileContent.name,\r\n              newFileContent.size,\r\n              newFileContent.content,\r\n              newFileContent.sha);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  stats(file: IFile): Observable<IFileStats> {\r\n    const configuration: GithubConfiguration = file.description.configuration as GithubConfiguration;\r\n    const branch: GithubBranch = {\r\n      name: configuration.branch,\r\n      repo: {\r\n        name: configuration.repo,\r\n        owner: configuration.owner\r\n      },\r\n    };\r\n    return this.githubApiService.content(branch, pathjoin(configuration.path, file.description.path), configuration.apiToken).pipe(\r\n      map((content: GithubFileContents|GithubDirectory) => {\r\n        if (content.sha === (file as GithubFile).sha) {\r\n          return {status: FileStatus.UNCHANGED, sha: content.sha};\r\n        } else {\r\n          return {status: FileStatus.CHANGED, sha: content.sha};\r\n        }\r\n      }),\r\n      catchError(() => {\r\n        return of({status: FileStatus.EXISTS_NOT});\r\n      })\r\n    );\r\n  }\r\n\r\n  serialize(serializationService: SerializationService, configuration: GithubConfiguration): string {\r\n    return configuration.serialize(serializationService);\r\n  }\r\n\r\n  deserialize(serializationService: SerializationService, serializedConfiguration: string): GithubConfiguration {\r\n    return GithubConfiguration.deserialize(serializationService, serializedConfiguration);\r\n  }\r\n\r\n}\r\n","/**\r\n * A service to access the github api v3.\r\n * It can read and write repositories and directories and files in the repositories.\r\n * Access is authenticated via an OAuth access token.\r\n */\r\nimport {Inject, Injectable} from '@angular/core';\r\nimport {APP_CONFIG, AppConfig} from '../../app.config';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {isArray, isNullOrUndefined} from '../../common/util';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Base64} from 'js-base64';\r\nimport toBase64 = Base64.toBase64;\r\nimport fromBase64 = Base64.fromBase64;\r\n\r\n/**\r\n * Representation of a repository.\r\n */\r\nexport interface GithubRepo {\r\n  owner: string;\r\n  name: string;\r\n}\r\n\r\n/**\r\n * Representation of a branch in a repository.\r\n */\r\nexport interface GithubBranch {\r\n  repo: GithubRepo; // the repo containing the branch\r\n  name: string; // name of branch\r\n}\r\n\r\n/**\r\n * A file.\r\n */\r\nexport interface GithubFileContents {\r\n  type: 'file';\r\n  branch: GithubBranch;\r\n  path: string; // path including name\r\n  name: string; // only name\r\n  sha: string; // SHA1 of file (needed for update operations)\r\n  size: number;\r\n  content?: string; // decoded content, as part of a directory response this is not filled\r\n}\r\n\r\nexport interface GithubDirectory {\r\n  type: 'dir';\r\n  branch: GithubBranch;\r\n  path: string; // path including name\r\n  name: string; // only name\r\n  sha: string; // SHA1 of file (needed for update operations)\r\n  entries?: (GithubFileContents|GithubDirectory)[]; // absent if directory is not read until now\r\n}\r\n\r\n// subset of the data returned from the GitHub API v3\r\n// Contains only data that is used here.\r\ninterface RepoFromAPI {\r\n  name: string;\r\n  owner: {\r\n    login: string;\r\n  };\r\n}\r\n\r\n// subset of the data returned from the GitHub API v3\r\n// Contains only data that is used here.\r\ninterface BranchFromAPI {\r\n  name: string;\r\n}\r\n\r\ninterface FileContentsFromAPI {\r\n  type: 'file';\r\n  name: string;\r\n  path: string;\r\n  size: number;\r\n  encoding?: 'base64'; // TODO can there be anything else?\r\n  content?: string;\r\n  sha: string;\r\n}\r\n\r\ninterface DirectoryEntryContentsFromAPI {\r\n  type: 'dir';\r\n  name: string;\r\n  path: string;\r\n  size: number; // always 0 I guess\r\n  sha: string;\r\n}\r\n\r\ninterface SymlinkContentsFromAPI {\r\n  type: 'symlink';\r\n  name: string;\r\n  path: string;\r\n  size: number;\r\n  target: string;\r\n  sha: string;\r\n}\r\n\r\ninterface SubmoduleContentsFromAPI {\r\n  type: 'submodule';\r\n  name: string;\r\n  path: string;\r\n  size: number;\r\n  sha: string;\r\n}\r\n\r\ntype ContentsFromAPI = FileContentsFromAPI | DirectoryEntryContentsFromAPI | SymlinkContentsFromAPI | SubmoduleContentsFromAPI;\r\n\r\n/**\r\n * input type of content update call.\r\n */\r\ninterface ContentsUpdateInputAPI {\r\n  message: string; // Required. The commit message.\r\n  content: string; // Required. The new file content, using Base64 encoding.\r\n  sha: string; // Required. The blob SHA of the file being replaced.\r\n  branch?: string; // The branch name. Default: the repository’s default branch (usually master)\r\n  // committer and author not used here\r\n}\r\n\r\n/**\r\n * return type of content update call.\r\n */\r\ninterface ContentsUpdateFromAPI {\r\n  content: {\r\n    name: string;\r\n    path: string;\r\n    sha: string;\r\n    size: number;\r\n  };\r\n}\r\n\r\n// subset of the data returned from the GitHub API v3\r\n// Contains only data that is used here.\r\n// if requested path is a directory, the answer is an array of the directory content, otherwise it is just the object (normally a file)\r\ntype FileOrDirectoryContentsFromAPI = ContentsFromAPI | [ContentsFromAPI];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GithubApiService {\r\n\r\n  private readonly _rootUrl: string;\r\n\r\n  private _apiKey: string;\r\n\r\n  // a setting for tests!!\r\n  // if set to true, some functions (TODO which functions?) will FAIL BY DESIGN\r\n  // Used to allow testing of failures.\r\n  private failByDesign: boolean;\r\n\r\n  constructor(@Inject(APP_CONFIG) app_config: AppConfig, private httpClient: HttpClient) {\r\n    this._rootUrl = app_config.GITHUB_API_ROOT_URL;\r\n    // API key is secret, normally it is not configured and will be null\r\n    // it can be set interactively in the app\r\n    // but in the karma tests it will be set. It is stored than in environment.secret.ts (not in Git)\r\n    this.setApiKey(app_config.GITHUB_API_KEY); // must be set explicitly via setApiKey()\r\n    this.failByDesign = app_config.GITHUB_PROVOKE_FAILURES;\r\n  }\r\n\r\n  /**\r\n   * Headers used for every request.\r\n   */\r\n  private headers(apiKey?: string): HttpHeaders {\r\n    const key = (apiKey) ? apiKey : this.apiKey();\r\n    return new HttpHeaders()\r\n        .append('Accept', 'application/vnd.github.v3+json')\r\n        .append('Authorization', 'token ' + key);\r\n  }\r\n\r\n  /**\r\n   * Send GET request to API.\r\n   * @param relativeUrl URL relative to API root.\r\n   * @param apiKey OAuth-Token\r\n   * @param parameters additional HTTP Parameters.\r\n   * @return GET result of type T\r\n   */\r\n  private get<T>(relativeUrl: string, apiKey: string, parameters?: HttpParams): Observable<T> {\r\n    return this.httpClient.get(this.fullUrl(relativeUrl), {headers: this.headers(apiKey), params: parameters}).pipe(\r\n      map(response => response as T)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Send PUT request to API.\r\n   * Put an Object of type T, return a result of type U.\r\n   * @param relativeUrl URL relative to API root.\r\n   * @param apiKey OAuth-Token\r\n   * @param body request body to send, will be send as a JSON object.\r\n   * @param parameters additional HTTP Parameters.\r\n   * @return PUT result of type U\r\n   */\r\n  private put<T, U>(relativeUrl: string, apiKey: string, body: T, parameters?: HttpParams): Observable<U> {\r\n    return this.httpClient.put(this.fullUrl(relativeUrl), body, {headers: this.headers(apiKey), params: parameters}).pipe(\r\n        map(response => response as U)\r\n    );\r\n  }\r\n\r\n  private fullUrl(relativeUrl: string): string {\r\n    return this._rootUrl + relativeUrl;\r\n  }\r\n\r\n  public apiKey(): string {\r\n    return this._apiKey;\r\n  }\r\n\r\n  public setApiKey(key: string) {\r\n    this._apiKey = key;\r\n  }\r\n\r\n  /**\r\n   * Get a list of repos of the authenticated user.\r\n   * @param apiKey OAuth token of user.\r\n   */\r\n  public repos(apiKey?: string): Observable<GithubRepo[]> {\r\n    return this.get<RepoFromAPI[]>('user/repos', apiKey).pipe(\r\n      map(response => response.map((repo: RepoFromAPI) => {\r\n        return {\r\n          name: repo.name,\r\n          owner: repo.owner.login\r\n        };\r\n      }))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a list of branches of the authenticated user and selected repo.\r\n   * @param repo the repository to be accessed\r\n   * @param apiKey OAuth token of user.\r\n   */\r\n  public branches(repo: GithubRepo, apiKey?: string): Observable<GithubBranch[]> {\r\n    return this.get<BranchFromAPI[]>(`repos/${repo.owner}/${repo.name}/branches`, apiKey).pipe(\r\n        map(response => response.map((branch: BranchFromAPI) => {\r\n          return {\r\n            name: branch.name,\r\n            repo: repo\r\n          };\r\n        }))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get content of a file or directory.\r\n   * @param branch branch\r\n   * @param path path\r\n   * @param apiKey OAuth token of user.\r\n   */\r\n  public content(branch: GithubBranch, path: string, apiKey?: string): Observable<GithubFileContents|GithubDirectory> {\r\n    const repo = branch.repo;\r\n    const url = `repos/${repo.owner}/${repo.name}/contents/${path}`;\r\n    return this.get<FileOrDirectoryContentsFromAPI>(\r\n        url,\r\n        apiKey,\r\n        new HttpParams().append('ref', branch.name)\r\n    ).pipe(\r\n        map((response: FileOrDirectoryContentsFromAPI) => {\r\n          if (isArray(response)) {\r\n            // it is a directory\r\n            return this.toDirectory(branch, path, response as ContentsFromAPI[]);\r\n          } else {\r\n            const singleResponse: ContentsFromAPI = response as ContentsFromAPI;\r\n            switch (singleResponse.type) {\r\n              case 'file':\r\n                return this.toFileContents(branch, response as FileContentsFromAPI);\r\n              case 'symlink':\r\n              default:\r\n                // TODO\r\n            }\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update (or create) a file\r\n   * @param branch the branch\r\n   * @param newContents the updated content (path and content must be set, sha must be set, if it is an update)\r\n   * @param message the commit message\r\n   * @param apiKey OAuth token of user.\r\n   */\r\n  public updateContent(\r\n      branch: GithubBranch,\r\n      newContents: GithubFileContents,\r\n      message: string,\r\n      apiKey?: string): Observable<GithubFileContents> {\r\n    const repo = branch.repo;\r\n    const url = `repos/${repo.owner}/${repo.name}/contents/${newContents.path}`;\r\n    return this.put<ContentsUpdateInputAPI, ContentsUpdateFromAPI>(\r\n        url,\r\n        apiKey,\r\n        {\r\n          message: message,\r\n          content: this.toBase64(newContents.content),\r\n          sha: newContents.sha,\r\n          branch: branch.name\r\n        } as ContentsUpdateInputAPI\r\n    ).pipe(\r\n        map((response: ContentsUpdateFromAPI) => {\r\n          return {\r\n            type: 'file',\r\n            branch: branch,\r\n            path: response.content.path,\r\n            name: response.content.name,\r\n            size: response.content.size,\r\n            content: newContents.content,\r\n            sha: response.content.sha\r\n          } as GithubFileContents;\r\n        })\r\n    );\r\n  }\r\n\r\n  private toFileContents(branch: GithubBranch, contentApiResponse: FileContentsFromAPI): GithubFileContents {\r\n    const content = contentApiResponse.content;\r\n    let decodedContent: string|undefined;\r\n    if (!isNullOrUndefined(content) && !isNullOrUndefined(contentApiResponse.encoding)) {\r\n      if (contentApiResponse.encoding === 'base64') {\r\n        decodedContent = this.fromBase64(content);\r\n      } else {\r\n        decodedContent = '??? unknown encoding' + contentApiResponse.encoding;\r\n      }\r\n    } else {\r\n      decodedContent = undefined;\r\n    }\r\n    return {\r\n      type: 'file',\r\n      branch: branch,\r\n      path: contentApiResponse.path,\r\n      name: contentApiResponse.name,\r\n      size: contentApiResponse.size,\r\n      content: decodedContent,\r\n      sha: contentApiResponse.sha\r\n    };\r\n  }\r\n\r\n  private toDirectory(branch: GithubBranch, path: string, contentApiResponse: ContentsFromAPI[]): GithubDirectory {\r\n    const entries: (GithubDirectory|GithubFileContents|null)[] = contentApiResponse.map((entry: ContentsFromAPI) => {\r\n      switch (entry.type) {\r\n        case 'file':\r\n          return this.toFileContents(branch, entry);\r\n        case 'symlink':\r\n          return null;\r\n        case 'submodule':\r\n          return null;\r\n        case 'dir':\r\n          return {\r\n            type: 'dir',\r\n            branch: branch,\r\n            path: path,\r\n            name: entry.name,\r\n            sha: entry.sha\r\n          } as GithubDirectory;\r\n        default:\r\n          return null;\r\n      }\r\n    }).filter(entry => entry !== null);\r\n    return {\r\n      type: 'dir',\r\n      branch: branch,\r\n      path: path,\r\n      name: this.basename(path),\r\n      sha: '',\r\n      entries: entries\r\n    };\r\n  }\r\n\r\n  basename(path: string): string {\r\n    const index = path.lastIndexOf('/');\r\n    if (index >= 0) {\r\n      return path.substr(index + 1);\r\n    } else {\r\n      return path;\r\n    }\r\n  }\r\n\r\n  private toBase64(str: string): string {\r\n    return toBase64(str);\r\n  }\r\n\r\n  private fromBase64(b64str: string): string {\r\n    return fromBase64(b64str);\r\n  }\r\n\r\n}\r\n","<h3 matDialogTitle i18n>edit config</h3>\r\n<div matDialogContent>\r\n  <app-github-config-editor [githubConfiguration]=\"activeConfiguration.configuration\" (configurationChange)=\"changeActiveConfiguration($event)\">\r\n  </app-github-config-editor>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button matDialogClose [mat-dialog-close]=\"result()\" i18n [disabled]=\"!isActiveConfigurationValid()\">OK</button>\r\n  <button mat-button matDialogClose (click)=\"cancel()\" i18n>Cancel</button>\r\n</div>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport {GithubConfiguration} from '../github-configuration';\r\n\r\nexport interface GithubConfigEditorDialogData {\r\n  configuration: GithubConfiguration;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-github-config-editor-dialog',\r\n  templateUrl: './github-config-editor-dialog.component.html',\r\n  styleUrls: ['./github-config-editor-dialog.component.css']\r\n})\r\nexport class GithubConfigEditorDialogComponent implements OnInit {\r\n\r\n  activeConfiguration: {valid: boolean, configuration: GithubConfiguration};\r\n\r\n  constructor(private dialogRef: MatDialogRef<GithubConfigEditorDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) data: GithubConfigEditorDialogData) {\r\n    this.activeConfiguration = {valid: false, configuration: data.configuration.copy()};\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  changeActiveConfiguration(newValue: {valid: boolean, configuration: GithubConfiguration}) {\r\n    this.activeConfiguration = newValue;\r\n  }\r\n\r\n  isActiveConfigurationValid(): boolean {\r\n    return this.activeConfiguration && this.activeConfiguration.valid;\r\n  }\r\n\r\n  result(): GithubConfiguration {\r\n    return this.isActiveConfigurationValid() ? this.activeConfiguration.configuration : null;\r\n  }\r\n}\r\n","<form fxLayout=\"column\" fxLayoutGap=\"10px\" [formGroup]=\"form\">\r\n  <mat-form-field>\r\n    <mat-label i18n>Github API token</mat-label>\r\n    <input matInput formControlName=\"apiToken\" name=\"apiToken\" placeholder=\"Github API token\" i18n-placeholder\r\n           matTooltip=\"The configuration including your API token will be stored in the local storage of your browser. It will not be sent to anywhere but the Github API Service.\" i18n-matTooltip>\r\n    <mat-error *ngIf=\"form.get('apiToken').hasError('tokenInvalid')\" i18n>\r\n      The token is not valid!\r\n    </mat-error>\r\n    <mat-error *ngIf=\"form.get('apiToken').hasError('required')\" i18n>\r\n      Token is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label i18n>Github repository</mat-label>\r\n    <input matInput formControlName=\"repo\" name=\"repo\" placeholder=\"Github repository\" i18n-placeholder [matAutocomplete]=\"repos\">\r\n    <mat-autocomplete #repos=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let option of availableRepos()\" [value]=\"option\">\r\n        {{ option }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n    <mat-error *ngIf=\"form.get('repo').hasError('repoInvalid')\" i18n>\r\n      Repository does not exist!\r\n    </mat-error>\r\n    <mat-error *ngIf=\"form.get('repo').hasError('repoUncheckable')\" i18n>\r\n      Repository cannot be checked (invalid API token)!\r\n    </mat-error>\r\n    <mat-error *ngIf=\"form.get('repo').hasError('required')\" i18n>\r\n      Repository is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label i18n>Github branch</mat-label>\r\n    <input matInput formControlName=\"branch\" name=\"branch\" placeholder=\"Github branch\" i18n-placeholder [matAutocomplete]=\"branches\">\r\n    <mat-autocomplete #branches=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let option of availableBranches()\" [value]=\"option\">\r\n        {{ option }}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n    <mat-error *ngIf=\"form.get('branch').hasError('branchInvalid')\" i18n>\r\n      Branch does not exist!\r\n    </mat-error>\r\n    <mat-error *ngIf=\"form.get('branch').hasError('branchUncheckable')\" i18n>\r\n      Branch cannot be checked (invalid API token)!\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n    <mat-form-field fxFlex>\r\n      <mat-label i18n>path</mat-label>\r\n      <input matInput formControlName=\"path\" name=\"path\" placeholder=\"path\" i18n-placeholder>\r\n      <mat-error *ngIf=\"form.get('path').hasError('pathInvalid')\" i18n>\r\n        Path does not exist!\r\n      </mat-error>\r\n      <mat-error *ngIf=\"form.get('path').hasError('pathIsNoDir')\" i18n>\r\n        Path is not a directory!\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <button color=\"accent\" mat-icon-button (click)=\"openPathBrowser()\"\r\n        matTooltip=\"Select a path\" i18n-matTooltip>\r\n      <mat-icon>edit</mat-icon>\r\n    </button>\r\n  </div>\r\n  <mat-action-row>\r\n    <button color=\"primary\" mat-button (click)=\"storeConfigurationClicked()\"\r\n            [disabled]=\"!form.valid\"\r\n            matTooltip=\"The configuration including your API token will be stored in the local storage of your browser. It will not be sent to anywhere but the Github API Service.\" i18n-matTooltip>\r\n      <mat-icon>save</mat-icon>\r\n      <span i18n>Store configuration</span>\r\n    </button>\r\n    <button mat-button matTooltip=\"Delete this configuration\" i18n-matTooltip (click)=\"deleteConfigurationClicked()\">\r\n      <mat-icon>delete</mat-icon>\r\n      <span i18n>Delete configuration</span>\r\n    </button>\r\n  </mat-action-row>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {AbstractControl, AsyncValidatorFn, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {GithubBranch, GithubDirectory, GithubFileContents, GithubApiService, GithubRepo} from '../github-api.service';\r\nimport {catchError, finalize, first, map, switchMap} from 'rxjs/operators';\r\nimport {Observable, of} from 'rxjs';\r\nimport {GithubConfiguration} from '../github-configuration';\r\nimport {IFileDescription} from '../../common/i-file-description';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../../common/file-explorer-dialog/file-explorer-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-github-config-editor',\r\n  templateUrl: './github-config-editor.component.html',\r\n  styleUrls: ['./github-config-editor.component.css']\r\n})\r\nexport class GithubConfigEditorComponent implements OnInit, OnChanges {\r\n\r\n  @Input() githubConfiguration: GithubConfiguration;\r\n  @Output() storeConfiguration: EventEmitter<GithubConfiguration>\r\n    = new EventEmitter<GithubConfiguration>();\r\n  @Output() deleteConfiguration: EventEmitter<GithubConfiguration>\r\n    = new EventEmitter<GithubConfiguration>();\r\n\r\n  form: FormGroup;\r\n  private _apiTokenValid = false;\r\n  private _repos: GithubRepo[] = []; // repos for selected api token read from api\r\n  private _branches: GithubBranch[] = []; // branches for selected repo read from api\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private githubApiService: GithubApiService,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.updateForm();\r\n  }\r\n\r\n  checkApiTokenValidator(): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<{[key: string]: any} | null> => {\r\n      const token = control.value;\r\n      return of(null).pipe(\r\n          switchMap(() => {\r\n            if (!token) {\r\n              this._apiTokenValid = false;\r\n              this._repos = [];\r\n              return of(null);\r\n            }\r\n            return this.githubApiService.repos(token).pipe(\r\n                first(),\r\n                map(repos => {\r\n                  this._apiTokenValid = true;\r\n                  this._repos = repos;\r\n                  return null;\r\n                }),\r\n                catchError(() => {\r\n                  this._apiTokenValid = false;\r\n                  this._repos = [];\r\n                  return of({'tokenInvalid': {value: token}});\r\n                })\r\n            );\r\n          }),\r\n          finalize(() => {\r\n            if (this.form) {\r\n              this.form.get('repo').updateValueAndValidity();\r\n            }\r\n          })\r\n      );\r\n    };\r\n  }\r\n\r\n  checkRepoValidator(): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<{[key: string]: any} | null> => {\r\n      return of(null).pipe(\r\n          switchMap(() => {\r\n            const reponame = control.value;\r\n            if (!reponame) {\r\n              this._branches = [];\r\n              return of(null);\r\n            }\r\n            if (!this._apiTokenValid) {\r\n              this._branches = [];\r\n              return of({'repoUncheckable': {value: reponame}});\r\n            }\r\n            const repo = this._repos.find(r => r.name === reponame);\r\n            if (!repo) {\r\n              this._branches = [];\r\n              return of({'repoInvalid': {value: reponame}});\r\n            }\r\n            return this.githubApiService.branches(repo, this.form.value.apiToken).pipe(\r\n                first(),\r\n                map(branches => {\r\n                  this._branches = branches;\r\n                  return null;\r\n                }),\r\n                catchError(() => {\r\n                  this._apiTokenValid = false;\r\n                  this._branches = [];\r\n                  return of({'repoInvalid': {value: reponame}});\r\n                }),\r\n            );\r\n          }),\r\n          finalize(() => {\r\n            if (this.form) {\r\n              this.form.get('branch').updateValueAndValidity();\r\n            }\r\n          })\r\n      );\r\n    };\r\n  }\r\n\r\n  checkBranchValidator(): AsyncValidatorFn {\r\n    return ((control: AbstractControl): Observable<{[key: string]: any} | null> => {\r\n      return of(null).pipe(\r\n          switchMap(() => {\r\n            const branchname = control.value;\r\n            if (!branchname) {\r\n              return of(null);\r\n            }\r\n            if (!this._apiTokenValid) {\r\n              return of({'branchUncheckable': {value: branchname}});\r\n            }\r\n            const branch = this._branches.find(b => b.name === branchname);\r\n            return of(branch ? null : {'branchInvalid': {value: branchname}});\r\n          }),\r\n          finalize(() => {\r\n            if (this.form) {\r\n              this.form.get('path').updateValueAndValidity();\r\n            }\r\n          })\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validator to check for valid path.\r\n   */\r\n  checkPathValidator(): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<{ [key: string]: any } | null> => {\r\n      return of(null).pipe(\r\n          switchMap(() => {\r\n            if (!this.form) {\r\n              return of(null);\r\n            }\r\n            const path = control.value;\r\n            const apiToken = this.form.value.apiToken;\r\n            const branchname = this.form.value.branch;\r\n            const branch = this._branches.find(b => b.name === branchname);\r\n            if (!path || !branch) {\r\n              return of(null);\r\n            }\r\n            return this.githubApiService.content(branch, path, apiToken).pipe(\r\n                first(),\r\n                map((content: GithubFileContents | GithubDirectory) => {\r\n                  if (content.type !== 'dir') {\r\n                    control.markAsTouched();\r\n                    return {'pathIsNoDir': {value: path}};\r\n                  }\r\n                }),\r\n                catchError(() => {\r\n                  control.markAsTouched();\r\n                  return of({'pathInvalid': {value: path}});\r\n                })\r\n            );\r\n          })\r\n      );\r\n    };\r\n  }\r\n\r\n  initForm() {\r\n    if (!this.form) {\r\n      const configuration = (this.githubConfiguration) ? this.githubConfiguration : {apiToken: '', repo: '', branch: '', path: ''};\r\n      this.form = this.formBuilder.group({\r\n        apiToken: [configuration.apiToken, [Validators.required], [this.checkApiTokenValidator()]],\r\n        repo: [configuration.repo, [Validators.required], [this.checkRepoValidator()]],\r\n        branch: [configuration.branch, [], [this.checkBranchValidator()]],\r\n        path: [configuration.path, [], [this.checkPathValidator()]]\r\n      });\r\n    }\r\n  }\r\n\r\n  updateForm() {\r\n    if (this.form) {\r\n      const configuration = (this.githubConfiguration) ? this.githubConfiguration : {apiToken: '', repo: '', branch: '', path: ''};\r\n      this.form.patchValue(\r\n        {\r\n          apiToken: configuration.apiToken,\r\n          repo: configuration.repo,\r\n          branch: configuration.branch,\r\n          path: configuration.path\r\n        },\r\n        {emitEvent: false}\r\n      );\r\n    }\r\n  }\r\n\r\n  private currentConfiguration(actualPath: string): GithubConfiguration {\r\n    const id = (this.githubConfiguration) ? this.githubConfiguration.id : null;\r\n    const reponame = this.form.value.repo;\r\n    const repo: GithubRepo = this._repos.find(r => r.name === reponame);\r\n    const owner = (repo) ? repo.owner : null;\r\n    return new GithubConfiguration(\r\n      id,\r\n      this.form.value.apiToken,\r\n      owner,\r\n      reponame,\r\n      this.form.value.branch,\r\n      actualPath\r\n    );\r\n  }\r\n\r\n  availableBranches(): string[] {\r\n    return this._branches.map(branch => branch.name);\r\n  }\r\n\r\n  availableRepos(): string[] {\r\n    return this._repos.map(repo => repo.name);\r\n  }\r\n\r\n  openPathBrowser() {\r\n    const conf = this.currentConfiguration('');\r\n      const dialogRef = this.dialog.open(FileExplorerDialogComponent, {\r\n          data: {\r\n              configuration: conf,\r\n              file: conf.directoryDescription(this.form.value.path),\r\n              selectableFileType: 'dir'\r\n          } as FileExplorerDialogData\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((result: IFileDescription) => {\r\n          if (result) {\r\n              this.form.get('path').patchValue(result.path);\r\n          }\r\n      });\r\n\r\n  }\r\n\r\n  storeConfigurationClicked() {\r\n    this.storeConfiguration.emit(this.currentConfiguration(this.form.value.path));\r\n  }\r\n\r\n  deleteConfigurationClicked() {\r\n    this.deleteConfiguration.emit(this.currentConfiguration(this.form.value.path));\r\n  }\r\n}\r\n","import {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {GithubFileDescription} from './github-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.GITHUB;\r\n    version: '1';\r\n    id: string;\r\n    apiToken: string;\r\n    owner: string;\r\n    repo: string;\r\n    branch: string;\r\n    path: string;\r\n}\r\n\r\nexport class GithubConfiguration implements IFileAccessConfiguration {\r\n\r\n    readonly type = FileAccessorType.GITHUB;\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GithubConfiguration {\r\n        const v1 = JSON.parse(serializedForm) as SerializedFormV1;\r\n        return new GithubConfiguration(v1.id, v1.apiToken, v1.owner, v1.repo, v1.branch, v1.path);\r\n    }\r\n\r\n    constructor(\r\n        private _id: string|null,\r\n        private _apiToken: string,\r\n        private _owner: string,\r\n        private _repo: string,\r\n        private _branch: string|null,\r\n        private _path: string|null\r\n    ) {}\r\n\r\n    serialize(serializationService: SerializationService): string {\r\n       const v1: SerializedFormV1 = {\r\n           accessorType: FileAccessorType.GITHUB,\r\n           version: '1',\r\n           id: this._id,\r\n           apiToken: this._apiToken,\r\n           owner: this._owner,\r\n           repo: this._repo,\r\n           branch: this._branch,\r\n           path: this._path\r\n       };\r\n       return JSON.stringify(v1);\r\n    }\r\n\r\n    copy(): GithubConfiguration {\r\n        return new GithubConfiguration(this._id, this._apiToken, this._owner, this._repo, this._branch, this._path);\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(newId: string) {\r\n        this._id = newId;\r\n    }\r\n\r\n    public equals(another: IFileAccessConfiguration): boolean {\r\n        if (!another || another.type !== FileAccessorType.GITHUB) {\r\n            return false;\r\n        }\r\n        const anotherGitConfiguration = another as GithubConfiguration;\r\n        return this.apiToken === anotherGitConfiguration.apiToken\r\n          && this.repo === anotherGitConfiguration.repo\r\n          && this.branch === anotherGitConfiguration.branch\r\n          && this.path === anotherGitConfiguration.path;\r\n    }\r\n\r\n    public shortLabel(): string {\r\n        return 'repository ' + this._repo;\r\n    }\r\n\r\n    public fullLabel(): { maticon?: string; icon?: string; label: string } {\r\n        const branch = (this._branch) ? this._branch : 'master';\r\n        const owner = (this._owner) ? this._owner : '?';\r\n        const repo = (this._repo) ? this._repo : '?';\r\n        const path = (this._path) ? this._path : '';\r\n        return {\r\n            icon: 'Octocat.jpg',\r\n            label: `${owner}/${repo}@${branch}/${path}`\r\n        };\r\n    }\r\n\r\n    get apiToken(): string {\r\n        return this._apiToken;\r\n    }\r\n\r\n    get owner(): string {\r\n        return this._owner;\r\n    }\r\n\r\n    get repo(): string {\r\n        return this._repo;\r\n    }\r\n\r\n    get branch(): string {\r\n        return this._branch;\r\n    }\r\n\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    public rootDescription(): IFileDescription {\r\n        return new GithubFileDescription('dir', this, '', '');\r\n    }\r\n\r\n    public directoryDescription(dirPath: string): IFileDescription {\r\n        if (!dirPath) {\r\n            dirPath = '';\r\n        }\r\n        const slashIndex = dirPath.lastIndexOf('/');\r\n        const newName = (slashIndex >= 0) ? dirPath.substr(slashIndex + 1) : dirPath;\r\n        return new GithubFileDescription('dir', this, dirPath, newName);\r\n    }\r\n\r\n    /**\r\n     * Check, wether a publish is possible.\r\n     */\r\n    public canPublish(): boolean {\r\n        return true;\r\n    }\r\n\r\n}\r\n","import {SerializationService} from '../../model/serialization.service';\r\nimport {GithubConfiguration} from './github-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {IFileDescription} from '../common/i-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.GITHUB;\r\n    type: 'dir'|'file';\r\n    version: '1';\r\n    configuration: string;\r\n    path: string;\r\n    name: string;\r\n    children?: string[];\r\n}\r\n\r\nexport class GithubFileDescription implements IFileDescription {\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GithubFileDescription {\r\n        const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n        const children = (v1Object.type === 'dir') ?\r\n          v1Object.children.map(serializedChild => serializationService.deserializeIFileDescription(serializedChild)) :\r\n          null;\r\n        return new GithubFileDescription(\r\n          v1Object.type,\r\n          serializationService.deserializeIFileConfiguration(v1Object.configuration) as GithubConfiguration,\r\n          v1Object.path,\r\n          v1Object.name,\r\n          children\r\n        );\r\n    }\r\n\r\n    constructor(\r\n      public readonly type: 'dir'|'file',\r\n      public configuration: GithubConfiguration,\r\n      public path: string,\r\n      public name: string,\r\n      public children?: IFileDescription[]) {}\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            accessorType: FileAccessorType.GITHUB,\r\n            type: this.type,\r\n            version: '1',\r\n            configuration: this.configuration.serialize(serializationService),\r\n            path: this.path,\r\n            name: this.name,\r\n            children: (this.children) ? this.children.map(fd => fd.serialize(serializationService)) : null\r\n\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    public equals(another: IFileDescription): boolean {\r\n        if (!another || !another.configuration) {\r\n            return false;\r\n        }\r\n        if (!this.configuration.equals(another.configuration)) {\r\n            return false;\r\n        }\r\n        return this.type === another.type\r\n          && this.name === another.name\r\n          && this.path === another.path;\r\n    }\r\n\r\n    /**\r\n     * Test, whether it is a directory.\r\n     */\r\n    public isDirectory(): boolean {\r\n        return this.type === 'dir';\r\n    }\r\n\r\n    /**\r\n     * Return the directory of this file.\r\n     * (or the parent, if it is directory)\r\n     */\r\n    public dirname(): IFileDescription|null {\r\n        const slashIndex = this.path.lastIndexOf('/');\r\n        if (slashIndex <= 0) {\r\n            return null;\r\n        }\r\n        const mydir_path = this.path.substr(0, slashIndex - 1);\r\n        const slashIndexPath = mydir_path.lastIndexOf('/');\r\n        const mydir_name = (slashIndexPath >= 0) ? mydir_path.substr(slashIndexPath + 1) : mydir_path;\r\n        return new GithubFileDescription('dir', this.configuration, mydir_path, mydir_name);\r\n    }\r\n\r\n    /**\r\n     * Create a new FileDescription with the given name under this file or directory.\r\n     * If this is a normal file, it returns a file at the same path, but with new name.\r\n     * If this is directory, it returns a file contained in the directory.\r\n     * @param newName name of file\r\n     * @return file\r\n     */\r\n    public createFileDescription(newName: string): IFileDescription {\r\n        if (this.isDirectory()) {\r\n            const newPath = this.path ? this.path + '/' + newName : newName;\r\n            return new GithubFileDescription('file', this.configuration, newPath, newName);\r\n        } else {\r\n            const dir = this.dirname();\r\n            if (dir) {\r\n                return dir.createFileDescription(newName);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import {GenericFile} from '../common/generic-file';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFile} from '../common/i-file';\r\n\r\ninterface SerializedFormV1 {\r\n  version: '1';\r\n  type: 'github';\r\n  description: string;\r\n  name: string;\r\n  size: number;\r\n  content: string;\r\n  sha: string;\r\n}\r\n\r\nexport class GithubFile extends GenericFile {\r\n  sha?: string; // SHA1 of loaded file\r\n\r\n  static deserialize(serializationService: SerializationService, serializedForm: string): GithubFile {\r\n    const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n    return new GithubFile(\r\n      serializationService.deserializeIFileDescription(v1Object.description),\r\n      v1Object.name,\r\n      v1Object.size,\r\n      v1Object.content,\r\n      v1Object.sha);\r\n  }\r\n\r\n  constructor(_description: IFileDescription, _name: string, _size: number, _content: string, _sha: string) {\r\n    super(_description, _name, _size, _content);\r\n    this.sha = _sha;\r\n  }\r\n\r\n  public serialize(serializationService: SerializationService): string {\r\n    return JSON.stringify({\r\n      version: '1',\r\n      type: 'github',\r\n      description: this.description.serialize(serializationService),\r\n      name: this.name,\r\n      size: this.size,\r\n      content: this.content,\r\n      sha: this.sha\r\n    } as SerializedFormV1);\r\n  }\r\n\r\n  /**\r\n   * Return a copy that has some edited content.\r\n   * @param newContent the changed content\r\n   */\r\n  public copyWithNewContent(newContent: string): IFile {\r\n    return new GithubFile(this.description, this.name, newContent.length, newContent, this.sha);\r\n  }\r\n\r\n  /**\r\n   * Create a copy that can be stored under a new location.\r\n   * @param saveAs new location to save file\r\n   */\r\n  copyForNewDescription(saveAs: IFileDescription): IFile {\r\n    return new GithubFile(saveAs, this.name, this.content.length, this.content, this.sha);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n    <p fxFlex=\"50%\" i18n>Select the file you want to translate.<br>\r\n    The file can be of format XLIFF 1.2, XLIFF 2.0 or XMB.<br>\r\n    The file will be stored in your browser local storage until you export the translated version.</p>\r\n    <button mat-icon-button color=\"accent\" (click)=\"openDialog()\"><mat-icon>explore</mat-icon><span i18n>Open Github Browser...</span></button>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../../../model/translation-project';\r\nimport {IFileDescription} from '../../common/i-file-description';\r\nimport {GithubConfiguration} from '../github-configuration';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../../common/file-explorer-dialog/file-explorer-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-translation-file-from-github',\r\n  templateUrl: './translation-file-from-github.component.html',\r\n  styleUrls: ['./translation-file-from-github.component.css']\r\n})\r\nexport class TranslationFileFromGithubComponent implements OnInit {\r\n\r\n  @Input() createdProject?: TranslationProject;\r\n  @Input() configuration: GithubConfiguration;\r\n  @Output() fileSelected: EventEmitter<IFileDescription> = new EventEmitter();\r\n  @Output() masterXmlFileSelected: EventEmitter<IFileDescription> = new EventEmitter();\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(FileExplorerDialogComponent, {\r\n      data: {\r\n        configuration: this.configuration,\r\n        selectableFileType: 'file'\r\n      } as FileExplorerDialogData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: IFileDescription) => {\r\n      if (result) {\r\n        this.fileSelected.emit(result);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<app-translate-unit-list [translationFileView]=\"currentView()\" [workflowType]=\"currentProject()?.workflowType\"\r\n                         [hasAutotranslatedUnits]=\"hasAutotranslatedUnits()\"\r\n                         (changeTranslationUnit)=\"onChangeTranslationUnit($event)\">\r\n\r\n</app-translate-unit-list>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-filter-page',\r\n  templateUrl: './filter-page.component.html',\r\n  styleUrls: ['./filter-page.component.css']\r\n})\r\nexport class FilterPageComponent implements OnInit {\r\n\r\n  constructor(private translationService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentProject(): TranslationProject {\r\n    return this.translationService.currentProject();\r\n  }\r\n\r\n  currentView(): TranslationFileView {\r\n    return this.currentProject() ? this.currentProject().translationFileView : null;\r\n  }\r\n\r\n  /**\r\n   * Navigate to another unit.\r\n   * @param translationUnit\r\n   */\r\n  onChangeTranslationUnit(translationUnit: TranslationUnit) {\r\n    this.translationService.selectTransUnit(translationUnit);\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  hasAutotranslatedUnits(): boolean {\r\n    return this.currentProject()\r\n      && this.currentProject().autoTranslateSummaryReport()\r\n      && this.currentProject().autoTranslateSummaryReport().total() > 0;\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n  <a mat-icon-button routerLink=\"/selectfilter\" routerLinkActive=\"active\"><mat-icon>filter_list</mat-icon>\r\n    <ng-container [ngSwitch]=\"currentFilterName()\">\r\n      <ng-container *ngSwitchCase=\"'all'\" i18n>All units</ng-container>\r\n      <ng-container *ngSwitchCase=\"'autotranslated'\" i18n>Autotranslated units</ng-container>\r\n      <ng-container *ngSwitchCase=\"'autotranslatedFailed'\" i18n>failed Autotranslated</ng-container>\r\n      <ng-container *ngSwitchCase=\"'autotranslatedIgnored'\" i18n>ignored Autotranslated</ng-container>\r\n      <ng-container *ngSwitchCase=\"'untranslated'\" i18n>Untranslated units</ng-container>\r\n      <ng-container *ngSwitchCase=\"'needsReview'\" i18n>Review needed</ng-container>\r\n      <ng-container *ngSwitchCase=\"'bySubstring'\" i18n>Substring {{substringFilterPattern()}}</ng-container>\r\n      <ng-container *ngSwitchDefault>{{currentFilterName()}}</ng-container>\r\n    </ng-container>\r\n  </a>\r\n  <span fxFlex></span>\r\n  <span *ngIf=\"translationFileView?.currentTransUnitIndex() > 0\" i18n>{{translationFileView?.currentTransUnitIndex()}} of {{translationFileView?.scrollabeTransUnitsLength()}}</span>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {TranslationUnitFilterSubstring} from '../model/filters/translation-unit-filter-substring';\r\n\r\n@Component({\r\n  selector: 'app-filter-status',\r\n  templateUrl: './filter-status.component.html',\r\n  styleUrls: ['./filter-status.component.css']\r\n})\r\nexport class FilterStatusComponent implements OnInit {\r\n\r\n  @Input() translationFileView: TranslationFileView;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentFilterName(): string {\r\n    if (this.translationFileView) {\r\n      return this.translationFileView.activeFilter().name();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  substringFilterPattern(): string {\r\n    const activeFilter = this.translationFileView.activeFilter();\r\n    if (activeFilter.name() === 'bySubstring') {\r\n      const filter: TranslationUnitFilterSubstring = <TranslationUnitFilterSubstring> activeFilter;\r\n      return filter.substringFilterPattern();\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <p i18n>{projects().length, plural, =0 {Currently there is no open project.} =1 {Currently there is <b>1</b> open project.} other {Currently there are <b>{{projects().length}}</b> open projects.}}</p>\r\n  <a mat-raised-button color=\"accent\" routerLink=\"/createproject\" i18n>Create a new project</a>\r\n  <p></p>\r\n  <app-project-list [projects]=\"projects()\" (onStartProject)=\"startProject($event)\" (onDeleteProject)=\"deleteProject($event)\" (onSaveProject)=\"saveProject($event)\"></app-project-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public projects(): TranslationProject[] {\r\n    return this.translatorService.projects();\r\n  }\r\n\r\n  public startProject(project: TranslationProject) {\r\n    this.translatorService.setCurrentProject(project);\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.translatorService.deleteProject(project);\r\n  }\r\n\r\n  public saveProject(project: TranslationProject) {\r\n    this.translatorService.downloadProject(project);\r\n  }\r\n}\r\n","<div>\r\n  <span [ngClass]=\"flagClasses()\"></span>\r\n  <span id=\"code\" *ngIf=\"showCode\">{{code}}</span>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n/**\r\n * A component that shows a language.\r\n * The input is some ISO 639-1 Code like \"de\", \"de-ch\", \"en\", \"en-uk\"..\r\n * The component tries to show a matching flag icon and the given code.\r\n */\r\n@Component({\r\n  selector: 'app-language',\r\n  templateUrl: './language.component.html',\r\n  styleUrls: ['./language.component.scss']\r\n})\r\nexport class LanguageComponent implements OnInit {\r\n\r\n  @Input() public code: string; // the ISO 639-1 code\r\n\r\n  @Input() public showCode = true; // if false, just show a flag, otherwise flag + code as text\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Classes used by flag-icon-css\r\n   * @return {{flag-icon: boolean}}\r\n   */\r\n  public flagClasses(): any {\r\n    const countryCode = this.languageCodeToCountryCode(this.code);\r\n    if (!countryCode) {\r\n      return {\r\n        'flag-icon': true,\r\n        'missing-code': true};\r\n    }\r\n    const flagIconCountry = 'flag-icon-' + countryCode.toLowerCase();\r\n    const result = {\r\n      'flag-icon': true\r\n    };\r\n    result[flagIconCountry] = true;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Map a given language code (ISO 639-1) to country code (ISO-3166-1-alpha 2 code).\r\n   * This is just a best effort approach.\r\n   */\r\n  public languageCodeToCountryCode(languageCode: string): string {\r\n    if (!languageCode) {\r\n      return null;\r\n    }\r\n    const lang = this.langFromLanguageCode(languageCode);\r\n    const region = this.regionFromLanguageCode(languageCode);\r\n    if (region && region.length === 2) {\r\n      return region;\r\n    }\r\n    // table of all lang codes, that are different from country code\r\n    // based on Microsofts Table of Language Culture Names https://msdn.microsoft.com/de-de/library/ee825488%28v=cs.20%29.aspx\r\n    switch (lang.toLowerCase()) {\r\n      case 'af': return 'ZA';\r\n      case 'sq': return 'AL';\r\n      case 'ar': return 'SA';\r\n      case 'hy': return 'AM';\r\n      case 'eu': return 'ES';\r\n      case 'be': return 'BY';\r\n      case 'ca': return 'ES';\r\n      case 'zh': return 'CN';\r\n      case 'cs': return 'CZ';\r\n      case 'da': return 'DK';\r\n      case 'div': return 'MV';\r\n      case 'en': return 'GB';\r\n      case 'et': return 'EE';\r\n      case 'fa': return 'IR';\r\n      case 'gl': return 'IS';\r\n      case 'ka': return 'GE';\r\n      case 'el': return 'GR';\r\n      case 'gu': return 'IN';\r\n      case 'he': return 'IL';\r\n      case 'hi': return 'IN';\r\n      case 'ja': return 'JP';\r\n      case 'kn': return 'IN';\r\n      case 'kk': return 'KZ';\r\n      case 'kok': return 'IN';\r\n      case 'ko': return 'KR';\r\n      case 'ky': return 'KZ';\r\n      case 'ms': return 'MY';\r\n      case 'mr': return 'IN';\r\n      case 'nb': return 'NO';\r\n      case 'nn': return 'NO';\r\n      case 'pa': return 'IN';\r\n      case 'sa': return 'IN';\r\n      case 'sl': return 'SI';\r\n      case 'sw': return 'KE';\r\n      case 'sv': return 'SE';\r\n      case 'syr': return 'SY';\r\n      case 'ta': return 'IN';\r\n      case 'tt': return 'RU';\r\n      case 'te': return 'IN';\r\n      case 'uk': return 'UA';\r\n      case 'ur': return 'PK';\r\n      case 'vi': return 'VN';\r\n      default: return lang;\r\n    }\r\n  }\r\n\r\n  private langFromLanguageCode(languageCode: string): string {\r\n    const parts: string[] = languageCode.split('-');\r\n    if (parts.length > 0) {\r\n      return parts[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private regionFromLanguageCode(languageCode: string): string {\r\n    const parts: string[] = languageCode.split('-');\r\n    if (parts.length > 1) {\r\n      return parts[1];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","\r\nimport {throwError as observableThrowError, Observable, BehaviorSubject, of, forkJoin} from 'rxjs';\r\nimport {Inject, Injectable} from '@angular/core';\r\nimport {\r\n  AutoTranslateDisabledReason, AutoTranslateDisabledReasonKey, AutoTranslateServiceAPI,\r\n  Language\r\n} from './auto-translate-service-api';\r\nimport {APP_CONFIG, AppConfig} from '../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {catchError, map} from 'rxjs/operators';\r\n\r\n/**\r\n * Types form google translate api.\r\n */\r\n\r\ninterface GetSupportedLanguagesRequest {\r\n  target: string; // The language to use to return localized, human readable names of supported\\nlanguages.\r\n}\r\n\r\ninterface LanguagesResource {\r\n  language: string; // code of the language\r\n  name: string; // human readable name (in target language)\r\n}\r\n\r\ninterface LanguagesListResponse {\r\n  languages: LanguagesResource[];\r\n}\r\n\r\ninterface TranslateTextRequest {\r\n  q: string[];  // The input texts to translate\r\n  target: string; // The language to use for translation of the input text\r\n  source: string; // The language of the source text\r\n  format?: string; // \"html\" (default) or \"text\"\r\n  model?: string; // see public documentation\r\n}\r\n\r\ninterface TranslationsResource {\r\n  detectedSourceLanguage?: string;\r\n  model?: string;\r\n  translatedText: string;\r\n}\r\n\r\ninterface TranslationsListResponse {\r\n  translations: TranslationsResource[];\r\n}\r\n\r\n// maximum number of strings to translate in one request (a Google limit!)\r\nconst MAX_SEGMENTS = 128;\r\n\r\n/**\r\n * Auto Translate Service using Google Translate.\r\n */\r\n@Injectable()\r\nexport class AutoTranslateGoogleService extends AutoTranslateServiceAPI {\r\n\r\n  private _rootUrl: string;\r\n\r\n  private _apiKey: string;\r\n\r\n  // a setting for tests!!\r\n  // if set to true, all autotranslations containing placeholder or tags will FAIL BY DESIGN\r\n  // Used to allow testing of report page and filters for failed translations.\r\n  private failByDesign: boolean;\r\n\r\n  /**\r\n   * Cache of supported languages.\r\n   */\r\n  private _subjects: {[target: string]: BehaviorSubject<Language[]>};\r\n\r\n  /**\r\n   * Reason, that currently disables the API.\r\n   * (no key, invalid key)\r\n   */\r\n  private _permanentFailReason: AutoTranslateDisabledReason;\r\n\r\n  /**\r\n   * Strip region code and convert to lower\r\n   * @param lang lang\r\n   * @return lang without region code and in lower case.\r\n   */\r\n  public static stripRegioncode(lang: string): string {\r\n    if (isNullOrUndefined(lang)) {\r\n      return null;\r\n    }\r\n    const langLower = lang.toLowerCase();\r\n    for (let i = 0; i < langLower.length; i++) {\r\n      const c = langLower.charAt(i);\r\n      if (c < 'a' || c > 'z') {\r\n        return langLower.substring(0, i);\r\n      }\r\n    }\r\n    return langLower;\r\n  }\r\n\r\n  constructor(@Inject(APP_CONFIG) app_config: AppConfig, private httpClient: HttpClient) {\r\n    super();\r\n    this._rootUrl = app_config.GOOGLETRANSLATE_API_ROOT_URL;\r\n    // API key is secret, normally it is nit configured and will be null\r\n    // it can be set interactively in the app\r\n    // but in the karma tests it will be set. It is stored than in environment.secret.ts (not in Git)\r\n    this.setApiKey(app_config.GOOGLETRANSLATE_API_KEY); // must be set explicitly via setApiKey()\r\n    this.failByDesign = false;\r\n    if (app_config.GOOGLETRANSLATE_PROVOKE_FAILURES === true) {\r\n      this.failByDesign = true;\r\n    }\r\n  }\r\n\r\n  public apiKey(): string {\r\n    return this._apiKey;\r\n  }\r\n\r\n  public setApiKey(key: string) {\r\n    this._apiKey = key;\r\n    this._permanentFailReason = null;\r\n    this._subjects = {};\r\n    if (!this._apiKey) {\r\n      this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_KEY};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is active.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   */\r\n  public canAutoTranslate(source: string, target: string): Observable<boolean> {\r\n    return this.supportedLanguages().pipe(\r\n        map((languages: Language[]) => {\r\n          const s = AutoTranslateGoogleService.stripRegioncode(source);\r\n          const t = AutoTranslateGoogleService.stripRegioncode(target);\r\n          if (!s || languages.findIndex((lang) => lang.language === s) < 0) {\r\n            return false;\r\n          }\r\n          return (t && languages.findIndex((lang) => lang.language === t) >= 0);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * The reason, why canAutoTranslate returns false.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   * @return reason or null, if API is enabled.\r\n   */\r\n  public disabledReason(source: string, target: string): Observable<AutoTranslateDisabledReason> {\r\n    return this.supportedLanguages().pipe(\r\n        map((languages: Language[]) => {\r\n          if (languages.length === 0) {\r\n            return this._permanentFailReason;\r\n          }\r\n          const s = AutoTranslateGoogleService.stripRegioncode(source);\r\n          if (!s || languages.findIndex((lang) => lang.language === s) < 0) {\r\n            return {reason: AutoTranslateDisabledReasonKey.SOURCE_LANG_NOT_SUPPORTED};\r\n          }\r\n          const t = AutoTranslateGoogleService.stripRegioncode(target);\r\n          if (!t || languages.findIndex((lang) => lang.language === t) < 0) {\r\n            return {reason: AutoTranslateDisabledReasonKey.TARGET_LANG_NOT_SUPPORTED};\r\n          }\r\n          return null;\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return a list of language codes that can be used.\r\n   * Returns codes as \"language\" and readable name.\r\n   * @param target language for readable name. (default is en)\r\n   */\r\n  supportedLanguages(target?: string): Observable<Language[]> {\r\n    if (!target) {\r\n      target = 'en';\r\n    } else {\r\n      target = AutoTranslateGoogleService.stripRegioncode(target);\r\n    }\r\n    if (!this._subjects[target]) {\r\n      if (this._apiKey) {\r\n        this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_PROVIDER};\r\n      } else {\r\n        this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_KEY};\r\n      }\r\n      this._subjects[target] = new BehaviorSubject<Language[]>([]);\r\n      if (this._apiKey) {\r\n        const languagesRequestUrl = this._rootUrl + 'language/translate/v2/languages' + '?key=' + this._apiKey + '&target=' + target;\r\n        this.httpClient.get<{data: LanguagesListResponse}>(languagesRequestUrl).pipe(\r\n            catchError((error: Response) => {\r\n            if (this.isInvalidApiKeyError(error)) {\r\n              this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.INVALID_KEY};\r\n            } else {\r\n              this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.CONNECT_PROBLEM, details: JSON.stringify(error.body)};\r\n            }\r\n            return [];\r\n           }),\r\n            map((response) => {\r\n          const result: LanguagesListResponse = response.data;\r\n          return result.languages;\r\n        })).subscribe((languages) => {\r\n          this._subjects[target].next(languages);\r\n        });\r\n      }\r\n    }\r\n    return this._subjects[target];\r\n  }\r\n\r\n  private isInvalidApiKeyError(error: Response): boolean {\r\n    if (!error) {\r\n      return false;\r\n    }\r\n    if (error.status === 400) {\r\n      const body = error.body;\r\n      if (body) {\r\n        return JSON.stringify(body).indexOf('API key not valid') >= 0;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Translate a message.\r\n   * @param message the message to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated message or error\r\n   */\r\n  public translate(message: string, from: string, to: string): Observable<string> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const translateRequest: TranslateTextRequest = {\r\n      q: [message],\r\n      target: to,\r\n      source: from,\r\n      // format: TODO useful html or text\r\n    };\r\n    const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n    return this.httpClient.post<{data: TranslationsListResponse}>(realUrl, translateRequest).pipe(map((response) => {\r\n      const result: TranslationsListResponse = response.data;\r\n      return result.translations[0].translatedText;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Translate an array of messages at once.\r\n   * @param messages the messages to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated messages or error\r\n   */\r\n  public translateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    if (messages.length === 0) {\r\n      return of([]);\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const allRequests: Observable<string[]>[] = this.splitMessagesToGoogleLimit(messages).map((partialMessages: string[]) => {\r\n      return this.limitedTranslateMultipleStrings(partialMessages, from, to);\r\n    });\r\n    return forkJoin(allRequests).pipe(map((allTranslations: string[][]) => {\r\n      let all = [];\r\n      for (let i = 0; i < allTranslations.length; i++) {\r\n        all = all.concat(allTranslations[i]);\r\n      }\r\n      return all;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Return translation request, but messages must be limited to google limits.\r\n   * Not more that 128 single messages.\r\n   * @param messages messages\r\n   * @param from from\r\n   * @param to to\r\n   * @return the translated strings\r\n   */\r\n  private limitedTranslateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const translateRequest: TranslateTextRequest = {\r\n      q: messages,\r\n      target: to,\r\n      source: from,\r\n      // format: TODO useful html or text\r\n    };\r\n    const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n    return this.httpClient.post<{data: TranslationsListResponse}>(realUrl, translateRequest).pipe(map((response) => {\r\n      const result: TranslationsListResponse = response.data;\r\n      return result.translations.map((translation: TranslationsResource) => {\r\n        // just for tests, provoke errors and warnings, if explicitly wanted\r\n        if (this.failByDesign) {\r\n          if (translation.translatedText.indexOf('{') >= 0) {\r\n            return 'oopsi';\r\n          }\r\n          if (translation.translatedText.indexOf('<') >= 0) {\r\n            return 'oopsala';\r\n          }\r\n        }\r\n        return translation.translatedText;\r\n      });\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Splits one array of messages to n arrays, where each has at least 128 (const MAX_ENTRIES) entries.\r\n   * @param messages messages\r\n   * @return splitted array\r\n   */\r\n  private splitMessagesToGoogleLimit(messages: string[]): string[][] {\r\n    if (messages.length <= MAX_SEGMENTS) {\r\n      return [messages];\r\n    }\r\n    const result = [];\r\n    let currentPackage = [];\r\n    let packageSize = 0;\r\n    for (let i = 0; i < messages.length; i++) {\r\n      currentPackage.push(messages[i]);\r\n      packageSize++;\r\n      if (packageSize >= MAX_SEGMENTS) {\r\n        result.push(currentPackage);\r\n        currentPackage = [];\r\n        packageSize = 0;\r\n      }\r\n    }\r\n    if (currentPackage.length > 0) {\r\n      result.push(currentPackage);\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n}\r\n","import {TranslationUnit} from './translation-unit';\r\n/**\r\n * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateResult {\r\n\r\n  public static Success(tu: TranslationUnit): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, true, false, null);\r\n  }\r\n\r\n  public static Failed(tu: TranslationUnit, details: string): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, false, false, details);\r\n  }\r\n\r\n  public static Ignored(tu: TranslationUnit, details: string): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, true, true, details);\r\n  }\r\n\r\n  private constructor(private _transUnit: TranslationUnit, private _success: boolean, private _ignored: boolean, private _details: string) {\r\n\r\n  }\r\n\r\n  public success(): boolean {\r\n    return this._success;\r\n  }\r\n\r\n  public failed(): boolean {\r\n    return !this._success;\r\n  }\r\n\r\n  public ignored(): boolean {\r\n    return this._ignored;\r\n  }\r\n\r\n  public details(): string {\r\n    return this._details;\r\n  }\r\n\r\n  public translationUnit(): TranslationUnit {\r\n    return this._transUnit;\r\n  }\r\n\r\n}\r\n","\r\nimport {throwError, Observable, of} from 'rxjs';\r\n\r\n/**\r\n * Reasons, why you cannot use the API.\r\n */\r\nexport enum AutoTranslateDisabledReasonKey {\r\n  NO_PROVIDER,\r\n  NO_KEY,\r\n  INVALID_KEY,\r\n  SOURCE_LANG_NOT_SUPPORTED,\r\n  TARGET_LANG_NOT_SUPPORTED,\r\n  CONNECT_PROBLEM\r\n}\r\n\r\nexport interface AutoTranslateDisabledReason {\r\n  reason: AutoTranslateDisabledReasonKey;\r\n  details?: string;  // in case of CONNECT_PROBLEM some readable details like status code, error message\r\n}\r\n\r\nexport interface Language {\r\n  language: string; // language code\r\n  name: string; // human readable language name\r\n}\r\n\r\n/**\r\n * Interface of AutoTranslate Service API.\r\n * An AutoTranslateService can translate messages to other languages.\r\n */\r\nexport class AutoTranslateServiceAPI {\r\n\r\n  public apiKey(): string {\r\n    return null;\r\n  }\r\n\r\n  public setApiKey(apiKey: string) {\r\n    // ignore it\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is active.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   */\r\n  public canAutoTranslate(source: string, target: string): Observable<boolean> {\r\n    return of(false);\r\n  }\r\n\r\n  /**\r\n   * The reason, why canAutoTranslate returns false.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   * @return reason or null, if API is enabled.\r\n   */\r\n  public disabledReason(source: string, target: string): Observable<AutoTranslateDisabledReason> {\r\n    return of({reason: AutoTranslateDisabledReasonKey.NO_PROVIDER});\r\n  }\r\n\r\n  /**\r\n   * Return a list of language codes that can be used.\r\n   * Returns codes as \"language\" and readable name.\r\n   * @param target language for readable name. (default is en)\r\n   */\r\n  supportedLanguages(target?: string): Observable<Language[]> {\r\n    return of([]);\r\n  }\r\n\r\n  /**\r\n   * Translate a message.\r\n   * TODO API to be designed\r\n   * @param message the message to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated message or error\r\n   */\r\n  public translate(message: string, from: string, to: string): Observable<string> {\r\n    return throwError('no translation service installed');\r\n  }\r\n\r\n  /**\r\n   * Translate an array of messages at once.\r\n   * @param messages the messages to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated messages or error\r\n   */\r\n  public translateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    return throwError('no translation service installed');\r\n  }\r\n}\r\n","import {AutoTranslateResult} from './auto-translate-result';\r\nimport {format} from 'util';\r\n/**\r\n * A report about a run of Google Translate over all untranslated unit.\r\n * * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateSummaryReport {\r\n\r\n  private _total: number;\r\n  private _ignored: number;\r\n  private _success: number;\r\n  private _failed: number;\r\n  private _allResults: {[id: string]: AutoTranslateResult};\r\n\r\n  constructor() {\r\n    this._allResults = {};\r\n    this._total = 0;\r\n    this._ignored = 0;\r\n    this._success = 0;\r\n    this._failed = 0;\r\n  }\r\n\r\n  /**\r\n   * Add a single result to the summary.\r\n   * @param result\r\n   */\r\n  public addSingleResult(result: AutoTranslateResult) {\r\n    this._allResults[result.translationUnit().id()] = result;\r\n    this._total++;\r\n    if (result.success()) {\r\n      if (result.ignored()) {\r\n        this._ignored++;\r\n      } else {\r\n        this._success++;\r\n      }\r\n    } else {\r\n      this._failed++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Merge another summary into this one.\r\n   * @param anotherSummary\r\n   */\r\n  public merge(anotherSummary: AutoTranslateSummaryReport) {\r\n    this._allResults = Object.assign({}, this._allResults, anotherSummary._allResults);\r\n    this._total += anotherSummary.total();\r\n    this._ignored += anotherSummary.ignored();\r\n    this._success += anotherSummary.success();\r\n    this._failed += anotherSummary.failed();\r\n  }\r\n\r\n  public total(): number {\r\n    return this._total;\r\n  }\r\n\r\n  public ignored(): number {\r\n    return this._ignored;\r\n  }\r\n\r\n  public success(): number {\r\n    return this._success;\r\n  }\r\n\r\n  public failed(): number {\r\n    return this._failed;\r\n  }\r\n\r\n  /**\r\n   * Human readable version of report\r\n   */\r\n  public content(): string {\r\n    return format('Total translated: %s\\nIgnored: %s\\nSuccesful: %s\\nFailed: %s',\r\n      this._total, this._ignored, this._success, this._failed);\r\n  }\r\n\r\n  public singleResult(tuId: string): AutoTranslateResult {\r\n    return this._allResults[tuId];\r\n  }\r\n\r\n  public allResults(): AutoTranslateResult[] {\r\n    const result: AutoTranslateResult[] = [];\r\n    Object.keys(this._allResults).forEach((val) => {\r\n      result.push(this._allResults[val]);\r\n    })\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BackendServiceAPI} from './backend-service-api';\r\nimport {TranslationProject} from './translation-project';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {SerializationService} from './serialization.service';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BackendLocalStorageService extends BackendServiceAPI {\r\n\r\n  private PRAEFIX = 'tinytranslator.';\r\n  private PRAEFIX_PROJECT = this.PRAEFIX + 'project.';\r\n  private KEY_CURRENT_PROJECT_ID = this.PRAEFIX + 'currentproject.id';\r\n  private KEY_CURRENT_TRANSUNIT_ID = this.PRAEFIX + 'currenttransunit.id';\r\n  private KEY_APIKEY = this.PRAEFIX + 'googletranslate.apikey';\r\n  private PRAEFIX_FILE_ACCESS_CONFIGURATION = this.PRAEFIX + 'fileaccessconfiguration.';\r\n\r\n  private _fileAccessConfigurations: BehaviorSubject<IFileAccessConfiguration[]>;\r\n\r\n  constructor(\r\n      private fileAccessServiceFactoryService: FileAccessServiceFactoryService,\r\n      private serializationService: SerializationService\r\n  ) {\r\n    super();\r\n    if (!localStorage) {\r\n      throw new Error('oops, local storage not supported');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store a project.\r\n   */\r\n  store(project: TranslationProject) {\r\n    if (!project.id) {\r\n      project.id = BackendServiceAPI.generateUUID();\r\n    }\r\n    localStorage.setItem(this.keyForProject(project), project.serialize(this.serializationService));\r\n  }\r\n\r\n  /**\r\n   * Get all stored projects.\r\n   */\r\n  projects(): TranslationProject[] {\r\n    const projectKeys = this.getProjectKeys();\r\n    return projectKeys\r\n      .map(key => TranslationProject.deserialize(this.serializationService, localStorage.getItem(key)))\r\n      .sort((p1, p2) => p1.name.localeCompare(p2.name));\r\n  }\r\n\r\n  /**\r\n   * Save id of curent project.\r\n   * @param id of project, null to remove.\r\n   */\r\n  storeCurrentProjectId(id: string) {\r\n    if (!id) {\r\n      localStorage.removeItem(this.KEY_CURRENT_PROJECT_ID);\r\n    } else {\r\n      localStorage.setItem(this.KEY_CURRENT_PROJECT_ID, id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID if current project.\r\n   * @return id of current project or null\r\n   */\r\n  currentProjectId(): string {\r\n    return localStorage.getItem(this.KEY_CURRENT_PROJECT_ID);\r\n  }\r\n\r\n  /**\r\n   * Save ID of last active TransUnit\r\n   * @param tuId active unit id or null.\r\n   */\r\n  storeCurrentTransUnitId(tuId: string) {\r\n    if (!tuId) {\r\n      localStorage.removeItem(this.KEY_CURRENT_TRANSUNIT_ID);\r\n    } else {\r\n      localStorage.setItem(this.KEY_CURRENT_TRANSUNIT_ID, tuId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID of last active TransUnit\r\n   * @return active unit or null.\r\n   */\r\n  currentTransUnitId(): string {\r\n    return localStorage.getItem(this.KEY_CURRENT_TRANSUNIT_ID);\r\n  }\r\n\r\n  deleteProject(project: TranslationProject) {\r\n    if (project && project.id) {\r\n      const key = this.keyForProject(project);\r\n      localStorage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save API Key in store.\r\n   * @param key GoogleTranslate API Key\r\n   */\r\n  storeAutoTranslateApiKey(key: string) {\r\n    if (!key) {\r\n      localStorage.removeItem(this.KEY_APIKEY);\r\n    } else {\r\n      localStorage.setItem(this.KEY_APIKEY, key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get API key from store.\r\n   * @return GoogleTranslate API Key\r\n   */\r\n  autoTranslateApiKey(): string {\r\n    return localStorage.getItem(this.KEY_APIKEY);\r\n  }\r\n\r\n  /**\r\n   * Store a file access configuration.\r\n   * @param configuration the configuration to store.\r\n   */\r\n  storeFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    const added = !configuration.id;\r\n    if (added) {\r\n      configuration.id = BackendServiceAPI.generateUUID();\r\n    }\r\n    const key = this.keyForFileAccessConfiguration(configuration);\r\n    const serialization = this.fileAccessServiceFactoryService.getFileAccessService(configuration.type)\r\n      .serialize(this.serializationService, configuration);\r\n    localStorage.setItem(key, serialization);\r\n    if (this._fileAccessConfigurations) {\r\n      const configs = this._fileAccessConfigurations.getValue();\r\n      const changedConfigs = added ?\r\n        [...configs, configuration] :\r\n        configs.map(conf => conf.id === configuration.id ? configuration : conf);\r\n      this._fileAccessConfigurations.next(changedConfigs);\r\n    }\r\n    return of(configuration);\r\n  }\r\n\r\n  deleteFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    if (configuration && configuration.id) {\r\n      const key = this.keyForFileAccessConfiguration(configuration);\r\n      localStorage.removeItem(key);\r\n      if (this._fileAccessConfigurations) {\r\n        const changedConfigs = this._fileAccessConfigurations.getValue().filter(conf => conf.id !== configuration.id);\r\n        this._fileAccessConfigurations.next(changedConfigs);\r\n      }\r\n      return of(configuration);\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return all saved file access configurations.\r\n   */\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    if (!this._fileAccessConfigurations) {\r\n      const configKeys = this.getFileAccessConfigurationKeys();\r\n      const configs = configKeys\r\n        .map(key => {\r\n          const fileAccessorType = this.getFileAccessorTypeFromKey(key);\r\n          const accessorService = this.fileAccessServiceFactoryService.getFileAccessService(fileAccessorType);\r\n          return accessorService.deserialize(this.serializationService, localStorage.getItem(key));\r\n        })\r\n        .sort((cfg1, cfg2) => cfg1.shortLabel().localeCompare(cfg2.shortLabel()));\r\n      this._fileAccessConfigurations = new BehaviorSubject<IFileAccessConfiguration[]>(configs);\r\n    }\r\n    return this._fileAccessConfigurations;\r\n  }\r\n\r\n  private keyForFileAccessConfiguration(configuration: IFileAccessConfiguration): string {\r\n    return this.PRAEFIX_FILE_ACCESS_CONFIGURATION + configuration.type + '.' + configuration.id;\r\n  }\r\n\r\n  private getFileAccessorTypeFromKey(key: string): FileAccessorType {\r\n    const keyParts = key.split('.');\r\n    const type: string = keyParts[keyParts.length - 2];\r\n    return type as FileAccessorType;\r\n  }\r\n\r\n  private getFileAccessConfigurationKeys(): string[] {\r\n    const result = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key && key.startsWith(this.PRAEFIX_FILE_ACCESS_CONFIGURATION)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private keyForProject(project: TranslationProject) {\r\n    return this.PRAEFIX_PROJECT + project.id;\r\n  }\r\n\r\n  private getProjectKeys(): string[] {\r\n    const result = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key && key.startsWith(this.PRAEFIX_PROJECT)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","import {TranslationProject} from './translation-project';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {Observable, of} from 'rxjs';\r\n\r\n/**\r\n * Interface of BackendService.\r\n * A BackendService can store and retrieve translation projects.\r\n * It also can store an API key for Google Translate.\r\n * And it can store FileAccessConfigurations.\r\n */\r\nexport class BackendServiceAPI {\r\n\r\n  /**\r\n   * Helper function to generate a unique ID.\r\n   * (from http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript)\r\n   * @return a unique id\r\n   */\r\n  static generateUUID(): string {\r\n    // Public Domain/MIT\r\n    let d = new Date().getTime();\r\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n      d += performance.now(); // use high-precision timer if available\r\n    }\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      const r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Store a project.\r\n   */\r\n  store(project: TranslationProject) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Get all stored projects.\r\n   */\r\n  projects(): TranslationProject[] {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Save id of curent project.\r\n   * @param id of project, null to remove.\r\n   */\r\n  storeCurrentProjectId(id: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ID if current project.\r\n   * @return id of current project or null\r\n   */\r\n  currentProjectId(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Save ID of last active TransUnit\r\n   * @param tuId active unit id or null.\r\n   */\r\n  storeCurrentTransUnitId(tuId: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ID of last active TransUnit\r\n   * @return active unit or null.\r\n   */\r\n  currentTransUnitId(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Delete a project from store.\r\n   * @param project to delete\r\n   */\r\n  deleteProject(project: TranslationProject) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Save API Key in store.\r\n   * @param key to store\r\n   */\r\n  storeAutoTranslateApiKey(key: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Get API key from store.\r\n   * @return the key\r\n   */\r\n  autoTranslateApiKey(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Store a file access configuration.\r\n   * @param configuration the configuration to store.\r\n   */\r\n  storeFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    return null;\r\n  }\r\n\r\n  deleteFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Return all saved file access configurations.\r\n   */\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return of([]);\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\n/**\r\n * Filter that filters all units.\r\n * Created by martin on 27.05.2017.\r\n */\r\nexport class TranslationUnitFilterAll implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return true;\r\n  }\r\n\r\n  public name(): string {\r\n    return 'all';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\n/**\r\n * Filter that filters all units that should be autotranslated by google, but translation failed.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslatedFailed implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (this.autoTranslateSummaryReport) {\r\n      const autotranslateResult = this.autoTranslateSummaryReport.singleResult(tu.id());\r\n      return autotranslateResult && autotranslateResult.failed();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslatedFailed';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\n/**\r\n * Filter that filters all units that should be autotranslated by google, but are ignored.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslatedIgnored implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (this.autoTranslateSummaryReport) {\r\n      const autotranslateResult = this.autoTranslateSummaryReport.singleResult(tu.id());\r\n      return autotranslateResult && autotranslateResult.ignored();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslatedIgnored';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {STATE_TRANSLATED} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\nimport {isNullOrUndefined} from '../../common/util';\r\n/**\r\n * Filter that filters all units that are autotranslated by google.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslated implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return this.autoTranslateSummaryReport && tu.targetState() === STATE_TRANSLATED && !isNullOrUndefined(this.autoTranslateSummaryReport.singleResult(tu.id()));\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslated';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {STATE_TRANSLATED} from'@ngx-i18nsupport/ngx-i18nsupport-lib';\r\n/**\r\n * Filter that filters all units that have status \"translated\".\r\n * Created by martin on 30.05.2017.\r\n */\r\nexport class TranslationUnitFilterNeedsReview implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return tu.targetState() === STATE_TRANSLATED;\r\n  }\r\n\r\n  public name(): string {\r\n    return 'needsReview';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {isNullOrUndefined} from '../../common/util';\r\n/**\r\n * Filter that filters units, that contain a given substring in source or target.\r\n * Created by martin on 01.06.2017.\r\n */\r\nexport class TranslationUnitFilterSubstring implements ITranslationUnitFilter {\r\n\r\n  constructor(private substring: string) {\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (!this.substring) {\r\n      return true;\r\n    }\r\n    const source = tu.sourceContent();\r\n    if (this.matches(source)) {\r\n      return true;\r\n    }\r\n    const target = tu.targetContent();\r\n    if (this.matches(target)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private matches(val: string): boolean {\r\n    if (isNullOrUndefined(val)) {\r\n      return false;\r\n    }\r\n    return val.toLowerCase().includes(this.substring.toLowerCase());\r\n  }\r\n\r\n  public name(): string {\r\n    return 'bySubstring';\r\n  }\r\n\r\n  public substringFilterPattern(): string {\r\n    return this.substring;\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\n/**\r\n * Filter that filters all units.\r\n * Created by martin on 27.05.2017.\r\n */\r\nexport class TranslationUnitFilterUntranslated implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return !tu.isTranslated();\r\n  }\r\n\r\n  public name(): string {\r\n    return 'untranslated';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnitFilterAll} from './translation-unit-filter-all';\r\nimport {TranslationUnitFilterAutoTranslated} from './translation-unit-filter-autotranslated';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\nimport {TranslationUnitFilterAutoTranslatedFailed} from './translation-unit-filter-autotranslated-failed';\r\nimport {TranslationUnitFilterAutoTranslatedIgnored} from './translation-unit-filter-autotranslated-ignored';\r\nimport {TranslationUnitFilterNeedsReview} from './translation-unit-filter-needs-review';\r\nimport {TranslationUnitFilterSubstring} from './translation-unit-filter-substring';\r\nimport {TranslationUnitFilterUntranslated} from './translation-unit-filter-untranslated';\r\n\r\nexport const FILTER_ALL = 'all';\r\nexport const FILTER_AUTOTRANSLATED = 'autotranslated';\r\nexport const FILTER_AUTOTRANSLATED_FAILED = 'autotranslatedFailed';\r\nexport const FILTER_AUTOTRANSLATED_IGNORED = 'autotranslatedIgnored';\r\nexport const FILTER_NEEDS_REVIEW = 'needsReview';\r\nexport const FILTER_SUBSTRING = 'bySubstring';\r\nexport const FILTER_UNTRANSLATED = 'untranslated';\r\n\r\n@Injectable()\r\nexport class TranslationUnitFilterService {\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * Create a new filter.\r\n   * @param name one of the FILTER_.. constants\r\n   * @param substr Substring in case of FILTER_SUBSTRING\r\n   * @return {ITranslationUnitFilter} new filter instance\r\n   */\r\n  public getFilter(name: string, substr?: string): ITranslationUnitFilter {\r\n    switch (name) {\r\n      case FILTER_ALL:\r\n        return new TranslationUnitFilterAll();\r\n      case 'autotranslated':\r\n        return new TranslationUnitFilterAutoTranslated(this._autoTranslateSummaryReport);\r\n      case 'autotranslatedFailed':\r\n        return new TranslationUnitFilterAutoTranslatedFailed(this._autoTranslateSummaryReport);\r\n      case 'autotranslatedIgnored':\r\n        return new TranslationUnitFilterAutoTranslatedIgnored(this._autoTranslateSummaryReport);\r\n      case 'needsReview':\r\n        return new TranslationUnitFilterNeedsReview();\r\n      case 'bySubstring':\r\n        return new TranslationUnitFilterSubstring(substr);\r\n      case 'untranslated':\r\n        return new TranslationUnitFilterUntranslated();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Remember the last Autotranslate Summary report.\r\n   * Some filters need that.\r\n   * @param summary\r\n   */\r\n  public setAutotranslateSummaryReport(summary: AutoTranslateSummaryReport) {\r\n    this._autoTranslateSummaryReport = summary;\r\n  }\r\n}\r\n","import {INormalizedMessage, IICUMessage, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {ValidationErrors} from '@angular/forms';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n/**\r\n * Created by martin on 19.05.2017.\r\n * Wrapper around INormalizedMessage for GUI usage.\r\n * Holds the normalized form and the original.\r\n */\r\nexport class NormalizedMessage {\r\n\r\n  /**\r\n   * Original source as string.\r\n   */\r\n  private _original: string;\r\n\r\n  /**\r\n   * normalized message.\r\n   * null if original is unparsable.\r\n   */\r\n  private _normalizedMessage: INormalizedMessage;\r\n\r\n  /**\r\n   * Parse error if message was unparsable.\r\n   */\r\n  private _parseError: string;\r\n\r\n  /**\r\n   * Errors and warnings, lazy evaluated.\r\n   */\r\n  private _errors: ValidationErrors;\r\n  private _errorsInitialized = false;\r\n  private _warnings: ValidationErrors;\r\n  private _warningsInitialized = false;\r\n\r\n  private _sourceMessage: INormalizedMessage;\r\n\r\n  /**\r\n   * Create normalized message\r\n   * @param original the original string.\r\n   * @param normalizedMessage parsed version or null, if parsing error.\r\n   * @param parseError parsing error or (normally) null, if no error.\r\n   */\r\n  constructor(original: string, normalizedMessage: INormalizedMessage, parseError: string, sourceMessage: INormalizedMessage) {\r\n    this._original = original;\r\n    this._normalizedMessage = normalizedMessage;\r\n    this._parseError = parseError;\r\n    this._sourceMessage = sourceMessage;\r\n    this._errorsInitialized = false;\r\n    this._warningsInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Return a copy of the message.\r\n   */\r\n  public copy(): NormalizedMessage {\r\n    return new NormalizedMessage(this._original, this._normalizedMessage, this._parseError, this._sourceMessage);\r\n  }\r\n\r\n  public dislayText(normalize: boolean): string {\r\n    if (normalize) {\r\n      if (this._normalizedMessage) {\r\n        if (this.isICUMessage()) {\r\n          return this._normalizedMessage.asDisplayString() + ' ' + this._normalizedMessage.getICUMessage().asNativeString();\r\n        } else {\r\n          return this._normalizedMessage.asDisplayString();\r\n        }\r\n      } else {\r\n        return this._parseError;\r\n      }\r\n    } else {\r\n      return this._original;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is an ICU message.\r\n   */\r\n  isICUMessage(): boolean {\r\n    return this._normalizedMessage && !isNullOrUndefined(this._normalizedMessage.getICUMessage());\r\n  }\r\n\r\n  getICUMessage(): IICUMessage {\r\n    return this._normalizedMessage ? this._normalizedMessage.getICUMessage() : null;\r\n  }\r\n\r\n  public translate(newValue: string, normalize: boolean): NormalizedMessage {\r\n    let newOriginal: string;\r\n    let newMessage: INormalizedMessage;\r\n    let parseError: string;\r\n    if (normalize) {\r\n      try {\r\n        newMessage = this._sourceMessage.translate(newValue);\r\n        newOriginal = newMessage.asNativeString();\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n        newMessage = null;\r\n        newOriginal = null;\r\n      }\r\n    } else {\r\n      newOriginal = newValue;\r\n      try {\r\n        newMessage = this._sourceMessage.translateNativeString(newValue);\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n      }\r\n    }\r\n    return new NormalizedMessage(newOriginal, newMessage, parseError, this._sourceMessage);\r\n  }\r\n\r\n  /**\r\n   * Auto translate this normalized message via Google Translate.\r\n   * @param autoTranslateService autoTranslateService\r\n   * @param sourceLanguage Language of source\r\n   * @param targetLanguage Language of target\r\n   * @return new translated message (as Observable, it is an async call)\r\n   */\r\n  public autoTranslateUsingService(autoTranslateService: AutoTranslateServiceAPI,\r\n                                   sourceLanguage: string,\r\n                                   targetLanguage: string): Observable<NormalizedMessage> {\r\n    // TODO corner cases to be researched like special tags, ...\r\n    if (this.getICUMessage()) {\r\n      return this.autoTranslateICUMessageUsingService(autoTranslateService, sourceLanguage, targetLanguage);\r\n    } else {\r\n      return autoTranslateService.translate(this.dislayText(true), sourceLanguage, targetLanguage).pipe(\r\n          map((translation: string) => {\r\n            if (!isNullOrUndefined(translation)) {\r\n              return this.translate(translation, true);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n      ));\r\n    }\r\n  }\r\n\r\n  private autoTranslateICUMessageUsingService(autoTranslateService: AutoTranslateServiceAPI,\r\n                                              sourceLanguage: string,\r\n                                              targetLanguage: string): Observable<NormalizedMessage> {\r\n    const icuMessage: IICUMessage = this.getICUMessage();\r\n    const categories = icuMessage.getCategories();\r\n    // check for nested ICUs, we do not support that\r\n    if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n      throw new Error('nested ICU message not supported');\r\n    }\r\n    const allMessages: string[] = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n    return autoTranslateService.translateMultipleStrings(allMessages, sourceLanguage, targetLanguage)\r\n      .pipe(map((translations: string[]) => {\r\n        const icuTranslation: IICUMessageTranslation = {};\r\n        for (let i = 0; i < translations.length; i++) {\r\n          const translationText = translations[i];\r\n          icuTranslation[categories[i].getCategory()] = translationText;\r\n        }\r\n        const result = this.translateICUMessage(icuTranslation);\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  public translateICUMessage(newValue: IICUMessageTranslation): NormalizedMessage {\r\n    let newOriginal: string;\r\n    let newMessage: INormalizedMessage;\r\n    let parseError: string;\r\n      try {\r\n        if (this._normalizedMessage) {\r\n          newMessage = this._normalizedMessage.translateICUMessage(newValue);\r\n        } else {\r\n          newMessage = this._sourceMessage.translateICUMessage(newValue);\r\n        }\r\n        newOriginal = newMessage.asNativeString();\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n        newMessage = null;\r\n        newOriginal = null;\r\n      }\r\n    return new NormalizedMessage(newOriginal, newMessage, parseError, this._sourceMessage);\r\n  }\r\n\r\n  public nativeString(): string {\r\n    if (this._normalizedMessage) {\r\n      return this._normalizedMessage.asNativeString();\r\n    } else {\r\n      return this._original;\r\n    }\r\n  }\r\n\r\n  public validate(normalize: boolean): ValidationErrors | null {\r\n    if (!this._errorsInitialized) {\r\n      if (normalize) {\r\n        if (this._normalizedMessage) {\r\n          this._errors = this._normalizedMessage.validate();\r\n        } else {\r\n          this._errors = {'parseError': this._parseError};\r\n        }\r\n      } else {\r\n        this._errors = null;\r\n      }\r\n      this._errorsInitialized = true;\r\n    }\r\n    return this._errors;\r\n  }\r\n\r\n  public validateWarnings(normalize: boolean): ValidationErrors | null {\r\n    if (!this._warningsInitialized) {\r\n      if (normalize) {\r\n        if (this._normalizedMessage) {\r\n          this._warnings = this._normalizedMessage.validateWarnings();\r\n        } else {\r\n          this._warnings = null;\r\n        }\r\n      } else {\r\n        this._warnings = null;\r\n      }\r\n      this._warningsInitialized = true;\r\n    }\r\n    return this._warnings;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {DownloadUploadFileDescription} from '../file-accessors/download-upload/download-upload-file-description';\r\nimport {DownloadUploadConfiguration} from '../file-accessors/download-upload/download-upload-configuration';\r\nimport {GithubConfiguration} from '../file-accessors/github/github-configuration';\r\nimport {GithubFileDescription} from '../file-accessors/github/github-file-description';\r\nimport {IFile} from '../file-accessors/common/i-file';\r\nimport {GenericFile} from '../file-accessors/common/generic-file';\r\nimport {GithubFile} from '../file-accessors/github/github-file';\r\n\r\ninterface SerializedFormOfFile {\r\n  type?: 'github';\r\n}\r\n\r\ninterface SerializedFormOfDescription {\r\n  accessorType: FileAccessorType;\r\n  type: 'file'|'dir';\r\n}\r\n\r\ninterface SerializedFormOfConfiguration {\r\n  accessorType: FileAccessorType;\r\n}\r\n\r\n/**\r\n * A service to serialize tiny translator objects to strings and deserialze back.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SerializationService {\r\n\r\n  constructor() { }\r\n\r\n  public deserializeIFile(serializedForm: string): IFile {\r\n    const obj: SerializedFormOfFile = JSON.parse(serializedForm);\r\n    switch (obj.type) {\r\n      case 'github':\r\n        return GithubFile.deserialize(this, serializedForm);\r\n      default:\r\n        return GenericFile.deserialize(this, serializedForm);\r\n    }\r\n  }\r\n\r\n  public deserializeIFileDescription(serializedForm: string): IFileDescription {\r\n    const obj: SerializedFormOfDescription = JSON.parse(serializedForm);\r\n    switch (obj.accessorType) {\r\n      case FileAccessorType.DOWNLOAD_UPLOAD:\r\n        return DownloadUploadFileDescription.deserialize(this, serializedForm);\r\n      case FileAccessorType.GITHUB:\r\n        return GithubFileDescription.deserialize(this, serializedForm);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public deserializeIFileConfiguration(serializedForm: string): IFileAccessConfiguration {\r\n    const obj: SerializedFormOfConfiguration = JSON.parse(serializedForm);\r\n    switch (obj.accessorType) {\r\n      case FileAccessorType.DOWNLOAD_UPLOAD:\r\n        return DownloadUploadConfiguration.deserialize(this, serializedForm);\r\n      case FileAccessorType.GITHUB:\r\n        return GithubConfiguration.deserialize(this, serializedForm);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {TranslationFile} from './translation-file';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {BackendServiceAPI} from './backend-service-api';\r\nimport {TranslationProject, WorkflowType} from './translation-project';\r\nimport {combineLatest, Observable, of} from 'rxjs';\r\nimport {AutoTranslateDisabledReasonKey, AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {TranslationUnit} from './translation-unit';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {FileStatus, ICommitData, IFileAccessService, IFileStats} from '../file-accessors/common/i-file-access-service';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {IFile} from '../file-accessors/common/i-file';\r\nimport {DownloadUploadConfiguration} from '../file-accessors/download-upload/download-upload-configuration';\r\n\r\n@Injectable()\r\nexport class TinyTranslatorService {\r\n\r\n  /**\r\n   * List of projects for work.\r\n   */\r\n  private _projects: TranslationProject[];\r\n\r\n  /**\r\n   * The current project.\r\n   */\r\n  private _currentProject: TranslationProject;\r\n\r\n  constructor(private backendService: BackendServiceAPI,\r\n              private fileAccessServiceFactoryService: FileAccessServiceFactoryService,\r\n              private autoTranslateService: AutoTranslateServiceAPI) {\r\n    this._projects = this.backendService.projects();\r\n    const currentProjectId = this.backendService.currentProjectId();\r\n    if (currentProjectId) {\r\n      this._currentProject = this._projects.find((project) => project.id === currentProjectId);\r\n    }\r\n    const currentTransUnitId: string = this.backendService.currentTransUnitId();\r\n    if (currentTransUnitId && this.currentProject()) {\r\n      const transUnit = this.currentProject().translationFile.allTransUnits().find(tu => tu.id() === currentTransUnitId);\r\n      this.currentProject().translationFileView.selectTransUnit(transUnit);\r\n    }\r\n    this.autoTranslateService.setApiKey(this.backendService.autoTranslateApiKey());\r\n  }\r\n\r\n  /**\r\n   * Add a new project.\r\n   * @param project project\r\n   * @return list of errors found in file selection.\r\n   */\r\n  public addProject(project: TranslationProject): string[] {\r\n    this._projects.push(project);\r\n    this.backendService.store(project);\r\n    // TODO error handling\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Create a new project.\r\n   * (you must add it with addProject to use it).\r\n   * @param projectName projectName\r\n   * @param file selected xlf or xmb file to translate\r\n   * @param masterXmbFile in case of xmb the master file\r\n   * @param workflowType Type of workflow used in project (singleUser versus withReview).\r\n   * @return TranslationProject\r\n   */\r\n  public createProject(projectName: string,\r\n                       file: IFileDescription,\r\n                       masterXmbFile?: IFileDescription,\r\n                       workflowType?: WorkflowType): Observable<TranslationProject> {\r\n    if (isNullOrUndefined(file)) {\r\n      return of(new TranslationProject(projectName, null, workflowType));\r\n    }\r\n    const fileAccessService: IFileAccessService = this.fileAccessServiceFactoryService.getFileAccessService(file.configuration.type);\r\n    return combineLatest(fileAccessService.load(file), (masterXmbFile) ? fileAccessService.load(masterXmbFile) : of(null)).pipe(\r\n        map(contentArray => {\r\n          const loadedFile = contentArray[0];\r\n          const loadedMaster = contentArray[1];\r\n          return TranslationFile.fromFile(loadedFile as IFile, loadedMaster);\r\n        }),\r\n        map((translationFile: TranslationFile) => {\r\n          return new TranslationProject(projectName, translationFile, workflowType);\r\n        })\r\n    );\r\n  }\r\n\r\n  public setCurrentProject(project: TranslationProject) {\r\n    let id: string = null;\r\n    if (project) {\r\n      if (isNullOrUndefined(this._projects.find(p => p === project))) {\r\n        throw new Error('oops, selected project not in list');\r\n      }\r\n      id = project.id;\r\n    }\r\n    this._currentProject = project;\r\n    this.backendService.storeCurrentProjectId(id);\r\n  }\r\n\r\n  public currentProject(): TranslationProject {\r\n    return this._currentProject;\r\n  }\r\n\r\n  /**\r\n   * Select a TranslationUnit, if it is currently in the filtered list.\r\n   * If it is not, will do nothing.\r\n   * @param transUnit transUnit\r\n   */\r\n  public selectTransUnit(transUnit: TranslationUnit) {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      if (this.currentProject().translationFileView.selectTransUnit(transUnit)) {\r\n        this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to next unit.\r\n   */\r\n  public nextTransUnit() {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      const transUnit = this.currentProject().translationFileView.nextTransUnit();\r\n      this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to previous unit.\r\n   */\r\n  public prevTransUnit() {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      const transUnit = this.currentProject().translationFileView.prevTransUnit();\r\n      this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n    }\r\n  }\r\n\r\n  public projects(): TranslationProject[] {\r\n    return this._projects;\r\n  }\r\n\r\n  public commitChanges(project: TranslationProject) {\r\n    this.backendService.store(project);\r\n  }\r\n\r\n  public downloadProject(project: TranslationProject) {\r\n    this.fileAccessServiceFactoryService.getFileAccessService(FileAccessorType.DOWNLOAD_UPLOAD)\r\n        .save(project.translationFile.editedFile());\r\n    project.translationFile.markExported();\r\n    this.commitChanges(project);\r\n  }\r\n\r\n  public publishProject(\r\n    project: TranslationProject,\r\n    saveAs: IFileDescription|null,\r\n    commitData: ICommitData,\r\n    confirmModifiedCallback: () => Observable<boolean>,\r\n    confirmOverrideCallback: () => Observable<boolean>): Observable<boolean> {\r\n    let fileToSave = project.translationFile.editedFile();\r\n    const isSavePositionChanged = !!saveAs && !saveAs.equals(fileToSave.description);\r\n    if (isSavePositionChanged) {\r\n      fileToSave = fileToSave.copyForNewDescription(saveAs);\r\n    }\r\n    const fileAccessService =\r\n      this.fileAccessServiceFactoryService.getFileAccessService(fileToSave.description.configuration.type);\r\n    return fileAccessService.stats(fileToSave).pipe(\r\n      switchMap((stats: IFileStats) => {\r\n        if (isSavePositionChanged && stats.status !== FileStatus.EXISTS_NOT) {\r\n          return confirmOverrideCallback().pipe(\r\n            tap(doSave => {commitData.override = doSave; })\r\n          );\r\n        }\r\n        if (!isSavePositionChanged && stats.status === FileStatus.CHANGED) {\r\n          return confirmModifiedCallback().pipe(\r\n            tap(doSave => {commitData.override = doSave; })\r\n          );\r\n        }\r\n        if (!isSavePositionChanged) {\r\n          commitData.override = true;\r\n        }\r\n        return of(true);\r\n      }),\r\n      switchMap((doSave: boolean) => {\r\n        if (doSave) {\r\n          return fileAccessService.save(fileToSave, commitData)\r\n            .pipe(\r\n              tap(() => {\r\n                if (!saveAs) {\r\n                  project.translationFile.markExported();\r\n                  this.commitChanges(project);\r\n                }\r\n              }),\r\n              map(() => {\r\n                return true;\r\n              })\r\n            );\r\n        } else {\r\n          return of(false);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.backendService.deleteProject(project);\r\n    const index = this._projects.findIndex(p => p === project);\r\n    if (index >= 0) {\r\n      this._projects = this._projects.slice(0, index).concat(this._projects.slice(index + 1));\r\n      if (project === this.currentProject()) {\r\n        this.setCurrentProject(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set an API key for Google Translate.\r\n   * Will be stored in local storage.\r\n   * @param key key\r\n   */\r\n  public setAutoTranslateApiKey(key: string) {\r\n    this.autoTranslateService.setApiKey(key);\r\n    this.backendService.storeAutoTranslateApiKey(key);\r\n  }\r\n\r\n  /**\r\n   * Get the currently active Google Translate API key.\r\n   * @return api key\r\n   */\r\n  public autoTranslateApiKey(): string {\r\n    return this.autoTranslateService.apiKey();\r\n  }\r\n\r\n  /**\r\n   * Test, wether auto translation is possible for current project.\r\n   * @return Observable<boolean>\r\n   */\r\n  public canAutoTranslate(): Observable<boolean> {\r\n    if (isNullOrUndefined(this.currentProject()) || !this.currentProject().canTranslate()) {\r\n      return of(false);\r\n    }\r\n    return this.canAutoTranslateForLanguages(\r\n      this.currentProject().translationFile.sourceLanguage(),\r\n      this.currentProject().translationFile.targetLanguage());\r\n  }\r\n\r\n  /**\r\n   * Test, wether auto translation is possible for given languages.\r\n   * @param source Source Language\r\n   * @param target Target Language\r\n   * @return Observable<boolean>\r\n   */\r\n  public canAutoTranslateForLanguages(source: string, target: string): Observable<boolean> {\r\n    return this.autoTranslateService.canAutoTranslate(source, target);\r\n  }\r\n\r\n  /**\r\n   * Reason, why auto translation is not possible for current project.\r\n   * @return Observable<string>\r\n   */\r\n  public autoTranslateDisabledReason(): Observable<string> {\r\n    if (isNullOrUndefined(this.currentProject()) || !this.currentProject().canTranslate()) {\r\n      return of('no translatable project');\r\n    }\r\n    return this.autoTranslateDisabledReasonForLanguages(\r\n      this.currentProject().translationFile.sourceLanguage(),\r\n      this.currentProject().translationFile.targetLanguage());\r\n  }\r\n\r\n  /**\r\n   * Reason, why auto translation is not possible for given languages.\r\n   * @return Observable<string>\r\n   */\r\n  public autoTranslateDisabledReasonForLanguages(source: string, target: string): Observable<string> {\r\n    return this.autoTranslateService.disabledReason(source, target).pipe(\r\n        map((reason) => {\r\n          if (isNullOrUndefined(reason)) {\r\n            return null; // means not disabled, everything is ok!\r\n          }\r\n          switch (reason.reason) {\r\n            case AutoTranslateDisabledReasonKey.NO_PROVIDER:\r\n              return 'no provider';\r\n            case AutoTranslateDisabledReasonKey.NO_KEY:\r\n              return 'no key';\r\n            case AutoTranslateDisabledReasonKey.INVALID_KEY:\r\n              return 'invalid key';\r\n            case AutoTranslateDisabledReasonKey.SOURCE_LANG_NOT_SUPPORTED:\r\n              return 'source language not supported';\r\n            case AutoTranslateDisabledReasonKey.TARGET_LANG_NOT_SUPPORTED:\r\n              return 'target language not supported';\r\n            case AutoTranslateDisabledReasonKey.CONNECT_PROBLEM:\r\n              return 'connection problem: ' + reason.details;\r\n          }\r\n        }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Test call the auto translate service.\r\n   * @param message message\r\n   * @param source source\r\n   * @param target target\r\n   * @return translated string\r\n   */\r\n  public testAutoTranslate(message: string, source: string, target: string): Observable<string> {\r\n    return this.autoTranslateService.translate(message, source, target);\r\n  }\r\n\r\n  /**\r\n   * Auto translate all untranslated units.\r\n   */\r\n  public autoTranslate(): Observable<AutoTranslateSummaryReport>  {\r\n    if (this.currentProject() && this.currentProject().translationFile) {\r\n      return this.currentProject().translationFile.autoTranslateUsingService(this.autoTranslateService).pipe(\r\n          map((summary) => {\r\n            this.commitChanges(this.currentProject());\r\n            return summary;\r\n          }\r\n      ));\r\n    } else {\r\n      return of(new AutoTranslateSummaryReport());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all available accessor configurations from backend.\r\n   */\r\n  getFileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return this.backendService.fileAccessConfigurations().pipe(\r\n      map(configs => [DownloadUploadConfiguration.singleInstance(), ...configs])\r\n    );\r\n  }\r\n\r\n}\r\n","import {TranslationUnit} from './translation-unit';\r\nimport {TranslationFile} from './translation-file';\r\nimport {ITranslationUnitFilter} from './filters/i-translation-unit-filter';\r\nimport {TranslationUnitFilterUntranslated} from './filters/translation-unit-filter-untranslated';\r\n\r\n/**\r\n * A view on the current translation file.\r\n * It determines what trans units are currently visible (specified by the active filter).\r\n * It has a pointer to the current trans unit and allows scrolling through the trans units.\r\n * Created by roobm on 27.05.2017.\r\n */\r\n\r\nexport class TranslationFileView {\r\n\r\n  private _translationFile: TranslationFile;\r\n\r\n  private _filter: ITranslationUnitFilter;\r\n\r\n  /**\r\n   * The scroll list (either all or all unitranslated, depending on ScrollMode).\r\n   */\r\n  private _scrollableTransUnits: TranslationUnit[];\r\n\r\n  /**\r\n   * Pointer to current unit (points to _scrollableTransUnits).\r\n   */\r\n  private _currentTransUnitIndex: number = -1;\r\n\r\n  constructor(translationFile: TranslationFile) {\r\n    this._translationFile = translationFile;\r\n    this.setActiveFilter(new TranslationUnitFilterUntranslated());\r\n  }\r\n\r\n  public activeFilter(): ITranslationUnitFilter {\r\n    return this._filter;\r\n  }\r\n\r\n  /**\r\n   * Change active filter.\r\n   * @param {ITranslationUnitFilter} filter\r\n   */\r\n  public setActiveFilter(filter: ITranslationUnitFilter) {\r\n    this._filter = filter;\r\n    if (this._translationFile) {\r\n      const oldCurrent = (this._currentTransUnitIndex >= 0) ? this.currentTransUnit() : null;\r\n      this._scrollableTransUnits = this._translationFile.allTransUnits().filter((tu) => this._filter.filters(tu));\r\n      if (oldCurrent) {\r\n        this._currentTransUnitIndex = this._scrollableTransUnits.findIndex(tu => tu === oldCurrent);\r\n      }\r\n    } else {\r\n      this._scrollableTransUnits = [];\r\n      this._currentTransUnitIndex = -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculate the view by applying the active filter again.\r\n   */\r\n  public refresh(): void {\r\n    this.setActiveFilter(this.activeFilter());\r\n  }\r\n\r\n  public currentTransUnit(): TranslationUnit {\r\n    if (this._scrollableTransUnits.length === 0) {\r\n      return null;\r\n    }\r\n    if (this._currentTransUnitIndex < 0) {\r\n      this._currentTransUnitIndex = 0;\r\n    }\r\n    if (this._currentTransUnitIndex >= 0 && this._currentTransUnitIndex < this._scrollableTransUnits.length) {\r\n      return this._scrollableTransUnits[this._currentTransUnitIndex];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Select given TransUnit\r\n   * @param selectedTransUnit\r\n   * @return true, if selected, false if not in view.\r\n   */\r\n  public selectTransUnit(selectedTransUnit: TranslationUnit): boolean {\r\n    const index = this._scrollableTransUnits.findIndex(tu => tu === selectedTransUnit);\r\n    if (index >= 0) {\r\n      this._currentTransUnitIndex = index;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public nextTransUnit(): TranslationUnit {\r\n    if (this._currentTransUnitIndex >= 0) {\r\n      this._currentTransUnitIndex++;\r\n    }\r\n    return this.currentTransUnit();\r\n  }\r\n\r\n  public prevTransUnit(): TranslationUnit {\r\n    if (this._currentTransUnitIndex >= 1) {\r\n      this._currentTransUnitIndex--;\r\n    }\r\n    return this.currentTransUnit();\r\n  }\r\n\r\n  public hasNext(): boolean {\r\n    if (this._currentTransUnitIndex < 0) {\r\n      return this._scrollableTransUnits.length > 0;\r\n    } else {\r\n      return this._currentTransUnitIndex < (this._scrollableTransUnits.length - 1);\r\n    }\r\n  }\r\n\r\n  public hasPrev(): boolean {\r\n    if (this._currentTransUnitIndex < 0) {\r\n      return false;\r\n    } else {\r\n      return this._currentTransUnitIndex > 0;\r\n    }\r\n  }\r\n\r\n  public scrollabeTransUnits(): TranslationUnit[] {\r\n    return this._scrollableTransUnits;\r\n  }\r\n\r\n  public currentTransUnitIndex(): number {\r\n    return (this._currentTransUnitIndex < 0) ? 0 : this._currentTransUnitIndex + 1;\r\n  }\r\n\r\n  public scrollabeTransUnitsLength(): number {\r\n    return (this._scrollableTransUnits) ? this._scrollableTransUnits.length : 0;\r\n  }\r\n\r\n}\r\n","import {forkJoin, Observable, of} from 'rxjs';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {\r\n  FILETYPE_XTB,\r\n  FORMAT_XMB,\r\n  IICUMessage,\r\n  IICUMessageTranslation,\r\n  ITranslationMessagesFile,\r\n  ITransUnit,\r\n  TranslationMessagesFileFactory\r\n} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {TranslationUnit} from './translation-unit';\r\nimport {AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {AutoTranslateResult} from './auto-translate-result';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {DownloadUploadFileDescription} from '../file-accessors/download-upload/download-upload-file-description';\r\nimport {IFile} from '../file-accessors/common/i-file';\r\nimport {SerializationService} from './serialization.service';\r\nimport {GenericFile} from '../file-accessors/common/generic-file';\r\n\r\n/**\r\n * A single xlf or xmb file ready for work.\r\n * This is a wrapper around ITranslationMessagesFile.\r\n * It can read from uploaded files and adds errorhandling.\r\n * Created by roobm on 22.03.2017.\r\n */\r\n\r\n// internal representation of serialized form.\r\n// format used since v0.15\r\ninterface ISerializedTranslationFileV2 {\r\n  version: string;\r\n  file: string; // serialized\r\n  editedContent: string;\r\n  master?: string; // serialized\r\n  explicitSourceLanguage: string;\r\n}\r\n\r\n// elder internal representation of serialized form.\r\n// old format, used until v0.14\r\ninterface ISerializedTranslationFile {\r\n  name: string;\r\n  size: number;\r\n  fileContent: string;\r\n  editedContent: string;\r\n  masterContent: string;\r\n  masterName: string;\r\n  explicitSourceLanguage: string;\r\n}\r\n\r\nexport class TranslationFile {\r\n\r\n  private _file: IFile;\r\n\r\n  private _error: string = null;\r\n\r\n  private _master?: IFile;\r\n\r\n  private _translationFile: ITranslationMessagesFile;\r\n\r\n  private _explicitSourceLanguage: string;\r\n\r\n  /**\r\n   * all TransUnits read from file.\r\n   */\r\n  private _allTransUnits: TranslationUnit[];\r\n\r\n  /**\r\n   * Create a TranslationFile from the read file.\r\n   * @param loadedFile read in translation file (xliff, xmb)\r\n   * @param loadedMasterXmbFile optional master for xmb file\r\n   */\r\n  static fromFile(loadedFile: IFile, loadedMasterXmbFile?: IFile): TranslationFile {\r\n    const newInstance = new TranslationFile();\r\n    newInstance._file = loadedFile;\r\n    if (loadedFile.content) {\r\n      try {\r\n        let optionalMaster: any = null;\r\n        if (loadedMasterXmbFile && loadedMasterXmbFile.content) {\r\n          optionalMaster = {\r\n            path: loadedMasterXmbFile.description.name,\r\n            xmlContent: loadedMasterXmbFile.content,\r\n            encoding: null\r\n          };\r\n          newInstance._master = loadedMasterXmbFile;\r\n        }\r\n        newInstance._translationFile =\r\n            TranslationMessagesFileFactory.fromUnknownFormatFileContent(\r\n                loadedFile.content, loadedFile.description.name, 'utf-8', optionalMaster);\r\n        if (newInstance._translationFile.i18nFormat() === FORMAT_XMB) {\r\n          newInstance._error = 'xmb files cannot be translated, use xtb instead'; // TODO i18n\r\n        }\r\n        newInstance.readTransUnits();\r\n      } catch (err) {\r\n        newInstance._error = err.toString();\r\n      }\r\n    }\r\n    return newInstance;\r\n  }\r\n\r\n  /**\r\n   * Create a translation file from the serialization.\r\n   * @param serializationService serializationService\r\n   * @param serializationString serializationString\r\n   * @return TranslationFile\r\n   */\r\n  static deserialize(serializationService: SerializationService, serializationString: string): TranslationFile {\r\n    const deserializedObject = <ISerializedTranslationFile> JSON.parse(serializationString);\r\n    return TranslationFile.fromDeserializedObject(serializationService, deserializedObject);\r\n  }\r\n\r\n  static fromDeserializedObject(\r\n      serializationService: SerializationService,\r\n      deserializedJsonObject: ISerializedTranslationFile|ISerializedTranslationFileV2|any): TranslationFile {\r\n    let deserializedObject: ISerializedTranslationFileV2;\r\n    if (deserializedJsonObject.version) {\r\n      deserializedObject = deserializedJsonObject as ISerializedTranslationFileV2;\r\n    } else {\r\n      // migration from old format\r\n      const v1Object = deserializedJsonObject as ISerializedTranslationFile;\r\n      deserializedObject = {\r\n        version: '1',\r\n        file: new GenericFile(DownloadUploadFileDescription.deserialize(serializationService, null),\r\n          v1Object.name, v1Object.size, v1Object.fileContent)\r\n            .serialize(serializationService),\r\n        editedContent: v1Object.editedContent,\r\n        explicitSourceLanguage: v1Object.explicitSourceLanguage\r\n      };\r\n      if (v1Object.masterContent) {\r\n        deserializedObject.master =\r\n            new GenericFile(DownloadUploadFileDescription.deserialize(serializationService, null),\r\n              v1Object.masterName, 0, v1Object.masterContent)\r\n            .serialize(serializationService);\r\n      }\r\n    }\r\n    const newInstance = new TranslationFile();\r\n    newInstance._file = serializationService.deserializeIFile(deserializedObject.file);\r\n    newInstance._explicitSourceLanguage = deserializedObject.explicitSourceLanguage;\r\n    try {\r\n      const encoding = null; // unknown, lib can find it\r\n      let optionalMaster: {xmlContent: string, path: string, encoding: string} = null;\r\n      if (deserializedObject.master) {\r\n        newInstance._master = serializationService.deserializeIFile(deserializedObject.master);\r\n        optionalMaster = {\r\n          xmlContent: newInstance._master.content,\r\n          path: newInstance._master.description.name,\r\n          encoding: encoding\r\n        };\r\n      }\r\n      newInstance._translationFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(\r\n          deserializedObject.editedContent,\r\n          newInstance._file.description.name,\r\n          encoding,\r\n          optionalMaster);\r\n      newInstance.readTransUnits();\r\n    } catch (err) {\r\n      newInstance._error = err.toString();\r\n    }\r\n    return newInstance;\r\n  }\r\n\r\n  constructor() {\r\n    this._allTransUnits = [];\r\n  }\r\n\r\n  private readTransUnits() {\r\n    this._allTransUnits = [];\r\n    if (this._translationFile) {\r\n      this._translationFile.forEachTransUnit((tu: ITransUnit) => {\r\n        this._allTransUnits.push(new TranslationUnit(this, tu));\r\n      });\r\n    }\r\n  }\r\n\r\n  get name(): string {\r\n    return (this._file && this._file.description) ? this._file.description.name : '';\r\n  }\r\n\r\n  /**\r\n   * In case of xmb/xtb the name of the master xmb file.\r\n   * @return name of master file or null\r\n   */\r\n  get masterName(): string|null {\r\n    return (this._master) ? this._master.description.name : null;\r\n  }\r\n\r\n  get size(): number {\r\n    return this._file.size;\r\n  }\r\n\r\n  get numberOfTransUnits(): number {\r\n    return this._allTransUnits.length;\r\n  }\r\n\r\n  get numberOfUntranslatedTransUnits(): number {\r\n    return (this._translationFile) ? this._translationFile.numberOfUntranslatedTransUnits() : 0;\r\n  }\r\n\r\n  public fileDescription(): IFileDescription {\r\n    return this._file.description;\r\n  }\r\n\r\n  public editedFile(): IFile {\r\n    const content = this.editedContent();\r\n    return this._file.copyWithNewContent(content);\r\n  }\r\n\r\n  /**\r\n   * Type of file.\r\n   * Currently 'xlf', 'xlf2', 'xmb' or or 'xtb'\r\n   * @return type of file\r\n   */\r\n  public fileType(): string {\r\n    if (this._translationFile) {\r\n      return this._translationFile.fileType();\r\n    } else {\r\n      // try to get it by name\r\n      if (this.name && this.name.endsWith('xtb')) {\r\n        return FILETYPE_XTB;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Source language as stored in translation file.\r\n   * @return source language\r\n   */\r\n  public sourceLanguageFromFile(): string {\r\n    return this._translationFile ? this._translationFile.sourceLanguage() : 'unknown';\r\n  }\r\n\r\n  /**\r\n   * Source language from file or explicitly set.\r\n   * @return source language\r\n   */\r\n  public sourceLanguage(): string {\r\n    if (this._translationFile) {\r\n      const srcLang = this._translationFile.sourceLanguage();\r\n      if (isNullOrUndefined(srcLang)) {\r\n        return this._explicitSourceLanguage ? this._explicitSourceLanguage : '';\r\n      } else {\r\n        return srcLang;\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Explicitly set source language.\r\n   * Only used, when file format does not store this (xmb case).\r\n   * @param srcLang source language\r\n   */\r\n  public setSourceLanguage(srcLang: string) {\r\n    this._explicitSourceLanguage = srcLang;\r\n  }\r\n\r\n  public targetLanguage(): string {\r\n    return this._translationFile ? this._translationFile.targetLanguage() : '';\r\n  }\r\n\r\n  public percentageUntranslated(): number {\r\n    if (this.numberOfTransUnits === 0) {\r\n      return 100;\r\n    }\r\n    return 100 * this.numberOfUntranslatedTransUnits / this.numberOfTransUnits;\r\n  }\r\n\r\n  public percentageTranslated(): number {\r\n    return 100 - this.percentageUntranslated();\r\n  }\r\n\r\n  public hasErrors(): boolean {\r\n    return !isNullOrUndefined(this._error);\r\n  }\r\n\r\n  public canTranslate(): boolean {\r\n    return !this.hasErrors() && this.numberOfTransUnits > 0;\r\n  }\r\n\r\n  get error(): string {\r\n    return this._error;\r\n  }\r\n\r\n  /**\r\n   * Show warnings detected in file.\r\n   * @return array of warnings\r\n   */\r\n  public warnings(): string[] {\r\n    return this._translationFile ? this._translationFile.warnings() : [];\r\n  }\r\n\r\n  /**\r\n   * Check, wether file is changed.\r\n   * @return wether file is changed.\r\n   */\r\n  public isDirty(): boolean {\r\n    return this._translationFile && this._file.content !== this.editedContent();\r\n  }\r\n\r\n  /**\r\n   * return content with all changes.\r\n   */\r\n  public editedContent(): string {\r\n    if (this._translationFile) {\r\n      return this._translationFile.editedContent();\r\n    } else {\r\n      this._error = 'cannot save, no valid file';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark file as \"exported\".\r\n   * This means, that the file was downloaded.\r\n   * So the new file content is the edited one.\r\n   */\r\n  public markExported() {\r\n    this._file.content = this.editedContent();\r\n  }\r\n\r\n  /**\r\n   * Return all trans units found in file.\r\n   * @return all trans units found in file\r\n   */\r\n  public allTransUnits(): TranslationUnit[] {\r\n    return this._allTransUnits;\r\n  }\r\n\r\n  /**\r\n   * Return a string representation of translation file content.\r\n   * This will be stored in BackendService.\r\n   */\r\n  public serialize(serializationService: SerializationService): string {\r\n    const serializedObject: ISerializedTranslationFileV2 = {\r\n      version: '2',\r\n      file: this._file.serialize(serializationService),\r\n      editedContent: this.editedContent(),\r\n      master: (this._master) ? this._master.serialize(serializationService) : null,\r\n      explicitSourceLanguage: this._explicitSourceLanguage\r\n    };\r\n    return JSON.stringify(serializedObject);\r\n  }\r\n\r\n  /**\r\n   * Auto translate this file via Google Translate.\r\n   * Translates all untranslated units.\r\n   * @param autoTranslateService the service for the raw text translation via Google Translate\r\n   * @return a summary of the run (how many units are handled, how many sucessful, errors, ..)\r\n   */\r\n  public autoTranslateUsingService(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport> {\r\n    return forkJoin([\r\n      this.doAutoTranslateNonICUMessages(autoTranslateService),\r\n      ...this.doAutoTranslateICUMessages(autoTranslateService)])\r\n      .pipe(\r\n          map((summaries: AutoTranslateSummaryReport[]) => {\r\n            const summary = summaries[0];\r\n            for (let i = 1; i < summaries.length; i++) {\r\n              summary.merge(summaries[i]);\r\n            }\r\n            return summary;\r\n          }\r\n      ));\r\n  }\r\n\r\n  /**\r\n   * Auto translate this file via Google Translate.\r\n   * Translates all untranslated units.\r\n   * @param autoTranslateService the service for the raw text translation via Google Translate\r\n   * @return a summary of the run (how many units are handled, how many sucessful, errors, ..)\r\n   */\r\n  private doAutoTranslateNonICUMessages(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport> {\r\n    // collect all units, that should be auto translated\r\n    const allUntranslated: TranslationUnit[] = this.allTransUnits().filter((tu) => !tu.isTranslated());\r\n    const allTranslatable = allUntranslated.filter((tu) => !tu.sourceContentNormalized().isICUMessage());\r\n    const allMessages: string[] = allTranslatable.map((tu) => {\r\n      return tu.sourceContentNormalized().dislayText(true);\r\n    });\r\n    return autoTranslateService.translateMultipleStrings(allMessages, this.sourceLanguage(), this.targetLanguage())\r\n      .pipe(\r\n          map((translations: string[]) => {\r\n            const summary = new AutoTranslateSummaryReport();\r\n            for (let i = 0; i < translations.length; i++) {\r\n              const tu = allTranslatable[i];\r\n              const translationText = translations[i];\r\n              const result = tu.autoTranslateNonICUUnit(translationText);\r\n              summary.addSingleResult(result);\r\n            }\r\n            return summary;\r\n          }\r\n      ));\r\n  }\r\n\r\n  private doAutoTranslateICUMessages(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport>[] {\r\n    // collect all units, that should be auto translated\r\n    const allUntranslated: TranslationUnit[] = this.allTransUnits().filter((tu) => !tu.isTranslated());\r\n    const allTranslatableICU = allUntranslated.filter((tu) => !isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n    return allTranslatableICU.map((tu) => {\r\n      return this.doAutoTranslateICUMessage(autoTranslateService, tu);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Translate single ICU Messages.\r\n   * @param autoTranslateService autoTranslateService\r\n   * @param tu transunit to translate (must contain ICU Message)\r\n   * @return summaryReport\r\n   */\r\n  private doAutoTranslateICUMessage(\r\n      autoTranslateService: AutoTranslateServiceAPI,\r\n      tu: TranslationUnit): Observable<AutoTranslateSummaryReport> {\r\n    const icuMessage: IICUMessage = tu.sourceContentNormalized().getICUMessage();\r\n    const categories = icuMessage.getCategories();\r\n    // check for nested ICUs, we do not support that\r\n    if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n      const summary = new AutoTranslateSummaryReport();\r\n      summary.addSingleResult(AutoTranslateResult.Ignored(tu, 'nested icu message'));\r\n      return of(summary);\r\n    }\r\n    const allMessages: string[] = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n    return autoTranslateService.translateMultipleStrings(allMessages, this.sourceLanguage(), this.targetLanguage())\r\n      .pipe(\r\n          map((translations: string[]) => {\r\n            const summary = new AutoTranslateSummaryReport();\r\n            const icuTranslation: IICUMessageTranslation = {};\r\n            for (let i = 0; i < translations.length; i++) {\r\n              icuTranslation[categories[i].getCategory()] = translations[i];\r\n            }\r\n            const result = tu.autoTranslateICUUnit(icuTranslation);\r\n            summary.addSingleResult(result);\r\n            return summary;\r\n          }\r\n        ), catchError((err) => {\r\n            const failSummary = new AutoTranslateSummaryReport();\r\n            failSummary.addSingleResult(AutoTranslateResult.Failed(tu, err.message));\r\n            return of(failSummary);\r\n          }\r\n      ));\r\n  }\r\n\r\n}\r\n","import {TranslationFile} from './translation-file';\r\nimport {TranslationFileView} from './translation-file-view';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {SerializationService} from './serialization.service';\r\n\r\n/**\r\n * Workflow type determines, how you work with the tool.\r\n * There are 2 modes:\r\n * SINGLE_USER: You are developer and translator in one person.\r\n * You just translate the messages and, when done, reimport it into your application.\r\n * All translations are marked as state \"final\" directly after input.\r\n * WITH_REVIEW: Developer and translator are distinct people.\r\n * All translation are first marked as \"translated\".\r\n * When done, the translator gives it back to the developer, who reviews all marked as \"translated\".\r\n * He then can mark them all as \"final\" or give them back to the translator.\r\n */\r\nexport enum WorkflowType {\r\n  SINGLE_USER,\r\n  WITH_REVIEW\r\n}\r\n\r\n/**\r\n * The role the user has, when working with the tool.\r\n * As a reviewer you can check the translations and mark them as \"final\" at the end.\r\n * As a translator you can translate and give it back to the reviever.\r\n */\r\nexport enum UserRole {\r\n  REVIEWER,\r\n  TRANSLATOR\r\n}\r\n\r\n/**\r\n * A Translation Project.\r\n * A name and a translation file.\r\n */\r\nexport class TranslationProject {\r\n\r\n  public id: string;\r\n\r\n  private _view: TranslationFileView;\r\n\r\n  private _userRole: UserRole;\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  /**\r\n   * Create a project from the serialization.\r\n   * @param serializationString string returned from serialize()\r\n   * @return deserialized project\r\n   */\r\n  static deserialize(serializationService: SerializationService, serializationString: string): TranslationProject {\r\n    const deserializedObject: any = JSON.parse(serializationString);\r\n    const project = new TranslationProject(\r\n      deserializedObject.name,\r\n      TranslationFile.deserialize(serializationService, deserializedObject.translationFile),\r\n      deserializedObject.workflowType);\r\n    project.id = deserializedObject.id;\r\n    project.setUserRole(deserializedObject.userRole);\r\n    return project;\r\n  }\r\n\r\n  constructor(private _name: string, private _translationFile: TranslationFile, private _workflowType?: WorkflowType) {\r\n    if (isNullOrUndefined(this._workflowType)) {\r\n      this._workflowType = WorkflowType.SINGLE_USER;\r\n    }\r\n    this._view = new TranslationFileView(_translationFile);\r\n  }\r\n\r\n  /**\r\n   * Return a string represenation of project state.\r\n   * This will be stored in BackendService.\r\n   */\r\n  public serialize(serializationService: SerializationService): string {\r\n    const serializedObject = {\r\n      id: this.id,\r\n      name: this.name,\r\n      translationFile: this.translationFile.serialize(serializationService),\r\n      workflowType: this.workflowType,\r\n      userRole: this.userRole\r\n    };\r\n    return JSON.stringify(serializedObject);\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public setName(name: string) {\r\n    this._name = name;\r\n  }\r\n\r\n  get translationFile(): TranslationFile {\r\n    return this._translationFile;\r\n  }\r\n\r\n  get translationFileView(): TranslationFileView {\r\n    return this._view;\r\n  }\r\n\r\n  get workflowType(): WorkflowType {\r\n    return this._workflowType ? this._workflowType : WorkflowType.SINGLE_USER;\r\n  }\r\n\r\n  public setWorkflowType(type: WorkflowType) {\r\n    this._workflowType = type;\r\n  }\r\n\r\n  get userRole(): UserRole {\r\n    return isNullOrUndefined(this._userRole) ? UserRole.TRANSLATOR : this._userRole;\r\n  }\r\n\r\n  public setUserRole(role: UserRole) {\r\n    this._userRole = role;\r\n  }\r\n\r\n  public isReviewModeActive(): boolean {\r\n    return this._userRole === UserRole.REVIEWER;\r\n  }\r\n\r\n  public hasErrors(): boolean {\r\n    return this.translationFile && this.translationFile.hasErrors();\r\n  }\r\n\r\n  public canTranslate(): boolean {\r\n    return this.translationFile && this.translationFile.canTranslate();\r\n  }\r\n\r\n  /**\r\n   * Check, wether a publish is possible.\r\n   */\r\n  public canPublish(): boolean {\r\n    return this.translationFile && this.translationFile.fileDescription().configuration.canPublish();\r\n  }\r\n\r\n  /**\r\n   * Return report about last executed Autotranslate run.\r\n   * @return report about last executed Autotranslate run.\r\n   */\r\n  public autoTranslateSummaryReport(): AutoTranslateSummaryReport {\r\n    return this._autoTranslateSummaryReport;\r\n  }\r\n\r\n  /**\r\n   * Store summary of last executed AutoTranslate run.\r\n   * @param summary summary of last executed AutoTranslate run\r\n   */\r\n  public setAutoTranslateSummaryReport(summary: AutoTranslateSummaryReport) {\r\n    this._autoTranslateSummaryReport = summary;\r\n  }\r\n}\r\n","import {ITransUnit, INormalizedMessage, STATE_NEW, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {TranslationFile} from './translation-file';\r\nimport {NormalizedMessage} from './normalized-message';\r\nimport {format} from 'util';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateResult} from './auto-translate-result';\r\n\r\n/**\r\n * A wrapper around ITransUnit.\r\n * Adds some support for easier GUI handling.\r\n * Created by martin on 24.03.2017.\r\n */\r\n\r\nexport class TranslationUnit {\r\n\r\n  private _isDirty: boolean;\r\n  private _normalizedSourceContent: NormalizedMessage;\r\n  private _normalizedTargetContent: NormalizedMessage;\r\n\r\n  constructor(private _translationFile: TranslationFile, private _transUnit: ITransUnit) {\r\n    this._isDirty = false;\r\n  }\r\n\r\n  public translationFile(): TranslationFile {\r\n    return this._translationFile;\r\n  }\r\n\r\n  public id(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.id;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceContent(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.sourceContent();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceContentNormalized(): NormalizedMessage {\r\n    if (this._transUnit) {\r\n      if (!this._normalizedSourceContent) {\r\n        const original = this._transUnit.sourceContent();\r\n        let normalizedMessage: INormalizedMessage = null;\r\n        let parseError: string = null;\r\n        try {\r\n          normalizedMessage = this._transUnit.sourceContentNormalized();\r\n        } catch (error) {\r\n          parseError = error.message;\r\n        }\r\n        this._normalizedSourceContent = new NormalizedMessage(original, normalizedMessage, parseError, normalizedMessage);\r\n      }\r\n      return this._normalizedSourceContent;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetContent(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.targetContent();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetContentNormalized(): NormalizedMessage {\r\n    if (this._transUnit) {\r\n      if (!this._normalizedTargetContent) {\r\n        const original = this._transUnit.targetContent();\r\n        let normalizedMessage: INormalizedMessage = null;\r\n        let parseError: string = null;\r\n        try {\r\n          normalizedMessage = this._transUnit.targetContentNormalized();\r\n        } catch (error) {\r\n          parseError = error.message;\r\n        }\r\n        this._normalizedTargetContent = new NormalizedMessage(\r\n            original, normalizedMessage, parseError, this._transUnit.sourceContentNormalized());\r\n      }\r\n      return this._normalizedTargetContent;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public description(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.description();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public meaning(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.meaning();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceReferences(): {sourcefile: string, linenumber: number}[] {\r\n    if (this._transUnit) {\r\n      return this._transUnit.sourceReferences();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetState(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.targetState();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public setTargetState(newState: string) {\r\n    if (this._transUnit) {\r\n      this._transUnit.setTargetState(newState);\r\n    }\r\n  }\r\n\r\n  public isDirty(): boolean {\r\n    return this._isDirty;\r\n  }\r\n\r\n  public isTranslated(): boolean {\r\n    return this.targetState() && this.targetState() !== STATE_NEW;\r\n  }\r\n\r\n  public translate(newTranslation: NormalizedMessage) {\r\n    if (this._transUnit) {\r\n      this._transUnit.translate(newTranslation.nativeString());\r\n      this._isDirty = true;\r\n      this._normalizedSourceContent = null;\r\n      this._normalizedTargetContent = null;\r\n    }\r\n  }\r\n\r\n  public autoTranslateNonICUUnit(translatedMessage: string): AutoTranslateResult {\r\n    return this.autoTranslate(this.sourceContentNormalized().translate(translatedMessage, true));\r\n  }\r\n\r\n  public autoTranslateICUUnit(translation: IICUMessageTranslation): AutoTranslateResult {\r\n    return this.autoTranslate(this.sourceContentNormalized().translateICUMessage(translation));\r\n  }\r\n\r\n  /**\r\n   * Try to use the given generated message as a translation.\r\n   * If there are any errors or warnings, translation will not take place.\r\n   * @param translatedMessage translatedMessage\r\n   * @return wether it was successful or not.\r\n   */\r\n  public autoTranslate(translatedMessage: NormalizedMessage): AutoTranslateResult {\r\n    const errors = translatedMessage.validate(true);\r\n    const warnings = translatedMessage.validateWarnings(true);\r\n    if (!isNullOrUndefined(errors)) {\r\n      return AutoTranslateResult.Failed(this, format('errors detected, not translated: %s', JSON.stringify(errors)));\r\n    } else if (!isNullOrUndefined(warnings)) {\r\n      return AutoTranslateResult.Failed(this, format('warnings detected, not translated: %s', JSON.stringify(warnings)));\r\n    } else {\r\n      this.translate(translatedMessage);\r\n      return AutoTranslateResult.Success(this);\r\n    }\r\n  }\r\n}\r\n","<div id=\"container\">\r\n  <ng-container *ngIf=\"readonly\">\r\n    <ng-container *ngIf=\"!isICUMessage() || !normalized\">\r\n      <p>{{textToDisplay()}}</p>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"isICUMessage() && normalized\">\r\n      <div *ngFor=\"let category of getICUMessageCategories(); index as i\" fxLayout=\"row\" fxLayoutGap=\"20px\">\r\n        <p>{{category.getCategory()}}</p>\r\n        <p>{{category.getMessageNormalized().asDisplayString()}}</p>\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n  <form *ngIf=\"!readonly\" [formGroup]=\"form\" fxLayout=\"column\">\r\n    <ng-container *ngIf=\"!isICUMessage() || !normalized\">\r\n      <mat-form-field fxFlex=\"noshrink\">\r\n        <textarea matInput type=\"text\"\r\n          formControlName=\"displayedText\"\r\n          matTextareaAutosize\r\n          [matAutosizeMinRows]=\"2\"\r\n          (keyup.control.enter)=\"accept.next()\">\r\n        </textarea>\r\n     </mat-form-field>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"isICUMessage() && normalized\">\r\n      <div fxFlex=\"noshrink\" *ngFor=\"let category of getICUMessageCategories(); index as i\" fxLayout=\"row\" fxLayoutGap=\"20px\" formArrayName=\"icuMessages\">\r\n        <p>{{category.getCategory()}}</p>\r\n        <mat-form-field fxFlexFill>\r\n          <input matInput type=\"text\" [formControlName]=\"i\" (keyup.control.enter)=\"accept.next()\">\r\n        </mat-form-field>\r\n      </div>\r\n    </ng-container>\r\n  </form>\r\n</div>\r\n","import {\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {NormalizedMessage} from '../model/normalized-message';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {IICUMessageCategory, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime} from 'rxjs/operators';\r\n/**\r\n * A component used as an input field for normalized message.\r\n */\r\n@Component({\r\n  selector: 'app-normalized-message-input',\r\n  templateUrl: './normalized-message-input.component.html',\r\n  styleUrls: ['./normalized-message-input.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NormalizedMessageInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NormalizedMessageInputComponent implements OnInit, OnChanges, ControlValueAccessor {\r\n\r\n  /**\r\n   * The message to be edited or shown.\r\n   */\r\n  @Input() message: NormalizedMessage;\r\n\r\n  /**\r\n   * Flag, wether the message should be shown in normalized form.\r\n   */\r\n  @Input() normalized: boolean;\r\n\r\n  /**\r\n   * Flag, wether message is read only.\r\n   * Then, there is no input field, but only the text is shown.\r\n   */\r\n  @Input() readonly: boolean;\r\n\r\n  /**\r\n   * Emitted when user presses Ctrl+Enter\r\n   */\r\n  @Output() accept = new EventEmitter<void>();\r\n\r\n  editedMessage: NormalizedMessage;\r\n  form: FormGroup;\r\n  subscription: Subscription;\r\n  disabled = false;\r\n\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!isNullOrUndefined(changes['message'])) {\r\n      this.editedMessage = this.message.copy();\r\n    }\r\n    const isChanged = !isNullOrUndefined(changes['message']) || !isNullOrUndefined(changes['normalized']);\r\n    if (isChanged) {\r\n      this.initForm();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.form = this.formBuilder.group({\r\n      displayedText: [{value: this.textToDisplay(), disabled: this.disabled}],\r\n      icuMessages: this.formBuilder.array(this.initIcuMessagesFormArray())\r\n    });\r\n    this.subscription = this.form.valueChanges.pipe(\r\n        debounceTime(200)\r\n    ).subscribe(formValue => {\r\n        this.valueChanged(formValue);\r\n    });\r\n  }\r\n\r\n  private initIcuMessagesFormArray() {\r\n    if (!this.isICUMessage()) {\r\n      return [];\r\n    }\r\n    return this.getICUMessageCategories().map((category) => {\r\n      return [category.getMessageNormalized().asDisplayString()];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Write a new value to the element.\r\n   */\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a change event.\r\n   */\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a touch event.\r\n   */\r\n  registerOnTouched(fn: any): void {\r\n\r\n  }\r\n\r\n  /**\r\n   * This function is called when the control status changes to or from \"DISABLED\".\r\n   * Depending on the value, it will enable or disable the appropriate DOM element.\r\n   * @param isDisabled isDisabled\r\n   */\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.form = this.formBuilder.group({displayedText: [{value: this.textToDisplay(), disabled: this.disabled}]});\r\n  }\r\n\r\n  /**\r\n   * The text to be shown in the readonly mode.\r\n   * @return text to be shown in readonly mode\r\n   */\r\n  textToDisplay(): string {\r\n    if (this.editedMessage) {\r\n      return this.editedMessage.dislayText(this.normalized);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is an ICU message.\r\n   */\r\n  isICUMessage(): boolean {\r\n    if (this.message) {\r\n      return this.message.isICUMessage();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get list of categories if it is an ICU Message.\r\n   * @return categories or empty array.\r\n   */\r\n  getICUMessageCategories(): IICUMessageCategory[] {\r\n    if (isNullOrUndefined(this.message)) {\r\n      return [];\r\n    }\r\n    const icuMessage = this.message.getICUMessage();\r\n    if (isNullOrUndefined(icuMessage)) {\r\n      return [];\r\n    }\r\n    return icuMessage.getCategories();\r\n  }\r\n\r\n  private valueChanged(value: any) {\r\n    if (!this.readonly && this.message) {\r\n      if (!this.isICUMessage() || !this.normalized) {\r\n        const textEntered = value.displayedText;\r\n        this.editedMessage = this.message.translate(textEntered, this.normalized);\r\n      } else {\r\n        const categories = this.getICUMessageCategories();\r\n        const valuesEntered = value.icuMessages;\r\n        const translation: IICUMessageTranslation = {};\r\n        for (let i = 0; i < value.icuMessages.length; i++) {\r\n          translation[categories[i].getCategory()] = valuesEntered[i];\r\n        }\r\n        this.editedMessage = this.message.translateICUMessage(translation);\r\n      }\r\n    } else {\r\n    }\r\n    this.propagateChange(this.editedMessage);\r\n  }\r\n}\r\n","<div fxLayout=\"column\" style=\"min-width: calc(100vw-16px);\"><!-- 16px = 2xmargin of container page -->\r\n  <h1 i18n>Edit project</h1>\r\n  <form id=\"editProjectForm\" fxLayout=\"column\" [formGroup]=\"form\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field fxFlex=\"80%\">\r\n        <input type=\"text\" placeholder=\"Project name\" i18n-placeholder matInput formControlName=\"projectName\" name=\"projectName\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <p><b i18n>Selected translation file:</b></p>\r\n    <app-translation-file-status\r\n                                 [translationFileView]=\"project?.translationFileView\"\r\n                                 [translationFile]=\"project?.translationFile\">\r\n    </app-translation-file-status>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field *ngIf=\"hasExplicitSourceLanguage()\" fxFlex=\"50%\"\r\n                          matTooltip=\"Your selected file contains no information about the language used. You can set it here explicitly.\" i18n-matTooltip>\r\n        <input placeholder=\"Explicitly set source language\" i18n-placeholder matInput formControlName=\"sourceLanguage\" name=\"sourceLanguage\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <div fxFlex=\"50%\">\r\n        <p i18n>Workflow type you are using</p>\r\n        <mat-radio-group formControlName=\"workflowType\" name=\"workflowType\">\r\n          <mat-radio-button value=\"singleuser\" i18n>Single User</mat-radio-button>\r\n          <mat-radio-button value=\"withReview\" i18n>Translator/Reviewer</mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"isWorkflowWithReview()\">\r\n          <p i18n>Your role</p>\r\n          <mat-radio-group name=\"userRole\" formControlName=\"userRole\">\r\n            <mat-radio-button value=\"translator\" i18n>Translator</mat-radio-button>\r\n            <mat-radio-button value=\"reviewer\" i18n>Reviewer</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button fxFlexAlign=\"center\"\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"editProject()\"\r\n            matTooltip=\"commit changes and continue working\" i18n-matTooltip>\r\n      <mat-icon>edit</mat-icon>&nbsp;<span i18n>Save project changes</span>\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject, UserRole, WorkflowType} from '../model/translation-project';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {isNullOrUndefined} from '../common/util';\r\n\r\n/**\r\n * Component to edit some properties of the current project.\r\n * (name, workflowType).-\r\n */\r\n@Component({\r\n  selector: 'app-project-editor',\r\n  templateUrl: './project-editor.component.html',\r\n  styleUrls: ['./project-editor.component.css']\r\n})\r\nexport class ProjectEditorComponent implements OnInit {\r\n\r\n  @Output() onEditProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  @Input() project: TranslationProject;\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      if (this.project) {\r\n        this.form = this.formBuilder.group({\r\n          projectName: [this.project.name],\r\n          workflowType: [this.workflowTypeToString(this.project.workflowType)],\r\n          userRole: [this.userRoleToString(this.project.userRole)],\r\n          sourceLanguage: [this.project.translationFile.sourceLanguage()],\r\n        });\r\n      } else {\r\n        this.form = this.formBuilder.group({\r\n          projectName: [''],\r\n          workflowType: [this.workflowTypeToString(WorkflowType.SINGLE_USER)],\r\n          userRole: [this.userRoleToString(UserRole.TRANSLATOR)],\r\n          sourceLanguage: [null],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  toWorkflowType(type: string): WorkflowType {\r\n    switch (type) {\r\n      case 'singleuser':\r\n        return WorkflowType.SINGLE_USER;\r\n      case 'withReview':\r\n        return WorkflowType.WITH_REVIEW;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  workflowTypeToString(type: WorkflowType): string {\r\n    switch (type) {\r\n      case WorkflowType.SINGLE_USER:\r\n        return 'singleuser';\r\n      case WorkflowType.WITH_REVIEW:\r\n        return 'withReview';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param type\r\n   * @return {any}\r\n   */\r\n  toUserRole(role: string): UserRole {\r\n    switch (role) {\r\n      case 'translator':\r\n        return UserRole.TRANSLATOR;\r\n      case 'reviewer':\r\n        return UserRole.REVIEWER;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  userRoleToString(role: UserRole): string {\r\n    switch (role) {\r\n      case UserRole.TRANSLATOR:\r\n        return 'translator';\r\n      case UserRole.REVIEWER:\r\n        return 'reviewer';\r\n    }\r\n  }\r\n\r\n  editProject() {\r\n    this.project.setName(this.form.value.projectName);\r\n    this.project.setWorkflowType(this.toWorkflowType(this.form.value.workflowType));\r\n    this.project.setUserRole(this.toUserRole(this.form.value.userRole));\r\n    this.project.translationFile.setSourceLanguage(this.form.value.sourceLanguage);\r\n    this.onEditProject.emit(this.project);\r\n  }\r\n\r\n  selectedFilesFormatted(): string {\r\n    if (this.project && this.project.translationFile) {\r\n      return this.project.translationFile.name;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.toWorkflowType(this.form.value.workflowType) === WorkflowType.WITH_REVIEW;\r\n  }\r\n\r\n  hasExplicitSourceLanguage(): boolean {\r\n    return this.project &&\r\n      this.project.translationFile &&\r\n      !this.project.translationFile.hasErrors() &&\r\n      isNullOrUndefined(this.project.translationFile.sourceLanguageFromFile());\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <app-project *ngFor=\"let project of projects\" [project]=\"project\" (onSave)=\"saveProject($event)\" (onStartWork)=\"startWork($event)\" (onDeleteProject)=\"deleteProject($event)\"></app-project>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.css']\r\n})\r\nexport class ProjectListComponent implements OnInit {\r\n\r\n  @Input() projects: TranslationProject[];\r\n\r\n  @Output() onStartProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onDeleteProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onSaveProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public startWork(project: TranslationProject) {\r\n    this.onStartProject.emit(project);\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.onDeleteProject.emit(project);\r\n  }\r\n\r\n  public saveProject(project: TranslationProject) {\r\n    this.onSaveProject.emit(project);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" style=\"min-width: calc(100vw-16px);\"><!-- 16px = 2xmargin of container page -->\r\n  <h1 i18n>Open a new project</h1>\r\n  <form id=\"createProjectForm\" fxLayout=\"column\" [formGroup]=\"form\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field fxFlex=\"90%\">\r\n        <input type=\"text\" placeholder=\"Project name\" i18n-placeholder matInput formControlName=\"projectName\" name=\"projectName\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-form-field>\r\n      <mat-select placeholder=\"load translation file from..\" i18n-placeholder formControlName=\"selectedFileAccessConfigurationIndex\" name=\"selectedFileAccessConfigurationIndex\">\r\n        <mat-option *ngFor=\"let accessor of fileAccessConfigurations() | async; let i = index\" [value]=\"i\" i18n>{{accessor.type}} {{accessor.shortLabel()}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <ng-container *ngIf=\"selectedFileAccessConfiguration()\" [ngSwitch]=\"selectedFileAccessConfiguration().type\">\r\n      <app-translation-file-upload *ngSwitchCase=\"'Browser Upload and Download'\"\r\n                                   [createdProject]=\"createdProject\"\r\n                                   [configuration]=\"selectedFileAccessConfiguration()\"\r\n                                   (fileSelected)=\"fileSelectionChange($event)\"\r\n                                   (masterXmlFileSelected)=\"masterXmlFileSelectionChange($event)\">\r\n      </app-translation-file-upload>\r\n      <app-translation-file-from-github *ngSwitchCase=\"'Github'\"\r\n                                        [createdProject]=\"createdProject\"\r\n                                        [configuration]=\"selectedFileAccessConfiguration()\"\r\n                                        (fileSelected)=\"fileSelectionChange($event)\"\r\n                                        (masterXmlFileSelected)=\"masterXmlFileSelectionChange($event)\">\r\n      </app-translation-file-from-github>\r\n    </ng-container>\r\n    <p><b i18n>Selected translation file:</b></p>\r\n    <app-translation-file-status *ngIf=\"isFileSelected()\"\r\n                                 [translationFileView]=\"createdProject?.translationFileView\"\r\n                                 [translationFile]=\"createdProject?.translationFile\">\r\n    </app-translation-file-status>\r\n    <p></p>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field *ngIf=\"needsExplicitSourceLanguage()\" fxFlex=\"50%\"\r\n                          matTooltip=\"Your selected file contains no information about the language used. You can set it here explicitly.\" i18n-matTooltip>\r\n        <input placeholder=\"Explicitly set source language\" i18n-placeholder matInput formControlName=\"sourceLanguage\" name=\"sourceLanguage\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <div fxFlex=\"50%\">\r\n        <p i18n>Workflow type you are using</p>\r\n        <mat-radio-group formControlName=\"workflowType\" name=\"workflowType\">\r\n          <mat-radio-button value=\"singleuser\" i18n\r\n                           matTooltip=\"Single user workflow. You are translator and reviewer in one person. Every translated unit will directly get the state 'final'\"\r\n                           matTooltipPosition=\"after\" i18n-matTooltip>Single User</mat-radio-button>\r\n          <mat-radio-button value=\"withReview\" i18n\r\n                           matTooltip=\"Workflow with explicit translator and reviewer. Translation get te state 'translated'. The reviewer must mark them as 'final' later.\"\r\n                           matTooltipPosition=\"after\" i18n-matTooltip>Translator/Reviewer</mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"isWorkflowWithReview()\">\r\n          <p i18n>Your role</p>\r\n          <mat-radio-group name=\"userRole\" formControlName=\"userRole\">\r\n            <mat-radio-button value=\"translator\" i18n>Translator</mat-radio-button>\r\n            <mat-radio-button value=\"reviewer\" i18n>Reviewer</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <p></p>\r\n    <button fxFlexAlign=\"center\"\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"emitAddProject()\"\r\n            matTooltip=\"add as new project and start working\" i18n-matTooltip\r\n            [disabled]=\"!isInputComplete()\">\r\n      <mat-icon>add</mat-icon>&nbsp;<span i18n>Add project</span>\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject, UserRole, WorkflowType} from '../model/translation-project';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {Observable, Subscription} from 'rxjs';\r\n\r\n/**\r\n * The ProjectStarter is an upload component.\r\n * You can upload a file for translation (xliff file normally) to start working with it.\r\n */\r\n@Component({\r\n  selector: 'app-project-starter',\r\n  templateUrl: './project-starter.component.html',\r\n  styleUrls: ['./project-starter.component.scss']\r\n})\r\nexport class ProjectStarterComponent implements OnInit, OnDestroy {\r\n\r\n  @Output() addProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  createdProject: TranslationProject;\r\n\r\n  form: FormGroup;\r\n  private selectedFile: IFileDescription;\r\n  private selectedMasterXmbFile: IFileDescription;\r\n  private _fileAccessConfigurations: Observable<IFileAccessConfiguration[]>;\r\n  private _currentFileAccessConfigurations: IFileAccessConfiguration[];\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private translatorService: TinyTranslatorService,\r\n              private fileAccessServiceFactoryService: FileAccessServiceFactoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this._fileAccessConfigurations = this.translatorService.getFileAccessConfigurations();\r\n    this.subscriptions = this._fileAccessConfigurations.subscribe(configs => this._currentFileAccessConfigurations = configs);\r\n    this.subscriptions.add(\r\n      this.form.valueChanges.subscribe(formValue => {\r\n        this.valueChanged(formValue);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        projectName: [''],\r\n        selectedFileAccessConfigurationIndex: 0,\r\n        workflowType: ['singleuser'],\r\n        userRole: ['translator'],\r\n        sourceLanguage: [''],\r\n      });\r\n    }\r\n  }\r\n\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return this._fileAccessConfigurations;\r\n  }\r\n\r\n  selectedFileAccessConfiguration(): IFileAccessConfiguration {\r\n    if (this._currentFileAccessConfigurations) {\r\n      return this._currentFileAccessConfigurations[this.form.value['selectedFileAccessConfigurationIndex']];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  fileSelectionChange(file: IFileDescription) {\r\n    this.selectedFile = file;\r\n    this.valueChanged(this.form.value);\r\n  }\r\n\r\n  masterXmlFileSelectionChange(file: IFileDescription) {\r\n    this.selectedMasterXmbFile = file;\r\n    this.valueChanged(this.form.value);\r\n  }\r\n\r\n  valueChanged(formValue) {\r\n    const translationFile = this.selectedFile;\r\n    const masterXmbFile = this.selectedMasterXmbFile;\r\n    this.translatorService.createProject(\r\n      formValue.projectName,\r\n      translationFile,\r\n      masterXmbFile,\r\n      this.toWorkflowType(formValue.workflowType)\r\n    ).subscribe((newProject) => {\r\n      this.createdProject = newProject;\r\n      if (this.createdProject) {\r\n        this.createdProject.setUserRole(this.toUserRole(formValue.userRole));\r\n        if (this.createdProject.translationFile) {\r\n          this.createdProject.translationFile.setSourceLanguage(formValue.sourceLanguage);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param type type\r\n   * @return type as enum\r\n   */\r\n  toWorkflowType(type: string): WorkflowType {\r\n    switch (type) {\r\n      case 'singleuser':\r\n        return WorkflowType.SINGLE_USER;\r\n      case 'withReview':\r\n        return WorkflowType.WITH_REVIEW;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param role type\r\n   * @return role as enum\r\n   */\r\n  toUserRole(role: string): UserRole {\r\n    switch (role) {\r\n      case 'translator':\r\n        return UserRole.TRANSLATOR;\r\n      case 'reviewer':\r\n        return UserRole.REVIEWER;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  emitAddProject() {\r\n      this.addProject.emit(this.createdProject);\r\n  }\r\n\r\n  /**\r\n   * Check, wether all needed is typed in.\r\n   * Enables the add button.\r\n   */\r\n  isInputComplete(): boolean {\r\n    return this.createdProject && this.createdProject.name && !this.createdProject.hasErrors() && this.isFileSelected();\r\n  }\r\n\r\n  isFileSelected(): boolean {\r\n    return this.selectedFile && !!this.createdProject;\r\n  }\r\n\r\n  needsExplicitSourceLanguage(): boolean {\r\n    return this.createdProject &&\r\n      this.createdProject.translationFile &&\r\n      !this.createdProject.translationFile.hasErrors() &&\r\n      isNullOrUndefined(this.createdProject.translationFile.sourceLanguageFromFile());\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.createdProject && this.createdProject.workflowType === WorkflowType.WITH_REVIEW;\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n  <p><span i18n><b>Project </b> {{project?.name}}</span>\r\n    <button mat-icon-button (click)=\"openProjectDetails()\" matTooltip=\"Details of the project (click to open)\" i18n-matTooltip>\r\n      <mat-icon>info</mat-icon>\r\n    </button>\r\n  </p>\r\n  <app-translation-file-status\r\n    [translationFileView]=\"project?.translationFileView\"\r\n    [translationFile]=\"project?.translationFile\"\r\n    [shortInfo]=\"true\"\r\n    (saved)=\"save($event)\">\r\n  </app-translation-file-status>\r\n</div>\r\n<p *ngIf=\"project?.isReviewModeActive()\">\r\n  <mat-icon matTooltip=\"As a reviewer translation is disabled. You can only mark translated units as reviewed\" i18n-matTooltip>warning</mat-icon>\r\n  <span i18n>You are currently working as reviewer!</span>\r\n</p>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFile} from '../model/translation-file';\r\nimport {Router} from '@angular/router';\r\n\r\n/**\r\n * Shows the actual translation status of a project.\r\n * The layout is made for showing it as part of the toolbar.\r\n * So it is all in one row.\r\n */\r\n@Component({\r\n  selector: 'app-project-status',\r\n  templateUrl: './project-status.component.html',\r\n  styleUrls: ['./project-status.component.css']\r\n})\r\nexport class ProjectStatusComponent implements OnInit {\r\n\r\n  @Input() project: TranslationProject;\r\n  @Input() showActions = true;\r\n\r\n  @Output() onSave: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(translationFile: any) {\r\n    this.onSave.emit(this.project);\r\n  }\r\n\r\n  /**\r\n   * Open a page that shows all the details of the project.\r\n   */\r\n  openProjectDetails() {\r\n    this.router.navigateByUrl('/editproject');\r\n  }\r\n}\r\n","<b>Projet</b> {{project?.name}}","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFile} from '../model/translation-file';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n  @Input() project: TranslationProject;\r\n  @Input() showActions = true;\r\n\r\n  @Output() onStartWork: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onDeleteProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onSave: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(translationFile: TranslationFile) {\r\n    this.onSave.emit(this.project);\r\n  }\r\n\r\n  startWork() {\r\n    this.onStartWork.emit(this.project);\r\n  }\r\n\r\n  deleteProject() {\r\n    this.onDeleteProject.emit(this.project);\r\n  }\r\n}\r\n","<div fxLayout=\"column\" style=\"min-width: calc(100vw-16px);\"><!-- 16px = 2xmargin of container page -->\r\n  <h3 i18n>Publish project</h3>\r\n  <form id=\"publishProjectForm\" fxLayout=\"column\" [formGroup]=\"form\">\r\n    <p i18n>Publish it at the following location</p>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n      <app-file-to-save\r\n              [file]=\"_saveAs\"\r\n              [configurations]=\"configurations()|async\"\r\n              (selectedFile)=\"setSaveAs($event)\">\r\n      </app-file-to-save>\r\n    </div>\r\n    <mat-form-field fxFlex=\"90%\">\r\n      <mat-label i18n>commit message</mat-label>\r\n      <input type=\"text\" placeholder=\"commit message\" i18n-placeholder matInput formControlName=\"commitMessage\" name=\"commitMessage\"/>\r\n    </mat-form-field>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"publish()\" [disabled]=\"form.invalid\"><mat-icon>publish</mat-icon><span i18n>Publish</span></button>\r\n    </div>\r\n    <div *ngIf=\"error\">\r\n      {{error}}\r\n    </div>\r\n  </form>\r\n  <div [hidden]=\"true\">\r\n    <span i18n #confirmSaveQuestion>Do you really want to override this file?</span>\r\n    <span i18n #confirmSaveInfo>File already exists.</span>\r\n    <span i18n #confirmModifyQuestion>Do you really want to override this file?</span>\r\n    <span i18n #confirmModifyInfo>The file has been modified after you loaded it.</span>\r\n    <span i18n #publishOkMessage>File successfully saved.</span>\r\n  </div>\r\n</div>\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {Observable} from 'rxjs';\r\nimport {ConfirmDialogComponent, ConfirmDialogData} from '../confirm-dialog/confirm-dialog.component';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\n\r\n@Component({\r\n  selector: 'app-publish-project-page',\r\n  templateUrl: './publish-project-page.component.html',\r\n  styleUrls: ['./publish-project-page.component.scss']\r\n})\r\nexport class PublishProjectPageComponent implements OnInit {\r\n\r\n  translationFile: IFileDescription;\r\n  _saveAs: IFileDescription;\r\n  form: FormGroup;\r\n  error: string;\r\n\r\n  @ViewChild('confirmSaveQuestion', { static: false }) confirmSaveQuestion: ElementRef;\r\n  @ViewChild('confirmSaveInfo', { static: false }) confirmSaveInfo: ElementRef;\r\n  @ViewChild('confirmModifyQuestion', { static: false }) confirmModifyQuestion: ElementRef;\r\n  @ViewChild('confirmModifyInfo', { static: false }) confirmModifyInfo: ElementRef;\r\n  @ViewChild('publishOkMessage', { static: false }) publishOkMessage: ElementRef;\r\n\r\n  constructor(private tinyTranslatorService: TinyTranslatorService,\r\n              private formBuilder: FormBuilder,\r\n              private dialog: MatDialog,\r\n              private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.translationFile = this.tinyTranslatorService.currentProject().translationFile.fileDescription();\r\n    this._saveAs = this.translationFile;\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      const translationFile = this.tinyTranslatorService.currentProject().translationFile;\r\n      const name = translationFile.fileDescription().name;\r\n      this.form = this.formBuilder.group({\r\n        commitMessage: ['', Validators.required],\r\n        name: [name]\r\n      });\r\n    }\r\n  }\r\n\r\n  private textFromElementRef(ref: ElementRef|null): string {\r\n    if (!ref) {\r\n      return '?';\r\n    } else {\r\n      return ref.nativeElement.innerText;\r\n    }\r\n  }\r\n\r\n  openConfirmSaveDialog(): Observable<boolean> {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      data: {\r\n        question: this.textFromElementRef(this.confirmSaveQuestion),\r\n        info: this.textFromElementRef(this.confirmSaveInfo)\r\n      } as ConfirmDialogData\r\n    });\r\n    return dialogRef.afterClosed();\r\n  }\r\n\r\n  openConfirmModifiedDialog(): Observable<boolean> {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      data: {\r\n        question: this.textFromElementRef(this.confirmModifyQuestion),\r\n        info: this.textFromElementRef(this.confirmModifyInfo)\r\n      } as ConfirmDialogData\r\n    });\r\n    return dialogRef.afterClosed();\r\n  }\r\n\r\n  configurations(): Observable<IFileAccessConfiguration[]> {\r\n    return this.tinyTranslatorService.getFileAccessConfigurations();\r\n  }\r\n\r\n  publish() {\r\n    this.tinyTranslatorService.publishProject(this.tinyTranslatorService.currentProject(),\r\n      this.saveAs(),\r\n      {\r\n        message: this.form.value.commitMessage\r\n      },\r\n      () => this.openConfirmModifiedDialog(),\r\n      () => this.openConfirmSaveDialog()\r\n    ).subscribe((done: boolean) => {\r\n            this.error = null;\r\n            if (done) {\r\n              this.snackBar.open(this.textFromElementRef(this.publishOkMessage), undefined, {\r\n                duration: 3000,\r\n              });\r\n            }\r\n      }, (error) => {\r\n          this.error = error.toString();\r\n      });\r\n  }\r\n\r\n  setSaveAs(f: IFileDescription) {\r\n    this._saveAs = f;\r\n  }\r\n\r\n  private saveAs(): IFileDescription|null {\r\n    return this._saveAs === this.translationFile ? null : this._saveAs;\r\n  }\r\n}\r\n","<div id=\"page\" fxLayout=\"row\">\r\n  <app-translate-unit-list [translationFileView]=\"currentView()\" [workflowType]=\"currentProject()?.workflowType\"\r\n                           [hasAutotranslatedUnits]=\"hasAutotranslatedUnits()\"\r\n                           (changeTranslationUnit)=\"onChangeTranslationUnit($event)\"\r\n                           fxFlex=\"0 0 25%\" fxHide.lt-md></app-translate-unit-list>\r\n  <div id=\"transunit\" fxLayout=\"column\" fxFlex=\"grow\">\r\n    <app-filter-status fxHide.gt-sm [translationFileView]=\"currentView()\"></app-filter-status>\r\n    <app-project-status fxHide.lt-md [project]=\"currentProject()\" (onSave)=\"save()\"></app-project-status>\r\n    <app-translate-unit\r\n      [translationFileView]=\"currentView()\"\r\n      [translationUnit]=\"currentTranslationUnit()\"\r\n      [workflowType]=\"currentProject()?.workflowType\"\r\n      [reviewMode]=\"isInReviewMode()\"\r\n      (changed)=\"commitChanges($event)\"></app-translate-unit>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {TranslationProject, UserRole} from '../model/translation-project';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {NavigationDirection, TranslateUnitChange} from '../translate-unit/translate-unit.component';\r\n\r\n@Component({\r\n  selector: 'app-translate-page',\r\n  templateUrl: './translate-page.component.html',\r\n  styleUrls: ['./translate-page.component.css']\r\n})\r\nexport class TranslatePageComponent implements OnInit {\r\n\r\n  constructor(private translationService: TinyTranslatorService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentProject(): TranslationProject {\r\n    return this.translationService.currentProject();\r\n  }\r\n\r\n  currentView(): TranslationFileView {\r\n    return this.currentProject() ? this.currentProject().translationFileView : null;\r\n  }\r\n\r\n  currentTranslationUnit(): TranslationUnit {\r\n    const currentProject = this.currentProject();\r\n    return currentProject ? currentProject.translationFileView.currentTransUnit() : null;\r\n  }\r\n\r\n  commitChanges(translateUnitChange: TranslateUnitChange) {\r\n    const direction = translateUnitChange.navigationDirection;\r\n    if (direction === NavigationDirection.NEXT) {\r\n      this.translationService.nextTransUnit();\r\n    } else if (direction === NavigationDirection.PREV) {\r\n      this.translationService.prevTransUnit();\r\n    }\r\n    if (translateUnitChange.changedUnit) {\r\n      this.translationService.commitChanges(this.currentProject());\r\n      if (this.currentView()) {\r\n        this.currentView().refresh();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to another unit.\r\n   * @param translationUnit\r\n   */\r\n  onChangeTranslationUnit(translationUnit: TranslationUnit) {\r\n    this.translationService.selectTransUnit(translationUnit);\r\n  }\r\n\r\n  save() {\r\n    this.translationService.downloadProject(this.currentProject());\r\n  }\r\n\r\n  isInReviewMode(): boolean {\r\n    return this.currentProject() && this.currentProject().userRole === UserRole.REVIEWER;\r\n  }\r\n\r\n  hasAutotranslatedUnits(): boolean {\r\n    return this.currentProject()\r\n      && this.currentProject().autoTranslateSummaryReport()\r\n      && this.currentProject().autoTranslateSummaryReport().total() > 0;\r\n  }\r\n\r\n}\r\n","<div id=\"list\" fxLayout=\"column\">\r\n  <div id=\"selectfilter\">\r\n    <p i18n>Show</p>\r\n    <mat-radio-group (change)=\"filterChanged($event)\" [(ngModel)]=\"_selectedFilterName\" fxLayout=\"column\">\r\n      <mat-radio-button value=\"all\" i18n>All units</mat-radio-button>\r\n      <ng-container *ngIf=\"hasAutotranslatedUnits\">\r\n        <mat-radio-button value=\"autotranslated\" i18n>Autotranslated units</mat-radio-button>\r\n        <mat-radio-button value=\"autotranslatedFailed\" i18n>failed Autotranslated</mat-radio-button>\r\n        <mat-radio-button value=\"autotranslatedIgnored\" i18n>ignored Autotranslated</mat-radio-button>\r\n      </ng-container>\r\n      <mat-radio-button value=\"untranslated\" i18n>Untranslated units</mat-radio-button>\r\n      <mat-radio-button *ngIf=\"isWorkflowWithReview()\" value=\"needsReview\" i18n>Review needed</mat-radio-button>\r\n      <mat-radio-button value=\"bySubstring\">\r\n        <span i18n>Search</span>&nbsp;\r\n        <mat-form-field>\r\n          <input matInput type=\"text\" placeholder=\"Substring\" i18n-placeholder [(ngModel)]=\"substringToSearch\"\r\n                 (keyup)=\"substringToSearchChange()\" [disabled]=\"_selectedFilterName !== 'bySubstring'\">\r\n        </mat-form-field>\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n  </div>\r\n  <mat-list>\r\n    <h3 matSubheader i18n>Translation Units</h3>\r\n    <mat-list-item *ngFor=\"let tu of transUnits()\" (click)=\"selectTransUnit(tu)\">\r\n      <mat-icon matListAvatar *ngIf=\"tu.targetState() === 'final'\">done</mat-icon>\r\n      <mat-icon matListAvatar *ngIf=\"tu.targetState() === 'translated'\">label_outline</mat-icon>\r\n      <mat-icon matListAvatar *ngIf=\"!tu.isTranslated()\">translate</mat-icon>\r\n      <h4 matLine [ngClass]=\"{'selected': isSelected(tu)}\">{{tu.sourceContentNormalized().dislayText(true) | abbreviate}}</h4>\r\n      <h4 matLine [ngClass]=\"{'selected': isSelected(tu)}\">{{tu.targetContentNormalized().dislayText(true) | abbreviate}}</h4>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport { MatRadioChange } from \"@angular/material/radio\";\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {WorkflowType} from '../model/translation-project';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {\r\n  FILTER_ALL, FILTER_AUTOTRANSLATED, FILTER_AUTOTRANSLATED_FAILED, FILTER_AUTOTRANSLATED_IGNORED, FILTER_NEEDS_REVIEW,\r\n  FILTER_SUBSTRING,\r\n  FILTER_UNTRANSLATED,\r\n  TranslationUnitFilterService\r\n} from '../model/filters/translation-unit-filter.service';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n/**\r\n * Component that shows a list of trans units.\r\n * It allows to filter by different criteria and to select a unit.\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit-list',\r\n  templateUrl: './translate-unit-list.component.html',\r\n  styleUrls: ['./translate-unit-list.component.scss']\r\n})\r\nexport class TranslateUnitListComponent implements OnInit {\r\n\r\n  private _translationFileView: TranslationFileView;\r\n  public _selectedFilterName = 'all';\r\n  public substringToSearch: string;\r\n  private substringSubject: Subject<string>;\r\n  private substringSubscription: Subscription;\r\n\r\n  /**\r\n   * workflowType determines, what filters are visibile.\r\n   */\r\n  @Input() workflowType: WorkflowType;\r\n\r\n  @Input() hasAutotranslatedUnits: boolean;\r\n\r\n  /**\r\n   * Emitted, when user wants to navigate to another unit.\r\n   */\r\n  @Output() changeTranslationUnit: EventEmitter<TranslationUnit> = new EventEmitter();\r\n\r\n  constructor(private translationUnitFilterService: TranslationUnitFilterService) {\r\n    this.translationFileView = new TranslationFileView(null);\r\n    this.substringSubject = new Subject<string>();\r\n  }\r\n\r\n  @Input() public get translationFileView() {\r\n    return this._translationFileView;\r\n  }\r\n\r\n  public set translationFileView(view: TranslationFileView) {\r\n    if (view) {\r\n      this._translationFileView = view;\r\n    } else {\r\n      this._translationFileView = new TranslationFileView(null);\r\n    }\r\n    this._selectedFilterName = this._translationFileView.activeFilter().name();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public transUnits(): TranslationUnit[] {\r\n    return this.translationFileView.scrollabeTransUnits();\r\n  }\r\n\r\n  public showAll() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_ALL));\r\n  }\r\n\r\n  public showUntranslated() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_UNTRANSLATED));\r\n  }\r\n\r\n  public showNeedsReview() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_NEEDS_REVIEW));\r\n  }\r\n\r\n  public showBySearchFilter() {\r\n    if (this.substringSubscription) {\r\n      this.substringSubscription.unsubscribe();\r\n    }\r\n    const substr = this.substringToSearch ? this.substringToSearch : '';\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_SUBSTRING, substr));\r\n    this.substringSubscription = this.substringSubject.pipe(debounceTime(200)).subscribe((sub) => {\r\n      this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_SUBSTRING, sub));\r\n    });\r\n  }\r\n\r\n  substringToSearchChange() {\r\n    this.substringSubject.next(this.substringToSearch);\r\n  }\r\n\r\n  public showAutotranslated() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED));\r\n  }\r\n\r\n  public showAutotranslatedFailed() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_FAILED));\r\n  }\r\n\r\n  public showAutotranslatedIgnored() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_IGNORED));\r\n  }\r\n\r\n  filterChanged(changeEvent: MatRadioChange) {\r\n    switch (changeEvent.value) {\r\n      case 'all':\r\n        this.showAll();\r\n        break;\r\n      case 'untranslated':\r\n        this.showUntranslated();\r\n        break;\r\n      case 'needsReview':\r\n        this.showNeedsReview();\r\n        break;\r\n      case 'bySubstring':\r\n        this.showBySearchFilter();\r\n        break;\r\n      case 'autotranslated':\r\n        this.showAutotranslated();\r\n        break;\r\n      case 'autotranslatedFailed':\r\n        this.showAutotranslatedFailed();\r\n        break;\r\n      case 'autotranslatedIgnored':\r\n        this.showAutotranslatedIgnored();\r\n        break;\r\n      default:\r\n        // do nothing\r\n    }\r\n  }\r\n\r\n  public selectTransUnit(tu: TranslationUnit) {\r\n    this.changeTranslationUnit.emit(tu);\r\n  }\r\n\r\n  isSelected(tu: TranslationUnit): boolean {\r\n    return tu && tu === this.translationFileView.currentTransUnit();\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.workflowType === WorkflowType.WITH_REVIEW;\r\n  }\r\n\r\n}\r\n","<h3 matDialogTitle i18n>There are problems with the translation</h3>\r\n<div mat-dialog-content>\r\n  <p class=\"warning\" *ngFor=\"let warning of data.warnings\"><mat-icon>warning</mat-icon>&nbsp;{{warning}}</p>\r\n  <p class=\"error\" *ngFor=\"let error of data.errors\"><mat-icon>error</mat-icon>&nbsp;{{error}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button matDialogClose (click)=\"accept()\" [disabled]=\"data?.errors?.length > 0\" i18n>Accept, I know what I do</button>\r\n  <button mat-button matDialogClose (click)=\"discard()\" i18n>Discard changes</button>\r\n  <button mat-button matDialogClose (click)=\"cancel()\" i18n>Cancel</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n/**\r\n * Dialog used by translate-unit-component to show errors and warning.\r\n * There are 3 possible results:\r\n * 'cancel': do not do anything, stay on this trans unit.\r\n * 'discard': do not translate, leave transunit unchanged, but go to the next/prev unit.\r\n * 'accept': translate tu as given, ignoring warnings (errors cannot be ignored).\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit-warning-confirm-dialog',\r\n  templateUrl: './translate-unit-warning-confirm-dialog.component.html',\r\n  styleUrls: ['./translate-unit-warning-confirm-dialog.component.css']\r\n})\r\nexport class TranslateUnitWarningConfirmDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TranslateUnitWarningConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  accept() {\r\n    this.dialogRef.close('accept');\r\n  }\r\n\r\n  discard() {\r\n    this.dialogRef.close('discard');\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close('cancel');\r\n  }\r\n}\r\n","<mat-card *ngIf=\"!translationUnit\">\r\n  <mat-card-header>\r\n    <mat-card-title i18n>No Translation Unit</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content style=\"overflow: hidden\">\r\n    <p i18n>no content</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card *ngIf=\"translationUnit\">\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ng-container i18n>State {{targetState()}}</ng-container>\r\n      <mat-icon *ngIf=\"targetState() === 'final'\">done</mat-icon>\r\n      <mat-icon *ngIf=\"targetState() === 'translated'\">label_outline</mat-icon>\r\n      <mat-icon *ngIf=\"targetState() === 'new'\">translate</mat-icon>\r\n      <button mat-icon-button (click)=\"showTransUnitID()\" matTooltip=\"ID {{transUnitID()}}\"><mat-icon>info</mat-icon></button>\r\n      <button mat-icon-button *ngIf=\"sourceRef()\" (click)=\"showSourceRefInfo()\" matTooltip=\"{{sourceRef()}}\"><mat-icon>location_on</mat-icon></button>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content fxLayout=\"column\" fxLayoutGap=\"5px\" [ngClass.gt-sm]=\"'mdcardcontent_gt'\" [ngClass.lt-md]=\"'mdcardcontent_sm'\">\r\n    <div>\r\n      <div id=\"sourcemessage\">\r\n        <app-language [code]=\"sourceLanguage()\"></app-language>\r\n        <app-normalized-message-input [readonly]=\"true\" [normalized]=\"showNormalized\" [message]=\"sourceContentNormalized()\"></app-normalized-message-input>\r\n        <p *ngIf=\"sourceDescription()\"><b i18n>Description</b> {{sourceDescription()}}</p>\r\n        <p *ngIf=\"sourceMeaning()\"><b i18n>Meaning</b> {{sourceMeaning()}}</p>\r\n      </div>\r\n    </div>\r\n    <form id=\"translation\" fxLayout=\"column\" [formGroup]=\"form\">\r\n      <p fxLayout=\"row\"><span i18n>Your translation to</span>&nbsp;<app-language [code]=\"targetLanguage()\"></app-language></p>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"30px\" fxFlex=\"noshrink\">\r\n        <div fxLayout=\"column\">\r\n          <mat-slide-toggle formControlName=\"showNormalized\" color=\"accent\"\r\n                           matTooltip=\"In normalization mode all markup contained in the messsages is shown in a simplified, format neutral way.\"\r\n                           i18n-matTooltip i18n>Normalization mode\r\n          </mat-slide-toggle>\r\n          <p class=\"normalizationhint\" *ngIf=\"showNormalized\" i18n>(switch off to show native message)</p>\r\n          <p class=\"normalizationhint\" *ngIf=\"!showNormalized\" i18n>(switch on to use normalization)</p>\r\n        </div>\r\n        <button *ngIf=\"!reviewMode\" mat-icon-button\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"accent\"\r\n                (click)=\"undo()\"\r\n                [disabled]=\"!isTranslationChanged()\"\r\n                matTooltip=\"undo changes\" i18n-matTooltip>\r\n          <mat-icon>undo</mat-icon>\r\n        </button>\r\n        <button *ngIf=\"!reviewMode\" mat-mini-fab\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"accent\"\r\n                (click)=\"autoTranslate()\"\r\n                [disabled]=\"autoTranslateDisabled() | async\"\r\n                matTooltip=\"press to get a translation suggestion from Google Translate\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n        </button>\r\n      </div>\r\n      <app-normalized-message-input id=\"translationinput\" [readonly]=\"reviewMode\" [normalized]=\"showNormalized\"\r\n                                    [message]=\"editedTargetContentNormalized()\"\r\n                                    formControlName=\"_editedTargetMessage\"\r\n                                    (accept)=\"next()\"></app-normalized-message-input>\r\n      <p *ngFor=\"let w of warnings()\" class=\"warn\"><mat-icon>warning</mat-icon>&nbsp;{{w}}</p>\r\n      <p *ngFor=\"let e of errors()\" class=\"error\"><mat-icon>error</mat-icon>&nbsp;{{e}}</p>\r\n      <div fxLayout=\"row\">\r\n        <button *ngIf=\"!reviewMode\"\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"primary\"\r\n                (click)=\"markTranslated()\"\r\n                i18n\r\n                matTooltip=\"press to accept the given translation\" i18n-matTooltip>\r\n          mark as translated\r\n        </button>\r\n        <button *ngIf=\"reviewMode && targetState() === 'translated'\"\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"primary\"\r\n                (click)=\"markReviewed()\"\r\n                i18n\r\n                matTooltip=\"press to accept the given translation as reviewed\" i18n-matTooltip>\r\n          mark as reviewed\r\n        </button>\r\n        <button *ngIf=\"reviewMode && targetState() === 'final'\"\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"primary\"\r\n                (click)=\"markTranslated()\"\r\n                i18n\r\n                matTooltip=\"press to reset the reviewed translation to 'translated'\" i18n-matTooltip>\r\n          mark as translated, but not reviewed\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button i18n (click)=\"prev()\"\r\n            [disabled]=\"!hasPrev()\"\r\n            matTooltip=\"accept translation and go to previous unit\" i18n-matTooltip>\r\n      Previous\r\n    </button>\r\n    <button mat-button i18n (click)=\"next()\"\r\n            [disabled]=\"!hasNext()\"\r\n            matTooltip=\"accept translation and go to next unit (Keyboard shortcut 'Ctrl Enter')\" i18n-matTooltip>\r\n      Next\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange, SimpleChanges} from '@angular/core';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport {NormalizedMessage} from '../model/normalized-message';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Observable, of} from 'rxjs';\r\nimport {TranslateUnitWarningConfirmDialogComponent} from '../translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {WorkflowType} from '../model/translation-project';\r\nimport {STATE_FINAL, STATE_TRANSLATED} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {AutoTranslateServiceAPI} from '../model/auto-translate-service-api';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {map} from 'rxjs/operators';\r\n\r\nexport enum NavigationDirection {\r\n  NEXT,\r\n  PREV,\r\n  STAY\r\n}\r\n\r\nexport interface TranslateUnitChange {\r\n  changedUnit?: TranslationUnit;\r\n  navigationDirection: NavigationDirection;\r\n}\r\n\r\n/**\r\n * Component to input a new translation.\r\n * It shows the source and allows to input the target text.\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit',\r\n  templateUrl: './translate-unit.component.html',\r\n  styleUrls: ['./translate-unit.component.css']\r\n})\r\nexport class TranslateUnitComponent implements OnInit, OnChanges {\r\n\r\n  @Input() translationFileView: TranslationFileView;\r\n\r\n  @Input() translationUnit: TranslationUnit;\r\n\r\n  @Input() workflowType: WorkflowType;\r\n\r\n  @Input() showNormalized = true;\r\n\r\n  @Input() reviewMode = false;\r\n\r\n  /**\r\n   * Emitted, when translation is changed and/or the user wants to navigate to next/prev unit.\r\n   * If changedUnit is null, there is no change, but only navigation.\r\n   * @type {EventEmitter<TranslateUnitChange>}\r\n   */\r\n  @Output() changed: EventEmitter<TranslateUnitChange> = new EventEmitter();\r\n\r\n  form: FormGroup;\r\n\r\n  private _editedTargetMessage: NormalizedMessage;\r\n  private _editableTargetMessage: NormalizedMessage;\r\n  private isMarkedAsTranslated = false;\r\n  private isMarkedAsReviewed = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private dialog: MatDialog,\r\n              private _snackbar: MatSnackBar,\r\n              private autoTranslateService: AutoTranslateServiceAPI) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.form.valueChanges.subscribe(formValue => {this.valueChanged(formValue); });\r\n  }\r\n\r\n  private valueChanged(v: any) {\r\n    this._editedTargetMessage = v._editedTargetMessage;\r\n    this.showNormalized = v.showNormalized;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.initForm();\r\n    const changedTranslationUnit: SimpleChange = changes['translationUnit'];\r\n    if (changedTranslationUnit) {\r\n      if (changedTranslationUnit.currentValue) {\r\n        this._editedTargetMessage = changedTranslationUnit.currentValue.targetContentNormalized();\r\n      } else {\r\n        this._editedTargetMessage = null;\r\n      }\r\n      this._editableTargetMessage = null;\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        _editedTargetMessage: [this.editedTargetContentNormalized()],\r\n        showNormalized: [this.showNormalized],\r\n      });\r\n    }\r\n  }\r\n\r\n  public transUnitID(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.id();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public targetState(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.targetState();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public targetLanguage(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.translationFile().targetLanguage();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceContent(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.sourceContent();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceContentNormalized(): NormalizedMessage {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.sourceContentNormalized();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public editedTargetContentNormalized(): NormalizedMessage {\r\n    if (isNullOrUndefined(this._editableTargetMessage)) {\r\n      if (this.translationUnit) {\r\n        this._editableTargetMessage = this.translationUnit.targetContentNormalized();\r\n      }\r\n    }\r\n    return this._editableTargetMessage;\r\n  }\r\n\r\n  public sourceLanguage(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.translationFile().sourceLanguage();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceDescription(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.description();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceMeaning(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.meaning();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceRef(): string {\r\n    if (this.translationUnit) {\r\n      const refs = this.translationUnit.sourceReferences();\r\n      if (refs.length > 0) {\r\n        return refs[0].sourcefile + ':' + refs[0].linenumber;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open a snackbar to show source ref\r\n   */\r\n  public showSourceRefInfo() {\r\n    const sourceRefMessage = 'Original message position: ' + this.sourceRef(); // TODO i18n it\r\n    this._snackbar.open(sourceRefMessage, 'OK', {duration: 5000}); // TODO i18n it\r\n  }\r\n\r\n  /**\r\n   * Open a snackbar to show units ID\r\n   */\r\n  public showTransUnitID() {\r\n    const message = 'ID: ' + this.transUnitID();\r\n    this._snackbar.open(message, 'OK', {duration: 5000});\r\n  }\r\n\r\n  errors(): any[] {\r\n    if (!this._editedTargetMessage) {\r\n      return [];\r\n    }\r\n    const errors = this._editedTargetMessage.validate(this.showNormalized);\r\n    if (errors) {\r\n      return Object.keys(errors).map(key => errors[key]);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  warnings(): any[] {\r\n    if (!this._editedTargetMessage) {\r\n      return [];\r\n    }\r\n    const errors = this._editedTargetMessage.validateWarnings(this.showNormalized);\r\n    if (errors) {\r\n      return Object.keys(errors).map(key => errors[key]);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  commitChanges(navigationDirection: NavigationDirection) {\r\n    if (this.translationUnit) {\r\n      if (this.isTranslationChanged() || this.isMarkedAsTranslated || this.isMarkedAsReviewed) {\r\n        this.translationUnit.translate(this._editedTargetMessage);\r\n        switch (this.workflowType) {\r\n          case WorkflowType.SINGLE_USER:\r\n            this.translationUnit.setTargetState(STATE_FINAL);\r\n            break;\r\n          case WorkflowType.WITH_REVIEW:\r\n            if (this.isMarkedAsReviewed) {\r\n              this.translationUnit.setTargetState(STATE_FINAL);\r\n            } else {\r\n              this.translationUnit.setTargetState(STATE_TRANSLATED);\r\n            }\r\n            break;\r\n        }\r\n        this.changed.emit({changedUnit: this.translationUnit, navigationDirection: navigationDirection});\r\n        this.isMarkedAsTranslated = false;\r\n        this.isMarkedAsReviewed = false;\r\n      } else {\r\n        this.changed.emit({navigationDirection: navigationDirection});\r\n      }\r\n    }\r\n  }\r\n\r\n  public isTranslationChanged(): boolean {\r\n    const original = this.translationUnit.targetContent();\r\n    if (isNullOrUndefined(this._editedTargetMessage)) {\r\n      return false;\r\n    }\r\n    return original !== this._editedTargetMessage.nativeString();\r\n  }\r\n\r\n  markTranslated() {\r\n    this.openConfirmWarningsDialog().subscribe(result => {\r\n      switch (result) {\r\n        case 'cancel':\r\n          break;\r\n        case 'discard':\r\n          break;\r\n        case 'accept':\r\n          this.isMarkedAsTranslated = true;\r\n          this.commitChanges(NavigationDirection.STAY);\r\n          break;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  undo() {\r\n    this._editableTargetMessage = this.translationUnit.targetContentNormalized().copy();\r\n    this._editedTargetMessage = this._editableTargetMessage;\r\n    this.changed.emit({changedUnit: this.translationUnit, navigationDirection: NavigationDirection.STAY});\r\n  }\r\n\r\n  markReviewed() {\r\n    this.isMarkedAsReviewed = true;\r\n    this.commitChanges(NavigationDirection.STAY);\r\n  }\r\n\r\n  /**\r\n   * If there are errors or warnings, open a dialog to conform what to do.\r\n   * There are 3 possible results:\r\n   * 'cancel': do not do anything, stay on this trans unit.\r\n   * 'discard': do not translate, leave transunit unchanged, but go to the next/prev unit.\r\n   * 'accept': translate tu as given, ignoring warnings (errors cannot be ignored).\r\n   * @return any\r\n   */\r\n  openConfirmWarningsDialog(): Observable<any> {\r\n    const warnings = this.warnings();\r\n    const errors = this.errors();\r\n    if (warnings.length === 0 && errors.length === 0) {\r\n      // everything good, we don´t need a dialog then.\r\n      return of('accept');\r\n    } else if (!this.isTranslationChanged()) {\r\n      return of('accept');\r\n    } else {\r\n      const dialogRef = this.dialog.open(TranslateUnitWarningConfirmDialogComponent,\r\n        {\r\n          data: {errors: errors, warnings: warnings},\r\n          disableClose: true\r\n        }\r\n        );\r\n      return dialogRef.afterClosed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Go to the next trans unit.\r\n   */\r\n  public next() {\r\n    if (this.translationUnit) {\r\n      this.openConfirmWarningsDialog().subscribe(result => {\r\n        switch (result) {\r\n          case 'cancel':\r\n            break;\r\n          case 'discard':\r\n            if (this.translationFileView.hasNext()) {\r\n              this.changed.emit({navigationDirection: NavigationDirection.NEXT});\r\n            }\r\n            break;\r\n          case 'accept':\r\n            const direction = (this.translationFileView.hasNext()) ? NavigationDirection.NEXT : NavigationDirection.STAY;\r\n            this.commitChanges(direction);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check, wether there is a next trans unit.\r\n   * @return wether there is a next trans unit\r\n   */\r\n  public hasNext(): boolean {\r\n    if (this.translationUnit) {\r\n      return this.translationFileView.hasNext();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public prev() {\r\n    if (this.translationUnit) {\r\n      this.openConfirmWarningsDialog().subscribe(result => {\r\n        switch (result) {\r\n          case 'cancel':\r\n            break;\r\n          case 'discard':\r\n            if (this.translationFileView.hasPrev()) {\r\n              this.changed.emit({navigationDirection: NavigationDirection.PREV});\r\n            }\r\n            break;\r\n          case 'accept':\r\n            const direction = (this.translationFileView.hasPrev()) ? NavigationDirection.PREV : NavigationDirection.STAY;\r\n            this.commitChanges(direction);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public hasPrev(): boolean {\r\n    if (this.translationUnit) {\r\n      return this.translationFileView.hasPrev();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Auto translate this unit using Google Translate.\r\n   */\r\n  autoTranslate() {\r\n    this.sourceContentNormalized().autoTranslateUsingService(\r\n      this.autoTranslateService,\r\n      this.sourceLanguage(),\r\n      this.targetLanguage()\r\n    ).subscribe((translatedMessage: NormalizedMessage) => {\r\n        this._editableTargetMessage = translatedMessage;\r\n        this._editedTargetMessage = translatedMessage;\r\n        this.changed.emit({changedUnit: this.translationUnit, navigationDirection: NavigationDirection.STAY});\r\n    });\r\n  }\r\n\r\n  autoTranslateDisabled(): Observable<boolean> {\r\n    if (!this.translationUnit) {\r\n      return of(true);\r\n    }\r\n    return this.autoTranslateService.canAutoTranslate(\r\n      this.translationUnit.translationFile().sourceLanguage(),\r\n      this.translationUnit.translationFile().targetLanguage()).pipe(map(val => !val));\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!shortInfo\" fxLayout=\"column\">\r\n  <p *ngIf=\"translationFile?.hasErrors()\" class=\"error\">{{translationFile?.error}}</p>\r\n  <p *ngFor=\"let warning of translationFile?.warnings()\" class=\"warn\">{{warning}}</p>\r\n  <div fxLayout=\"row\">\r\n    <span i18n>Translate <b>from</b></span>&nbsp;<app-language [code]=\"translationFile?.sourceLanguage()\"></app-language>\r\n    &nbsp;<span i18n><b>to</b></span>&nbsp;<app-language [code]=\"translationFile?.targetLanguage()\"></app-language>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n    <span>{{translationFile?.name}}, </span>\r\n    <span i18n>{{translationFile?.size}} bytes, </span>\r\n    <span i18n>{{translationFile?.numberOfTransUnits}} entries</span>\r\n    <mat-icon *ngIf=\"translationFile?.isDirty()\" matTooltip=\"There are unpublished changes\" i18n-matTooltip>warning</mat-icon>\r\n    <button mat-icon-button color=\"primary\" (click)=\"save()\" matTooltip=\"save current state to file (download)\" i18n-matTooltip><mat-icon>save</mat-icon></button>\r\n  </div>\r\n  <div *ngIf=\"translationFile?.masterName\">\r\n    <span i18n>(translation of file {{translationFile?.masterName}})</span>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n    <mat-progress-spinner mode=\"determinate\" [diameter]=\"30\" [strokeWidth]=\"5\" [value]=\"translationFile?.percentageTranslated()\" color=\"accent\"></mat-progress-spinner>\r\n    <span i18n>{{percentageTranslated()}} % translated</span>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"shortInfo\" fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n    <mat-progress-spinner mode=\"determinate\" [diameter]=\"30\" [strokeWidth]=\"5\" [value]=\"translationFile?.percentageTranslated()\" color=\"accent\"></mat-progress-spinner>\r\n    <span i18n>{{percentageTranslated()}} % translated</span>\r\n  </div>\r\n  <p *ngIf=\"translationFileView?.currentTransUnitIndex() > 0\" i18n>current transunit {{translationFileView?.currentTransUnitIndex()}} of {{translationFileView?.scrollabeTransUnitsLength()}}</p>\r\n  <mat-icon *ngIf=\"translationFile?.isDirty()\" matTooltip=\"There are unpublished changes\" i18n-matTooltip>warning</mat-icon>\r\n  <button mat-icon-button color=\"primary\" (click)=\"save()\" matTooltip=\"export current translation state to file (download)\" i18n-matTooltip><mat-icon>save</mat-icon></button>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationFile} from '../model/translation-file';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\n\r\n/**\r\n * Component to show the current status of a loaded translation file.\r\n * It shows the size, number of translations, wether it is changed etc.\r\n */\r\n@Component({\r\n  selector: 'app-translation-file-status',\r\n  templateUrl: './translation-file-status.component.html',\r\n  styleUrls: ['./translation-file-status.component.css']\r\n})\r\nexport class TranslationFileStatusComponent implements OnInit {\r\n\r\n  @Input() translationFile: TranslationFile;\r\n  @Input() translationFileView: TranslationFileView;\r\n  @Input() shortInfo = false;\r\n\r\n  @Output() saved: EventEmitter<TranslationFile> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * percentage translated rounded to 0 digits.\r\n   * @return percentage number\r\n   */\r\n  public percentageTranslated(): string {\r\n    if (this.translationFile) {\r\n      const result: number = this.translationFile.percentageTranslated();\r\n      return result.toFixed(0);\r\n    } else {\r\n      return '0';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save the changed file.\r\n   */\r\n  public save() {\r\n    if (this.translationFile) {\r\n      this.saved.emit(this.translationFile);\r\n    }\r\n  }\r\n}\r\n","<span i18n>A newer version of the app is available (actual version {{actualVersion}}, new version {{availableVersion}})</span>\r\n<button mat-button color=\"primary\" i18n (click)=\"updateApplication()\">Refresh Application</button>\r\n<button mat-button i18n (click)=\"closeSnackbar()\">Ignore</button>\r\n","import {Component, OnInit, Optional} from '@angular/core';\r\nimport { MatSnackBarRef } from \"@angular/material/snack-bar\";\r\nimport {SwUpdate, UpdateAvailableEvent} from '@angular/service-worker';\r\nimport {take} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-update-available',\r\n  templateUrl: './update-available.component.html',\r\n  styleUrls: ['./update-available.component.css']\r\n})\r\nexport class UpdateAvailableComponent implements OnInit {\r\n\r\n  actualVersion: string;\r\n  availableVersion: string;\r\n\r\n  constructor(private snackBarRef: MatSnackBarRef<any>, @Optional() private updates: SwUpdate) { }\r\n\r\n  ngOnInit() {\r\n    this.actualVersion = 'unknown';\r\n    this.availableVersion = 'unknown';\r\n    if (this.updates) {\r\n      this.updates.available.pipe(take(1)).subscribe((availableEvent: UpdateAvailableEvent) => {\r\n        if (availableEvent.current.appData) {\r\n          this.actualVersion = (<any> availableEvent.current.appData).version;\r\n        }\r\n        if (availableEvent.available.appData) {\r\n            this.availableVersion = (<any> availableEvent.available.appData).version;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  updateApplication() {\r\n    if (this.updates) {\r\n        this.updates.activateUpdate().then(() => document.location.reload());\r\n    }\r\n  }\r\n\r\n  closeSnackbar() {\r\n    this.snackBarRef.dismiss();\r\n  }\r\n}\r\n","// The file content for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  version: '%VERSION%',\r\n  buildtime: '%BUILDTIME%',\r\n  base_href: '%BASE_HREF%',\r\n  googletranslate_api_key: null,\r\n  googletranslate_provoke_failures: false,\r\n  github_api_key: null,\r\n  github_provoke_failures: false,\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}