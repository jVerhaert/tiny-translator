{"version":3,"sources":["webpack:///S:/experimente/ngx-i18nsupport/dist/ngx-i18nsupport-lib/fesm5/ngx-i18nsupport-ngx-i18nsupport-lib.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/active-project.guard.ts","webpack:///./src/app/app-material.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/auto-translate-summary-page/auto-translate-summary-page.component.css","webpack:///./src/app/auto-translate-summary-page/auto-translate-summary-page.component.html","webpack:///./src/app/auto-translate-summary-page/auto-translate-summary-page.component.ts","webpack:///./src/app/common/abbreviate.pipe.ts","webpack:///./src/app/common/util.ts","webpack:///./src/app/configure-auto-translate-page/configure-auto-translate-page.component.css","webpack:///./src/app/configure-auto-translate-page/configure-auto-translate-page.component.html","webpack:///./src/app/configure-auto-translate-page/configure-auto-translate-page.component.ts","webpack:///./src/app/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/create-project-page/create-project-page.component.css","webpack:///./src/app/create-project-page/create-project-page.component.html","webpack:///./src/app/create-project-page/create-project-page.component.ts","webpack:///./src/app/edit-project-page/edit-project-page.component.css","webpack:///./src/app/edit-project-page/edit-project-page.component.html","webpack:///./src/app/edit-project-page/edit-project-page.component.ts","webpack:///./src/app/file-accessors/common/file-access-service-factory.service.ts","webpack:///./src/app/file-accessors/common/file-accessor-type.ts","webpack:///./src/app/file-accessors/common/file-explorer-dialog/file-explorer-dialog.component.html","webpack:///./src/app/file-accessors/common/file-explorer-dialog/file-explorer-dialog.component.scss","webpack:///./src/app/file-accessors/common/file-explorer-dialog/file-explorer-dialog.component.ts","webpack:///./src/app/file-accessors/common/file-explorer/file-explorer.component.html","webpack:///./src/app/file-accessors/common/file-explorer/file-explorer.component.scss","webpack:///./src/app/file-accessors/common/file-explorer/file-explorer.component.ts","webpack:///./src/app/file-accessors/common/file-to-save/file-to-save.component.html","webpack:///./src/app/file-accessors/common/file-to-save/file-to-save.component.scss","webpack:///./src/app/file-accessors/common/file-to-save/file-to-save.component.ts","webpack:///./src/app/file-accessors/common/generic-file.ts","webpack:///./src/app/file-accessors/common/i-file-access-service.ts","webpack:///./src/app/file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component.html","webpack:///./src/app/file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component.scss","webpack:///./src/app/file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component.ts","webpack:///./src/app/file-accessors/common/save-as-explorer/save-as-explorer.component.css","webpack:///./src/app/file-accessors/common/save-as-explorer/save-as-explorer.component.html","webpack:///./src/app/file-accessors/common/save-as-explorer/save-as-explorer.component.ts","webpack:///./src/app/file-accessors/download-upload/asynchronous-file-reader.service.ts","webpack:///./src/app/file-accessors/download-upload/download-upload-configuration.ts","webpack:///./src/app/file-accessors/download-upload/download-upload-file-description.ts","webpack:///./src/app/file-accessors/download-upload/download-upload.service.ts","webpack:///./src/app/file-accessors/download-upload/downloader.service.ts","webpack:///./src/app/file-accessors/download-upload/translation-file-upload/translation-file-upload.component.html","webpack:///./src/app/file-accessors/download-upload/translation-file-upload/translation-file-upload.component.scss","webpack:///./src/app/file-accessors/download-upload/translation-file-upload/translation-file-upload.component.ts","webpack:///./src/app/file-accessors/github/configure-github-page/configure-github-page.component.css","webpack:///./src/app/file-accessors/github/configure-github-page/configure-github-page.component.html","webpack:///./src/app/file-accessors/github/configure-github-page/configure-github-page.component.ts","webpack:///./src/app/file-accessors/github/github-accessor.service.ts","webpack:///./src/app/file-accessors/github/github-api.service.ts","webpack:///./src/app/file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component.css","webpack:///./src/app/file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component.html","webpack:///./src/app/file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component.ts","webpack:///./src/app/file-accessors/github/github-config-editor/github-config-editor.component.css","webpack:///./src/app/file-accessors/github/github-config-editor/github-config-editor.component.html","webpack:///./src/app/file-accessors/github/github-config-editor/github-config-editor.component.ts","webpack:///./src/app/file-accessors/github/github-configuration.ts","webpack:///./src/app/file-accessors/github/github-file-description.ts","webpack:///./src/app/file-accessors/github/github-file.ts","webpack:///./src/app/file-accessors/github/translation-file-from-github/translation-file-from-github.component.css","webpack:///./src/app/file-accessors/github/translation-file-from-github/translation-file-from-github.component.html","webpack:///./src/app/file-accessors/github/translation-file-from-github/translation-file-from-github.component.ts","webpack:///./src/app/filter-page/filter-page.component.css","webpack:///./src/app/filter-page/filter-page.component.html","webpack:///./src/app/filter-page/filter-page.component.ts","webpack:///./src/app/filter-status/filter-status.component.css","webpack:///./src/app/filter-status/filter-status.component.html","webpack:///./src/app/filter-status/filter-status.component.ts","webpack:///./src/app/home-page/home-page.component.css","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/language/language.component.html","webpack:///./src/app/language/language.component.scss","webpack:///./src/app/language/language.component.ts","webpack:///./src/app/model/auto-translate-google.service.ts","webpack:///./src/app/model/auto-translate-result.ts","webpack:///./src/app/model/auto-translate-service-api.ts","webpack:///./src/app/model/auto-translate-summary-report.ts","webpack:///./src/app/model/backend-local-storage.service.ts","webpack:///./src/app/model/backend-service-api.ts","webpack:///./src/app/model/filters/translation-unit-filter-all.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated-failed.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated-ignored.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated.ts","webpack:///./src/app/model/filters/translation-unit-filter-needs-review.ts","webpack:///./src/app/model/filters/translation-unit-filter-substring.ts","webpack:///./src/app/model/filters/translation-unit-filter-untranslated.ts","webpack:///./src/app/model/filters/translation-unit-filter.service.ts","webpack:///./src/app/model/normalized-message.ts","webpack:///./src/app/model/serialization.service.ts","webpack:///./src/app/model/tiny-translator.service.ts","webpack:///./src/app/model/translation-file-view.ts","webpack:///./src/app/model/translation-file.ts","webpack:///./src/app/model/translation-project.ts","webpack:///./src/app/model/translation-unit.ts","webpack:///./src/app/normalized-message-input/normalized-message-input.component.css","webpack:///./src/app/normalized-message-input/normalized-message-input.component.html","webpack:///./src/app/normalized-message-input/normalized-message-input.component.ts","webpack:///./src/app/project-editor/project-editor.component.css","webpack:///./src/app/project-editor/project-editor.component.html","webpack:///./src/app/project-editor/project-editor.component.ts","webpack:///./src/app/project-list/project-list.component.css","webpack:///./src/app/project-list/project-list.component.html","webpack:///./src/app/project-list/project-list.component.ts","webpack:///./src/app/project-starter/project-starter.component.html","webpack:///./src/app/project-starter/project-starter.component.scss","webpack:///./src/app/project-starter/project-starter.component.ts","webpack:///./src/app/project-status/project-status.component.css","webpack:///./src/app/project-status/project-status.component.html","webpack:///./src/app/project-status/project-status.component.ts","webpack:///./src/app/project/project.component.css","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/publish-project-page/publish-project-page.component.html","webpack:///./src/app/publish-project-page/publish-project-page.component.scss","webpack:///./src/app/publish-project-page/publish-project-page.component.ts","webpack:///./src/app/translate-page/translate-page.component.css","webpack:///./src/app/translate-page/translate-page.component.html","webpack:///./src/app/translate-page/translate-page.component.ts","webpack:///./src/app/translate-unit-list/translate-unit-list.component.html","webpack:///./src/app/translate-unit-list/translate-unit-list.component.scss","webpack:///./src/app/translate-unit-list/translate-unit-list.component.ts","webpack:///./src/app/translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component.css","webpack:///./src/app/translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component.html","webpack:///./src/app/translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component.ts","webpack:///./src/app/translate-unit/translate-unit.component.css","webpack:///./src/app/translate-unit/translate-unit.component.html","webpack:///./src/app/translate-unit/translate-unit.component.ts","webpack:///./src/app/translation-file-status/translation-file-status.component.css","webpack:///./src/app/translation-file-status/translation-file-status.component.html","webpack:///./src/app/translation-file-status/translation-file-status.component.ts","webpack:///./src/app/update-available/update-available.component.css","webpack:///./src/app/update-available/update-available.component.html","webpack:///./src/app/update-available/update-available.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACS;AACN;AACe;AACtB;;AAErC;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC,UAAU;AACV;AACA;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,6BAA6B;AACxD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oDAAa;AACtC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,gDAAS;AAC1C,mBAAmB,EAAE;AACrB;AACA,uBAAuB,wBAAwB;AAC/C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gDAAgD,gDAAgD;AAChG;AACA;AACA,gDAAgD,oCAAoC;AACpF;AACA;AACA,+BAA+B,SAAS;AACxC,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,gDAAgD,iCAAiC;AACjF;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,4CAA4C,iCAAiC;AAC7E;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,EAAE;AACrD;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,EAAE;AACrD,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC,8BAA8B;AAC9B,+BAA+B;AAC/B,gCAAgC;AAChC,uCAAuC;AACvC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAQ;AACpC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uEAAuE,wBAAwB,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mCAAmC,gDAAS;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,qBAAqB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,qBAAqB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,oEAAoE,qBAAqB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6DAA6D,+DAA+D,EAAE;AAC9H,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,qDAAQ;AACpB,4CAA4C,EAAE;AAC9C;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,qCAAQ;AAChC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oCAAoC;AACpC;AACA;AACA,SAAS;AACT,mCAAmC;AACnC;AACA;AACA,SAAS;AACT,mCAAmC;AACnC;AACA;AACA,SAAS;AACT,qBAAqB;AACrB,0CAA0C;AAC1C;AACA;AACA;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE;AACA;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,mDAAM,OAAO,GAAG;AAC1D,SAAS;AACT,eAAe,mDAAM,GAAG,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA,qBAAqB,qDAAQ;AAC7B;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,4FAA4F,EAAE;AAC9F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,iDAAiD,6BAA6B,EAAE;AAChF;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD,SAAS,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD,SAAS,MAAM;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B,kEAAkE,EAAE;AACpE;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA,gDAAgD,4CAA4C,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,+BAA+B,EAAE;AACjC,+CAA+C,EAAE;AACjD;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,qCAAQ;AAChC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,SAAS;AACT;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,8DAAiB;AAC3C,mCAAmC,qCAAqC;AACxE,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,8DAAiB;AAC3C,mCAAmC,qCAAqC;AACxE,SAAS;AACT;AACA;AACA,iCAAiC,iBAAiB;AAClD,SAAS;AACT;AACA,sBAAsB,UAAU;AAChC,qCAAqC,oCAAoC;AACzE,SAAS;AACT;AACA;AACA,yCAAyC,oCAAoC;AAC7E,SAAS;AACT;AACA;AACA,qCAAqC,oBAAoB;AACzD,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,gDAAS;AAC/B,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yBAAyB,8DAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C,kCAAkC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,sCAAsC,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACrG,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE,sCAAsC,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACrG,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,gDAAS;AAChC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,sFAAsF,+CAA+C,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,sFAAsF,+CAA+C,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kFAAkF,6CAA6C,EAAE;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kFAAkF,6CAA6C,EAAE;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,gFAAgF,EAAE;AAClF;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA,mFAAmF,EAAE;AACrF;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA,wFAAwF,EAAE;AAC1F;AACA;AACA,0FAA0F,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,4BAA4B;AAC3D,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iDAAiD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA,2BAA2B,EAAE;AAC7B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD;AACA,0CAA0C,OAAO;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,qBAAqB;AACxC,uBAAuB,EAAE;AACzB;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yEAAyE,EAAE;AAC3E;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0EAA0E,EAAE;AAC5E;AACA,+EAA+E,EAAE;AACjF;AACA,6EAA6E,EAAE;AAC/E;AACA,+EAA+E,EAAE;AACjF;AACA,kFAAkF,EAAE;AACpF;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2CAA2C,QAAQ;AACnD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gKAAgK,qFAAqF;AACrP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6EAA6E,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB,IAAI,KAAK,IAAI,QAAQ,KAAK;AAC/F;AACA,sEAAsE;AACtE,6DAA6D;AAC7D,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,eAAe,MAAM;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,8BAA8B,KAAK,eAAe,MAAM;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,qCAAqC;AAC3D,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,oHAAoH,EAAE;AACtH;AACA;AACA,2HAA2H,EAAE;AAC7H;AACA;AACA,6HAA6H,EAAE;AAC/H;AACA;AACA,+BAA+B,EAAE;AACjC,6FAA6F,EAAE;AAC/F;AACA,gCAAgC,sBAAsB,EAAE,yCAAyC,EAAE,wBAAwB;AAC3H;AACA;AACA,+BAA+B,EAAE;AACjC,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+FAA+F,EAAE;AACjG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+DAA+D,SAAS;AACxE,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC,8DAAiB;AACzD;AACA;AACA;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,uCAAuC,EAAE;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEsS;;AAEtS,2CAA2C,cAAc,uuse;;;;;;;;;;;AC7vTzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiG;AACxD;AAC6B;AAGtE;;;;GAIG;AAEH;IAEE,4BAAoB,iBAAwC,EAAU,MAAc;QAAhE,sBAAiB,GAAjB,iBAAiB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExF,wCAAW,GAAX,UACE,KAA6B,EAC7B,WAAgC;QAE9B,IAAI,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,EAAE;YAC3C,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAClC,OAAO,KAAK,CAAC;SACd;IACL,CAAC;IAdU,kBAAkB;QAD9B,gEAAU,EAAE;yCAG4B,oFAAqB,EAAkB,sDAAM;OAFzE,kBAAkB,CAe9B;IAAD,yBAAC;CAAA;AAf8B;;;;;;;;;;;;;;;;;;;;;;;;;ACXQ;AASZ;AACwB;AACG;AACtD;;GAEG;AAuDH;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAtD7B,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACP,uEAAqB;gBACrB,iEAAe;gBACf,+DAAa;gBACb,mEAAiB;gBACjB,iEAAe;gBACf,oEAAkB;gBAClB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,+DAAa;gBACb,iEAAe;gBACf,0EAAwB;gBACtB,sEAAoB;gBACtB,gEAAc;gBACd,iEAAe;gBACf,sEAAoB;gBACpB,mEAAiB;gBACjB,kEAAgB;gBAChB,kEAAgB;gBAChB,+DAAa;gBACb,kEAAa;gBACb,qEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAqB;gBACrB,iEAAe;gBACf,+DAAa;gBACb,mEAAiB;gBACjB,iEAAe;gBACf,oEAAkB;gBAClB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,+DAAa;gBACb,iEAAe;gBACf,0EAAwB;gBACtB,sEAAoB;gBACtB,gEAAc;gBACd,iEAAe;gBACf,sEAAoB;gBACpB,mEAAiB;gBACjB,kEAAgB;gBAChB,kEAAgB;gBAChB,+DAAa;gBACb,kEAAa;gBACb,qEAAgB;aACjB;YACD,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,gFAA8B,EAAE,QAAQ,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,EAAC;aAC7E;SACF,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrE9B,sMAAsM,qlDAAqlD,uCAAuC,2xEAA2xE,gBAAgB,QAAQ,oCAAoC,aAAa,sC;;;;;;;;;;;ACAtqI,0jCAA0jC,gBAAgB,eAAe,iDAAiD,sCAAsC,cAAc,sCAAsC,eAAe,2CAA2C,wDAAwD,gBAAgB,wCAAwC,wDAAwD,gBAAgB,+CAA+C,wDAAwD,gBAAgB,+CAA+C,wDAAwD,gBAAgB,6BAA6B,2DAA2D,gBAAgB,6BAA6B,0DAA0D,gBAAgB,+BAA+B,wDAAwD,wCAAwC,wDAAwD,8CAA8C,gBAAgB,0BAA0B,wDAAwD,gDAAgD,0DAA0D,gBAAgB,sBAAsB,gDAAgD,wDAAwD,gBAAgB,sBAAsB,gDAAgD,wDAAwD,gBAAgB,uBAAuB,gDAAgD,wDAAwD,gBAAgB,8BAA8B,wDAAwD,8GAA8G,iDAAiD,eAAe,gBAAgB,qBAAqB,iDAAiD,YAAY,iDAAiD,kBAAkB,eAAe,gBAAgB,mCAAmC,eAAe,uCAAuC,eAAe,gBAAgB,iDAAiD,2CAA2C,iBAAiB,YAAY,eAAe,gBAAgB,iFAAiF,eAAe,aAAa,iDAAiD,mBAAmB,eAAe,gBAAgB,6BAA6B,eAAe,gBAAgB,iDAAiD,qBAAqB,eAAe,uDAAuD,eAAe,gBAAgB,gCAAgC,eAAe,gBAAgB,oBAAoB,wDAAwD,8BAA8B,iDAAiD,eAAe,gBAAgB,+BAA+B,wDAAwD,kBAAkB,kBAAkB,gBAAgB,kBAAkB,iDAAiD,0BAA0B,yBAAyB,oEAAoE,eAAe,kBAAkB,kFAAkF,aAAa,YAAY,sGAAsG,eAAe,kBAAkB,wBAAwB,eAAe,sCAAsC,oLAAoL,oDAAoD,4CAA4C,iBAAiB,2HAA2H,oDAAoD,4CAA4C,iBAAiB,gCAAgC,cAAc,qBAAqB,wBAAwB,cAAc,4BAA4B,iBAAiB,oCAAoC,cAAc,oBAAoB,2BAA2B,4DAA4D,sBAAsB,0DAA0D,kBAAkB,sPAAsP,0FAA0F,kFAAkF,gDAAgD,iBAAiB,mKAAmK,4FAA4F,oFAAoF,gDAAgD,iBAAiB,4JAA4J,4FAA4F,oFAAoF,gDAAgD,iBAAiB,0DAA0D,cAAc,8DAA8D,cAAc,sEAAsE,oBAAoB,2BAA2B,eAAe,oPAAoP,oDAAoD,4CAA4C,iKAAiK,oDAAoD,4CAA4C,0JAA0J,mDAAmD,4CAA4C,wDAAwD,wBAAwB,wDAAwD,cAAc,iBAAiB,kPAAkP,mDAAmD,2CAA2C,iBAAiB,0JAA0J,mDAAmD,2CAA2C,iBAAiB,2DAA2D,oBAAoB,2DAA2D,cAAc,kBAAkB,wPAAwP,oDAAoD,4CAA4C,iBAAiB,6JAA6J,oDAAoD,4CAA4C,iBAAiB,8CAA8C,eAAe,kEAAkE,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,gGAAgG,eAAe,0BAA0B,oBAAoB,iBAAiB,iDAAiD,eAAe,gBAAgB,8DAA8D,iDAAiD,eAAe,oBAAoB,iDAAiD,cAAc,iDAAiD,sBAAsB,eAAe,4BAA4B,iDAAiD,+BAA+B,iDAAiD,eAAe,gBAAgB,gDAAgD,iDAAiD,kBAAkB,eAAe,gBAAgB,4BAA4B,gBAAgB,wBAAwB,eAAe,2BAA2B,eAAe,gBAAgB,iBAAiB,iDAAiD,+BAA+B,iDAAiD,eAAe,gBAAgB,+GAA+G,wDAAwD,SAAS,eAAe,iDAAiD,eAAe,gBAAgB,mBAAmB,uBAAuB,eAAe,gBAAgB,mBAAmB,iBAAiB,iDAAiD,mBAAmB,iDAAiD,gCAAgC,eAAe,0CAA0C,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,yDAAyD,eAAe,kCAAkC,eAAe,4CAA4C,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,2DAA2D,eAAe,gCAAgC,iDAAiD,eAAe,gBAAgB,uCAAuC,eAAe,iDAAiD,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,gEAAgE,eAAe,yCAAyC,eAAe,mDAAmD,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,kEAAkE,eAAe,uCAAuC,iDAAiD,eAAe,gBAAgB,cAAc,iDAAiD,eAAe,sBAAsB,wDAAwD,uBAAuB,iDAAiD,eAAe,8BAA8B,cAAc,oBAAoB,kBAAkB,gBAAgB,YAAY,iDAAiD,uCAAuC,gBAAgB,eAAe,cAAc,gBAAgB,kBAAkB,mCAAmC,iBAAiB,sBAAsB,kBAAkB,kBAAkB,oBAAoB,+DAA+D,uDAAuD,mGAAmG,2BAA2B,mBAAmB,oCAAoC,oBAAoB,cAAc,uBAAuB,SAAS,mBAAmB,WAAW,YAAY,gBAAgB,UAAU,kBAAkB,UAAU,UAAU,wBAAwB,qBAAqB,qDAAqD,oBAAoB,MAAM,OAAO,YAAY,WAAW,yBAAyB,eAAe,aAAa,+BAA+B,aAAa,8BAA8B,aAAa,kBAAkB,aAAa,oBAAoB,kBAAkB,oBAAoB,sBAAsB,aAAa,aAAa,eAAe,gBAAgB,wBAAwB,kBAAkB,MAAM,SAAS,OAAO,QAAQ,aAAa,oBAAoB,wCAAwC,kDAAkD,UAAU,qDAAqD,UAAU,+CAA+C,mDAAmD,YAAY,6BAA6B,2BAA2B,mGAAmG,UAAU,+CAA+C,kBAAkB,aAAa,aAAa,sBAAsB,cAAc,eAAe,0BAA0B,eAAe,WAAW,kBAAkB,mDAAmD,MAAM,2CAA2C,MAAM,iDAAiD,MAAM,yCAAyC,MAAM,sDAAsD,qDAAqD,6CAA6C,4DAA4D,mDAAmD,2CAA2C,iCAAiC,YAAY,2CAA2C,sBAAsB,0BAA0B,wBAAwB,iCAAiC,sBAAsB,gCAAgC,cAAc,sBAAsB,0FAA0F,2BAA2B,+EAA+E,2BAA2B,yBAAyB,2BAA2B,sBAAsB,kCAAkC,sBAAsB,kEAAkE,cAAc,iEAAiE,cAAc,+DAA+D,cAAc,sBAAsB,sBAAsB,6CAA6C,sBAAsB,uBAAuB,sBAAsB,8BAA8B,cAAc,0JAA0J,mBAAmB,4FAA4F,mBAAmB,sFAAsF,mBAAmB,4HAA4H,mBAAmB,oBAAoB,kFAAkF,oBAAoB,iGAAiG,oBAAoB,iGAAiG,oBAAoB,iGAAiG,oBAAoB,kGAAkG,oBAAoB,kGAAkG,oBAAoB,mGAAmG,oBAAoB,uGAAuG,oBAAoB,uGAAuG,oBAAoB,uGAAuG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,sBAAsB,yBAAyB,sBAAsB,2BAA2B,aAAa,0BAA0B,gBAAgB,sBAAsB,wDAAwD,kGAAkG,gFAAgF,gBAAgB,0GAA0G,sBAAsB,qBAAqB,WAAW,mBAAmB,oCAAoC,mBAAmB,kBAAkB,iBAAiB,uCAAuC,mBAAmB,WAAW,qCAAqC,WAAW,mBAAmB,aAAa,kBAAkB,uCAAuC,aAAa,yCAAyC,mBAAmB,sBAAsB,qBAAqB,kBAAkB,kBAAkB,qBAAqB,kBAAkB,6CAA6C,qCAAqC,wEAAwE,4BAA4B,oBAAoB,gBAAgB,mBAAmB,uBAAuB,oBAAoB,sCAAsC,uBAAuB,eAAe,sCAAsC,WAAW,YAAY,iBAAiB,sDAAsD,SAAS,sDAAsD,YAAY,uDAAuD,WAAW,iEAAiE,UAAU,YAAY,sDAAsD,YAAY,gEAAgE,WAAW,WAAW,yEAAyE,UAAU,mFAAmF,UAAU,WAAW,wEAAwE,WAAW,kFAAkF,WAAW,UAAU,uCAAuC,WAAW,YAAY,iBAAiB,uDAAuD,UAAU,uDAAuD,aAAa,wDAAwD,WAAW,kEAAkE,UAAU,YAAY,uDAAuD,YAAY,iEAAiE,WAAW,WAAW,0EAA0E,WAAW,oFAAoF,UAAU,YAAY,yEAAyE,YAAY,mFAAmF,WAAW,WAAW,sCAAsC,WAAW,YAAY,iBAAiB,sDAAsD,UAAU,sDAAsD,aAAa,uDAAuD,WAAW,iEAAiE,UAAU,YAAY,sDAAsD,YAAY,gEAAgE,WAAW,WAAW,yEAAyE,WAAW,mFAAmF,UAAU,YAAY,wEAAwE,YAAY,kFAAkF,WAAW,WAAW,8BAA8B,yGAAyG,gBAAgB,sBAAsB,mDAAmD,cAAc,eAAe,uFAAuF,cAAc,oFAAoF,cAAc,8EAA8E,cAAc,4bAA4b,sBAAsB,qKAAqK,yBAAyB,kKAAkK,yBAAyB,4JAA4J,yBAAyB,+JAA+J,6BAA6B,+GAA+G,WAAW,8BAA8B,4BAA4B,gBAAgB,sCAAsC,6BAA6B,6DAA6D,sBAAsB,sBAAsB,6GAA6G,WAAW,yGAAyG,WAAW,iGAAiG,WAAW,sjBAAsjB,sBAAsB,6GAA6G,yBAAyB,yGAAyG,yBAAyB,iGAAiG,yBAAyB,sjBAAsjB,iCAAiC,6LAA6L,sCAAsC,yLAAyL,sCAAsC,iLAAiL,sCAAsC,mGAAmG,kFAAkF,mDAAmD,iGAAiG,0EAA0E,uGAAuG,6DAA6D,kFAAkF,qFAAqF,mGAAmG,mIAAmI,wGAAwG,yGAAyG,kFAAkF,yDAAyD,iGAAiG,mHAAmH,gBAAgB,qBAAqB,sBAAsB,sDAAsD,iCAAiC,yCAAyC,sBAAsB,gBAAgB,0EAA0E,sBAAsB,qFAAqF,sCAAsC,+FAA+F,iBAAiB,uCAAuC,gHAAgH,iBAAiB,kBAAkB,qCAAqC,6BAA6B,yBAAyB,sBAAsB,mEAAmE,sBAAsB,8BAA8B,sBAAsB,sBAAsB,oEAAoE,gBAAgB,wDAAwD,yBAAyB,mHAAmH,iCAAiC,YAAY,gBAAgB,sBAAsB,0CAA0C,iGAAiG,wDAAwD,kFAAkF,qBAAqB,sBAAsB,sBAAsB,6BAA6B,0BAA0B,aAAa,+BAA+B,yBAAyB,4CAA4C,6BAA6B,uBAAuB,0BAA0B,yBAAyB,8HAA8H,yBAAyB,4HAA4H,yBAAyB,wHAAwH,yBAAyB,kJAAkJ,yBAAyB,wEAAwE,qBAAqB,6CAA6C,sBAAsB,oCAAoC,uBAAuB,YAAY,oCAAoC,yBAAyB,gBAAgB,iGAAiG,yBAAyB,gGAAgG,yBAAyB,8FAA8F,yBAAyB,8BAA8B,yBAAyB,sBAAsB,+CAA+C,sBAAsB,WAAW,6DAA6D,iGAAiG,6EAA6E,YAAY,gDAAgD,WAAW,qCAAqC,gBAAgB,4DAA4D,yBAAyB,WAAW,6EAA6E,WAAW,WAAW,gFAAgF,gCAAgC,yDAAyD,yBAAyB,WAAW,0EAA0E,WAAW,WAAW,6EAA6E,gCAAgC,2DAA2D,yBAAyB,WAAW,4EAA4E,WAAW,WAAW,+EAA+E,gCAAgC,aAAa,gBAAgB,yJAAyJ,mBAAmB,0FAA0F,oCAAoC,mBAAmB,sBAAsB,6BAA6B,sBAAsB,sBAAsB,iCAAiC,iIAAiI,sBAAsB,6BAA6B,sBAAsB,4CAA4C,2BAA2B,2BAA2B,sBAAsB,kCAAkC,sBAAsB,yBAAyB,+FAA+F,sBAAsB,mWAAmW,iCAAiC,4DAA4D,6BAA6B,wFAAwF,6BAA6B,8BAA8B,yBAAyB,WAAW,0DAA0D,oCAAoC,sDAAsD,gCAAgC,0BAA0B,kGAAkG,sBAAsB,sBAAsB,iEAAiE,yBAAyB,WAAW,6FAA6F,qCAAqC,yFAAyF,gCAAgC,+DAA+D,yBAAyB,WAAW,2FAA2F,oCAAoC,uFAAuF,gCAAgC,gCAAgC,kFAAkF,gCAAgC,cAAc,2CAA2C,cAAc,yCAAyC,cAAc,wBAAwB,0GAA0G,gBAAgB,sBAAsB,eAAe,iCAAiC,wBAAwB,mCAAmC,uBAAuB,gBAAgB,sBAAsB,qDAAqD,iGAAiG,kBAAkB,iCAAiC,2UAA2U,2BAA2B,sBAAsB,oGAAoG,iBAAiB,oCAAoC,sBAAsB,0EAA0E,sBAAsB,kDAAkD,sBAAsB,4KAA4K,cAAc,wBAAwB,qBAAqB,YAAY,qBAAqB,oDAAoD,cAAc,+DAA+D,cAAc,6DAA6D,cAAc,+CAA+C,cAAc,yBAAyB,iCAAiC,qDAAqD,yBAAyB,gEAAgE,yBAAyB,8DAA8D,yBAAyB,+GAA+G,cAAc,0HAA0H,cAAc,wHAAwH,cAAc,+DAA+D,cAAc,uKAAuK,cAAc,yIAAyI,yBAAyB,aAAa,cAAc,0DAA0D,sBAAsB,8CAA8C,sBAAsB,8DAA8D,iCAAiC,sFAAsF,+FAA+F,yBAAyB,2BAA2B,gEAAgE,iCAAiC,wFAAwF,+FAA+F,yBAAyB,2BAA2B,uDAAuD,iCAAiC,+EAA+E,iCAAiC,oEAAoE,iCAAiC,gFAAgF,sBAAsB,4FAA4F,6BAA6B,6DAA6D,sBAAsB,mEAAmE,sBAAsB,+EAA+E,cAAc,0FAA0F,cAAc,wFAAwF,cAAc,iHAAiH,cAAc,mFAAmF,sBAAsB,qFAAqF,sBAAsB,wBAAwB,cAAc,uBAAuB,cAAc,qBAAqB,cAAc,sEAAsE,sBAAsB,0HAA0H,sBAAsB,qBAAqB,oBAAoB,gDAAgD,sBAAsB,4CAA4C,sBAAsB,kCAAkC,sBAAsB,uCAAuC,sBAAsB,gDAAgD,sBAAsB,2CAA2C,sBAAsB,iCAAiC,oBAAoB,0EAA0E,oBAAoB,6FAA6F,cAAc,gCAAgC,sBAAsB,kCAAkC,sBAAsB,gCAAgC,sBAAsB,0BAA0B,sBAAsB,sHAAsH,2BAA2B,kBAAkB,gBAAgB,gDAAgD,kGAAkG,iBAAiB,eAAe,sBAAsB,2DAA2D,sBAAsB,0EAA0E,sBAAsB,yLAAyL,2BAA2B,iBAAiB,gBAAgB,8DAA8D,sBAAsB,oDAAoD,qCAAqC,uCAAuC,2CAA2C,qCAAqC,yMAAyM,6BAA6B,+BAA+B,aAAa,2BAA2B,yBAAyB,gCAAgC,yBAAyB,4DAA4D,aAAa,wDAAwD,yBAAyB,6DAA6D,yBAAyB,0DAA0D,aAAa,sDAAsD,yBAAyB,2DAA2D,yBAAyB,mDAAmD,eAAe,yEAAyE,eAAe,qEAAqE,eAAe,0BAA0B,6BAA6B,0EAA0E,qBAAqB,6SAA6S,yBAAyB,yEAAyE,qBAAqB,ySAAyS,yBAAyB,uEAAuE,qBAAqB,iSAAiS,yBAAyB,8IAA8I,6BAA6B,0IAA0I,iCAAiC,gEAAgE,sBAAsB,wCAAwC,sBAAsB,oBAAoB,sBAAsB,0BAA0B,sBAAsB,yCAAyC,sBAAsB,oBAAoB,sBAAsB,oBAAoB,gBAAgB,kDAAkD,kGAAkG,uEAAuE,2BAA2B,4DAA4D,cAAc,2DAA2D,cAAc,yDAAyD,cAAc,mEAAmE,cAAc,oEAAoE,sBAAsB,wBAAwB,yBAAyB,sBAAsB,cAAc,sBAAsB,sBAAsB,8BAA8B,sBAAsB,oCAAoC,yGAAyG,mBAAmB,uCAAuC,kCAAkC,sCAAsC,kBAAkB,6BAA6B,sCAAsC,kBAAkB,4CAA4C,iBAAiB,uCAAuC,wCAAwC,gCAAgC,wDAAwD,yBAAyB,sDAAsD,sCAAsC,oDAAoD,yBAAyB,oEAAoE,yBAAyB,kEAAkE,qCAAqC,gEAAgE,yBAAyB,iEAAiE,yBAAyB,+DAA+D,qCAAqC,6DAA6D,yBAAyB,0DAA0D,sBAAsB,0BAA0B,iGAAiG,yBAAyB,wBAAwB,iCAAiC,+BAA+B,iCAAiC,0GAA0G,yBAAyB,4CAA4C,WAAW,uGAAuG,yBAAyB,2CAA2C,WAAW,iGAAiG,yBAAyB,yCAAyC,WAAW,yBAAyB,qCAAqC,2FAA2F,iCAAiC,uIAAuI,iCAAiC,0DAA0D,iCAAiC,+CAA+C,iCAAiC,sJAAsJ,iCAAiC,8KAA8K,iCAAiC,+EAA+E,6BAA6B,6BAA6B,8KAA8K,6BAA6B,sNAAsN,6BAA6B,mDAAmD,4BAA4B,2CAA2C,iHAAiH,sHAAsH,yCAAyC,kHAAkH,oGAAoG,iCAAiC,sBAAsB,uBAAuB,gBAAgB,uEAAuE,sBAAsB,kCAAkC,iCAAiC,WAAW,iIAAiI,yBAAyB,WAAW,8CAA8C,6BAA6B,cAAc,yDAAyD,sBAAsB,wDAAwD,cAAc,gDAAgD,sBAAsB,qCAAqC,kCAAkC,4GAA4G,iCAAiC,yBAAyB,cAAc,mCAAmC,wCAAwC,iGAAiG,qCAAqC,mBAAmB,+BAA+B,sBAAsB,iEAAiE,sBAAsB,qCAAqC,6BAA6B,yEAAyE,6BAA6B,kGAAkG,mBAAmB,gBAAgB,krBAAkrB,sCAAsC,oFAAoF,yBAAyB,kIAAkI,sBAAsB,0qBAA0qB,sCAAsC,kFAAkF,yBAAyB,8HAA8H,sBAAsB,0pBAA0pB,sCAAsC,8EAA8E,yBAAyB,sHAAsH,sBAAsB,0wBAA0wB,sCAAsC,4NAA4N,yBAAyB,wNAAwN,WAAW,4RAA4R,2BAA2B,sJAAsJ,kBAAkB,8NAA8N,kCAAkC,wHAAwH,uCAAuC,kwBAAkwB,sCAAsC,wNAAwN,yBAAyB,oNAAoN,WAAW,wRAAwR,2BAA2B,oJAAoJ,kBAAkB,4NAA4N,kCAAkC,sHAAsH,uCAAuC,kvBAAkvB,sCAAsC,gNAAgN,yBAAyB,4MAA4M,WAAW,gRAAgR,2BAA2B,gJAAgJ,kBAAkB,wNAAwN,kCAAkC,kHAAkH,uCAAuC,eAAe,mBAAmB,sBAAsB,2BAA2B,mBAAmB,WAAW,0BAA0B,mBAAmB,WAAW,wBAAwB,mBAAmB,WAAW,8HAA8H,8BAA8B,8MAA8M,cAAc,kCAAkC,yBAAyB,eAAe,6BAA6B,YAAY,gBAAgB,uCAAuC,sBAAsB,2BAA2B,2BAA2B,mBAAmB,mGAAmG,8BAA8B,cAAc,sBAAsB,qBAAqB,oBAAoB,wDAAwD,EAAE,uCAAuC,mBAAmB,EAAE,uCAAuC,oBAAoB,EAAE,8CAA8C,+DAA+D,qBAAqB,EAAE,2CAA2C,+DAA+D,qBAAqB,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,+BAA+B,kEAAkE,qBAAqB,EAAE,+BAA+B,iEAAiE,qBAAqB,EAAE,iCAAiC,+DAA+D,EAAE,2CAA2C,+DAA+D,EAAE,iDAAiD,uBAAuB,EAAE,4BAA4B,+DAA+D,EAAE,kDAAkD,iEAAiE,qBAAqB,4BAA4B,EAAE,kDAAkD,+DAA+D,qBAAqB,4BAA4B,EAAE,kDAAkD,+DAA+D,qBAAqB,6BAA6B,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,+BAA+B,+DAA+D,EAAE,sHAAsH,wDAAwD,oBAAoB,qBAAqB,EAAE,sBAAsB,wDAAwD,EAAE,aAAa,wDAAwD,EAAE,mBAAmB,oBAAoB,qBAAqB,EAAE,oCAAoC,oBAAoB,EAAE,0CAA0C,oBAAoB,EAAE,iBAAiB,wDAAwD,EAAE,4CAA4C,sBAAsB,EAAE,aAAa,oBAAoB,qBAAqB,EAAE,sFAAsF,sBAAsB,EAAE,cAAc,wDAAwD,EAAE,oBAAoB,oBAAoB,qBAAqB,EAAE,+BAA+B,oBAAoB,EAAE,iBAAiB,wDAAwD,EAAE,sBAAsB,oBAAoB,EAAE,0DAA0D,oBAAoB,qBAAqB,EAAE,iCAAiC,oBAAoB,qBAAqB,EAAE,qBAAqB,+DAA+D,EAAE,+BAA+B,wDAAwD,oBAAoB,qBAAqB,EAAE,gCAAgC,+DAA+D,EAAE,mBAAmB,uBAAuB,qBAAqB,uBAAuB,wDAAwD,EAAE,2BAA2B,8BAA8B,EAAE,uEAAuE,oBAAoB,uBAAuB,EAAE,qFAAqF,kBAAkB,iBAAiB,EAAE,2GAA2G,sBAAsB,yBAAyB,EAAE,yBAAyB,qBAAqB,4CAA4C,EAAE,yLAAyL,0DAA0D,0DAA0D,yBAAyB,EAAE,+HAA+H,0DAA0D,0DAA0D,yBAAyB,EAAE,iCAAiC,oBAAoB,2BAA2B,EAAE,yBAAyB,mBAAmB,EAAE,6BAA6B,sBAAsB,EAAE,qCAAqC,mBAAmB,6BAA6B,mCAAmC,EAAE,6DAA6D,2BAA2B,EAAE,2DAA2D,wBAAwB,EAAE,2PAA2P,iGAAiG,iGAAiG,sDAAsD,yBAAyB,EAAE,uKAAuK,mGAAmG,mGAAmG,sDAAsD,yBAAyB,EAAE,gKAAgK,mGAAmG,mGAAmG,sDAAsD,yBAAyB,EAAE,2DAA2D,mBAAmB,EAAE,+DAA+D,mBAAmB,EAAE,uEAAuE,6BAA6B,mCAAmC,EAAE,gBAAgB,+PAA+P,4DAA4D,4DAA4D,EAAE,yKAAyK,4DAA4D,4DAA4D,EAAE,kKAAkK,2DAA2D,2DAA2D,EAAE,EAAE,yDAAyD,+BAA+B,EAAE,yDAAyD,mBAAmB,uBAAuB,EAAE,uPAAuP,0DAA0D,0DAA0D,yBAAyB,EAAE,8JAA8J,0DAA0D,0DAA0D,yBAAyB,EAAE,4DAA4D,yBAAyB,EAAE,4DAA4D,mBAAmB,wBAAwB,EAAE,6PAA6P,0DAA0D,0DAA0D,yBAAyB,EAAE,iKAAiK,0DAA0D,0DAA0D,yBAAyB,EAAE,iDAAiD,oBAAoB,EAAE,uEAAuE,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,uGAAuG,wBAAwB,EAAE,2BAA2B,0BAA0B,EAAE,kBAAkB,wDAAwD,oBAAoB,qBAAqB,EAAE,iEAAiE,wDAAwD,oBAAoB,EAAE,qBAAqB,wDAAwD,EAAE,eAAe,wDAAwD,EAAE,uBAAuB,oBAAoB,EAAE,6BAA6B,wDAAwD,EAAE,gCAAgC,wDAAwD,oBAAoB,qBAAqB,EAAE,kDAAkD,wDAAwD,EAAE,mBAAmB,oBAAoB,qBAAqB,EAAE,6BAA6B,wBAAwB,EAAE,yBAAyB,oBAAoB,EAAE,4BAA4B,oBAAoB,qBAAqB,EAAE,kBAAkB,wDAAwD,EAAE,iCAAiC,wDAAwD,oBAAoB,qBAAqB,EAAE,4HAA4H,+DAA+D,cAAc,EAAE,gBAAgB,wDAAwD,oBAAoB,qBAAqB,wBAAwB,EAAE,wBAAwB,oBAAoB,qBAAqB,wBAAwB,EAAE,kBAAkB,wDAAwD,EAAE,oBAAoB,wDAAwD,EAAE,iCAAiC,oBAAoB,EAAE,2CAA2C,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,0DAA0D,wBAAwB,EAAE,mCAAmC,oBAAoB,EAAE,6CAA6C,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,4DAA4D,wBAAwB,EAAE,iCAAiC,wDAAwD,oBAAoB,qBAAqB,EAAE,wCAAwC,oBAAoB,EAAE,kDAAkD,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,iEAAiE,wBAAwB,EAAE,0CAA0C,oBAAoB,EAAE,oDAAoD,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,mEAAmE,wBAAwB,EAAE,wCAAwC,wDAAwD,oBAAoB,qBAAqB,EAAE,eAAe,wDAAwD,oBAAoB,EAAE,uBAAuB,+DAA+D,EAAE,wBAAwB,wDAAwD,oBAAoB,EAAE,+BAA+B,mBAAmB,yBAAyB,uBAAuB,qBAAqB,EAAE,aAAa,wDAAwD,EAAE,0CAA0C,qBAAqB,oBAAoB,EAAE,eAAe,qBAAqB,uBAAuB,EAAE,oCAAoC,sBAAsB,EAAE,uBAAuB,uBAAuB,uBAAuB,yBAAyB,0EAA0E,kEAAkE,oHAAoH,gCAAgC,gCAAgC,EAAE,sCAAsC,2BAA2B,sBAAsB,EAAE,EAAE,wBAAwB,cAAc,wBAAwB,gBAAgB,iBAAiB,qBAAqB,eAAe,uBAAuB,eAAe,eAAe,6BAA6B,0BAA0B,EAAE,uDAAuD,yBAAyB,WAAW,YAAY,iBAAiB,gBAAgB,EAAE,0BAA0B,oBAAoB,kBAAkB,EAAE,gCAAgC,oBAAoB,EAAE,+BAA+B,kBAAkB,uBAAuB,kBAAkB,EAAE,qBAAqB,uBAAuB,yBAAyB,2BAA2B,kBAAkB,kBAAkB,oBAAoB,qBAAqB,EAAE,yBAAyB,uBAAuB,WAAW,cAAc,YAAY,aAAa,kBAAkB,yBAAyB,6CAA6C,+DAA+D,eAAe,EAAE,sDAAsD,iBAAiB,EAAE,iDAAiD,4DAA4D,uBAAuB,EAAE,EAAE,8BAA8B,oCAAoC,EAAE,qGAAqG,eAAe,EAAE,gDAAgD,uBAAuB,kBAAkB,kBAAkB,2BAA2B,mBAAmB,oBAAoB,EAAE,2BAA2B,oBAAoB,gBAAgB,uBAAuB,EAAE,4CAA4C,WAAW,0CAA0C,WAAW,uDAAuD,0DAA0D,0DAA0D,EAAE,6DAA6D,wDAAwD,wDAAwD,EAAE,kCAAkC,iBAAiB,EAAE,4CAA4C,4BAA4B,gCAAgC,8BAA8B,uCAAuC,EAAE,uBAAuB,yCAAyC,EAAE,eAAe,+BAA+B,EAAE,4FAA4F,sCAAsC,EAAE,gFAAgF,sCAAsC,EAAE,0BAA0B,sCAAsC,iCAAiC,EAAE,mCAAmC,iCAAiC,EAAE,mEAAmE,mBAAmB,EAAE,kEAAkE,mBAAmB,EAAE,gEAAgE,mBAAmB,EAAE,uBAAuB,+BAA+B,EAAE,8CAA8C,+BAA+B,EAAE,wBAAwB,+BAA+B,EAAE,+BAA+B,qBAAqB,EAAE,iKAAiK,wBAAwB,EAAE,+FAA+F,wBAAwB,EAAE,yFAAyF,wBAAwB,EAAE,+HAA+H,wBAAwB,EAAE,qBAAqB,6HAA6H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,+HAA+H,EAAE,qBAAqB,+HAA+H,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,uBAAuB,8BAA8B,+BAA+B,EAAE,4BAA4B,kBAAkB,EAAE,2BAA2B,sBAAsB,+BAA+B,EAAE,2DAA2D,iIAAiI,EAAE,iFAAiF,wBAAwB,EAAE,2GAA2G,mCAAmC,EAAE,sBAAsB,iBAAiB,wBAAwB,EAAE,sCAAsC,0BAA0B,2BAA2B,yBAAyB,EAAE,EAAE,wCAAwC,wBAAwB,+BAA+B,EAAE,sCAAsC,iBAAiB,wBAAwB,EAAE,cAAc,uBAAuB,EAAE,wCAAwC,kBAAkB,EAAE,0CAA0C,wBAAwB,+BAA+B,EAAE,sBAAsB,uBAAuB,uBAAuB,0BAA0B,uBAAuB,oDAAoD,4CAA4C,iFAAiF,kCAAkC,kCAAkC,qBAAqB,wBAAwB,4BAA4B,yBAAyB,EAAE,uCAAuC,4BAA4B,4BAA4B,EAAE,uCAAuC,gBAAgB,iBAAiB,sBAAsB,EAAE,uDAAuD,cAAc,EAAE,uDAAuD,iBAAiB,EAAE,wDAAwD,gBAAgB,EAAE,oEAAoE,eAAe,iBAAiB,EAAE,uDAAuD,iBAAiB,EAAE,mEAAmE,gBAAgB,gBAAgB,EAAE,0EAA0E,eAAe,EAAE,sFAAsF,eAAe,gBAAgB,EAAE,yEAAyE,gBAAgB,EAAE,qFAAqF,gBAAgB,eAAe,EAAE,wCAAwC,gBAAgB,iBAAiB,sBAAsB,EAAE,wDAAwD,eAAe,EAAE,wDAAwD,kBAAkB,EAAE,yDAAyD,gBAAgB,EAAE,qEAAqE,eAAe,iBAAiB,EAAE,wDAAwD,iBAAiB,EAAE,oEAAoE,gBAAgB,gBAAgB,EAAE,2EAA2E,gBAAgB,EAAE,uFAAuF,eAAe,iBAAiB,EAAE,0EAA0E,iBAAiB,EAAE,sFAAsF,gBAAgB,gBAAgB,EAAE,uCAAuC,gBAAgB,iBAAiB,sBAAsB,EAAE,uDAAuD,eAAe,EAAE,uDAAuD,kBAAkB,EAAE,wDAAwD,gBAAgB,EAAE,oEAAoE,eAAe,iBAAiB,EAAE,uDAAuD,iBAAiB,EAAE,mEAAmE,gBAAgB,gBAAgB,EAAE,0EAA0E,gBAAgB,EAAE,sFAAsF,eAAe,iBAAiB,EAAE,yEAAyE,iBAAiB,EAAE,qFAAqF,gBAAgB,gBAAgB,EAAE,+BAA+B,kIAAkI,sBAAsB,+BAA+B,EAAE,sDAAsD,mBAAmB,4BAA4B,EAAE,0FAA0F,qBAAqB,EAAE,uFAAuF,qBAAqB,EAAE,iFAAiF,qBAAqB,EAAE,wcAAwc,iCAAiC,EAAE,wKAAwK,gCAAgC,EAAE,qKAAqK,gCAAgC,EAAE,+JAA+J,gCAAgC,EAAE,kKAAkK,oCAAoC,EAAE,kHAAkH,mBAAmB,qCAAqC,EAAE,6BAA6B,sBAAsB,EAAE,uCAAuC,sCAAsC,EAAE,iEAAiE,+BAA+B,4BAA4B,EAAE,iHAAiH,mBAAmB,EAAE,6GAA6G,iCAAiC,EAAE,qGAAqG,mBAAmB,EAAE,skBAAskB,iCAAiC,EAAE,iHAAiH,gCAAgC,EAAE,6GAA6G,gCAAgC,EAAE,qGAAqG,gCAAgC,EAAE,skBAAskB,4CAA4C,EAAE,iMAAiM,iDAAiD,EAAE,6LAA6L,2CAA2C,EAAE,qLAAqL,iDAAiD,EAAE,yGAAyG,6HAA6H,EAAE,sDAAsD,8HAA8H,EAAE,6EAA6E,gIAAgI,EAAE,gEAAgE,6HAA6H,EAAE,2FAA2F,gIAAgI,EAAE,yIAAyI,iIAAiI,EAAE,+GAA+G,6HAA6H,EAAE,4DAA4D,8HAA8H,EAAE,sHAAsH,qBAAqB,EAAE,sBAAsB,+BAA+B,EAAE,uDAAuD,4CAA4C,EAAE,0CAA0C,+BAA+B,sBAAsB,EAAE,2EAA2E,8BAA8B,EAAE,wFAAwF,+CAA+C,EAAE,oGAAoG,sBAAsB,gDAAgD,EAAE,mHAAmH,sBAAsB,uBAAuB,8CAA8C,EAAE,8BAA8B,8BAA8B,+BAA+B,EAAE,oEAAoE,iCAAiC,EAAE,+BAA+B,+BAA+B,8BAA8B,EAAE,qEAAqE,wBAAwB,EAAE,yDAAyD,gCAAgC,EAAE,sHAAsH,0CAA0C,EAAE,aAAa,sBAAsB,+BAA+B,EAAE,6CAA6C,gIAAgI,EAAE,2DAA2D,+HAA+H,EAAE,sBAAsB,+BAA+B,EAAE,uBAAuB,sCAAsC,EAAE,2BAA2B,kBAAkB,EAAE,gCAAgC,+BAA+B,EAAE,8CAA8C,oCAAoC,gCAAgC,EAAE,EAAE,2BAA2B,8BAA8B,EAAE,gIAAgI,8BAA8B,EAAE,8HAA8H,8BAA8B,EAAE,0HAA0H,8BAA8B,EAAE,oJAAoJ,8BAA8B,EAAE,yEAAyE,0BAA0B,EAAE,8CAA8C,+BAA+B,EAAE,sCAAsC,4BAA4B,mBAAmB,EAAE,EAAE,sCAAsC,8BAA8B,uBAAuB,EAAE,EAAE,kGAAkG,8BAA8B,EAAE,iGAAiG,8BAA8B,EAAE,+FAA+F,8BAA8B,EAAE,+BAA+B,8BAA8B,+BAA+B,EAAE,gDAAgD,iCAAiC,mBAAmB,EAAE,8DAA8D,gIAAgI,EAAE,8EAA8E,oBAAoB,EAAE,iDAAiD,mBAAmB,EAAE,sCAAsC,wBAAwB,EAAE,6DAA6D,8BAA8B,iBAAiB,EAAE,8EAA8E,mBAAmB,mBAAmB,EAAE,iFAAiF,2CAA2C,EAAE,0DAA0D,8BAA8B,iBAAiB,EAAE,2EAA2E,mBAAmB,mBAAmB,EAAE,8EAA8E,2CAA2C,EAAE,4DAA4D,8BAA8B,+BAA+B,EAAE,6EAA6E,iCAAiC,mBAAmB,EAAE,gFAAgF,qCAAqC,EAAE,cAAc,sBAAsB,EAAE,sKAAsK,wBAAwB,EAAE,iGAAiG,6CAA6C,EAAE,oBAAoB,+BAA+B,EAAE,+BAA+B,+BAA+B,EAAE,uBAAuB,0CAA0C,EAAE,sIAAsI,+BAA+B,EAAE,8BAA8B,+BAA+B,EAAE,6CAA6C,oCAAoC,EAAE,4BAA4B,+BAA+B,EAAE,mCAAmC,+BAA+B,8BAA8B,EAAE,kGAAkG,+BAA+B,EAAE,8WAA8W,0CAA0C,EAAE,6DAA6D,sCAAsC,EAAE,2FAA2F,sCAAsC,EAAE,+BAA+B,8BAA8B,iBAAiB,EAAE,6DAA6D,6CAA6C,EAAE,uDAAuD,sCAAsC,EAAE,2BAA2B,+HAA+H,4BAA4B,+BAA+B,EAAE,kEAAkE,gCAAgC,iCAAiC,EAAE,gGAAgG,iDAAiD,EAAE,0FAA0F,sDAAsD,EAAE,gEAAgE,gCAAgC,mBAAmB,EAAE,8FAA8F,+CAA+C,EAAE,wFAAwF,wCAAwC,EAAE,iCAAiC,6HAA6H,EAAE,iCAAiC,mBAAmB,EAAE,4CAA4C,qBAAqB,EAAE,0CAA0C,qBAAqB,EAAE,yBAAyB,mIAAmI,sBAAsB,+BAA+B,EAAE,gBAAgB,0CAA0C,EAAE,yBAAyB,4CAA4C,EAAE,wBAAwB,sBAAsB,+BAA+B,EAAE,wDAAwD,gIAAgI,EAAE,mBAAmB,0CAA0C,EAAE,oVAAoV,oCAAoC,EAAE,wBAAwB,4GAA4G,wBAAwB,EAAE,EAAE,qCAAqC,+BAA+B,EAAE,6EAA6E,+BAA+B,EAAE,qDAAqD,+BAA+B,EAAE,qLAAqL,qBAAqB,EAAE,yBAAyB,8BAA8B,EAAE,aAAa,8BAA8B,EAAE,qDAAqD,mBAAmB,EAAE,gEAAgE,qBAAqB,EAAE,8DAA8D,qBAAqB,EAAE,gDAAgD,mBAAmB,EAAE,0BAA0B,0CAA0C,EAAE,sDAAsD,8BAA8B,EAAE,iEAAiE,gCAAgC,EAAE,+DAA+D,gCAAgC,EAAE,gHAAgH,mBAAmB,EAAE,2HAA2H,mBAAmB,EAAE,yHAAyH,mBAAmB,EAAE,gEAAgE,mBAAmB,EAAE,4KAA4K,qBAAqB,EAAE,4IAA4I,8BAA8B,EAAE,cAAc,mBAAmB,EAAE,2DAA2D,+BAA+B,EAAE,+CAA+C,+BAA+B,EAAE,+DAA+D,0CAA0C,EAAE,uFAAuF,iHAAiH,8BAA8B,gCAAgC,EAAE,iEAAiE,0CAA0C,EAAE,yFAAyF,iHAAiH,8BAA8B,gCAAgC,EAAE,wDAAwD,0CAA0C,EAAE,gFAAgF,0CAA0C,EAAE,qEAAqE,0CAA0C,EAAE,iFAAiF,+BAA+B,EAAE,6FAA6F,kCAAkC,EAAE,8DAA8D,+BAA+B,EAAE,oEAAoE,+BAA+B,EAAE,gFAAgF,mBAAmB,EAAE,2FAA2F,mBAAmB,EAAE,yFAAyF,mBAAmB,EAAE,kHAAkH,mBAAmB,EAAE,oFAAoF,+BAA+B,EAAE,sFAAsF,+BAA+B,EAAE,yBAAyB,mBAAmB,EAAE,wBAAwB,mBAAmB,EAAE,sBAAsB,mBAAmB,EAAE,uEAAuE,+BAA+B,EAAE,6HAA6H,+BAA+B,EAAE,sBAAsB,yBAAyB,EAAE,iDAAiD,iCAAiC,EAAE,6CAA6C,iCAAiC,EAAE,mCAAmC,iCAAiC,EAAE,wCAAwC,iCAAiC,EAAE,iDAAiD,iCAAiC,EAAE,4CAA4C,iCAAiC,EAAE,kCAAkC,yBAAyB,EAAE,6EAA6E,yBAAyB,EAAE,8FAA8F,mBAAmB,EAAE,iCAAiC,+BAA+B,EAAE,mCAAmC,+BAA+B,EAAE,iCAAiC,+BAA+B,EAAE,2BAA2B,8BAA8B,EAAE,4HAA4H,oCAAoC,EAAE,mBAAmB,sBAAsB,EAAE,mDAAmD,iIAAiI,EAAE,kBAAkB,4BAA4B,+BAA+B,EAAE,6DAA6D,iCAAiC,EAAE,6EAA6E,+BAA+B,EAAE,gMAAgM,oCAAoC,EAAE,kBAAkB,sBAAsB,EAAE,iEAAiE,+BAA+B,EAAE,uDAAuD,8CAA8C,gDAAgD,EAAE,8CAA8C,8CAA8C,EAAE,gNAAgN,sCAAsC,EAAE,gCAAgC,kBAAkB,EAAE,4BAA4B,8BAA8B,EAAE,iCAAiC,8BAA8B,EAAE,6DAA6D,kBAAkB,EAAE,yDAAyD,8BAA8B,EAAE,8DAA8D,8BAA8B,EAAE,2DAA2D,kBAAkB,EAAE,uDAAuD,8BAA8B,EAAE,4DAA4D,8BAA8B,EAAE,qDAAqD,oBAAoB,EAAE,2EAA2E,oBAAoB,EAAE,uEAAuE,oBAAoB,EAAE,2BAA2B,sCAAsC,EAAE,2EAA2E,0BAA0B,EAAE,oTAAoT,8BAA8B,EAAE,0EAA0E,0BAA0B,EAAE,gTAAgT,8BAA8B,EAAE,wEAAwE,0BAA0B,EAAE,wSAAwS,8BAA8B,EAAE,iJAAiJ,sCAAsC,EAAE,6IAA6I,0CAA0C,EAAE,iEAAiE,+BAA+B,EAAE,yCAAyC,4BAA4B,EAAE,qBAAqB,+BAA+B,EAAE,2BAA2B,+BAA+B,EAAE,0CAA0C,+BAA+B,EAAE,qBAAqB,+BAA+B,EAAE,qBAAqB,sBAAsB,EAAE,qDAAqD,iIAAiI,EAAE,wEAAwE,sCAAsC,EAAE,6DAA6D,mBAAmB,EAAE,4DAA4D,mBAAmB,EAAE,0DAA0D,mBAAmB,EAAE,oEAAoE,mBAAmB,EAAE,qEAAqE,+BAA+B,EAAE,yBAAyB,8BAA8B,+BAA+B,EAAE,eAAe,4BAA4B,+BAA+B,EAAE,+BAA+B,8BAA8B,EAAE,qCAAqC,oIAAoI,EAAE,oBAAoB,gDAAgD,EAAE,mCAAmC,iDAAiD,yBAAyB,EAAE,gCAAgC,+CAA+C,uBAAuB,EAAE,+CAA+C,wBAAwB,kDAAkD,EAAE,yCAAyC,yCAAyC,EAAE,yDAAyD,8BAA8B,EAAE,uDAAuD,gDAAgD,EAAE,qDAAqD,8BAA8B,EAAE,qEAAqE,8BAA8B,EAAE,mEAAmE,8CAA8C,EAAE,iEAAiE,8BAA8B,EAAE,kEAAkE,8BAA8B,EAAE,gEAAgE,8CAA8C,EAAE,8DAA8D,8BAA8B,EAAE,2DAA2D,4BAA4B,EAAE,2BAA2B,8HAA8H,8BAA8B,EAAE,yBAAyB,0CAA0C,EAAE,gCAAgC,0CAA0C,EAAE,+GAA+G,8BAA8B,EAAE,6CAA6C,iBAAiB,EAAE,4GAA4G,8BAA8B,EAAE,4CAA4C,+BAA+B,EAAE,sGAAsG,8BAA8B,EAAE,0CAA0C,iBAAiB,EAAE,0BAA0B,+CAA+C,EAAE,8FAA8F,0CAA0C,EAAE,4IAA4I,0CAA0C,EAAE,2DAA2D,0CAA0C,EAAE,gDAAgD,0CAA0C,EAAE,yJAAyJ,0CAA0C,EAAE,iLAAiL,0CAA0C,EAAE,gFAAgF,sCAAsC,kCAAkC,EAAE,gLAAgL,sCAAsC,EAAE,wNAAwN,sCAAsC,EAAE,oDAAoD,qCAAqC,EAAE,4CAA4C,kIAAkI,wIAAwI,EAAE,0CAA0C,mIAAmI,EAAE,uGAAuG,0CAA0C,EAAE,wBAAwB,4BAA4B,uBAAuB,EAAE,EAAE,0EAA0E,+BAA+B,EAAE,mCAAmC,0CAA0C,iBAAiB,EAAE,sIAAsI,8BAA8B,iBAAiB,EAAE,+CAA+C,kCAAkC,mBAAmB,EAAE,0DAA0D,+BAA+B,EAAE,yDAAyD,mBAAmB,EAAE,kDAAkD,4BAA4B,EAAE,sCAAsC,2CAA2C,EAAE,iHAAiH,0CAA0C,EAAE,0BAA0B,mBAAmB,EAAE,sCAAsC,iDAAiD,EAAE,oGAAoG,8CAA8C,wBAAwB,EAAE,iCAAiC,+BAA+B,EAAE,mEAAmE,iCAAiC,EAAE,sCAAsC,sCAAsC,EAAE,0EAA0E,sCAAsC,EAAE,yGAAyG,wBAAwB,qBAAqB,EAAE,8rBAA8rB,+CAA+C,EAAE,sFAAsF,8BAA8B,EAAE,oIAAoI,4BAA4B,EAAE,srBAAsrB,+CAA+C,EAAE,oFAAoF,8BAA8B,EAAE,gIAAgI,0CAA0C,EAAE,sqBAAsqB,+CAA+C,EAAE,gFAAgF,8BAA8B,EAAE,wHAAwH,4BAA4B,EAAE,sxBAAsxB,+CAA+C,EAAE,gOAAgO,8BAA8B,EAAE,4NAA4N,iBAAiB,EAAE,gSAAgS,sCAAsC,EAAE,wJAAwJ,wBAAwB,EAAE,gOAAgO,2CAA2C,EAAE,0HAA0H,gDAAgD,EAAE,8wBAA8wB,+CAA+C,EAAE,4NAA4N,8BAA8B,EAAE,wNAAwN,+BAA+B,EAAE,4RAA4R,gCAAgC,EAAE,sJAAsJ,sCAAsC,EAAE,8NAA8N,qCAAqC,EAAE,wHAAwH,0CAA0C,EAAE,8vBAA8vB,+CAA+C,EAAE,oNAAoN,8BAA8B,EAAE,gNAAgN,iBAAiB,EAAE,oRAAoR,sCAAsC,EAAE,kJAAkJ,wBAAwB,EAAE,0NAA0N,2CAA2C,EAAE,oHAAoH,gDAAgD,EAAE,gBAAgB,2BAA2B,+BAA+B,EAAE,4BAA4B,0BAA0B,mBAAmB,EAAE,2BAA2B,0BAA0B,iCAAiC,EAAE,yBAAyB,0BAA0B,mBAAmB,EAAE,uIAAuI,qCAAqC,EAAE,+NAA+N,qBAAqB,EAAE,mCAAmC,gCAAgC,EAAE,gBAAgB,sCAAsC,EAAE,aAAa,sBAAsB,EAAE,0CAA0C,+BAA+B,EAAE,4BAA4B,oCAAoC,wBAAwB,gIAAgI,EAAE,+BAA+B,mBAAmB,EAAE,QAAQ,cAAc,wBAAwB,EAAE,SAAS,mBAAmB,EAAE,UAAU,mBAAmB,EAAE,mDAAmD,2BAA2B,8BAA8B,4BAA4B,qBAAqB,EAAE,YAAY,qBAAqB,EAAE,cAAc,sBAAsB,EAAE,SAAS,mBAAmB,gBAAgB,yGAAyG,4BAA4B,EAAE,WAAW,8BAA8B,iBAAiB,EAAE,eAAe,gBAAgB,EAAE,+CAA+C,+kja;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh8zI;AACf;AACmB;AAC/B;AACU;AACH;AAEyC;AAQvF;IAGE,sBAC8B,SAAoB,EACxC,iBAAwC,EACxC,MAAc,EACF,QAAkB,EAC9B,WAAwB;QAJJ,cAAS,GAAT,SAAS,CAAW;QACxC,sBAAiB,GAAjB,iBAAiB,CAAuB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACF,aAAQ,GAAR,QAAQ,CAAU;QAC9B,gBAAW,GAAX,WAAW,CAAa;QAPlC,UAAK,GAAG,YAAY,CAAC;IAUrB,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,KAA2B;gBAC5D,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,KAAK,CAAC,OAAO,EAAE,wBAAwB,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;gBACrH,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,qGAAwB,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,gCAAS,GAAT;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;IAClC,CAAC;IAED,mCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;IACrC,CAAC;IAED,yCAAkB,GAAlB;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QACxD,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,+BAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,CAAC;IAClF,CAAC;IAED;;OAEG;IACH,8BAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAC9C,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,CAAC;IACzG,CAAC;IACD;;;;OAIG;IACH,oCAAa,GAAb;QAAA,iBAYC;QAXC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,YAAqB;YACxE,IAAI,YAAY,EAAE;gBAChB,KAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,OAAO;oBACvD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,oCAAoC;oBAC1F,KAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;oBAC/E,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAsB,GAAtB;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;IACtD,CAAC;IAED,qDAA8B,GAA9B;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;IACpD,CAAC;IAED,sCAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;IAC/C,CAAC;IAjFU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;QAKG,uEAAM,CAAC,sDAAU,CAAC;QAGlB,yEAAQ,EAAE;yCAH4B,qDAAS;YACrB,oFAAqB;YAChC,sDAAM;YACQ,gEAAQ;YACjB,6DAAW;OARvB,YAAY,CAmFxB;IAAD,mBAAC;CAAA;AAnFwB;;;;;;;;;;;;;ACfzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACW;AACxD;;;GAGG;AAEH;IAAA;IAkBA,CAAC;IAAD,gBAAC;AAAD,CAAC;;AAEM,IAAM,gBAAgB,GAAc;IACzC,kBAAkB;IAClB,cAAc,EAAE,QAAQ;IACxB,WAAW,EAAE,YAAY;IACzB,4BAA4B,EAAE,qCAAqC;IACnE,uBAAuB,EAAE,qEAAW,CAAC,uBAAuB;IAC5D,gCAAgC,EAAE,qEAAW,CAAC,gCAAgC;IAC9E,mBAAmB,EAAE,yBAAyB;IAC9C,cAAc,EAAE,qEAAW,CAAC,cAAc;IAC1C,uBAAuB,EAAE,qEAAW,CAAC,uBAAuB;CAC7D,CAAC;AAEK,IAAI,UAAU,GAAG,IAAI,4DAAc,CAAY,YAAY,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCV;AACjB;AACuB;AACV;AACM;AACJ;AAEE;AACC;AAEzC;AAE6B;AACuC;AAChB;AACuC;AACzC;AACe;AACA;AACG;AACW;AACvC;AACQ;AACR;AACI;AACmB;AACN;AACM;AAClB;AACc;AACA;AACoB;AACd;AAC6B;AACA;AACmC;AAC3F;AACmC;AACR;AAC2C;AACN;AACzB;AACf;AACN;AACe;AACiD;AAC3C;AACgD;AACzD;AACkC;AACG;AACvB;AACoB;AACtB;AAC0C;AAC3D;AAC2B;AACZ;AACgC;AAwEhI;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtErB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uEAAc;gBACd,2DAAY;gBACZ,qIAAiC;gBACjC,2IAAmC;gBACnC,0IAA4B;gBAC5B,gGAAsB;gBACtB,8GAA0B;gBAC1B,wGAAwB;gBACxB,+GAAmB;gBACnB,mHAAqB;gBACrB,uIAA2B;gBAC3B,6FAAqB;gBACrB,uFAAmB;gBACnB,uIAA2B;gBAC3B,2JAAiC;gBACjC,iFAAiB;gBACjB,+EAAiB;gBACjB,6HAA+B;gBAC/B,4EAAgB;gBAChB,gGAAsB;gBACtB,0FAAoB;gBACpB,mGAAuB;gBACvB,gGAAsB;gBACtB,iHAA2B;gBAC3B,2HAAuB;gBACvB,+IAA6B;gBAC7B,0HAA8B;gBAC9B,gGAAsB;gBACtB,gGAAsB;gBACtB,8GAA0B;gBAC1B,yJAA8B;gBAC9B,8JAAkC;gBAClC,kKAA0C;gBAC1C,sGAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,6FAAuB;gBACvB,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,uEAAiB;gBACjB,oDAAO;gBACP,2EAAmB,CAAC,QAAQ,CAAC,qEAAW,CAAC,SAAS,GAAG,gBAAgB,EAAE,EAAE,OAAO,EAAE,qEAAW,CAAC,UAAU,EAAE,CAAC;aAC5G;YACD,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,sDAAU,EAAE,QAAQ,EAAE,4DAAgB,EAAC;gBACjD,gEAAmB;gBACnB,qFAAqB;gBACrB,+HAA6B;gBAC7B,qGAAiB;gBACjB,8GAAqB;gBACrB,qGAAqB;gBACrB,yEAAkB;gBAClB,EAAC,OAAO,EAAE,6EAAiB,EAAE,QAAQ,EAAE,gGAA0B,EAAC;gBAClE,EAAC,OAAO,EAAE,0FAAuB,EAAE,QAAQ,EAAE,gGAA0B,EAAC;gBACxE,4GAA4B;aAC7B;YACD,eAAe,EAAE;gBACf,gGAAsB;gBACtB,uIAA2B;gBAC3B,2JAAiC;gBACjC,+IAA6B;gBAC7B,kKAA0C;gBAC1C,sGAAwB;aACzB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACjItB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACW;AACe;AACT;AACd;AACqC;AACN;AAC6B;AACM;AACD;AACzB;AAElG;;;GAGG;AAEH,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,gFAAiB,EAAE;IAC9C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,6GAA0B,EAAE;IAChE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uGAAwB,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAE;IAC/F,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,iHAA2B,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAC;IACpG,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,+FAAsB,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAE;IAC3F,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,sFAAmB,EAAE,WAAW,EAAE,CAAC,wEAAkB,CAAC,EAAE;IAC3F,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,oIAAiC,EAAC;IAC7E,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAE,0IAAmC,EAAC;IACjF,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,yIAA4B,EAAC;IACnE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;CAC1D,CAAC;AAEK,IAAM,mBAAmB,GAAU,EAEzC,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;;;;;;;;;;;;ACnC/F,+DAA+D,mM;;;;;;;;;;;ACA/D,oOAAoO,wCAAwC,ghBAAghB,+BAA+B,8BAA8B,kBAAkB,4jBAA4jB,+BAA+B,8BAA8B,kBAAkB,gvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp8C;AAEqB;AAChC;AASmB;AACT;AAQjD;IAIE,2CAAoB,iBAAwC,EACxC,4BAA0D,EAC1D,MAAc;QAFd,sBAAiB,GAAjB,iBAAiB,CAAuB;QACxC,iCAA4B,GAA5B,4BAA4B,CAA8B;QAC1D,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,oDAAQ,GAAR;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QACxD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,2BAA2B,GAAG,OAAO,CAAC,0BAA0B,EAAE,CAAC;SACzE;QACD,IAAI,CAAC,4BAA4B,CAAC,6BAA6B,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IACpG,CAAC;IAED,qEAAyB,GAAzB;QACE,OAAO,CAAC,sEAAiB,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAC9D,CAAC;IAED,sEAA0B,GAA1B;QACE,OAAO,IAAI,CAAC,2BAA2B,CAAC;IAC1C,CAAC;IAED,0DAAc,GAAd;QACE,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,OAAO,EAAE,EAAhB,CAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtI,CAAC;IAED,yDAAa,GAAb;QACE,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,MAAM,EAAE,EAAf,CAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACrI,CAAC;IAED;;;OAGG;IACH,iEAAqB,GAArB,UAAsB,MAA2B;QAC/C,IAAM,EAAE,GAAoB,MAAM,CAAC,eAAe,EAAE,CAAC;QACrD,IAAI,EAAE,EAAE;YACN,OAAO,EAAE,CAAC,uBAAuB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACtD;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,oEAAwB,GAAxB;QACE,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,mBAAmB,CAAC,eAAe,CACzE,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,oGAAqB,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,0EAA8B,GAA9B;QACE,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,mBAAmB,CAAC,eAAe,CACzE,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,2GAA4B,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,2EAA+B,GAA/B;QACE,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,mBAAmB,CAAC,eAAe,CACzE,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,4GAA6B,CAAC,CAAC,CAAC;QAC9E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,kEAAsB,GAAtB;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAjEU,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;YAC3C,qKAA2D;;SAE5D,CAAC;yCAKuC,oFAAqB;YACV,2GAA4B;YAClD,sDAAM;OANvB,iCAAiC,CAkE7C;IAAD,wCAAC;CAAA;AAlE6C;;;;;;;;;;;;;;;;;;;;;;;ACrBM;AACO;AAE3D;;;;;;;;GAQG;AAIH;IAHA;QAKU,mBAAc,GAAG,EAAE,CAAC,CAAC,gDAAgD;IAc/E,CAAC;IAZC,kCAAS,GAAT,UAAU,KAAa,EAAE,WAAoB;QAC3C,IAAM,MAAM,GAAG,CAAC,CAAC,sEAAiB,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QACpF,IAAI,6DAAQ,CAAC,KAAK,CAAC,EAAE;YACnB,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,EAAE;gBACzB,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAChD;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAdU,cAAc;QAH1B,0DAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,cAAc,CAgB1B;IAAD,qBAAC;CAAA;AAhB0B;;;;;;;;;;;;;ACf3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;GAEG;AAEH;;;;GAIG;AACI,SAAS,iBAAiB,CAAC,KAAU;IACxC,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC;AACjD,CAAC;AAED;;;;GAIG;AACI,SAAS,QAAQ,CAAC,KAAU;IAC/B,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;AAED;;;;GAIG;AACI,SAAS,SAAS,CAAC,KAAU;IAChC,OAAO,OAAO,KAAK,KAAK,SAAS,CAAC;AACtC,CAAC;AAED;;;;GAIG;AACI,SAAS,QAAQ,CAAC,KAAU;IAC/B,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;AAED;;;;GAIG;AACI,SAAS,OAAO,CAAC,KAAU;IAC9B,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AAED;;;;;;;GAOG;AACI,SAAS,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI;IACzC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AACzC,CAAC;AAED;;;;GAIG;AACI,SAAS,oBAAoB,CAAC,IAAc;IAC/C,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE;QACzB,OAAO,EAAE,CAAC;KACb;IACD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC;SACzB;QACD,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KAC7B;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;;;;;;;;;;;;AC9ED,2BAA2B,mCAAmC,wBAAwB,KAAK,gBAAgB,mBAAmB,KAAK,mDAAmD,2jB;;;;;;;;;;;ACAtL,0HAA0H,0LAA0L,qCAAqC,gJAAgJ,kBAAkB,MAAM,kBAAkB,itCAAitC,6HAA6H,sBAAsB,MAAM,sBAAsB,oEAAoE,yCAAyC,oJAAoJ,sBAAsB,MAAM,sBAAsB,wBAAwB,sBAAsB,iBAAiB,sBAAsB,wmB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnuE;AACe;AAEpC;AAEnC,IAAM,YAAY,GAAG,cAAc,CAAC;AAOpC;IAWE,6CAAoB,iBAAwC;QAAxC,sBAAiB,GAAjB,iBAAiB,CAAuB;QAC1D,IAAI,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,EAAE;YACrG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;YAChG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;SACjG;QACD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,sDAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;IAC7D,CAAC;IAED,mEAAqB,GAArB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAG,IAAK,QAAC,GAAG,EAAJ,CAAI,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,yEAA2B,GAA3B;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,EAAE,CAAC;IAC9D,CAAC;IAED,4DAAc,GAAd;QACE,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,4DAAc,GAAd;QACE,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,uEAAyB,GAAzB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAG,IAAK,QAAC,GAAG,EAAJ,CAAI,CAAC,CAAC,CAAC;IAC1I,CAAC;IAED,6EAA+B,GAA/B;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,uCAAuC,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC5H,CAAC;IAED,gEAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,gEAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,uDAAS,GAAT;QACE,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED,sDAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,IAAI,CAAC,mBAAmB,KAAK,IAAI,EAAE;YACrC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC;iBACnF,SAAS,CAAC,UAAC,mBAAmB;gBAC7B,KAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;gBAChD,KAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,KAAI,CAAC,mBAAmB,EAAE,KAAI,CAAC,mBAAmB,CAAC;qBAC9G,SAAS,CAAC,UAAC,mBAAmB;oBAC7B,KAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;gBAClD,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;YACzC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC;iBACpH,SAAS,CAAC,UAAC,mBAAmB;gBAC7B,KAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;YAClD,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IA/EU,mCAAmC;QAL/C,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,2KAA6D;;SAE9D,CAAC;yCAYuC,oFAAqB;OAXjD,mCAAmC,CAgF/C;IAAD,0CAAC;CAAA;AAhF+C;;;;;;;;;;;;ACZhD,+DAA+D,mK;;;;;;;;;;;ACA/D,uCAAuC,UAAU,sEAAsE,MAAM,mP;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArE;AACQ;AAOhE;;;;;GAKG;AAMH;IAKE,gCAAoB,SAA+C,EAAmC,IAAuB;QAAzG,cAAS,GAAT,SAAS,CAAsC;QAAmC,SAAI,GAAJ,IAAI,CAAmB;IAAI,CAAC;IAElI,yCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC7B,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAlBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8HAA8C;;SAE/C,CAAC;QAMsE,uEAAM,CAAC,iEAAe,CAAC;yCAA9D,8DAAY;OALhC,sBAAsB,CAmBlC;IAAD,6BAAC;CAAA;AAnBkC;;;;;;;;;;;;ACnBnC,+DAA+D,+K;;;;;;;;;;;ACA/D,sG;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACqB;AAEhC;AAOvC;IAEE,oCAAoB,iBAAwC,EAAU,MAAc;QAAhE,sBAAiB,GAAjB,iBAAiB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzF,6CAAQ,GAAR;IACA,CAAC;IAEM,+CAAU,GAAjB,UAAkB,UAA8B;QAC5C,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAC5C,CAAC;IAXU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,6IAAmD;;SAEpD,CAAC;yCAGuC,oFAAqB,EAAkB,sDAAM;OAFzE,0BAA0B,CAatC;IAAD,iCAAC;CAAA;AAbsC;;;;;;;;;;;;ACVvC,+DAA+D,2K;;;;;;;;;;;ACA/D,uI;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACqB;AAChC;AAGvC;;;GAGG;AAMH;IAEE,kCAAoB,iBAAwC,EAAU,MAAc;QAAhE,sBAAiB,GAAjB,iBAAiB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzF,2CAAQ,GAAR;IACA,CAAC;IAEM,8CAAW,GAAlB,UAAmB,UAA8B;QAC/C,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAEM,iDAAc,GAArB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;IACjD,CAAC;IAfU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,uIAAiD;;SAElD,CAAC;yCAGuC,oFAAqB,EAAkB,sDAAM;OAFzE,wBAAwB,CAgBpC;IAAD,+BAAC;CAAA;AAhBoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdI;AACwC;AAE3B;AACkB;AAExE;;GAEG;AAIH;IAEE,yCACY,qBAA4C,EAC5C,qBAA4C;QAD5C,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,0BAAqB,GAArB,qBAAqB,CAAuB;IACpD,CAAC;IAEL,8DAAoB,GAApB,UAAqB,QAA0B;QAC7C,QAAQ,QAAQ,EAAE;YAChB,KAAK,oEAAgB,CAAC,eAAe;gBACnC,OAAO,IAAI,CAAC,qBAAqB,CAAC;YACpC,KAAK,oEAAgB,CAAC,MAAM;gBAC1B,OAAO,IAAI,CAAC,qBAAqB,CAAC;YACpC;gBACE,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAC;SACpD;IACH,CAAC;IAhBU,+BAA+B;QAH3C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAImC,8FAAqB;YACrB,qFAAqB;OAJ7C,+BAA+B,CAkB3C;IAAD,sCAAC;CAAA;AAlB2C;;;;;;;;;;;;;ACZ5C;AAAA;AAAA,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IACxB,mEAA+C;IAC/C,qCAAiB;AACrB,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,QAG3B;;;;;;;;;;;;ACHD,yWAAyW,iBAAiB,oDAAoD,kCAAkC,wXAAwX,kBAAkB,4DAA4D,cAAc,0Y;;;;;;;;;;;ACAp6B,4BAA4B,qBAAqB,oBAAoB,EAAE,+CAA+C,+nB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9D;AACX;AAEmB;AACuB;AAC7C;AAU1C;;GAEG;AAMH;IAUE,qCACY,SAAoD,EACnC,IAA4B,EAC7C,+BAAgE;QAFhE,cAAS,GAAT,SAAS,CAA2C;QAEpD,oCAA+B,GAA/B,+BAA+B,CAAiC;QAN5E,kBAAa,GAAG,IAAI,4CAAO,EAAU,CAAC;QAOpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,8CAAQ,GAAR;QAAA,iBAQC;QAPC,IAAM,aAAa,GAAG,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzG,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACxC,iEAAU,CAAC,UAAC,KAAK;YACf,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACvC,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAED,kDAAY,GAAZ,UAAa,IAAsB;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,oDAAc,GAAd;QACE,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,4CAAM,GAAN;QACE,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,4CAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IA7CU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,sKAAoD;;SAErD,CAAC;QAaK,uEAAM,CAAC,iEAAe,CAAC;yCADL,8DAAY,UAEU,oGAA+B;OAbjE,2BAA2B,CA8CvC;IAAD,kCAAC;CAAA;AA9CuC;;;;;;;;;;;;ACvBxC,+WAA+W,sCAAsC,eAAe,GAAG,uBAAuB,oUAAoU,8CAA8C,+DAA+D,WAAW,sEAAsE,qHAAqH,8CAA8C,qHAAqH,gEAAgE,iFAAiF,cAAc,iFAAiF,WAAW,aAAa,WAAW,oO;;;;;;;;;;;ACA3+C,0jCAA0jC,gBAAgB,eAAe,iDAAiD,sCAAsC,cAAc,sCAAsC,eAAe,2CAA2C,wDAAwD,gBAAgB,wCAAwC,wDAAwD,gBAAgB,+CAA+C,wDAAwD,gBAAgB,+CAA+C,wDAAwD,gBAAgB,6BAA6B,2DAA2D,gBAAgB,6BAA6B,0DAA0D,gBAAgB,+BAA+B,wDAAwD,wCAAwC,wDAAwD,8CAA8C,gBAAgB,0BAA0B,wDAAwD,gDAAgD,0DAA0D,gBAAgB,sBAAsB,gDAAgD,wDAAwD,gBAAgB,sBAAsB,gDAAgD,wDAAwD,gBAAgB,uBAAuB,gDAAgD,wDAAwD,gBAAgB,8BAA8B,wDAAwD,8GAA8G,iDAAiD,eAAe,gBAAgB,qBAAqB,iDAAiD,YAAY,iDAAiD,kBAAkB,eAAe,gBAAgB,mCAAmC,eAAe,uCAAuC,eAAe,gBAAgB,iDAAiD,2CAA2C,iBAAiB,YAAY,eAAe,gBAAgB,iFAAiF,eAAe,aAAa,iDAAiD,mBAAmB,eAAe,gBAAgB,6BAA6B,eAAe,gBAAgB,iDAAiD,qBAAqB,eAAe,uDAAuD,eAAe,gBAAgB,gCAAgC,eAAe,gBAAgB,oBAAoB,wDAAwD,8BAA8B,iDAAiD,eAAe,gBAAgB,+BAA+B,wDAAwD,kBAAkB,kBAAkB,gBAAgB,kBAAkB,iDAAiD,0BAA0B,yBAAyB,oEAAoE,eAAe,kBAAkB,kFAAkF,aAAa,YAAY,sGAAsG,eAAe,kBAAkB,wBAAwB,eAAe,sCAAsC,oLAAoL,oDAAoD,4CAA4C,iBAAiB,2HAA2H,oDAAoD,4CAA4C,iBAAiB,gCAAgC,cAAc,qBAAqB,wBAAwB,cAAc,4BAA4B,iBAAiB,oCAAoC,cAAc,oBAAoB,2BAA2B,4DAA4D,sBAAsB,0DAA0D,kBAAkB,sPAAsP,0FAA0F,kFAAkF,gDAAgD,iBAAiB,mKAAmK,4FAA4F,oFAAoF,gDAAgD,iBAAiB,4JAA4J,4FAA4F,oFAAoF,gDAAgD,iBAAiB,0DAA0D,cAAc,8DAA8D,cAAc,sEAAsE,oBAAoB,2BAA2B,eAAe,oPAAoP,oDAAoD,4CAA4C,iKAAiK,oDAAoD,4CAA4C,0JAA0J,mDAAmD,4CAA4C,wDAAwD,wBAAwB,wDAAwD,cAAc,iBAAiB,kPAAkP,mDAAmD,2CAA2C,iBAAiB,0JAA0J,mDAAmD,2CAA2C,iBAAiB,2DAA2D,oBAAoB,2DAA2D,cAAc,kBAAkB,wPAAwP,oDAAoD,4CAA4C,iBAAiB,6JAA6J,oDAAoD,4CAA4C,iBAAiB,8CAA8C,eAAe,kEAAkE,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,gGAAgG,eAAe,0BAA0B,oBAAoB,iBAAiB,iDAAiD,eAAe,gBAAgB,8DAA8D,iDAAiD,eAAe,oBAAoB,iDAAiD,cAAc,iDAAiD,sBAAsB,eAAe,4BAA4B,iDAAiD,+BAA+B,iDAAiD,eAAe,gBAAgB,gDAAgD,iDAAiD,kBAAkB,eAAe,gBAAgB,4BAA4B,gBAAgB,wBAAwB,eAAe,2BAA2B,eAAe,gBAAgB,iBAAiB,iDAAiD,+BAA+B,iDAAiD,eAAe,gBAAgB,+GAA+G,wDAAwD,SAAS,eAAe,iDAAiD,eAAe,gBAAgB,mBAAmB,uBAAuB,eAAe,gBAAgB,mBAAmB,iBAAiB,iDAAiD,mBAAmB,iDAAiD,gCAAgC,eAAe,0CAA0C,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,yDAAyD,eAAe,kCAAkC,eAAe,4CAA4C,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,2DAA2D,eAAe,gCAAgC,iDAAiD,eAAe,gBAAgB,uCAAuC,eAAe,iDAAiD,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,gEAAgE,eAAe,yCAAyC,eAAe,mDAAmD,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,kEAAkE,eAAe,uCAAuC,iDAAiD,eAAe,gBAAgB,cAAc,iDAAiD,eAAe,sBAAsB,wDAAwD,uBAAuB,iDAAiD,eAAe,8BAA8B,cAAc,oBAAoB,kBAAkB,gBAAgB,YAAY,iDAAiD,uCAAuC,gBAAgB,eAAe,cAAc,gBAAgB,kBAAkB,mCAAmC,iBAAiB,sBAAsB,kBAAkB,kBAAkB,oBAAoB,+DAA+D,uDAAuD,mGAAmG,2BAA2B,mBAAmB,oCAAoC,oBAAoB,cAAc,uBAAuB,SAAS,mBAAmB,WAAW,YAAY,gBAAgB,UAAU,kBAAkB,UAAU,UAAU,wBAAwB,qBAAqB,qDAAqD,oBAAoB,MAAM,OAAO,YAAY,WAAW,yBAAyB,eAAe,aAAa,+BAA+B,aAAa,8BAA8B,aAAa,kBAAkB,aAAa,oBAAoB,kBAAkB,oBAAoB,sBAAsB,aAAa,aAAa,eAAe,gBAAgB,wBAAwB,kBAAkB,MAAM,SAAS,OAAO,QAAQ,aAAa,oBAAoB,wCAAwC,kDAAkD,UAAU,qDAAqD,UAAU,+CAA+C,mDAAmD,YAAY,6BAA6B,2BAA2B,mGAAmG,UAAU,+CAA+C,kBAAkB,aAAa,aAAa,sBAAsB,cAAc,eAAe,0BAA0B,eAAe,WAAW,kBAAkB,mDAAmD,MAAM,2CAA2C,MAAM,iDAAiD,MAAM,yCAAyC,MAAM,sDAAsD,qDAAqD,6CAA6C,4DAA4D,mDAAmD,2CAA2C,iCAAiC,YAAY,2CAA2C,sBAAsB,0BAA0B,wBAAwB,iCAAiC,sBAAsB,gCAAgC,cAAc,sBAAsB,0FAA0F,2BAA2B,+EAA+E,2BAA2B,yBAAyB,2BAA2B,sBAAsB,kCAAkC,sBAAsB,kEAAkE,cAAc,iEAAiE,cAAc,+DAA+D,cAAc,sBAAsB,sBAAsB,6CAA6C,sBAAsB,uBAAuB,sBAAsB,8BAA8B,cAAc,0JAA0J,mBAAmB,4FAA4F,mBAAmB,sFAAsF,mBAAmB,4HAA4H,mBAAmB,oBAAoB,kFAAkF,oBAAoB,iGAAiG,oBAAoB,iGAAiG,oBAAoB,iGAAiG,oBAAoB,kGAAkG,oBAAoB,kGAAkG,oBAAoB,mGAAmG,oBAAoB,uGAAuG,oBAAoB,uGAAuG,oBAAoB,uGAAuG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,sBAAsB,yBAAyB,sBAAsB,2BAA2B,aAAa,0BAA0B,gBAAgB,sBAAsB,wDAAwD,kGAAkG,gFAAgF,gBAAgB,0GAA0G,sBAAsB,qBAAqB,WAAW,mBAAmB,oCAAoC,mBAAmB,kBAAkB,iBAAiB,uCAAuC,mBAAmB,WAAW,qCAAqC,WAAW,mBAAmB,aAAa,kBAAkB,uCAAuC,aAAa,yCAAyC,mBAAmB,sBAAsB,qBAAqB,kBAAkB,kBAAkB,qBAAqB,kBAAkB,6CAA6C,qCAAqC,wEAAwE,4BAA4B,oBAAoB,gBAAgB,mBAAmB,uBAAuB,oBAAoB,sCAAsC,uBAAuB,eAAe,sCAAsC,WAAW,YAAY,iBAAiB,sDAAsD,SAAS,sDAAsD,YAAY,uDAAuD,WAAW,iEAAiE,UAAU,YAAY,sDAAsD,YAAY,gEAAgE,WAAW,WAAW,yEAAyE,UAAU,mFAAmF,UAAU,WAAW,wEAAwE,WAAW,kFAAkF,WAAW,UAAU,uCAAuC,WAAW,YAAY,iBAAiB,uDAAuD,UAAU,uDAAuD,aAAa,wDAAwD,WAAW,kEAAkE,UAAU,YAAY,uDAAuD,YAAY,iEAAiE,WAAW,WAAW,0EAA0E,WAAW,oFAAoF,UAAU,YAAY,yEAAyE,YAAY,mFAAmF,WAAW,WAAW,sCAAsC,WAAW,YAAY,iBAAiB,sDAAsD,UAAU,sDAAsD,aAAa,uDAAuD,WAAW,iEAAiE,UAAU,YAAY,sDAAsD,YAAY,gEAAgE,WAAW,WAAW,yEAAyE,WAAW,mFAAmF,UAAU,YAAY,wEAAwE,YAAY,kFAAkF,WAAW,WAAW,8BAA8B,yGAAyG,gBAAgB,sBAAsB,mDAAmD,cAAc,eAAe,uFAAuF,cAAc,oFAAoF,cAAc,8EAA8E,cAAc,4bAA4b,sBAAsB,qKAAqK,yBAAyB,kKAAkK,yBAAyB,4JAA4J,yBAAyB,+JAA+J,6BAA6B,+GAA+G,WAAW,8BAA8B,4BAA4B,gBAAgB,sCAAsC,6BAA6B,6DAA6D,sBAAsB,sBAAsB,6GAA6G,WAAW,yGAAyG,WAAW,iGAAiG,WAAW,sjBAAsjB,sBAAsB,6GAA6G,yBAAyB,yGAAyG,yBAAyB,iGAAiG,yBAAyB,sjBAAsjB,iCAAiC,6LAA6L,sCAAsC,yLAAyL,sCAAsC,iLAAiL,sCAAsC,mGAAmG,kFAAkF,mDAAmD,iGAAiG,0EAA0E,uGAAuG,6DAA6D,kFAAkF,qFAAqF,mGAAmG,mIAAmI,wGAAwG,yGAAyG,kFAAkF,yDAAyD,iGAAiG,mHAAmH,gBAAgB,qBAAqB,sBAAsB,sDAAsD,iCAAiC,yCAAyC,sBAAsB,gBAAgB,0EAA0E,sBAAsB,qFAAqF,sCAAsC,+FAA+F,iBAAiB,uCAAuC,gHAAgH,iBAAiB,kBAAkB,qCAAqC,6BAA6B,yBAAyB,sBAAsB,mEAAmE,sBAAsB,8BAA8B,sBAAsB,sBAAsB,oEAAoE,gBAAgB,wDAAwD,yBAAyB,mHAAmH,iCAAiC,YAAY,gBAAgB,sBAAsB,0CAA0C,iGAAiG,wDAAwD,kFAAkF,qBAAqB,sBAAsB,sBAAsB,6BAA6B,0BAA0B,aAAa,+BAA+B,yBAAyB,4CAA4C,6BAA6B,uBAAuB,0BAA0B,yBAAyB,8HAA8H,yBAAyB,4HAA4H,yBAAyB,wHAAwH,yBAAyB,kJAAkJ,yBAAyB,wEAAwE,qBAAqB,6CAA6C,sBAAsB,oCAAoC,uBAAuB,YAAY,oCAAoC,yBAAyB,gBAAgB,iGAAiG,yBAAyB,gGAAgG,yBAAyB,8FAA8F,yBAAyB,8BAA8B,yBAAyB,sBAAsB,+CAA+C,sBAAsB,WAAW,6DAA6D,iGAAiG,6EAA6E,YAAY,gDAAgD,WAAW,qCAAqC,gBAAgB,4DAA4D,yBAAyB,WAAW,6EAA6E,WAAW,WAAW,gFAAgF,gCAAgC,yDAAyD,yBAAyB,WAAW,0EAA0E,WAAW,WAAW,6EAA6E,gCAAgC,2DAA2D,yBAAyB,WAAW,4EAA4E,WAAW,WAAW,+EAA+E,gCAAgC,aAAa,gBAAgB,yJAAyJ,mBAAmB,0FAA0F,oCAAoC,mBAAmB,sBAAsB,6BAA6B,sBAAsB,sBAAsB,iCAAiC,iIAAiI,sBAAsB,6BAA6B,sBAAsB,4CAA4C,2BAA2B,2BAA2B,sBAAsB,kCAAkC,sBAAsB,yBAAyB,+FAA+F,sBAAsB,mWAAmW,iCAAiC,4DAA4D,6BAA6B,wFAAwF,6BAA6B,8BAA8B,yBAAyB,WAAW,0DAA0D,oCAAoC,sDAAsD,gCAAgC,0BAA0B,kGAAkG,sBAAsB,sBAAsB,iEAAiE,yBAAyB,WAAW,6FAA6F,qCAAqC,yFAAyF,gCAAgC,+DAA+D,yBAAyB,WAAW,2FAA2F,oCAAoC,uFAAuF,gCAAgC,gCAAgC,kFAAkF,gCAAgC,cAAc,2CAA2C,cAAc,yCAAyC,cAAc,wBAAwB,0GAA0G,gBAAgB,sBAAsB,eAAe,iCAAiC,wBAAwB,mCAAmC,uBAAuB,gBAAgB,sBAAsB,qDAAqD,iGAAiG,kBAAkB,iCAAiC,2UAA2U,2BAA2B,sBAAsB,oGAAoG,iBAAiB,oCAAoC,sBAAsB,0EAA0E,sBAAsB,kDAAkD,sBAAsB,4KAA4K,cAAc,wBAAwB,qBAAqB,YAAY,qBAAqB,oDAAoD,cAAc,+DAA+D,cAAc,6DAA6D,cAAc,+CAA+C,cAAc,yBAAyB,iCAAiC,qDAAqD,yBAAyB,gEAAgE,yBAAyB,8DAA8D,yBAAyB,+GAA+G,cAAc,0HAA0H,cAAc,wHAAwH,cAAc,+DAA+D,cAAc,uKAAuK,cAAc,yIAAyI,yBAAyB,aAAa,cAAc,0DAA0D,sBAAsB,8CAA8C,sBAAsB,8DAA8D,iCAAiC,sFAAsF,+FAA+F,yBAAyB,2BAA2B,gEAAgE,iCAAiC,wFAAwF,+FAA+F,yBAAyB,2BAA2B,uDAAuD,iCAAiC,+EAA+E,iCAAiC,oEAAoE,iCAAiC,gFAAgF,sBAAsB,4FAA4F,6BAA6B,6DAA6D,sBAAsB,mEAAmE,sBAAsB,+EAA+E,cAAc,0FAA0F,cAAc,wFAAwF,cAAc,iHAAiH,cAAc,mFAAmF,sBAAsB,qFAAqF,sBAAsB,wBAAwB,cAAc,uBAAuB,cAAc,qBAAqB,cAAc,sEAAsE,sBAAsB,0HAA0H,sBAAsB,qBAAqB,oBAAoB,gDAAgD,sBAAsB,4CAA4C,sBAAsB,kCAAkC,sBAAsB,uCAAuC,sBAAsB,gDAAgD,sBAAsB,2CAA2C,sBAAsB,iCAAiC,oBAAoB,0EAA0E,oBAAoB,6FAA6F,cAAc,gCAAgC,sBAAsB,kCAAkC,sBAAsB,gCAAgC,sBAAsB,0BAA0B,sBAAsB,sHAAsH,2BAA2B,kBAAkB,gBAAgB,gDAAgD,kGAAkG,iBAAiB,eAAe,sBAAsB,2DAA2D,sBAAsB,0EAA0E,sBAAsB,yLAAyL,2BAA2B,iBAAiB,gBAAgB,8DAA8D,sBAAsB,oDAAoD,qCAAqC,uCAAuC,2CAA2C,qCAAqC,yMAAyM,6BAA6B,+BAA+B,aAAa,2BAA2B,yBAAyB,gCAAgC,yBAAyB,4DAA4D,aAAa,wDAAwD,yBAAyB,6DAA6D,yBAAyB,0DAA0D,aAAa,sDAAsD,yBAAyB,2DAA2D,yBAAyB,mDAAmD,eAAe,yEAAyE,eAAe,qEAAqE,eAAe,0BAA0B,6BAA6B,0EAA0E,qBAAqB,6SAA6S,yBAAyB,yEAAyE,qBAAqB,ySAAyS,yBAAyB,uEAAuE,qBAAqB,iSAAiS,yBAAyB,8IAA8I,6BAA6B,0IAA0I,iCAAiC,gEAAgE,sBAAsB,wCAAwC,sBAAsB,oBAAoB,sBAAsB,0BAA0B,sBAAsB,yCAAyC,sBAAsB,oBAAoB,sBAAsB,oBAAoB,gBAAgB,kDAAkD,kGAAkG,uEAAuE,2BAA2B,4DAA4D,cAAc,2DAA2D,cAAc,yDAAyD,cAAc,mEAAmE,cAAc,oEAAoE,sBAAsB,wBAAwB,yBAAyB,sBAAsB,cAAc,sBAAsB,sBAAsB,8BAA8B,sBAAsB,oCAAoC,yGAAyG,mBAAmB,uCAAuC,kCAAkC,sCAAsC,kBAAkB,6BAA6B,sCAAsC,kBAAkB,4CAA4C,iBAAiB,uCAAuC,wCAAwC,gCAAgC,wDAAwD,yBAAyB,sDAAsD,sCAAsC,oDAAoD,yBAAyB,oEAAoE,yBAAyB,kEAAkE,qCAAqC,gEAAgE,yBAAyB,iEAAiE,yBAAyB,+DAA+D,qCAAqC,6DAA6D,yBAAyB,0DAA0D,sBAAsB,0BAA0B,iGAAiG,yBAAyB,wBAAwB,iCAAiC,+BAA+B,iCAAiC,0GAA0G,yBAAyB,4CAA4C,WAAW,uGAAuG,yBAAyB,2CAA2C,WAAW,iGAAiG,yBAAyB,yCAAyC,WAAW,yBAAyB,qCAAqC,2FAA2F,iCAAiC,uIAAuI,iCAAiC,0DAA0D,iCAAiC,+CAA+C,iCAAiC,sJAAsJ,iCAAiC,8KAA8K,iCAAiC,+EAA+E,6BAA6B,6BAA6B,8KAA8K,6BAA6B,sNAAsN,6BAA6B,mDAAmD,4BAA4B,2CAA2C,iHAAiH,sHAAsH,yCAAyC,kHAAkH,oGAAoG,iCAAiC,sBAAsB,uBAAuB,gBAAgB,uEAAuE,sBAAsB,kCAAkC,iCAAiC,WAAW,iIAAiI,yBAAyB,WAAW,8CAA8C,6BAA6B,cAAc,yDAAyD,sBAAsB,wDAAwD,cAAc,gDAAgD,sBAAsB,qCAAqC,kCAAkC,4GAA4G,iCAAiC,yBAAyB,cAAc,mCAAmC,wCAAwC,iGAAiG,qCAAqC,mBAAmB,+BAA+B,sBAAsB,iEAAiE,sBAAsB,qCAAqC,6BAA6B,yEAAyE,6BAA6B,kGAAkG,mBAAmB,gBAAgB,krBAAkrB,sCAAsC,oFAAoF,yBAAyB,kIAAkI,sBAAsB,0qBAA0qB,sCAAsC,kFAAkF,yBAAyB,8HAA8H,sBAAsB,0pBAA0pB,sCAAsC,8EAA8E,yBAAyB,sHAAsH,sBAAsB,0wBAA0wB,sCAAsC,4NAA4N,yBAAyB,wNAAwN,WAAW,4RAA4R,2BAA2B,sJAAsJ,kBAAkB,8NAA8N,kCAAkC,wHAAwH,uCAAuC,kwBAAkwB,sCAAsC,wNAAwN,yBAAyB,oNAAoN,WAAW,wRAAwR,2BAA2B,oJAAoJ,kBAAkB,4NAA4N,kCAAkC,sHAAsH,uCAAuC,kvBAAkvB,sCAAsC,gNAAgN,yBAAyB,4MAA4M,WAAW,gRAAgR,2BAA2B,gJAAgJ,kBAAkB,wNAAwN,kCAAkC,kHAAkH,uCAAuC,eAAe,mBAAmB,sBAAsB,2BAA2B,mBAAmB,WAAW,0BAA0B,mBAAmB,WAAW,wBAAwB,mBAAmB,WAAW,8HAA8H,8BAA8B,8MAA8M,cAAc,kCAAkC,yBAAyB,eAAe,6BAA6B,YAAY,gBAAgB,uCAAuC,sBAAsB,2BAA2B,2BAA2B,mBAAmB,mGAAmG,8BAA8B,cAAc,sBAAsB,qBAAqB,oBAAoB,wDAAwD,EAAE,uCAAuC,mBAAmB,EAAE,uCAAuC,oBAAoB,EAAE,8CAA8C,+DAA+D,qBAAqB,EAAE,2CAA2C,+DAA+D,qBAAqB,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,+BAA+B,kEAAkE,qBAAqB,EAAE,+BAA+B,iEAAiE,qBAAqB,EAAE,iCAAiC,+DAA+D,EAAE,2CAA2C,+DAA+D,EAAE,iDAAiD,uBAAuB,EAAE,4BAA4B,+DAA+D,EAAE,kDAAkD,iEAAiE,qBAAqB,4BAA4B,EAAE,kDAAkD,+DAA+D,qBAAqB,4BAA4B,EAAE,kDAAkD,+DAA+D,qBAAqB,6BAA6B,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,+BAA+B,+DAA+D,EAAE,sHAAsH,wDAAwD,oBAAoB,qBAAqB,EAAE,sBAAsB,wDAAwD,EAAE,aAAa,wDAAwD,EAAE,mBAAmB,oBAAoB,qBAAqB,EAAE,oCAAoC,oBAAoB,EAAE,0CAA0C,oBAAoB,EAAE,iBAAiB,wDAAwD,EAAE,4CAA4C,sBAAsB,EAAE,aAAa,oBAAoB,qBAAqB,EAAE,sFAAsF,sBAAsB,EAAE,cAAc,wDAAwD,EAAE,oBAAoB,oBAAoB,qBAAqB,EAAE,+BAA+B,oBAAoB,EAAE,iBAAiB,wDAAwD,EAAE,sBAAsB,oBAAoB,EAAE,0DAA0D,oBAAoB,qBAAqB,EAAE,iCAAiC,oBAAoB,qBAAqB,EAAE,qBAAqB,+DAA+D,EAAE,+BAA+B,wDAAwD,oBAAoB,qBAAqB,EAAE,gCAAgC,+DAA+D,EAAE,mBAAmB,uBAAuB,qBAAqB,uBAAuB,wDAAwD,EAAE,2BAA2B,8BAA8B,EAAE,uEAAuE,oBAAoB,uBAAuB,EAAE,qFAAqF,kBAAkB,iBAAiB,EAAE,2GAA2G,sBAAsB,yBAAyB,EAAE,yBAAyB,qBAAqB,4CAA4C,EAAE,yLAAyL,0DAA0D,0DAA0D,yBAAyB,EAAE,+HAA+H,0DAA0D,0DAA0D,yBAAyB,EAAE,iCAAiC,oBAAoB,2BAA2B,EAAE,yBAAyB,mBAAmB,EAAE,6BAA6B,sBAAsB,EAAE,qCAAqC,mBAAmB,6BAA6B,mCAAmC,EAAE,6DAA6D,2BAA2B,EAAE,2DAA2D,wBAAwB,EAAE,2PAA2P,iGAAiG,iGAAiG,sDAAsD,yBAAyB,EAAE,uKAAuK,mGAAmG,mGAAmG,sDAAsD,yBAAyB,EAAE,gKAAgK,mGAAmG,mGAAmG,sDAAsD,yBAAyB,EAAE,2DAA2D,mBAAmB,EAAE,+DAA+D,mBAAmB,EAAE,uEAAuE,6BAA6B,mCAAmC,EAAE,gBAAgB,+PAA+P,4DAA4D,4DAA4D,EAAE,yKAAyK,4DAA4D,4DAA4D,EAAE,kKAAkK,2DAA2D,2DAA2D,EAAE,EAAE,yDAAyD,+BAA+B,EAAE,yDAAyD,mBAAmB,uBAAuB,EAAE,uPAAuP,0DAA0D,0DAA0D,yBAAyB,EAAE,8JAA8J,0DAA0D,0DAA0D,yBAAyB,EAAE,4DAA4D,yBAAyB,EAAE,4DAA4D,mBAAmB,wBAAwB,EAAE,6PAA6P,0DAA0D,0DAA0D,yBAAyB,EAAE,iKAAiK,0DAA0D,0DAA0D,yBAAyB,EAAE,iDAAiD,oBAAoB,EAAE,uEAAuE,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,uGAAuG,wBAAwB,EAAE,2BAA2B,0BAA0B,EAAE,kBAAkB,wDAAwD,oBAAoB,qBAAqB,EAAE,iEAAiE,wDAAwD,oBAAoB,EAAE,qBAAqB,wDAAwD,EAAE,eAAe,wDAAwD,EAAE,uBAAuB,oBAAoB,EAAE,6BAA6B,wDAAwD,EAAE,gCAAgC,wDAAwD,oBAAoB,qBAAqB,EAAE,kDAAkD,wDAAwD,EAAE,mBAAmB,oBAAoB,qBAAqB,EAAE,6BAA6B,wBAAwB,EAAE,yBAAyB,oBAAoB,EAAE,4BAA4B,oBAAoB,qBAAqB,EAAE,kBAAkB,wDAAwD,EAAE,iCAAiC,wDAAwD,oBAAoB,qBAAqB,EAAE,4HAA4H,+DAA+D,cAAc,EAAE,gBAAgB,wDAAwD,oBAAoB,qBAAqB,wBAAwB,EAAE,wBAAwB,oBAAoB,qBAAqB,wBAAwB,EAAE,kBAAkB,wDAAwD,EAAE,oBAAoB,wDAAwD,EAAE,iCAAiC,oBAAoB,EAAE,2CAA2C,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,0DAA0D,wBAAwB,EAAE,mCAAmC,oBAAoB,EAAE,6CAA6C,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,4DAA4D,wBAAwB,EAAE,iCAAiC,wDAAwD,oBAAoB,qBAAqB,EAAE,wCAAwC,oBAAoB,EAAE,kDAAkD,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,iEAAiE,wBAAwB,EAAE,0CAA0C,oBAAoB,EAAE,oDAAoD,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,mEAAmE,wBAAwB,EAAE,wCAAwC,wDAAwD,oBAAoB,qBAAqB,EAAE,eAAe,wDAAwD,oBAAoB,EAAE,uBAAuB,+DAA+D,EAAE,wBAAwB,wDAAwD,oBAAoB,EAAE,+BAA+B,mBAAmB,yBAAyB,uBAAuB,qBAAqB,EAAE,aAAa,wDAAwD,EAAE,0CAA0C,qBAAqB,oBAAoB,EAAE,eAAe,qBAAqB,uBAAuB,EAAE,oCAAoC,sBAAsB,EAAE,uBAAuB,uBAAuB,uBAAuB,yBAAyB,0EAA0E,kEAAkE,oHAAoH,gCAAgC,gCAAgC,EAAE,sCAAsC,2BAA2B,sBAAsB,EAAE,EAAE,wBAAwB,cAAc,wBAAwB,gBAAgB,iBAAiB,qBAAqB,eAAe,uBAAuB,eAAe,eAAe,6BAA6B,0BAA0B,EAAE,uDAAuD,yBAAyB,WAAW,YAAY,iBAAiB,gBAAgB,EAAE,0BAA0B,oBAAoB,kBAAkB,EAAE,gCAAgC,oBAAoB,EAAE,+BAA+B,kBAAkB,uBAAuB,kBAAkB,EAAE,qBAAqB,uBAAuB,yBAAyB,2BAA2B,kBAAkB,kBAAkB,oBAAoB,qBAAqB,EAAE,yBAAyB,uBAAuB,WAAW,cAAc,YAAY,aAAa,kBAAkB,yBAAyB,6CAA6C,+DAA+D,eAAe,EAAE,sDAAsD,iBAAiB,EAAE,iDAAiD,4DAA4D,uBAAuB,EAAE,EAAE,8BAA8B,oCAAoC,EAAE,qGAAqG,eAAe,EAAE,gDAAgD,uBAAuB,kBAAkB,kBAAkB,2BAA2B,mBAAmB,oBAAoB,EAAE,2BAA2B,oBAAoB,gBAAgB,uBAAuB,EAAE,4CAA4C,WAAW,0CAA0C,WAAW,uDAAuD,0DAA0D,0DAA0D,EAAE,6DAA6D,wDAAwD,wDAAwD,EAAE,kCAAkC,iBAAiB,EAAE,4CAA4C,4BAA4B,gCAAgC,8BAA8B,uCAAuC,EAAE,uBAAuB,yCAAyC,EAAE,eAAe,+BAA+B,EAAE,4FAA4F,sCAAsC,EAAE,gFAAgF,sCAAsC,EAAE,0BAA0B,sCAAsC,iCAAiC,EAAE,mCAAmC,iCAAiC,EAAE,mEAAmE,mBAAmB,EAAE,kEAAkE,mBAAmB,EAAE,gEAAgE,mBAAmB,EAAE,uBAAuB,+BAA+B,EAAE,8CAA8C,+BAA+B,EAAE,wBAAwB,+BAA+B,EAAE,+BAA+B,qBAAqB,EAAE,iKAAiK,wBAAwB,EAAE,+FAA+F,wBAAwB,EAAE,yFAAyF,wBAAwB,EAAE,+HAA+H,wBAAwB,EAAE,qBAAqB,6HAA6H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,+HAA+H,EAAE,qBAAqB,+HAA+H,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,uBAAuB,8BAA8B,+BAA+B,EAAE,4BAA4B,kBAAkB,EAAE,2BAA2B,sBAAsB,+BAA+B,EAAE,2DAA2D,iIAAiI,EAAE,iFAAiF,wBAAwB,EAAE,2GAA2G,mCAAmC,EAAE,sBAAsB,iBAAiB,wBAAwB,EAAE,sCAAsC,0BAA0B,2BAA2B,yBAAyB,EAAE,EAAE,wCAAwC,wBAAwB,+BAA+B,EAAE,sCAAsC,iBAAiB,wBAAwB,EAAE,cAAc,uBAAuB,EAAE,wCAAwC,kBAAkB,EAAE,0CAA0C,wBAAwB,+BAA+B,EAAE,sBAAsB,uBAAuB,uBAAuB,0BAA0B,uBAAuB,oDAAoD,4CAA4C,iFAAiF,kCAAkC,kCAAkC,qBAAqB,wBAAwB,4BAA4B,yBAAyB,EAAE,uCAAuC,4BAA4B,4BAA4B,EAAE,uCAAuC,gBAAgB,iBAAiB,sBAAsB,EAAE,uDAAuD,cAAc,EAAE,uDAAuD,iBAAiB,EAAE,wDAAwD,gBAAgB,EAAE,oEAAoE,eAAe,iBAAiB,EAAE,uDAAuD,iBAAiB,EAAE,mEAAmE,gBAAgB,gBAAgB,EAAE,0EAA0E,eAAe,EAAE,sFAAsF,eAAe,gBAAgB,EAAE,yEAAyE,gBAAgB,EAAE,qFAAqF,gBAAgB,eAAe,EAAE,wCAAwC,gBAAgB,iBAAiB,sBAAsB,EAAE,wDAAwD,eAAe,EAAE,wDAAwD,kBAAkB,EAAE,yDAAyD,gBAAgB,EAAE,qEAAqE,eAAe,iBAAiB,EAAE,wDAAwD,iBAAiB,EAAE,oEAAoE,gBAAgB,gBAAgB,EAAE,2EAA2E,gBAAgB,EAAE,uFAAuF,eAAe,iBAAiB,EAAE,0EAA0E,iBAAiB,EAAE,sFAAsF,gBAAgB,gBAAgB,EAAE,uCAAuC,gBAAgB,iBAAiB,sBAAsB,EAAE,uDAAuD,eAAe,EAAE,uDAAuD,kBAAkB,EAAE,wDAAwD,gBAAgB,EAAE,oEAAoE,eAAe,iBAAiB,EAAE,uDAAuD,iBAAiB,EAAE,mEAAmE,gBAAgB,gBAAgB,EAAE,0EAA0E,gBAAgB,EAAE,sFAAsF,eAAe,iBAAiB,EAAE,yEAAyE,iBAAiB,EAAE,qFAAqF,gBAAgB,gBAAgB,EAAE,+BAA+B,kIAAkI,sBAAsB,+BAA+B,EAAE,sDAAsD,mBAAmB,4BAA4B,EAAE,0FAA0F,qBAAqB,EAAE,uFAAuF,qBAAqB,EAAE,iFAAiF,qBAAqB,EAAE,wcAAwc,iCAAiC,EAAE,wKAAwK,gCAAgC,EAAE,qKAAqK,gCAAgC,EAAE,+JAA+J,gCAAgC,EAAE,kKAAkK,oCAAoC,EAAE,kHAAkH,mBAAmB,qCAAqC,EAAE,6BAA6B,sBAAsB,EAAE,uCAAuC,sCAAsC,EAAE,iEAAiE,+BAA+B,4BAA4B,EAAE,iHAAiH,mBAAmB,EAAE,6GAA6G,iCAAiC,EAAE,qGAAqG,mBAAmB,EAAE,skBAAskB,iCAAiC,EAAE,iHAAiH,gCAAgC,EAAE,6GAA6G,gCAAgC,EAAE,qGAAqG,gCAAgC,EAAE,skBAAskB,4CAA4C,EAAE,iMAAiM,iDAAiD,EAAE,6LAA6L,2CAA2C,EAAE,qLAAqL,iDAAiD,EAAE,yGAAyG,6HAA6H,EAAE,sDAAsD,8HAA8H,EAAE,6EAA6E,gIAAgI,EAAE,gEAAgE,6HAA6H,EAAE,2FAA2F,gIAAgI,EAAE,yIAAyI,iIAAiI,EAAE,+GAA+G,6HAA6H,EAAE,4DAA4D,8HAA8H,EAAE,sHAAsH,qBAAqB,EAAE,sBAAsB,+BAA+B,EAAE,uDAAuD,4CAA4C,EAAE,0CAA0C,+BAA+B,sBAAsB,EAAE,2EAA2E,8BAA8B,EAAE,wFAAwF,+CAA+C,EAAE,oGAAoG,sBAAsB,gDAAgD,EAAE,mHAAmH,sBAAsB,uBAAuB,8CAA8C,EAAE,8BAA8B,8BAA8B,+BAA+B,EAAE,oEAAoE,iCAAiC,EAAE,+BAA+B,+BAA+B,8BAA8B,EAAE,qEAAqE,wBAAwB,EAAE,yDAAyD,gCAAgC,EAAE,sHAAsH,0CAA0C,EAAE,aAAa,sBAAsB,+BAA+B,EAAE,6CAA6C,gIAAgI,EAAE,2DAA2D,+HAA+H,EAAE,sBAAsB,+BAA+B,EAAE,uBAAuB,sCAAsC,EAAE,2BAA2B,kBAAkB,EAAE,gCAAgC,+BAA+B,EAAE,8CAA8C,oCAAoC,gCAAgC,EAAE,EAAE,2BAA2B,8BAA8B,EAAE,gIAAgI,8BAA8B,EAAE,8HAA8H,8BAA8B,EAAE,0HAA0H,8BAA8B,EAAE,oJAAoJ,8BAA8B,EAAE,yEAAyE,0BAA0B,EAAE,8CAA8C,+BAA+B,EAAE,sCAAsC,4BAA4B,mBAAmB,EAAE,EAAE,sCAAsC,8BAA8B,uBAAuB,EAAE,EAAE,kGAAkG,8BAA8B,EAAE,iGAAiG,8BAA8B,EAAE,+FAA+F,8BAA8B,EAAE,+BAA+B,8BAA8B,+BAA+B,EAAE,gDAAgD,iCAAiC,mBAAmB,EAAE,8DAA8D,gIAAgI,EAAE,8EAA8E,oBAAoB,EAAE,iDAAiD,mBAAmB,EAAE,sCAAsC,wBAAwB,EAAE,6DAA6D,8BAA8B,iBAAiB,EAAE,8EAA8E,mBAAmB,mBAAmB,EAAE,iFAAiF,2CAA2C,EAAE,0DAA0D,8BAA8B,iBAAiB,EAAE,2EAA2E,mBAAmB,mBAAmB,EAAE,8EAA8E,2CAA2C,EAAE,4DAA4D,8BAA8B,+BAA+B,EAAE,6EAA6E,iCAAiC,mBAAmB,EAAE,gFAAgF,qCAAqC,EAAE,cAAc,sBAAsB,EAAE,sKAAsK,wBAAwB,EAAE,iGAAiG,6CAA6C,EAAE,oBAAoB,+BAA+B,EAAE,+BAA+B,+BAA+B,EAAE,uBAAuB,0CAA0C,EAAE,sIAAsI,+BAA+B,EAAE,8BAA8B,+BAA+B,EAAE,6CAA6C,oCAAoC,EAAE,4BAA4B,+BAA+B,EAAE,mCAAmC,+BAA+B,8BAA8B,EAAE,kGAAkG,+BAA+B,EAAE,8WAA8W,0CAA0C,EAAE,6DAA6D,sCAAsC,EAAE,2FAA2F,sCAAsC,EAAE,+BAA+B,8BAA8B,iBAAiB,EAAE,6DAA6D,6CAA6C,EAAE,uDAAuD,sCAAsC,EAAE,2BAA2B,+HAA+H,4BAA4B,+BAA+B,EAAE,kEAAkE,gCAAgC,iCAAiC,EAAE,gGAAgG,iDAAiD,EAAE,0FAA0F,sDAAsD,EAAE,gEAAgE,gCAAgC,mBAAmB,EAAE,8FAA8F,+CAA+C,EAAE,wFAAwF,wCAAwC,EAAE,iCAAiC,6HAA6H,EAAE,iCAAiC,mBAAmB,EAAE,4CAA4C,qBAAqB,EAAE,0CAA0C,qBAAqB,EAAE,yBAAyB,mIAAmI,sBAAsB,+BAA+B,EAAE,gBAAgB,0CAA0C,EAAE,yBAAyB,4CAA4C,EAAE,wBAAwB,sBAAsB,+BAA+B,EAAE,wDAAwD,gIAAgI,EAAE,mBAAmB,0CAA0C,EAAE,oVAAoV,oCAAoC,EAAE,wBAAwB,4GAA4G,wBAAwB,EAAE,EAAE,qCAAqC,+BAA+B,EAAE,6EAA6E,+BAA+B,EAAE,qDAAqD,+BAA+B,EAAE,qLAAqL,qBAAqB,EAAE,yBAAyB,8BAA8B,EAAE,aAAa,8BAA8B,EAAE,qDAAqD,mBAAmB,EAAE,gEAAgE,qBAAqB,EAAE,8DAA8D,qBAAqB,EAAE,gDAAgD,mBAAmB,EAAE,0BAA0B,0CAA0C,EAAE,sDAAsD,8BAA8B,EAAE,iEAAiE,gCAAgC,EAAE,+DAA+D,gCAAgC,EAAE,gHAAgH,mBAAmB,EAAE,2HAA2H,mBAAmB,EAAE,yHAAyH,mBAAmB,EAAE,gEAAgE,mBAAmB,EAAE,4KAA4K,qBAAqB,EAAE,4IAA4I,8BAA8B,EAAE,cAAc,mBAAmB,EAAE,2DAA2D,+BAA+B,EAAE,+CAA+C,+BAA+B,EAAE,+DAA+D,0CAA0C,EAAE,uFAAuF,iHAAiH,8BAA8B,gCAAgC,EAAE,iEAAiE,0CAA0C,EAAE,yFAAyF,iHAAiH,8BAA8B,gCAAgC,EAAE,wDAAwD,0CAA0C,EAAE,gFAAgF,0CAA0C,EAAE,qEAAqE,0CAA0C,EAAE,iFAAiF,+BAA+B,EAAE,6FAA6F,kCAAkC,EAAE,8DAA8D,+BAA+B,EAAE,oEAAoE,+BAA+B,EAAE,gFAAgF,mBAAmB,EAAE,2FAA2F,mBAAmB,EAAE,yFAAyF,mBAAmB,EAAE,kHAAkH,mBAAmB,EAAE,oFAAoF,+BAA+B,EAAE,sFAAsF,+BAA+B,EAAE,yBAAyB,mBAAmB,EAAE,wBAAwB,mBAAmB,EAAE,sBAAsB,mBAAmB,EAAE,uEAAuE,+BAA+B,EAAE,6HAA6H,+BAA+B,EAAE,sBAAsB,yBAAyB,EAAE,iDAAiD,iCAAiC,EAAE,6CAA6C,iCAAiC,EAAE,mCAAmC,iCAAiC,EAAE,wCAAwC,iCAAiC,EAAE,iDAAiD,iCAAiC,EAAE,4CAA4C,iCAAiC,EAAE,kCAAkC,yBAAyB,EAAE,6EAA6E,yBAAyB,EAAE,8FAA8F,mBAAmB,EAAE,iCAAiC,+BAA+B,EAAE,mCAAmC,+BAA+B,EAAE,iCAAiC,+BAA+B,EAAE,2BAA2B,8BAA8B,EAAE,4HAA4H,oCAAoC,EAAE,mBAAmB,sBAAsB,EAAE,mDAAmD,iIAAiI,EAAE,kBAAkB,4BAA4B,+BAA+B,EAAE,6DAA6D,iCAAiC,EAAE,6EAA6E,+BAA+B,EAAE,gMAAgM,oCAAoC,EAAE,kBAAkB,sBAAsB,EAAE,iEAAiE,+BAA+B,EAAE,uDAAuD,8CAA8C,gDAAgD,EAAE,8CAA8C,8CAA8C,EAAE,gNAAgN,sCAAsC,EAAE,gCAAgC,kBAAkB,EAAE,4BAA4B,8BAA8B,EAAE,iCAAiC,8BAA8B,EAAE,6DAA6D,kBAAkB,EAAE,yDAAyD,8BAA8B,EAAE,8DAA8D,8BAA8B,EAAE,2DAA2D,kBAAkB,EAAE,uDAAuD,8BAA8B,EAAE,4DAA4D,8BAA8B,EAAE,qDAAqD,oBAAoB,EAAE,2EAA2E,oBAAoB,EAAE,uEAAuE,oBAAoB,EAAE,2BAA2B,sCAAsC,EAAE,2EAA2E,0BAA0B,EAAE,oTAAoT,8BAA8B,EAAE,0EAA0E,0BAA0B,EAAE,gTAAgT,8BAA8B,EAAE,wEAAwE,0BAA0B,EAAE,wSAAwS,8BAA8B,EAAE,iJAAiJ,sCAAsC,EAAE,6IAA6I,0CAA0C,EAAE,iEAAiE,+BAA+B,EAAE,yCAAyC,4BAA4B,EAAE,qBAAqB,+BAA+B,EAAE,2BAA2B,+BAA+B,EAAE,0CAA0C,+BAA+B,EAAE,qBAAqB,+BAA+B,EAAE,qBAAqB,sBAAsB,EAAE,qDAAqD,iIAAiI,EAAE,wEAAwE,sCAAsC,EAAE,6DAA6D,mBAAmB,EAAE,4DAA4D,mBAAmB,EAAE,0DAA0D,mBAAmB,EAAE,oEAAoE,mBAAmB,EAAE,qEAAqE,+BAA+B,EAAE,yBAAyB,8BAA8B,+BAA+B,EAAE,eAAe,4BAA4B,+BAA+B,EAAE,+BAA+B,8BAA8B,EAAE,qCAAqC,oIAAoI,EAAE,oBAAoB,gDAAgD,EAAE,mCAAmC,iDAAiD,yBAAyB,EAAE,gCAAgC,+CAA+C,uBAAuB,EAAE,+CAA+C,wBAAwB,kDAAkD,EAAE,yCAAyC,yCAAyC,EAAE,yDAAyD,8BAA8B,EAAE,uDAAuD,gDAAgD,EAAE,qDAAqD,8BAA8B,EAAE,qEAAqE,8BAA8B,EAAE,mEAAmE,8CAA8C,EAAE,iEAAiE,8BAA8B,EAAE,kEAAkE,8BAA8B,EAAE,gEAAgE,8CAA8C,EAAE,8DAA8D,8BAA8B,EAAE,2DAA2D,4BAA4B,EAAE,2BAA2B,8HAA8H,8BAA8B,EAAE,yBAAyB,0CAA0C,EAAE,gCAAgC,0CAA0C,EAAE,+GAA+G,8BAA8B,EAAE,6CAA6C,iBAAiB,EAAE,4GAA4G,8BAA8B,EAAE,4CAA4C,+BAA+B,EAAE,sGAAsG,8BAA8B,EAAE,0CAA0C,iBAAiB,EAAE,0BAA0B,+CAA+C,EAAE,8FAA8F,0CAA0C,EAAE,4IAA4I,0CAA0C,EAAE,2DAA2D,0CAA0C,EAAE,gDAAgD,0CAA0C,EAAE,yJAAyJ,0CAA0C,EAAE,iLAAiL,0CAA0C,EAAE,gFAAgF,sCAAsC,kCAAkC,EAAE,gLAAgL,sCAAsC,EAAE,wNAAwN,sCAAsC,EAAE,oDAAoD,qCAAqC,EAAE,4CAA4C,kIAAkI,wIAAwI,EAAE,0CAA0C,mIAAmI,EAAE,uGAAuG,0CAA0C,EAAE,wBAAwB,4BAA4B,uBAAuB,EAAE,EAAE,0EAA0E,+BAA+B,EAAE,mCAAmC,0CAA0C,iBAAiB,EAAE,sIAAsI,8BAA8B,iBAAiB,EAAE,+CAA+C,kCAAkC,mBAAmB,EAAE,0DAA0D,+BAA+B,EAAE,yDAAyD,mBAAmB,EAAE,kDAAkD,4BAA4B,EAAE,sCAAsC,2CAA2C,EAAE,iHAAiH,0CAA0C,EAAE,0BAA0B,mBAAmB,EAAE,sCAAsC,iDAAiD,EAAE,oGAAoG,8CAA8C,wBAAwB,EAAE,iCAAiC,+BAA+B,EAAE,mEAAmE,iCAAiC,EAAE,sCAAsC,sCAAsC,EAAE,0EAA0E,sCAAsC,EAAE,yGAAyG,wBAAwB,qBAAqB,EAAE,8rBAA8rB,+CAA+C,EAAE,sFAAsF,8BAA8B,EAAE,oIAAoI,4BAA4B,EAAE,srBAAsrB,+CAA+C,EAAE,oFAAoF,8BAA8B,EAAE,gIAAgI,0CAA0C,EAAE,sqBAAsqB,+CAA+C,EAAE,gFAAgF,8BAA8B,EAAE,wHAAwH,4BAA4B,EAAE,sxBAAsxB,+CAA+C,EAAE,gOAAgO,8BAA8B,EAAE,4NAA4N,iBAAiB,EAAE,gSAAgS,sCAAsC,EAAE,wJAAwJ,wBAAwB,EAAE,gOAAgO,2CAA2C,EAAE,0HAA0H,gDAAgD,EAAE,8wBAA8wB,+CAA+C,EAAE,4NAA4N,8BAA8B,EAAE,wNAAwN,+BAA+B,EAAE,4RAA4R,gCAAgC,EAAE,sJAAsJ,sCAAsC,EAAE,8NAA8N,qCAAqC,EAAE,wHAAwH,0CAA0C,EAAE,8vBAA8vB,+CAA+C,EAAE,oNAAoN,8BAA8B,EAAE,gNAAgN,iBAAiB,EAAE,oRAAoR,sCAAsC,EAAE,kJAAkJ,wBAAwB,EAAE,0NAA0N,2CAA2C,EAAE,oHAAoH,gDAAgD,EAAE,gBAAgB,2BAA2B,+BAA+B,EAAE,4BAA4B,0BAA0B,mBAAmB,EAAE,2BAA2B,0BAA0B,iCAAiC,EAAE,yBAAyB,0BAA0B,mBAAmB,EAAE,uIAAuI,qCAAqC,EAAE,+NAA+N,qBAAqB,EAAE,mCAAmC,gCAAgC,EAAE,gBAAgB,sCAAsC,EAAE,aAAa,sBAAsB,EAAE,0CAA0C,+BAA+B,EAAE,4BAA4B,oCAAoC,wBAAwB,gIAAgI,EAAE,+BAA+B,mBAAmB,EAAE,QAAQ,cAAc,wBAAwB,EAAE,SAAS,mBAAmB,EAAE,UAAU,mBAAmB,EAAE,QAAQ,qBAAqB,mBAAmB,EAAE,yBAAyB,8BAA8B,EAAE,qBAAqB,sBAAsB,EAAE,+CAA+C,2tha;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArlzI;AAC3B;AAEiB;AAEhB;AAEoC;AAChC;AAED;AAEtD,sDAAsD;AACtD;IAME,yBAAmB,IAAsB,EAAS,KAAS,EAAS,UAAkB,EACnE,SAAiB;QADc,iCAAS;QAAS,+CAAkB;QACnE,6CAAiB;QADjB,SAAI,GAAJ,IAAI,CAAkB;QAAS,UAAK,GAAL,KAAK,CAAI;QAAS,eAAU,GAAV,UAAU,CAAQ;QACnE,cAAS,GAAT,SAAS,CAAQ;QAClC,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;YACnD,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACvB;IACH,CAAC;IACH,sBAAC;AAAD,CAAC;AAED;;;GAGG;AACH;IAIE,kBAAY,IAAsB,EAAU,aAAiC,EAAU,eAAwB;QAAnE,kBAAa,GAAb,aAAa,CAAoB;QAAU,oBAAe,GAAf,eAAe,CAAS;QAC7G,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAiC;IACjC,8BAAW,GAAX;QACE,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAG,IAAI,WAAI,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,EAAjC,CAAiC,CAAC,CAAC;IAC3E,CAAC;IAED,8BAAW,GAAX,UAAY,IAAsB;QAAlC,iBAeC;QAdC,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;YACxB,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;SACtB;aAAM;YACL,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,sEAAiB,CAAC,QAAQ,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CACrC,0DAAG,CAAC,UAAC,MAAwB;oBACzB,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAE,IAAI,QAAC,KAAI,CAAC,eAAe,IAAI,EAAE,CAAC,IAAI,KAAK,KAAK,EAA1C,CAA0C,CAAC,CAAC;gBACpF,CAAC,CAAC,CACL,CAAC;aACH;iBAAM;gBACL,OAAO,+CAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAE,IAAI,QAAC,KAAI,CAAC,eAAe,IAAI,EAAE,CAAC,IAAI,KAAK,KAAK,EAA1C,CAA0C,CAAC,CAAC,CAAC;aAC9E;SACF;IACH,CAAC;IAED,+BAAY,GAAZ,UAAa,IAAsB;QACjC,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;IAC7B,CAAC;IACH,eAAC;AAAD,CAAC;AACD;;;;;;GAMG;AACH;IAUE,+BAAoB,WAA6C,EAC7C,QAAkB;QADlB,gBAAW,GAAX,WAAW,CAAkC;QAC7C,aAAQ,GAAR,QAAQ,CAAU;QATtC,eAAU,GAAG,IAAI,oDAAe,CAAoB,EAAE,CAAC,CAAC;IASf,CAAC;IAP1C,sBAAI,uCAAI;aAAR,cAAgC,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/D,UAAS,KAAwB;YAC/B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAJ8D;IAS/D,uCAAO,GAAP,UAAQ,gBAAkC;QAA1C,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAM;YACtD,IAAK,MAA2C,CAAC,KAAK;gBACjD,MAA2C,CAAC,OAAO,EAAE;gBACxD,KAAI,CAAC,iBAAiB,CAAC,MAA0C,CAAC,CAAC;aACpE;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,kDAAK,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAM,YAAI,CAAC,IAAI,EAAT,CAAS,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,uCAAuC;IACvC,iDAAiB,GAAjB,UAAkB,MAAwC;QAA1D,iBAOC;QANC,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC;SAC3D;QACD,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAAC;SAChF;IACH,CAAC;IAED;;OAEG;IACH,0CAAU,GAAV,UAAW,IAAqB,EAAE,UAAmB;QAArD,iBA2BC;QA1BC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,KAAK,GAAG,CAAC,EAAE,EAAE,iCAAiC;YAChD,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,QAAQ,CAAC,SAAS,CAAC,uBAAa;;YAC9B,IAAI,UAAU,EAAE;gBACd,IAAM,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,mBAAS;oBACrC,WAAI,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAArF,CAAqF,CAAC,CAAC;gBAC3F,WAAI,CAAC,IAAI,EAAC,MAAM,YAAC,KAAK,GAAG,CAAC,EAAE,CAAC,SAAK,KAAK,GAAE;aAC1C;iBAAM;gBACL,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM;uBACzC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,GAAE;gBACpD,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;aACpC;YAED,oBAAoB;YACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,UAAC,KAAK;YACP,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO;YACrD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,wCAAQ,GAAR,UAAS,IAAsB,EAAE,QAAyC;QAA1E,iBAkBC;QAjBC,IAAM,KAAK,GACP,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,EAAC,CAAC;QAC/D,+CAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CACZ,6DAAM,CAAC,iBAAO;YACZ,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE;gBAC9C,OAAO,0CAAK,CAAC;aACd;iBAAM;gBACL,OAAO,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,EACF,2DAAI,EAAE,CACP,CAAC,SAAS,CAAC,iBAAO;YACjB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;gBACtB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAU,GAAV,UAAW,OAAkF;QAA7F,iBA+BC;QA7BC,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE;YAC9C,OAAO,+CAAE,CAAC,OAAO,CAAC,CAAC;SACpB;QACD,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjD,IAAM,SAAS,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChE,IAAI,CAAC,YAAY,IAAI,OAAO,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;YAC1D,OAAO,+CAAE,CAAC,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC;SAC1F;QACD,IAAM,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CACtD,0DAAG,CAAC,UAAC,aAAiC;YACpC,IAAM,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,mBAAS;gBACvC,WAAI,eAAe,CAAC,SAAS,EAAE,YAAY,CAAC,KAAK,GAAG,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAA7F,CAA6F,CAAC,CAAC;YACjG,IAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACrC,OAAO,CAAC,MAAM,OAAd,OAAO,GAAQ,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,SAAK,KAAK,GAAE;YAC/C,IAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,IAAI,CAAC,IAAI,KAAK,aAAa,EAAhC,CAAgC,CAAC,CAAC;YACpF,IAAI,eAAe,GAAG,CAAC,EAAE;gBACvB,OAAO,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC,CAAC;aAC1F;iBAAM;gBACL,IAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,eAAe,CAAC;gBACrD,OAAO;oBACL,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,QAAQ;oBACf,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,SAAS,EAAE,OAAO,CAAC,SAAS,GAAG,CAAC;iBACjC,CAAC;aACH;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACH,4BAAC;AAAD,CAAC;AAOD;IA4CE,+BAAoB,WAAwB,EAAU,+BAAgE;QAAlG,gBAAW,GAAX,WAAW,CAAa;QAAU,oCAA+B,GAA/B,+BAA+B,CAAiC;QAlBtH;;WAEG;QACO,iBAAY,GAAmC,IAAI,0DAAY,EAAoB,CAAC;QAS9F,aAAQ,GAAG,UAAC,IAAqB,IAAK,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC;QAEjD,iBAAY,GAAG,UAAC,IAAqB,IAAK,WAAI,CAAC,UAAU,EAAf,CAAe,CAAC;QAE1D,aAAQ,GAAG,UAAC,CAAS,EAAE,SAA0B,IAAK,gBAAS,CAAC,UAAU,EAApB,CAAoB,CAAC;IAG3E,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QAC7D,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,GAAG;YACnC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,eAAe,EAAE,CAAC;QAC3F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,EAAE,KAAK,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAtC,CAAsC,CAAC,CAAC;YAChF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAChC;gBACE,0BAA0B,EAAE,CAAC,KAAK,CAAC;aACpC,CACF,CAAC;SACH;IACH,CAAC;IAED,sBAAI,8CAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,OAAyB;YAAzC,iBAuBC;YAtBC,IAAI,OAAO,EAAE;gBACX,IAAM,aAAa,GAAG,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAC5G,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE,aAAa,EAAE,CAAC,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3F,IAAI,CAAC,WAAW,GAAG,IAAI,iEAAe,CAAkB,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC1F,IAAI,CAAC,UAAU,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;gBAExE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAC9C,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,IAAI,IAAO,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5E;qBAAM;oBACL,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAC,IAAI;wBACrC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;iBACJ;gBACD,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;oBACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACjC;aACF;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;YACD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC9B,CAAC;;;OAzBA;IA2BD,wCAAQ,GAAR,UAAS,IAAqB;QAC5B,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC3C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAEO,+CAAe,GAAvB,UAAwB,IAAsB;QAC5C,IAAI,sEAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE;YAC9C,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,IAAI,CAAC,kBAAkB,KAAK,IAAI,CAAC,IAAI,CAAC;SAC9C;IACH,CAAC;IA3GQ;QAAR,2DAAK,EAAE;;iEAA6C;IAK5C;QAAR,2DAAK,EAAE;;uDAAwB;IAKvB;QAAR,2DAAK,EAAE;;uDAAwB;IAQvB;QAAR,2DAAK,EAAE;;qEAAmC;IAKjC;QAAT,4DAAM,EAAE;kCAAe,0DAAY;+DAA0D;IA7BnF,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iJAA6C;;SAE9C,CAAC;yCA6CiC,0DAAW,EAA2C,oGAA+B;OA5C3G,qBAAqB,CAkHjC;IAAD,4BAAC;CAAA;AAlHiC;;;;;;;;;;;;AC/MlC,wJAAwJ,mCAAmC,kGAAkG,gCAAgC,YAAY,iCAAiC,GAAG,WAAW,yR;;;;;;;;;;;ACAxX,+DAA+D,2L;;;;;;;;;;;;;;;;;;;;;;;;;;ACAwC;AAI3D;AACyF;AAErI;;;GAGG;AAMH;IAoBE,6BAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAPrC;;WAEG;QACO,iBAAY,GAAG,IAAI,0DAAY,EAAoB,CAAC;IAIrB,CAAC;IAE1C,sCAAQ,GAAR;IACA,CAAC;IAED,yCAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;IAC/C,CAAC;IAED,gDAAkB,GAAlB;QAAA,iBAaC;QAZC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wHAA6B,EAAE;YAChE,IAAI,EAAE;gBACJ,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,IAAI,EAAE,IAAI,CAAC,IAAI;aACY;SAC9B,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAwB;YACzD,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IApCQ;QAAR,2DAAK,EAAE;;+DAA4C;IAK3C;QAAR,2DAAK,EAAE;;qDAAwB;IAKtB;QAAT,4DAAM,EAAE;;6DAAqD;IAhBnD,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,8IAA4C;;SAE7C,CAAC;yCAqB4B,2DAAS;OApB1B,mBAAmB,CA2C/B;IAAD,0BAAC;CAAA;AA3C+B;;;;;;;;;;;;;ACJhC;AAAA;AAAA;IAWI,qBAAmB,WAA6B,EAAS,IAAY,EAAS,IAAY,EAAS,OAAe;QAA/F,gBAAW,GAAX,WAAW,CAAkB;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAThH,uBAAW,GAAlB,UAAmB,oBAA0C,EAAE,cAAsB;QACjF,IAAM,QAAQ,GAAqB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9D,OAAO,IAAI,WAAW,CAClB,oBAAoB,CAAC,2BAA2B,CAAC,QAAQ,CAAC,WAAW,CAAC,EACtE,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAIM,+BAAS,GAAhB,UAAiB,oBAA0C;QACvD,IAAM,QAAQ,GAAqB;YAC/B,OAAO,EAAE,GAAG;YACZ,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC;YAC7D,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED;;;OAGG;IACI,wCAAkB,GAAzB,UAA0B,UAAkB;QACxC,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACvF,CAAC;IAED;;;OAGG;IACH,2CAAqB,GAArB,UAAsB,MAAwB;QAC1C,OAAO,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjF,CAAC;IAEL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnCD;AAAA;AAAA,+DAA+D;AAC/D,qEAAqE;AACrE,qCAAqC;AACrC,IAAY,UAIX;AAJD,WAAY,UAAU;IAClB,iCAAmB;IACnB,qCAAuB;IACvB,uCAA2B;AAC/B,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB;;;;;;;;;;;;ACxBD,sgB;;;;;;;;;;;ACAA,4BAA4B,qBAAqB,oBAAoB,EAAE,+CAA+C,mpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9D;AAGQ;AAQhE;;GAEG;AAMH;IAME,uCAAoB,SAAiD,EAChC,IAA8B;QAD/C,cAAS,GAAT,SAAS,CAAwC;QAEnE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,gDAAQ,GAAR;IACA,CAAC;IAED,oDAAY,GAAZ,UAAa,CAAmB;QAC9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,sDAAc,GAAd;QACE,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,8CAAM,GAAN;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,8CAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IA9BU,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,+KAAuD;;SAExD,CAAC;QAQa,uEAAM,CAAC,iEAAe,CAAC;yCADL,8DAAY;OANhC,6BAA6B,CA+BzC;IAAD,oCAAC;CAAA;AA/ByC;;;;;;;;;;;;ACnB1C,+DAA+D,mM;;;;;;;;;;;ACA/D,2jB;;;;;;;;;;;;;;;;;;;;;;;;;ACA6E;AAGvB;AAOtD;IAUE,iCAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QALlC,iBAAY,GAAG,IAAI,0DAAY,EAAoB,CAAC;IAKd,CAAC;IAEjD,0CAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,aAAG;YAClC,IAAI,GAAG,CAAC,IAAI,EAAE;gBACZ,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;aACtF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,0CAAQ,GAAhB;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;aACvB,CAAC,CAAC;SACJ;IACH,CAAC;IAED,6DAA2B,GAA3B,UAA4B,OAAyB;QACnD,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC;QACvC,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,IAAI,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SAClG;IACH,CAAC;IAtCQ;QAAR,2DAAK,EAAE;;mEAA4C;IAC3C;QAAR,2DAAK,EAAE;;yDAAwB;IAEtB;QAAT,4DAAM,EAAE;;iEAAqD;IALnD,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,0JAAgD;;SAEjD,CAAC;yCAWiC,0DAAW;OAVjC,uBAAuB,CAyCnC;IAAD,8BAAC;CAAA;AAzCmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACVO;AACI;AAgB/C;IAEE;IAAgB,CAAC;IAEjB;;;;OAIG;IACI,gDAAQ,GAAf,UAAgB,IAAU;QACxB,IAAM,OAAO,GAAG,IAAI,kDAAa,EAAc,CAAC;QAChD,IAAI,IAAI,EAAE;YACR,IAAM,QAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,QAAM,CAAC,SAAS,GAAG;gBACjB,IAAM,WAAW,GAAG,QAAM,CAAC,MAAgB,CAAC;gBAC5C,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC;gBACvE,OAAO,CAAC,QAAQ,EAAE,CAAC;YACrB,CAAC,CAAC;YACF,QAAM,CAAC,OAAO,GAAG;gBACf,OAAO,CAAC,KAAK,CAAC,QAAM,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC;YACF,QAAM,CAAC,OAAO,GAAG;gBACf,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAChC,CAAC,CAAC;YACF,QAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACzB;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;YACnD,OAAO,CAAC,QAAQ,EAAE,CAAC;SACpB;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IA9BU,6BAA6B;QADzC,gEAAU,EAAE;;OACA,6BAA6B,CAgCzC;IAAD,oCAAC;CAAA;AAhCyC;;;;;;;;;;;;;AChB1C;AAAA;AAAA;AAAA;AAA8D;AAGmB;AAOjF;IAAA;QAIa,SAAI,GAAG,2EAAgB,CAAC,eAAe,CAAC;QAExC,OAAE,GAAG,GAAG,CAAC;IAsDtB,CAAC;IApDiB,0CAAc,GAA5B;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEM,uCAAW,GAAlB,UAAmB,oBAA0C,EAAE,cAAsB;QACjF,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEM,+CAAS,GAAhB,UAAiB,oBAA0C;QACvD,IAAM,QAAQ,GAAqB;YAC/B,YAAY,EAAE,2EAAgB,CAAC,eAAe;YAC9C,OAAO,EAAE,GAAG;SACf,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAEM,4CAAM,GAAb,UAAc,OAAiC;QAC3C,OAAO,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,2EAAgB,CAAC,eAAe,CAAC;IACxE,CAAC;IAEM,gDAAU,GAAjB;QACI,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,+CAAS,GAAhB;QACI,OAAO;YACH,OAAO,EAAE,MAAM;YACf,KAAK,EAAE,EAAE;SACZ,CAAC;IACN,CAAC;IAEM,qDAAe,GAAtB;QACI,OAAO,IAAI,+FAA6B,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAED;;OAEG;IACI,0DAAoB,GAA3B,UAA4B,OAAe;QACvC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACI,gDAAU,GAAjB;QACI,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,0CAAI,GAAX;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAzDM,qCAAS,GAAG,IAAI,2BAA2B,EAAE,CAAC;IA0DzD,kCAAC;CAAA;AA5DuC;;;;;;;;;;;;;ACVxC;AAAA;AAAA;AAA8D;AAU9D;IAaI,uCAAmB,IAAkB,EACT,aAAuC,EAC/C,KAAW,EAAE,OAAgB;QAF9B,SAAI,GAAJ,IAAI,CAAc;QACT,kBAAa,GAAb,aAAa,CAA0B;QAC/C,UAAK,GAAL,KAAK,CAAM;QAZ/B,aAAQ,GAAG,EAAE,CAAC;QAaV,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;SAC/B;aAAM;YACH,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SACvB;IACL,CAAC;IAhBM,6CAAe,GAAtB,UAAuB,aAAuC,EAAE,IAAU;QACtE,OAAO,IAAI,6BAA6B,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;IAC1E,CAAC;IAEM,yCAAW,GAAlB,UAAmB,oBAA0C,EAAE,cAAsB;QACjF,OAAO,6BAA6B,CAAC,eAAe,CAAC,oBAAoB,CAAC,6BAA6B,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,CAAC;IACnI,CAAC;IAYD,sBAAI,sDAAW;aAAf;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,+CAAI;aAAR;YACI,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAED;;OAEG;IACI,8CAAM,GAAb,UAAc,OAAyB;QACnC,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,mDAAW,GAAlB;QACI,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;IAC/B,CAAC;IAEM,iDAAS,GAAhB,UAAiB,oBAA0C;QACvD,OAAO,IAAI,CAAC,SAAS,CAAC;YAClB,IAAI,EAAE,2EAAgB,CAAC,eAAe;YACtC,OAAO,EAAE,GAAG;YACZ,IAAI,EAAE,IAAI,CAAC,IAAI;SACE,CAAC,CAAC;IAC3B,CAAC;IAEM,+CAAO,GAAd;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,6DAAqB,GAA5B,UAA6B,OAAe;QACxC,OAAO,IAAI,6BAA6B,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAC9F,CAAC;IACL,oCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEmC;AACK;AACkD;AAGV;AAC1B;AACpB;AAEyC;AAEzB;AAInD;IAEI,+BACY,iBAAgD,EAChD,iBAAoC;QADpC,sBAAiB,GAAjB,iBAAiB,CAA+B;QAChD,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAG,CAAC;IAEpD,oCAAI,GAAJ,UAAK,WAA0C;QAC3C,IAAI,WAAW,CAAC,WAAW,EAAE,EAAE;YAC3B,OAAO,+CAAE,CAAC,WAAW,CAAC,CAAC;SAC1B;QACD,IAAM,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC;QACrC,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAC7C,0DAAG,CAAC,gBAAM;YACN,OAAO,IAAI,gEAAW,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAClF,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAED,oCAAI,GAAJ,UAAK,IAAW;QACZ,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9E,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,qCAAK,GAAL,UAAM,IAAW;QACb,OAAO,+CAAE,CAAC,EAAC,MAAM,EAAE,wEAAU,CAAC,UAAU,EAAC,CAAC,CAAC;IAC/C,CAAC;IAED,yCAAS,GAAT,UAAU,oBAA0C,EAAE,aAAuC;QACzF,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAED,2CAAW,GAAX,UAAY,oBAA0C,EAAE,sBAA8B;QAClF,OAAO,0FAA2B,CAAC,cAAc,EAAE,CAAC;IACxD,CAAC;IAjCQ,qBAAqB;QADjC,gEAAU,EAAE;yCAIsB,+FAA6B;YAC7B,qEAAiB;OAJvC,qBAAqB,CAkCjC;IAAD,4BAAC;CAAA;AAlCiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfS;AACT;AAGlC;IAEE;IAAgB,CAAC;IAEjB,wCAAY,GAAZ,UAAa,QAAgB,EAAE,OAAe,EAAE,QAAgB;QAC9D,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;QACnD,yDAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACzB,CAAC;IAED,6CAAiB,GAAjB,UAAkB,QAAgB,EAAE,OAAe;QACjD,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAC1D,CAAC;IAXU,iBAAiB;QAD7B,gEAAU,EAAE;;OACA,iBAAiB,CAY7B;IAAD,wBAAC;CAAA;AAZ6B;;;;;;;;;;;;ACJ9B,0xBAA0xB,+GAA+G,0BAA0B,0yBAA0yB,iGAAiG,gCAAgC,4C;;;;;;;;;;;ACA90D,0jCAA0jC,gBAAgB,eAAe,iDAAiD,sCAAsC,cAAc,sCAAsC,eAAe,2CAA2C,wDAAwD,gBAAgB,wCAAwC,wDAAwD,gBAAgB,+CAA+C,wDAAwD,gBAAgB,+CAA+C,wDAAwD,gBAAgB,6BAA6B,2DAA2D,gBAAgB,6BAA6B,0DAA0D,gBAAgB,+BAA+B,wDAAwD,wCAAwC,wDAAwD,8CAA8C,gBAAgB,0BAA0B,wDAAwD,gDAAgD,0DAA0D,gBAAgB,sBAAsB,gDAAgD,wDAAwD,gBAAgB,sBAAsB,gDAAgD,wDAAwD,gBAAgB,uBAAuB,gDAAgD,wDAAwD,gBAAgB,8BAA8B,wDAAwD,8GAA8G,iDAAiD,eAAe,gBAAgB,qBAAqB,iDAAiD,YAAY,iDAAiD,kBAAkB,eAAe,gBAAgB,mCAAmC,eAAe,uCAAuC,eAAe,gBAAgB,iDAAiD,2CAA2C,iBAAiB,YAAY,eAAe,gBAAgB,iFAAiF,eAAe,aAAa,iDAAiD,mBAAmB,eAAe,gBAAgB,6BAA6B,eAAe,gBAAgB,iDAAiD,qBAAqB,eAAe,uDAAuD,eAAe,gBAAgB,gCAAgC,eAAe,gBAAgB,oBAAoB,wDAAwD,8BAA8B,iDAAiD,eAAe,gBAAgB,+BAA+B,wDAAwD,kBAAkB,kBAAkB,gBAAgB,kBAAkB,iDAAiD,0BAA0B,yBAAyB,oEAAoE,eAAe,kBAAkB,kFAAkF,aAAa,YAAY,sGAAsG,eAAe,kBAAkB,wBAAwB,eAAe,sCAAsC,oLAAoL,oDAAoD,4CAA4C,iBAAiB,2HAA2H,oDAAoD,4CAA4C,iBAAiB,gCAAgC,cAAc,qBAAqB,wBAAwB,cAAc,4BAA4B,iBAAiB,oCAAoC,cAAc,oBAAoB,2BAA2B,4DAA4D,sBAAsB,0DAA0D,kBAAkB,sPAAsP,0FAA0F,kFAAkF,gDAAgD,iBAAiB,mKAAmK,4FAA4F,oFAAoF,gDAAgD,iBAAiB,4JAA4J,4FAA4F,oFAAoF,gDAAgD,iBAAiB,0DAA0D,cAAc,8DAA8D,cAAc,sEAAsE,oBAAoB,2BAA2B,eAAe,oPAAoP,oDAAoD,4CAA4C,iKAAiK,oDAAoD,4CAA4C,0JAA0J,mDAAmD,4CAA4C,wDAAwD,wBAAwB,wDAAwD,cAAc,iBAAiB,kPAAkP,mDAAmD,2CAA2C,iBAAiB,0JAA0J,mDAAmD,2CAA2C,iBAAiB,2DAA2D,oBAAoB,2DAA2D,cAAc,kBAAkB,wPAAwP,oDAAoD,4CAA4C,iBAAiB,6JAA6J,oDAAoD,4CAA4C,iBAAiB,8CAA8C,eAAe,kEAAkE,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,gGAAgG,eAAe,0BAA0B,oBAAoB,iBAAiB,iDAAiD,eAAe,gBAAgB,8DAA8D,iDAAiD,eAAe,oBAAoB,iDAAiD,cAAc,iDAAiD,sBAAsB,eAAe,4BAA4B,iDAAiD,+BAA+B,iDAAiD,eAAe,gBAAgB,gDAAgD,iDAAiD,kBAAkB,eAAe,gBAAgB,4BAA4B,gBAAgB,wBAAwB,eAAe,2BAA2B,eAAe,gBAAgB,iBAAiB,iDAAiD,+BAA+B,iDAAiD,eAAe,gBAAgB,+GAA+G,wDAAwD,SAAS,eAAe,iDAAiD,eAAe,gBAAgB,mBAAmB,uBAAuB,eAAe,gBAAgB,mBAAmB,iBAAiB,iDAAiD,mBAAmB,iDAAiD,gCAAgC,eAAe,0CAA0C,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,yDAAyD,eAAe,kCAAkC,eAAe,4CAA4C,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,2DAA2D,eAAe,gCAAgC,iDAAiD,eAAe,gBAAgB,uCAAuC,eAAe,iDAAiD,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,gEAAgE,eAAe,yCAAyC,eAAe,mDAAmD,mBAAmB,gBAAgB,uBAAuB,cAAc,sBAAsB,kEAAkE,eAAe,uCAAuC,iDAAiD,eAAe,gBAAgB,cAAc,iDAAiD,eAAe,sBAAsB,wDAAwD,uBAAuB,iDAAiD,eAAe,8BAA8B,cAAc,oBAAoB,kBAAkB,gBAAgB,YAAY,iDAAiD,uCAAuC,gBAAgB,eAAe,cAAc,gBAAgB,kBAAkB,mCAAmC,iBAAiB,sBAAsB,kBAAkB,kBAAkB,oBAAoB,+DAA+D,uDAAuD,mGAAmG,2BAA2B,mBAAmB,oCAAoC,oBAAoB,cAAc,uBAAuB,SAAS,mBAAmB,WAAW,YAAY,gBAAgB,UAAU,kBAAkB,UAAU,UAAU,wBAAwB,qBAAqB,qDAAqD,oBAAoB,MAAM,OAAO,YAAY,WAAW,yBAAyB,eAAe,aAAa,+BAA+B,aAAa,8BAA8B,aAAa,kBAAkB,aAAa,oBAAoB,kBAAkB,oBAAoB,sBAAsB,aAAa,aAAa,eAAe,gBAAgB,wBAAwB,kBAAkB,MAAM,SAAS,OAAO,QAAQ,aAAa,oBAAoB,wCAAwC,kDAAkD,UAAU,qDAAqD,UAAU,+CAA+C,mDAAmD,YAAY,6BAA6B,2BAA2B,mGAAmG,UAAU,+CAA+C,kBAAkB,aAAa,aAAa,sBAAsB,cAAc,eAAe,0BAA0B,eAAe,WAAW,kBAAkB,mDAAmD,MAAM,2CAA2C,MAAM,iDAAiD,MAAM,yCAAyC,MAAM,sDAAsD,qDAAqD,6CAA6C,4DAA4D,mDAAmD,2CAA2C,iCAAiC,YAAY,2CAA2C,sBAAsB,0BAA0B,wBAAwB,iCAAiC,sBAAsB,gCAAgC,cAAc,sBAAsB,0FAA0F,2BAA2B,+EAA+E,2BAA2B,yBAAyB,2BAA2B,sBAAsB,kCAAkC,sBAAsB,kEAAkE,cAAc,iEAAiE,cAAc,+DAA+D,cAAc,sBAAsB,sBAAsB,6CAA6C,sBAAsB,uBAAuB,sBAAsB,8BAA8B,cAAc,0JAA0J,mBAAmB,4FAA4F,mBAAmB,sFAAsF,mBAAmB,4HAA4H,mBAAmB,oBAAoB,kFAAkF,oBAAoB,iGAAiG,oBAAoB,iGAAiG,oBAAoB,iGAAiG,oBAAoB,kGAAkG,oBAAoB,kGAAkG,oBAAoB,mGAAmG,oBAAoB,uGAAuG,oBAAoB,uGAAuG,oBAAoB,uGAAuG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,wGAAwG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,yGAAyG,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,qBAAqB,0GAA0G,sBAAsB,yBAAyB,sBAAsB,2BAA2B,aAAa,0BAA0B,gBAAgB,sBAAsB,wDAAwD,kGAAkG,gFAAgF,gBAAgB,0GAA0G,sBAAsB,qBAAqB,WAAW,mBAAmB,oCAAoC,mBAAmB,kBAAkB,iBAAiB,uCAAuC,mBAAmB,WAAW,qCAAqC,WAAW,mBAAmB,aAAa,kBAAkB,uCAAuC,aAAa,yCAAyC,mBAAmB,sBAAsB,qBAAqB,kBAAkB,kBAAkB,qBAAqB,kBAAkB,6CAA6C,qCAAqC,wEAAwE,4BAA4B,oBAAoB,gBAAgB,mBAAmB,uBAAuB,oBAAoB,sCAAsC,uBAAuB,eAAe,sCAAsC,WAAW,YAAY,iBAAiB,sDAAsD,SAAS,sDAAsD,YAAY,uDAAuD,WAAW,iEAAiE,UAAU,YAAY,sDAAsD,YAAY,gEAAgE,WAAW,WAAW,yEAAyE,UAAU,mFAAmF,UAAU,WAAW,wEAAwE,WAAW,kFAAkF,WAAW,UAAU,uCAAuC,WAAW,YAAY,iBAAiB,uDAAuD,UAAU,uDAAuD,aAAa,wDAAwD,WAAW,kEAAkE,UAAU,YAAY,uDAAuD,YAAY,iEAAiE,WAAW,WAAW,0EAA0E,WAAW,oFAAoF,UAAU,YAAY,yEAAyE,YAAY,mFAAmF,WAAW,WAAW,sCAAsC,WAAW,YAAY,iBAAiB,sDAAsD,UAAU,sDAAsD,aAAa,uDAAuD,WAAW,iEAAiE,UAAU,YAAY,sDAAsD,YAAY,gEAAgE,WAAW,WAAW,yEAAyE,WAAW,mFAAmF,UAAU,YAAY,wEAAwE,YAAY,kFAAkF,WAAW,WAAW,8BAA8B,yGAAyG,gBAAgB,sBAAsB,mDAAmD,cAAc,eAAe,uFAAuF,cAAc,oFAAoF,cAAc,8EAA8E,cAAc,4bAA4b,sBAAsB,qKAAqK,yBAAyB,kKAAkK,yBAAyB,4JAA4J,yBAAyB,+JAA+J,6BAA6B,+GAA+G,WAAW,8BAA8B,4BAA4B,gBAAgB,sCAAsC,6BAA6B,6DAA6D,sBAAsB,sBAAsB,6GAA6G,WAAW,yGAAyG,WAAW,iGAAiG,WAAW,sjBAAsjB,sBAAsB,6GAA6G,yBAAyB,yGAAyG,yBAAyB,iGAAiG,yBAAyB,sjBAAsjB,iCAAiC,6LAA6L,sCAAsC,yLAAyL,sCAAsC,iLAAiL,sCAAsC,mGAAmG,kFAAkF,mDAAmD,iGAAiG,0EAA0E,uGAAuG,6DAA6D,kFAAkF,qFAAqF,mGAAmG,mIAAmI,wGAAwG,yGAAyG,kFAAkF,yDAAyD,iGAAiG,mHAAmH,gBAAgB,qBAAqB,sBAAsB,sDAAsD,iCAAiC,yCAAyC,sBAAsB,gBAAgB,0EAA0E,sBAAsB,qFAAqF,sCAAsC,+FAA+F,iBAAiB,uCAAuC,gHAAgH,iBAAiB,kBAAkB,qCAAqC,6BAA6B,yBAAyB,sBAAsB,mEAAmE,sBAAsB,8BAA8B,sBAAsB,sBAAsB,oEAAoE,gBAAgB,wDAAwD,yBAAyB,mHAAmH,iCAAiC,YAAY,gBAAgB,sBAAsB,0CAA0C,iGAAiG,wDAAwD,kFAAkF,qBAAqB,sBAAsB,sBAAsB,6BAA6B,0BAA0B,aAAa,+BAA+B,yBAAyB,4CAA4C,6BAA6B,uBAAuB,0BAA0B,yBAAyB,8HAA8H,yBAAyB,4HAA4H,yBAAyB,wHAAwH,yBAAyB,kJAAkJ,yBAAyB,wEAAwE,qBAAqB,6CAA6C,sBAAsB,oCAAoC,uBAAuB,YAAY,oCAAoC,yBAAyB,gBAAgB,iGAAiG,yBAAyB,gGAAgG,yBAAyB,8FAA8F,yBAAyB,8BAA8B,yBAAyB,sBAAsB,+CAA+C,sBAAsB,WAAW,6DAA6D,iGAAiG,6EAA6E,YAAY,gDAAgD,WAAW,qCAAqC,gBAAgB,4DAA4D,yBAAyB,WAAW,6EAA6E,WAAW,WAAW,gFAAgF,gCAAgC,yDAAyD,yBAAyB,WAAW,0EAA0E,WAAW,WAAW,6EAA6E,gCAAgC,2DAA2D,yBAAyB,WAAW,4EAA4E,WAAW,WAAW,+EAA+E,gCAAgC,aAAa,gBAAgB,yJAAyJ,mBAAmB,0FAA0F,oCAAoC,mBAAmB,sBAAsB,6BAA6B,sBAAsB,sBAAsB,iCAAiC,iIAAiI,sBAAsB,6BAA6B,sBAAsB,4CAA4C,2BAA2B,2BAA2B,sBAAsB,kCAAkC,sBAAsB,yBAAyB,+FAA+F,sBAAsB,mWAAmW,iCAAiC,4DAA4D,6BAA6B,wFAAwF,6BAA6B,8BAA8B,yBAAyB,WAAW,0DAA0D,oCAAoC,sDAAsD,gCAAgC,0BAA0B,kGAAkG,sBAAsB,sBAAsB,iEAAiE,yBAAyB,WAAW,6FAA6F,qCAAqC,yFAAyF,gCAAgC,+DAA+D,yBAAyB,WAAW,2FAA2F,oCAAoC,uFAAuF,gCAAgC,gCAAgC,kFAAkF,gCAAgC,cAAc,2CAA2C,cAAc,yCAAyC,cAAc,wBAAwB,0GAA0G,gBAAgB,sBAAsB,eAAe,iCAAiC,wBAAwB,mCAAmC,uBAAuB,gBAAgB,sBAAsB,qDAAqD,iGAAiG,kBAAkB,iCAAiC,2UAA2U,2BAA2B,sBAAsB,oGAAoG,iBAAiB,oCAAoC,sBAAsB,0EAA0E,sBAAsB,kDAAkD,sBAAsB,4KAA4K,cAAc,wBAAwB,qBAAqB,YAAY,qBAAqB,oDAAoD,cAAc,+DAA+D,cAAc,6DAA6D,cAAc,+CAA+C,cAAc,yBAAyB,iCAAiC,qDAAqD,yBAAyB,gEAAgE,yBAAyB,8DAA8D,yBAAyB,+GAA+G,cAAc,0HAA0H,cAAc,wHAAwH,cAAc,+DAA+D,cAAc,uKAAuK,cAAc,yIAAyI,yBAAyB,aAAa,cAAc,0DAA0D,sBAAsB,8CAA8C,sBAAsB,8DAA8D,iCAAiC,sFAAsF,+FAA+F,yBAAyB,2BAA2B,gEAAgE,iCAAiC,wFAAwF,+FAA+F,yBAAyB,2BAA2B,uDAAuD,iCAAiC,+EAA+E,iCAAiC,oEAAoE,iCAAiC,gFAAgF,sBAAsB,4FAA4F,6BAA6B,6DAA6D,sBAAsB,mEAAmE,sBAAsB,+EAA+E,cAAc,0FAA0F,cAAc,wFAAwF,cAAc,iHAAiH,cAAc,mFAAmF,sBAAsB,qFAAqF,sBAAsB,wBAAwB,cAAc,uBAAuB,cAAc,qBAAqB,cAAc,sEAAsE,sBAAsB,0HAA0H,sBAAsB,qBAAqB,oBAAoB,gDAAgD,sBAAsB,4CAA4C,sBAAsB,kCAAkC,sBAAsB,uCAAuC,sBAAsB,gDAAgD,sBAAsB,2CAA2C,sBAAsB,iCAAiC,oBAAoB,0EAA0E,oBAAoB,6FAA6F,cAAc,gCAAgC,sBAAsB,kCAAkC,sBAAsB,gCAAgC,sBAAsB,0BAA0B,sBAAsB,sHAAsH,2BAA2B,kBAAkB,gBAAgB,gDAAgD,kGAAkG,iBAAiB,eAAe,sBAAsB,2DAA2D,sBAAsB,0EAA0E,sBAAsB,yLAAyL,2BAA2B,iBAAiB,gBAAgB,8DAA8D,sBAAsB,oDAAoD,qCAAqC,uCAAuC,2CAA2C,qCAAqC,yMAAyM,6BAA6B,+BAA+B,aAAa,2BAA2B,yBAAyB,gCAAgC,yBAAyB,4DAA4D,aAAa,wDAAwD,yBAAyB,6DAA6D,yBAAyB,0DAA0D,aAAa,sDAAsD,yBAAyB,2DAA2D,yBAAyB,mDAAmD,eAAe,yEAAyE,eAAe,qEAAqE,eAAe,0BAA0B,6BAA6B,0EAA0E,qBAAqB,6SAA6S,yBAAyB,yEAAyE,qBAAqB,ySAAyS,yBAAyB,uEAAuE,qBAAqB,iSAAiS,yBAAyB,8IAA8I,6BAA6B,0IAA0I,iCAAiC,gEAAgE,sBAAsB,wCAAwC,sBAAsB,oBAAoB,sBAAsB,0BAA0B,sBAAsB,yCAAyC,sBAAsB,oBAAoB,sBAAsB,oBAAoB,gBAAgB,kDAAkD,kGAAkG,uEAAuE,2BAA2B,4DAA4D,cAAc,2DAA2D,cAAc,yDAAyD,cAAc,mEAAmE,cAAc,oEAAoE,sBAAsB,wBAAwB,yBAAyB,sBAAsB,cAAc,sBAAsB,sBAAsB,8BAA8B,sBAAsB,oCAAoC,yGAAyG,mBAAmB,uCAAuC,kCAAkC,sCAAsC,kBAAkB,6BAA6B,sCAAsC,kBAAkB,4CAA4C,iBAAiB,uCAAuC,wCAAwC,gCAAgC,wDAAwD,yBAAyB,sDAAsD,sCAAsC,oDAAoD,yBAAyB,oEAAoE,yBAAyB,kEAAkE,qCAAqC,gEAAgE,yBAAyB,iEAAiE,yBAAyB,+DAA+D,qCAAqC,6DAA6D,yBAAyB,0DAA0D,sBAAsB,0BAA0B,iGAAiG,yBAAyB,wBAAwB,iCAAiC,+BAA+B,iCAAiC,0GAA0G,yBAAyB,4CAA4C,WAAW,uGAAuG,yBAAyB,2CAA2C,WAAW,iGAAiG,yBAAyB,yCAAyC,WAAW,yBAAyB,qCAAqC,2FAA2F,iCAAiC,uIAAuI,iCAAiC,0DAA0D,iCAAiC,+CAA+C,iCAAiC,sJAAsJ,iCAAiC,8KAA8K,iCAAiC,+EAA+E,6BAA6B,6BAA6B,8KAA8K,6BAA6B,sNAAsN,6BAA6B,mDAAmD,4BAA4B,2CAA2C,iHAAiH,sHAAsH,yCAAyC,kHAAkH,oGAAoG,iCAAiC,sBAAsB,uBAAuB,gBAAgB,uEAAuE,sBAAsB,kCAAkC,iCAAiC,WAAW,iIAAiI,yBAAyB,WAAW,8CAA8C,6BAA6B,cAAc,yDAAyD,sBAAsB,wDAAwD,cAAc,gDAAgD,sBAAsB,qCAAqC,kCAAkC,4GAA4G,iCAAiC,yBAAyB,cAAc,mCAAmC,wCAAwC,iGAAiG,qCAAqC,mBAAmB,+BAA+B,sBAAsB,iEAAiE,sBAAsB,qCAAqC,6BAA6B,yEAAyE,6BAA6B,kGAAkG,mBAAmB,gBAAgB,krBAAkrB,sCAAsC,oFAAoF,yBAAyB,kIAAkI,sBAAsB,0qBAA0qB,sCAAsC,kFAAkF,yBAAyB,8HAA8H,sBAAsB,0pBAA0pB,sCAAsC,8EAA8E,yBAAyB,sHAAsH,sBAAsB,0wBAA0wB,sCAAsC,4NAA4N,yBAAyB,wNAAwN,WAAW,4RAA4R,2BAA2B,sJAAsJ,kBAAkB,8NAA8N,kCAAkC,wHAAwH,uCAAuC,kwBAAkwB,sCAAsC,wNAAwN,yBAAyB,oNAAoN,WAAW,wRAAwR,2BAA2B,oJAAoJ,kBAAkB,4NAA4N,kCAAkC,sHAAsH,uCAAuC,kvBAAkvB,sCAAsC,gNAAgN,yBAAyB,4MAA4M,WAAW,gRAAgR,2BAA2B,gJAAgJ,kBAAkB,wNAAwN,kCAAkC,kHAAkH,uCAAuC,eAAe,mBAAmB,sBAAsB,2BAA2B,mBAAmB,WAAW,0BAA0B,mBAAmB,WAAW,wBAAwB,mBAAmB,WAAW,8HAA8H,8BAA8B,8MAA8M,cAAc,kCAAkC,yBAAyB,eAAe,6BAA6B,YAAY,gBAAgB,uCAAuC,sBAAsB,2BAA2B,2BAA2B,mBAAmB,mGAAmG,8BAA8B,cAAc,sBAAsB,qBAAqB,oBAAoB,wDAAwD,EAAE,uCAAuC,mBAAmB,EAAE,uCAAuC,oBAAoB,EAAE,8CAA8C,+DAA+D,qBAAqB,EAAE,2CAA2C,+DAA+D,qBAAqB,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,+BAA+B,kEAAkE,qBAAqB,EAAE,+BAA+B,iEAAiE,qBAAqB,EAAE,iCAAiC,+DAA+D,EAAE,2CAA2C,+DAA+D,EAAE,iDAAiD,uBAAuB,EAAE,4BAA4B,+DAA+D,EAAE,kDAAkD,iEAAiE,qBAAqB,4BAA4B,EAAE,kDAAkD,+DAA+D,qBAAqB,4BAA4B,EAAE,kDAAkD,+DAA+D,qBAAqB,6BAA6B,EAAE,kDAAkD,+DAA+D,qBAAqB,EAAE,+BAA+B,+DAA+D,EAAE,sHAAsH,wDAAwD,oBAAoB,qBAAqB,EAAE,sBAAsB,wDAAwD,EAAE,aAAa,wDAAwD,EAAE,mBAAmB,oBAAoB,qBAAqB,EAAE,oCAAoC,oBAAoB,EAAE,0CAA0C,oBAAoB,EAAE,iBAAiB,wDAAwD,EAAE,4CAA4C,sBAAsB,EAAE,aAAa,oBAAoB,qBAAqB,EAAE,sFAAsF,sBAAsB,EAAE,cAAc,wDAAwD,EAAE,oBAAoB,oBAAoB,qBAAqB,EAAE,+BAA+B,oBAAoB,EAAE,iBAAiB,wDAAwD,EAAE,sBAAsB,oBAAoB,EAAE,0DAA0D,oBAAoB,qBAAqB,EAAE,iCAAiC,oBAAoB,qBAAqB,EAAE,qBAAqB,+DAA+D,EAAE,+BAA+B,wDAAwD,oBAAoB,qBAAqB,EAAE,gCAAgC,+DAA+D,EAAE,mBAAmB,uBAAuB,qBAAqB,uBAAuB,wDAAwD,EAAE,2BAA2B,8BAA8B,EAAE,uEAAuE,oBAAoB,uBAAuB,EAAE,qFAAqF,kBAAkB,iBAAiB,EAAE,2GAA2G,sBAAsB,yBAAyB,EAAE,yBAAyB,qBAAqB,4CAA4C,EAAE,yLAAyL,0DAA0D,0DAA0D,yBAAyB,EAAE,+HAA+H,0DAA0D,0DAA0D,yBAAyB,EAAE,iCAAiC,oBAAoB,2BAA2B,EAAE,yBAAyB,mBAAmB,EAAE,6BAA6B,sBAAsB,EAAE,qCAAqC,mBAAmB,6BAA6B,mCAAmC,EAAE,6DAA6D,2BAA2B,EAAE,2DAA2D,wBAAwB,EAAE,2PAA2P,iGAAiG,iGAAiG,sDAAsD,yBAAyB,EAAE,uKAAuK,mGAAmG,mGAAmG,sDAAsD,yBAAyB,EAAE,gKAAgK,mGAAmG,mGAAmG,sDAAsD,yBAAyB,EAAE,2DAA2D,mBAAmB,EAAE,+DAA+D,mBAAmB,EAAE,uEAAuE,6BAA6B,mCAAmC,EAAE,gBAAgB,+PAA+P,4DAA4D,4DAA4D,EAAE,yKAAyK,4DAA4D,4DAA4D,EAAE,kKAAkK,2DAA2D,2DAA2D,EAAE,EAAE,yDAAyD,+BAA+B,EAAE,yDAAyD,mBAAmB,uBAAuB,EAAE,uPAAuP,0DAA0D,0DAA0D,yBAAyB,EAAE,8JAA8J,0DAA0D,0DAA0D,yBAAyB,EAAE,4DAA4D,yBAAyB,EAAE,4DAA4D,mBAAmB,wBAAwB,EAAE,6PAA6P,0DAA0D,0DAA0D,yBAAyB,EAAE,iKAAiK,0DAA0D,0DAA0D,yBAAyB,EAAE,iDAAiD,oBAAoB,EAAE,uEAAuE,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,uGAAuG,wBAAwB,EAAE,2BAA2B,0BAA0B,EAAE,kBAAkB,wDAAwD,oBAAoB,qBAAqB,EAAE,iEAAiE,wDAAwD,oBAAoB,EAAE,qBAAqB,wDAAwD,EAAE,eAAe,wDAAwD,EAAE,uBAAuB,oBAAoB,EAAE,6BAA6B,wDAAwD,EAAE,gCAAgC,wDAAwD,oBAAoB,qBAAqB,EAAE,kDAAkD,wDAAwD,EAAE,mBAAmB,oBAAoB,qBAAqB,EAAE,6BAA6B,wBAAwB,EAAE,yBAAyB,oBAAoB,EAAE,4BAA4B,oBAAoB,qBAAqB,EAAE,kBAAkB,wDAAwD,EAAE,iCAAiC,wDAAwD,oBAAoB,qBAAqB,EAAE,4HAA4H,+DAA+D,cAAc,EAAE,gBAAgB,wDAAwD,oBAAoB,qBAAqB,wBAAwB,EAAE,wBAAwB,oBAAoB,qBAAqB,wBAAwB,EAAE,kBAAkB,wDAAwD,EAAE,oBAAoB,wDAAwD,EAAE,iCAAiC,oBAAoB,EAAE,2CAA2C,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,0DAA0D,wBAAwB,EAAE,mCAAmC,oBAAoB,EAAE,6CAA6C,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,4DAA4D,wBAAwB,EAAE,iCAAiC,wDAAwD,oBAAoB,qBAAqB,EAAE,wCAAwC,oBAAoB,EAAE,kDAAkD,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,iEAAiE,wBAAwB,EAAE,0CAA0C,oBAAoB,EAAE,oDAAoD,0BAA0B,uBAAuB,8BAA8B,qBAAqB,6BAA6B,EAAE,mEAAmE,wBAAwB,EAAE,wCAAwC,wDAAwD,oBAAoB,qBAAqB,EAAE,eAAe,wDAAwD,oBAAoB,EAAE,uBAAuB,+DAA+D,EAAE,wBAAwB,wDAAwD,oBAAoB,EAAE,+BAA+B,mBAAmB,yBAAyB,uBAAuB,qBAAqB,EAAE,aAAa,wDAAwD,EAAE,0CAA0C,qBAAqB,oBAAoB,EAAE,eAAe,qBAAqB,uBAAuB,EAAE,oCAAoC,sBAAsB,EAAE,uBAAuB,uBAAuB,uBAAuB,yBAAyB,0EAA0E,kEAAkE,oHAAoH,gCAAgC,gCAAgC,EAAE,sCAAsC,2BAA2B,sBAAsB,EAAE,EAAE,wBAAwB,cAAc,wBAAwB,gBAAgB,iBAAiB,qBAAqB,eAAe,uBAAuB,eAAe,eAAe,6BAA6B,0BAA0B,EAAE,uDAAuD,yBAAyB,WAAW,YAAY,iBAAiB,gBAAgB,EAAE,0BAA0B,oBAAoB,kBAAkB,EAAE,gCAAgC,oBAAoB,EAAE,+BAA+B,kBAAkB,uBAAuB,kBAAkB,EAAE,qBAAqB,uBAAuB,yBAAyB,2BAA2B,kBAAkB,kBAAkB,oBAAoB,qBAAqB,EAAE,yBAAyB,uBAAuB,WAAW,cAAc,YAAY,aAAa,kBAAkB,yBAAyB,6CAA6C,+DAA+D,eAAe,EAAE,sDAAsD,iBAAiB,EAAE,iDAAiD,4DAA4D,uBAAuB,EAAE,EAAE,8BAA8B,oCAAoC,EAAE,qGAAqG,eAAe,EAAE,gDAAgD,uBAAuB,kBAAkB,kBAAkB,2BAA2B,mBAAmB,oBAAoB,EAAE,2BAA2B,oBAAoB,gBAAgB,uBAAuB,EAAE,4CAA4C,WAAW,0CAA0C,WAAW,uDAAuD,0DAA0D,0DAA0D,EAAE,6DAA6D,wDAAwD,wDAAwD,EAAE,kCAAkC,iBAAiB,EAAE,4CAA4C,4BAA4B,gCAAgC,8BAA8B,uCAAuC,EAAE,uBAAuB,yCAAyC,EAAE,eAAe,+BAA+B,EAAE,4FAA4F,sCAAsC,EAAE,gFAAgF,sCAAsC,EAAE,0BAA0B,sCAAsC,iCAAiC,EAAE,mCAAmC,iCAAiC,EAAE,mEAAmE,mBAAmB,EAAE,kEAAkE,mBAAmB,EAAE,gEAAgE,mBAAmB,EAAE,uBAAuB,+BAA+B,EAAE,8CAA8C,+BAA+B,EAAE,wBAAwB,+BAA+B,EAAE,+BAA+B,qBAAqB,EAAE,iKAAiK,wBAAwB,EAAE,+FAA+F,wBAAwB,EAAE,yFAAyF,wBAAwB,EAAE,+HAA+H,wBAAwB,EAAE,qBAAqB,6HAA6H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,8HAA8H,EAAE,qBAAqB,+HAA+H,EAAE,qBAAqB,+HAA+H,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,qBAAqB,gIAAgI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,iIAAiI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,kIAAkI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,sBAAsB,mIAAmI,EAAE,uBAAuB,8BAA8B,+BAA+B,EAAE,4BAA4B,kBAAkB,EAAE,2BAA2B,sBAAsB,+BAA+B,EAAE,2DAA2D,iIAAiI,EAAE,iFAAiF,wBAAwB,EAAE,2GAA2G,mCAAmC,EAAE,sBAAsB,iBAAiB,wBAAwB,EAAE,sCAAsC,0BAA0B,2BAA2B,yBAAyB,EAAE,EAAE,wCAAwC,wBAAwB,+BAA+B,EAAE,sCAAsC,iBAAiB,wBAAwB,EAAE,cAAc,uBAAuB,EAAE,wCAAwC,kBAAkB,EAAE,0CAA0C,wBAAwB,+BAA+B,EAAE,sBAAsB,uBAAuB,uBAAuB,0BAA0B,uBAAuB,oDAAoD,4CAA4C,iFAAiF,kCAAkC,kCAAkC,qBAAqB,wBAAwB,4BAA4B,yBAAyB,EAAE,uCAAuC,4BAA4B,4BAA4B,EAAE,uCAAuC,gBAAgB,iBAAiB,sBAAsB,EAAE,uDAAuD,cAAc,EAAE,uDAAuD,iBAAiB,EAAE,wDAAwD,gBAAgB,EAAE,oEAAoE,eAAe,iBAAiB,EAAE,uDAAuD,iBAAiB,EAAE,mEAAmE,gBAAgB,gBAAgB,EAAE,0EAA0E,eAAe,EAAE,sFAAsF,eAAe,gBAAgB,EAAE,yEAAyE,gBAAgB,EAAE,qFAAqF,gBAAgB,eAAe,EAAE,wCAAwC,gBAAgB,iBAAiB,sBAAsB,EAAE,wDAAwD,eAAe,EAAE,wDAAwD,kBAAkB,EAAE,yDAAyD,gBAAgB,EAAE,qEAAqE,eAAe,iBAAiB,EAAE,wDAAwD,iBAAiB,EAAE,oEAAoE,gBAAgB,gBAAgB,EAAE,2EAA2E,gBAAgB,EAAE,uFAAuF,eAAe,iBAAiB,EAAE,0EAA0E,iBAAiB,EAAE,sFAAsF,gBAAgB,gBAAgB,EAAE,uCAAuC,gBAAgB,iBAAiB,sBAAsB,EAAE,uDAAuD,eAAe,EAAE,uDAAuD,kBAAkB,EAAE,wDAAwD,gBAAgB,EAAE,oEAAoE,eAAe,iBAAiB,EAAE,uDAAuD,iBAAiB,EAAE,mEAAmE,gBAAgB,gBAAgB,EAAE,0EAA0E,gBAAgB,EAAE,sFAAsF,eAAe,iBAAiB,EAAE,yEAAyE,iBAAiB,EAAE,qFAAqF,gBAAgB,gBAAgB,EAAE,+BAA+B,kIAAkI,sBAAsB,+BAA+B,EAAE,sDAAsD,mBAAmB,4BAA4B,EAAE,0FAA0F,qBAAqB,EAAE,uFAAuF,qBAAqB,EAAE,iFAAiF,qBAAqB,EAAE,wcAAwc,iCAAiC,EAAE,wKAAwK,gCAAgC,EAAE,qKAAqK,gCAAgC,EAAE,+JAA+J,gCAAgC,EAAE,kKAAkK,oCAAoC,EAAE,kHAAkH,mBAAmB,qCAAqC,EAAE,6BAA6B,sBAAsB,EAAE,uCAAuC,sCAAsC,EAAE,iEAAiE,+BAA+B,4BAA4B,EAAE,iHAAiH,mBAAmB,EAAE,6GAA6G,iCAAiC,EAAE,qGAAqG,mBAAmB,EAAE,skBAAskB,iCAAiC,EAAE,iHAAiH,gCAAgC,EAAE,6GAA6G,gCAAgC,EAAE,qGAAqG,gCAAgC,EAAE,skBAAskB,4CAA4C,EAAE,iMAAiM,iDAAiD,EAAE,6LAA6L,2CAA2C,EAAE,qLAAqL,iDAAiD,EAAE,yGAAyG,6HAA6H,EAAE,sDAAsD,8HAA8H,EAAE,6EAA6E,gIAAgI,EAAE,gEAAgE,6HAA6H,EAAE,2FAA2F,gIAAgI,EAAE,yIAAyI,iIAAiI,EAAE,+GAA+G,6HAA6H,EAAE,4DAA4D,8HAA8H,EAAE,sHAAsH,qBAAqB,EAAE,sBAAsB,+BAA+B,EAAE,uDAAuD,4CAA4C,EAAE,0CAA0C,+BAA+B,sBAAsB,EAAE,2EAA2E,8BAA8B,EAAE,wFAAwF,+CAA+C,EAAE,oGAAoG,sBAAsB,gDAAgD,EAAE,mHAAmH,sBAAsB,uBAAuB,8CAA8C,EAAE,8BAA8B,8BAA8B,+BAA+B,EAAE,oEAAoE,iCAAiC,EAAE,+BAA+B,+BAA+B,8BAA8B,EAAE,qEAAqE,wBAAwB,EAAE,yDAAyD,gCAAgC,EAAE,sHAAsH,0CAA0C,EAAE,aAAa,sBAAsB,+BAA+B,EAAE,6CAA6C,gIAAgI,EAAE,2DAA2D,+HAA+H,EAAE,sBAAsB,+BAA+B,EAAE,uBAAuB,sCAAsC,EAAE,2BAA2B,kBAAkB,EAAE,gCAAgC,+BAA+B,EAAE,8CAA8C,oCAAoC,gCAAgC,EAAE,EAAE,2BAA2B,8BAA8B,EAAE,gIAAgI,8BAA8B,EAAE,8HAA8H,8BAA8B,EAAE,0HAA0H,8BAA8B,EAAE,oJAAoJ,8BAA8B,EAAE,yEAAyE,0BAA0B,EAAE,8CAA8C,+BAA+B,EAAE,sCAAsC,4BAA4B,mBAAmB,EAAE,EAAE,sCAAsC,8BAA8B,uBAAuB,EAAE,EAAE,kGAAkG,8BAA8B,EAAE,iGAAiG,8BAA8B,EAAE,+FAA+F,8BAA8B,EAAE,+BAA+B,8BAA8B,+BAA+B,EAAE,gDAAgD,iCAAiC,mBAAmB,EAAE,8DAA8D,gIAAgI,EAAE,8EAA8E,oBAAoB,EAAE,iDAAiD,mBAAmB,EAAE,sCAAsC,wBAAwB,EAAE,6DAA6D,8BAA8B,iBAAiB,EAAE,8EAA8E,mBAAmB,mBAAmB,EAAE,iFAAiF,2CAA2C,EAAE,0DAA0D,8BAA8B,iBAAiB,EAAE,2EAA2E,mBAAmB,mBAAmB,EAAE,8EAA8E,2CAA2C,EAAE,4DAA4D,8BAA8B,+BAA+B,EAAE,6EAA6E,iCAAiC,mBAAmB,EAAE,gFAAgF,qCAAqC,EAAE,cAAc,sBAAsB,EAAE,sKAAsK,wBAAwB,EAAE,iGAAiG,6CAA6C,EAAE,oBAAoB,+BAA+B,EAAE,+BAA+B,+BAA+B,EAAE,uBAAuB,0CAA0C,EAAE,sIAAsI,+BAA+B,EAAE,8BAA8B,+BAA+B,EAAE,6CAA6C,oCAAoC,EAAE,4BAA4B,+BAA+B,EAAE,mCAAmC,+BAA+B,8BAA8B,EAAE,kGAAkG,+BAA+B,EAAE,8WAA8W,0CAA0C,EAAE,6DAA6D,sCAAsC,EAAE,2FAA2F,sCAAsC,EAAE,+BAA+B,8BAA8B,iBAAiB,EAAE,6DAA6D,6CAA6C,EAAE,uDAAuD,sCAAsC,EAAE,2BAA2B,+HAA+H,4BAA4B,+BAA+B,EAAE,kEAAkE,gCAAgC,iCAAiC,EAAE,gGAAgG,iDAAiD,EAAE,0FAA0F,sDAAsD,EAAE,gEAAgE,gCAAgC,mBAAmB,EAAE,8FAA8F,+CAA+C,EAAE,wFAAwF,wCAAwC,EAAE,iCAAiC,6HAA6H,EAAE,iCAAiC,mBAAmB,EAAE,4CAA4C,qBAAqB,EAAE,0CAA0C,qBAAqB,EAAE,yBAAyB,mIAAmI,sBAAsB,+BAA+B,EAAE,gBAAgB,0CAA0C,EAAE,yBAAyB,4CAA4C,EAAE,wBAAwB,sBAAsB,+BAA+B,EAAE,wDAAwD,gIAAgI,EAAE,mBAAmB,0CAA0C,EAAE,oVAAoV,oCAAoC,EAAE,wBAAwB,4GAA4G,wBAAwB,EAAE,EAAE,qCAAqC,+BAA+B,EAAE,6EAA6E,+BAA+B,EAAE,qDAAqD,+BAA+B,EAAE,qLAAqL,qBAAqB,EAAE,yBAAyB,8BAA8B,EAAE,aAAa,8BAA8B,EAAE,qDAAqD,mBAAmB,EAAE,gEAAgE,qBAAqB,EAAE,8DAA8D,qBAAqB,EAAE,gDAAgD,mBAAmB,EAAE,0BAA0B,0CAA0C,EAAE,sDAAsD,8BAA8B,EAAE,iEAAiE,gCAAgC,EAAE,+DAA+D,gCAAgC,EAAE,gHAAgH,mBAAmB,EAAE,2HAA2H,mBAAmB,EAAE,yHAAyH,mBAAmB,EAAE,gEAAgE,mBAAmB,EAAE,4KAA4K,qBAAqB,EAAE,4IAA4I,8BAA8B,EAAE,cAAc,mBAAmB,EAAE,2DAA2D,+BAA+B,EAAE,+CAA+C,+BAA+B,EAAE,+DAA+D,0CAA0C,EAAE,uFAAuF,iHAAiH,8BAA8B,gCAAgC,EAAE,iEAAiE,0CAA0C,EAAE,yFAAyF,iHAAiH,8BAA8B,gCAAgC,EAAE,wDAAwD,0CAA0C,EAAE,gFAAgF,0CAA0C,EAAE,qEAAqE,0CAA0C,EAAE,iFAAiF,+BAA+B,EAAE,6FAA6F,kCAAkC,EAAE,8DAA8D,+BAA+B,EAAE,oEAAoE,+BAA+B,EAAE,gFAAgF,mBAAmB,EAAE,2FAA2F,mBAAmB,EAAE,yFAAyF,mBAAmB,EAAE,kHAAkH,mBAAmB,EAAE,oFAAoF,+BAA+B,EAAE,sFAAsF,+BAA+B,EAAE,yBAAyB,mBAAmB,EAAE,wBAAwB,mBAAmB,EAAE,sBAAsB,mBAAmB,EAAE,uEAAuE,+BAA+B,EAAE,6HAA6H,+BAA+B,EAAE,sBAAsB,yBAAyB,EAAE,iDAAiD,iCAAiC,EAAE,6CAA6C,iCAAiC,EAAE,mCAAmC,iCAAiC,EAAE,wCAAwC,iCAAiC,EAAE,iDAAiD,iCAAiC,EAAE,4CAA4C,iCAAiC,EAAE,kCAAkC,yBAAyB,EAAE,6EAA6E,yBAAyB,EAAE,8FAA8F,mBAAmB,EAAE,iCAAiC,+BAA+B,EAAE,mCAAmC,+BAA+B,EAAE,iCAAiC,+BAA+B,EAAE,2BAA2B,8BAA8B,EAAE,4HAA4H,oCAAoC,EAAE,mBAAmB,sBAAsB,EAAE,mDAAmD,iIAAiI,EAAE,kBAAkB,4BAA4B,+BAA+B,EAAE,6DAA6D,iCAAiC,EAAE,6EAA6E,+BAA+B,EAAE,gMAAgM,oCAAoC,EAAE,kBAAkB,sBAAsB,EAAE,iEAAiE,+BAA+B,EAAE,uDAAuD,8CAA8C,gDAAgD,EAAE,8CAA8C,8CAA8C,EAAE,gNAAgN,sCAAsC,EAAE,gCAAgC,kBAAkB,EAAE,4BAA4B,8BAA8B,EAAE,iCAAiC,8BAA8B,EAAE,6DAA6D,kBAAkB,EAAE,yDAAyD,8BAA8B,EAAE,8DAA8D,8BAA8B,EAAE,2DAA2D,kBAAkB,EAAE,uDAAuD,8BAA8B,EAAE,4DAA4D,8BAA8B,EAAE,qDAAqD,oBAAoB,EAAE,2EAA2E,oBAAoB,EAAE,uEAAuE,oBAAoB,EAAE,2BAA2B,sCAAsC,EAAE,2EAA2E,0BAA0B,EAAE,oTAAoT,8BAA8B,EAAE,0EAA0E,0BAA0B,EAAE,gTAAgT,8BAA8B,EAAE,wEAAwE,0BAA0B,EAAE,wSAAwS,8BAA8B,EAAE,iJAAiJ,sCAAsC,EAAE,6IAA6I,0CAA0C,EAAE,iEAAiE,+BAA+B,EAAE,yCAAyC,4BAA4B,EAAE,qBAAqB,+BAA+B,EAAE,2BAA2B,+BAA+B,EAAE,0CAA0C,+BAA+B,EAAE,qBAAqB,+BAA+B,EAAE,qBAAqB,sBAAsB,EAAE,qDAAqD,iIAAiI,EAAE,wEAAwE,sCAAsC,EAAE,6DAA6D,mBAAmB,EAAE,4DAA4D,mBAAmB,EAAE,0DAA0D,mBAAmB,EAAE,oEAAoE,mBAAmB,EAAE,qEAAqE,+BAA+B,EAAE,yBAAyB,8BAA8B,+BAA+B,EAAE,eAAe,4BAA4B,+BAA+B,EAAE,+BAA+B,8BAA8B,EAAE,qCAAqC,oIAAoI,EAAE,oBAAoB,gDAAgD,EAAE,mCAAmC,iDAAiD,yBAAyB,EAAE,gCAAgC,+CAA+C,uBAAuB,EAAE,+CAA+C,wBAAwB,kDAAkD,EAAE,yCAAyC,yCAAyC,EAAE,yDAAyD,8BAA8B,EAAE,uDAAuD,gDAAgD,EAAE,qDAAqD,8BAA8B,EAAE,qEAAqE,8BAA8B,EAAE,mEAAmE,8CAA8C,EAAE,iEAAiE,8BAA8B,EAAE,kEAAkE,8BAA8B,EAAE,gEAAgE,8CAA8C,EAAE,8DAA8D,8BAA8B,EAAE,2DAA2D,4BAA4B,EAAE,2BAA2B,8HAA8H,8BAA8B,EAAE,yBAAyB,0CAA0C,EAAE,gCAAgC,0CAA0C,EAAE,+GAA+G,8BAA8B,EAAE,6CAA6C,iBAAiB,EAAE,4GAA4G,8BAA8B,EAAE,4CAA4C,+BAA+B,EAAE,sGAAsG,8BAA8B,EAAE,0CAA0C,iBAAiB,EAAE,0BAA0B,+CAA+C,EAAE,8FAA8F,0CAA0C,EAAE,4IAA4I,0CAA0C,EAAE,2DAA2D,0CAA0C,EAAE,gDAAgD,0CAA0C,EAAE,yJAAyJ,0CAA0C,EAAE,iLAAiL,0CAA0C,EAAE,gFAAgF,sCAAsC,kCAAkC,EAAE,gLAAgL,sCAAsC,EAAE,wNAAwN,sCAAsC,EAAE,oDAAoD,qCAAqC,EAAE,4CAA4C,kIAAkI,wIAAwI,EAAE,0CAA0C,mIAAmI,EAAE,uGAAuG,0CAA0C,EAAE,wBAAwB,4BAA4B,uBAAuB,EAAE,EAAE,0EAA0E,+BAA+B,EAAE,mCAAmC,0CAA0C,iBAAiB,EAAE,sIAAsI,8BAA8B,iBAAiB,EAAE,+CAA+C,kCAAkC,mBAAmB,EAAE,0DAA0D,+BAA+B,EAAE,yDAAyD,mBAAmB,EAAE,kDAAkD,4BAA4B,EAAE,sCAAsC,2CAA2C,EAAE,iHAAiH,0CAA0C,EAAE,0BAA0B,mBAAmB,EAAE,sCAAsC,iDAAiD,EAAE,oGAAoG,8CAA8C,wBAAwB,EAAE,iCAAiC,+BAA+B,EAAE,mEAAmE,iCAAiC,EAAE,sCAAsC,sCAAsC,EAAE,0EAA0E,sCAAsC,EAAE,yGAAyG,wBAAwB,qBAAqB,EAAE,8rBAA8rB,+CAA+C,EAAE,sFAAsF,8BAA8B,EAAE,oIAAoI,4BAA4B,EAAE,srBAAsrB,+CAA+C,EAAE,oFAAoF,8BAA8B,EAAE,gIAAgI,0CAA0C,EAAE,sqBAAsqB,+CAA+C,EAAE,gFAAgF,8BAA8B,EAAE,wHAAwH,4BAA4B,EAAE,sxBAAsxB,+CAA+C,EAAE,gOAAgO,8BAA8B,EAAE,4NAA4N,iBAAiB,EAAE,gSAAgS,sCAAsC,EAAE,wJAAwJ,wBAAwB,EAAE,gOAAgO,2CAA2C,EAAE,0HAA0H,gDAAgD,EAAE,8wBAA8wB,+CAA+C,EAAE,4NAA4N,8BAA8B,EAAE,wNAAwN,+BAA+B,EAAE,4RAA4R,gCAAgC,EAAE,sJAAsJ,sCAAsC,EAAE,8NAA8N,qCAAqC,EAAE,wHAAwH,0CAA0C,EAAE,8vBAA8vB,+CAA+C,EAAE,oNAAoN,8BAA8B,EAAE,gNAAgN,iBAAiB,EAAE,oRAAoR,sCAAsC,EAAE,kJAAkJ,wBAAwB,EAAE,0NAA0N,2CAA2C,EAAE,oHAAoH,gDAAgD,EAAE,gBAAgB,2BAA2B,+BAA+B,EAAE,4BAA4B,0BAA0B,mBAAmB,EAAE,2BAA2B,0BAA0B,iCAAiC,EAAE,yBAAyB,0BAA0B,mBAAmB,EAAE,uIAAuI,qCAAqC,EAAE,+NAA+N,qBAAqB,EAAE,mCAAmC,gCAAgC,EAAE,gBAAgB,sCAAsC,EAAE,aAAa,sBAAsB,EAAE,0CAA0C,+BAA+B,EAAE,4BAA4B,oCAAoC,wBAAwB,gIAAgI,EAAE,+BAA+B,mBAAmB,EAAE,QAAQ,cAAc,wBAAwB,EAAE,SAAS,mBAAmB,EAAE,UAAU,mBAAmB,EAAE,2LAA2L,iBAAiB,kBAAkB,eAAe,qBAAqB,uBAAuB,gBAAgB,EAAE,sBAAsB,sBAAsB,qBAAqB,iBAAiB,8BAA8B,0BAA0B,kBAAkB,EAAE,uDAAuD,8BAA8B,EAAE,iDAAiD,+nka;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/9zI;AACvB;AACgB;AACJ;AAEgB;AACL;AAO7E;IAWE,wCAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAPlC,iBAAY,GAAmC,IAAI,0DAAY,EAAE,CAAC;QAClE,0BAAqB,GAAmC,IAAI,0DAAY,EAAE,CAAC;IAMrC,CAAC;IAEjD,iDAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEO,iDAAQ,GAAhB;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,aAAa,EAAE,CAAC,EAAE,CAAC;gBACnB,sBAAsB,EAAE,CAAC,EAAE,CAAC;aAC7B,CAAC,CAAC;SACJ;IACH,CAAC;IAED,4DAAmB,GAAnB,UAAoB,KAAuB;QACzC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC;SAClC;QACD,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,IAAM,IAAI,GAAS,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,+FAA6B,CAAC,eAAe,CAAC,0FAA2B,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;SACtG;IACH,CAAC;IAED,qEAA4B,GAA5B,UAA6B,KAAuB;QAClD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,KAAK,CAAC;SAC3C;QACD,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,IAAM,IAAI,GAAS,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAC7B,+FAA6B,CAAC,eAAe,CAAC,0FAA2B,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;SACtG;IACH,CAAC;IAED,+DAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACpD,CAAC;IAED,qEAA4B,GAA5B;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC7D,CAAC;IAEO,0DAAiB,GAAzB,UAA0B,QAAkB;QAC1C,IAAI,QAAQ,EAAE;YACZ,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;iBACxB;gBACD,MAAM,GAAG,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aACzC;YACD,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED;;;OAGG;IACH,8DAAqB,GAArB;QACE,OAAO,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,cAAc,CAAC,eAAe;YACnC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,iFAAY,CAAC;IACtE,CAAC;IAED,uDAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;IACtF,CAAC;IAlFQ;QAAR,2DAAK,EAAE;kCAAkB,6EAAkB;0EAAC;IACpC;QAAR,2DAAK,EAAE;kCAAgB,0FAA2B;yEAAC;IAC1C;QAAT,4DAAM,EAAE;kCAAe,0DAAY;wEAAwC;IAClE;QAAT,4DAAM,EAAE;kCAAwB,0DAAY;iFAAwC;IAL1E,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,wLAAuD;;SAExD,CAAC;yCAYiC,0DAAW;OAXjC,8BAA8B,CAsF1C;IAAD,qCAAC;CAAA;AAtF0C;;;;;;;;;;;;ACb3C,+DAA+D,mN;;;;;;;;;;;ACA/D,+lBAA+lB,mGAAmG,iCAAiC,sf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjrB;AACe;AACL;AACS;AAClC;AAC6B;AAOhE;IAKE,sCACY,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAChD,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,oDAAe,CAAsB,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,oBAAoB,GAAG,0DAAa,CACvC,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,EAAE,CAAC,IAAI,CACpD,0DAAG,CAAC,iBAAO,IAAI,cAAO;aACnB,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,IAAI,KAAK,2EAAgB,CAAC,MAAM,EAAvC,CAAuC,CAAC;aACzD,GAAG,CAAC,gBAAM,IAAI,aAA8B,EAA9B,CAA8B,CAAC,EAFjC,CAEiC,CAAC,CAClD,EAAE,IAAI,CAAC,kBAAkB,CAC3B,CAAC,IAAI,CACF,0DAAG,CAAC,gBAAM;YACR,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,uDAAgB,GAAhB;QACE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,yEAAmB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,yDAAkB,GAAlB,UAAmB,aAAkC;QACnD,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE;YACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,CAAC,aAAa,CAAC,CAAC;IACrE,CAAC;IAED,0DAAmB,GAAnB,UAAoB,aAAkC;QACpD,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE;YACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,aAAa,CAAC,CAAC;SACrE;IACH,CAAC;IAED,iDAAU,GAAV,UAAW,aAAkC;QAC3C,OAAO,aAAa,CAAC,EAAE,KAAK,IAAI,CAAC;IACnC,CAAC;IA/CU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,yKAAqD;;SAEtD,CAAC;yCAO+B,4EAAiB;OANrC,4BAA4B,CAgDxC;IAAD,mCAAC;CAAA;AAhDwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AAC+D;AAExD;AACW;AACM;AACwC;AAGzC;AACvB;AAEzC,SAAS,QAAQ,CAAC,IAAY,EAAE,MAAc;IAC5C,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QACpC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KAC3B;IACD,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC9B,OAAO,IAAI,GAAG,MAAM,CAAC;KACtB;IACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;AAC/C,CAAC;AAKD;IAEE,+BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAE3D,oCAAI,GAAJ,UAAK,WAA6B;QAChC,IAAM,aAAa,GAAwB,WAAW,CAAC,aAAoC,CAAC;QAC5F,IAAM,MAAM,GAAiB;YAC3B,IAAI,EAAE;gBACJ,KAAK,EAAE,aAAa,CAAC,KAAK;gBAC1B,IAAI,EAAE,aAAa,CAAC,IAAI;aACzB;YACD,IAAI,EAAE,aAAa,CAAC,MAAM;SAC3B,CAAC;QACF,IAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;QACxC,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAC7D,4DAAK,EAAE,EACP,0DAAG,CAAC,UAAC,OAA2C;YAC9C,IAAI,OAAO,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC1B,IAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,KAAyC;oBAC7E,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;wBACxB,OAAO,IAAI,8EAAqB,CAAC,KAAK,EAAE,aAAa,EAAE,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;qBAC5G;yBAAM;wBACL,OAAO,IAAI,8EAAqB,CAAC,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;qBAC7G;gBACH,CAAC,CAAC,CAAC;gBACH,OAAO,IAAI,8EAAqB,CAAC,KAAK,EAAE,aAAa,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aACtG;iBAAM;gBACL,IAAM,KAAK,GAAG,IAAI,8EAAqB,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;gBACnG,OAAO,IAAI,uDAAU,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;aACxF;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED,oCAAI,GAAJ,UAAK,IAAgB,EAAE,UAAuB;QAA9C,iBAoDC;QAnDC,IAAM,aAAa,GAAwB,IAAI,CAAC,WAAW,CAAC,aAAoC,CAAC;QACjG,IAAM,MAAM,GAAiB;YAC3B,IAAI,EAAE,aAAa,CAAC,MAAM;YAC1B,IAAI,EAAE;gBACJ,IAAI,EAAE,aAAa,CAAC,IAAI;gBACxB,KAAK,EAAE,aAAa,CAAC,KAAK;aAC3B;SACF,CAAC;QACF,IAAM,OAAO,GAAuB;YAClC,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACzD,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC;QACF,IAAM,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YACtC,OAAO,uDAAU,CAAC,mBAAmB,CAAC,CAAC;SACxC;QACD,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAC1B,0DAAG,CAAC,UAAC,KAAiB;YACpB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;YACxC,IAAI,KAAK,CAAC,MAAM,KAAK,wEAAU,CAAC,UAAU,EAAE;gBAC1C,IAAI,UAAU,CAAC,QAAQ,EAAE;oBACvB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAG,KAAa,CAAC,GAAG,CAAC,CAAC;oBACvC,OAAQ,KAAa,CAAC,GAAG,CAAC;iBAC3B;qBAAM;oBACL,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;iBAC5B;aACF;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC,CAAC,EACF,gEAAS,CAAC,UAAC,GAAW;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;YAClB,OAAO,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,CAC/E,0DAAG,CAAC,UAAC,cAAkC;gBACrC,OAAO,IAAI,uDAAU,CACnB,IAAI,CAAC,WAAW,EAChB,cAAc,CAAC,IAAI,EACnB,cAAc,CAAC,IAAI,EACnB,cAAc,CAAC,OAAO,EACtB,cAAc,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,qCAAK,GAAL,UAAM,IAAW;QACf,IAAM,aAAa,GAAwB,IAAI,CAAC,WAAW,CAAC,aAAoC,CAAC;QACjG,IAAM,MAAM,GAAiB;YAC3B,IAAI,EAAE,aAAa,CAAC,MAAM;YAC1B,IAAI,EAAE;gBACJ,IAAI,EAAE,aAAa,CAAC,IAAI;gBACxB,KAAK,EAAE,aAAa,CAAC,KAAK;aAC3B;SACF,CAAC;QACF,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC5H,0DAAG,CAAC,UAAC,OAA2C;YAC9C,IAAI,OAAO,CAAC,GAAG,KAAM,IAAmB,CAAC,GAAG,EAAE;gBAC5C,OAAO,EAAC,MAAM,EAAE,wEAAU,CAAC,SAAS,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC;aACzD;iBAAM;gBACL,OAAO,EAAC,MAAM,EAAE,wEAAU,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC;aACvD;QACH,CAAC,CAAC,EACF,iEAAU,CAAC;YACT,OAAO,+CAAE,CAAC,EAAC,MAAM,EAAE,wEAAU,CAAC,UAAU,EAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,yCAAS,GAAT,UAAU,oBAA0C,EAAE,aAAkC;QACtF,OAAO,aAAa,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;IACvD,CAAC;IAED,2CAAW,GAAX,UAAY,oBAA0C,EAAE,uBAA+B;QACrF,OAAO,yEAAmB,CAAC,WAAW,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,CAAC;IACxF,CAAC;IAtHU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGsC,oEAAgB;OAF3C,qBAAqB,CAwHjC;IAAD,4BAAC;CAAA;AAxHiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBlC;;;;GAIG;AAC8C;AACM;AACkB;AACZ;AAE1B;AACF;AACjC,IAAO,QAAQ,GAAG,gDAAM,CAAC,QAAQ,CAAC;AAClC,IAAO,UAAU,GAAG,gDAAM,CAAC,UAAU,CAAC;AA2HtC;IAWE,0BAAgC,UAAqB,EAAU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QACnF,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,mBAAmB,CAAC;QAC/C,oEAAoE;QACpE,yCAAyC;QACzC,iGAAiG;QACjG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,yCAAyC;QACpF,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,uBAAuB,CAAC;IACzD,CAAC;IAED;;OAEG;IACK,kCAAO,GAAf,UAAgB,MAAe;QAC7B,IAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QAC9C,OAAO,IAAI,gEAAW,EAAE;aACnB,MAAM,CAAC,QAAQ,EAAE,gCAAgC,CAAC;aAClD,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAG,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;;OAMG;IACK,8BAAG,GAAX,UAAe,WAAmB,EAAE,MAAc,EAAE,UAAuB;QACzE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC,IAAI,CAC7G,0DAAG,CAAC,kBAAQ,IAAI,eAAa,EAAb,CAAa,CAAC,CAC/B,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACK,8BAAG,GAAX,UAAkB,WAAmB,EAAE,MAAc,EAAE,IAAO,EAAE,UAAuB;QACrF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC,IAAI,CACjH,0DAAG,CAAC,kBAAQ,IAAI,eAAa,EAAb,CAAa,CAAC,CACjC,CAAC;IACJ,CAAC;IAEO,kCAAO,GAAf,UAAgB,WAAmB;QACjC,OAAO,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;IACrC,CAAC;IAEM,iCAAM,GAAb;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,oCAAS,GAAhB,UAAiB,GAAW;QAC1B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IAED;;;OAGG;IACI,gCAAK,GAAZ,UAAa,MAAe;QAC1B,OAAO,IAAI,CAAC,GAAG,CAAgB,YAAY,EAAE,MAAM,CAAC,CAAC,IAAI,CACvD,0DAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAC,IAAiB;YAC7C,OAAO;gBACL,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;aACxB,CAAC;QACJ,CAAC,CAAC,EALc,CAKd,CAAC,CACJ,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACI,mCAAQ,GAAf,UAAgB,IAAgB,EAAE,MAAe;QAC/C,OAAO,IAAI,CAAC,GAAG,CAAkB,WAAS,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,IAAI,cAAW,EAAE,MAAM,CAAC,CAAC,IAAI,CACtF,0DAAG,CAAC,kBAAQ,IAAI,eAAQ,CAAC,GAAG,CAAC,UAAC,MAAqB;YACjD,OAAO;gBACL,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,IAAI,EAAE,IAAI;aACX,CAAC;QACJ,CAAC,CAAC,EALc,CAKd,CAAC,CACN,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACI,kCAAO,GAAd,UAAe,MAAoB,EAAE,IAAY,EAAE,MAAe;QAAlE,iBAwBC;QAvBC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAM,GAAG,GAAG,WAAS,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,IAAI,kBAAa,IAAM,CAAC;QAChE,OAAO,IAAI,CAAC,GAAG,CACX,GAAG,EACH,MAAM,EACN,IAAI,+DAAU,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAC9C,CAAC,IAAI,CACF,0DAAG,CAAC,UAAC,QAAwC;YAC3C,IAAI,4DAAO,CAAC,QAAQ,CAAC,EAAE;gBACrB,oBAAoB;gBACpB,OAAO,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,QAA6B,CAAC,CAAC;aACtE;iBAAM;gBACL,IAAM,cAAc,GAAoB,QAA2B,CAAC;gBACpE,QAAQ,cAAc,CAAC,IAAI,EAAE;oBAC3B,KAAK,MAAM;wBACT,OAAO,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,QAA+B,CAAC,CAAC;oBACtE,KAAK,SAAS,CAAC;oBACf,QAAQ;oBACN,OAAO;iBACV;aACF;QACH,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACI,wCAAa,GAApB,UACI,MAAoB,EACpB,WAA+B,EAC/B,OAAe,EACf,MAAe;QACjB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAM,GAAG,GAAG,WAAS,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,IAAI,kBAAa,WAAW,CAAC,IAAM,CAAC;QAC5E,OAAO,IAAI,CAAC,GAAG,CACX,GAAG,EACH,MAAM,EACN;YACE,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;YAC3C,GAAG,EAAE,WAAW,CAAC,GAAG;YACpB,MAAM,EAAE,MAAM,CAAC,IAAI;SACM,CAC9B,CAAC,IAAI,CACF,0DAAG,CAAC,UAAC,QAA+B;YAClC,OAAO;gBACL,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI;gBAC3B,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI;gBAC3B,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI;gBAC3B,OAAO,EAAE,WAAW,CAAC,OAAO;gBAC5B,GAAG,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG;aACJ,CAAC;QAC1B,CAAC,CAAC,CACL,CAAC;IACJ,CAAC;IAEO,yCAAc,GAAtB,UAAuB,MAAoB,EAAE,kBAAuC;QAClF,IAAM,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;QAC3C,IAAI,cAAgC,CAAC;QACrC,IAAI,CAAC,sEAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,sEAAiB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;YAClF,IAAI,kBAAkB,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBAC5C,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC3C;iBAAM;gBACL,cAAc,GAAG,sBAAsB,GAAG,kBAAkB,CAAC,QAAQ,CAAC;aACvE;SACF;aAAM;YACL,cAAc,GAAG,SAAS,CAAC;SAC5B;QACD,OAAO;YACL,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,kBAAkB,CAAC,IAAI;YAC7B,IAAI,EAAE,kBAAkB,CAAC,IAAI;YAC7B,IAAI,EAAE,kBAAkB,CAAC,IAAI;YAC7B,OAAO,EAAE,cAAc;YACvB,GAAG,EAAE,kBAAkB,CAAC,GAAG;SAC5B,CAAC;IACJ,CAAC;IAEO,sCAAW,GAAnB,UAAoB,MAAoB,EAAE,IAAY,EAAE,kBAAqC;QAA7F,iBA6BC;QA5BC,IAAM,OAAO,GAAgD,kBAAkB,CAAC,GAAG,CAAC,UAAC,KAAsB;YACzG,QAAQ,KAAK,CAAC,IAAI,EAAE;gBAClB,KAAK,MAAM;oBACT,OAAO,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC5C,KAAK,SAAS;oBACZ,OAAO,IAAI,CAAC;gBACd,KAAK,WAAW;oBACd,OAAO,IAAI,CAAC;gBACd,KAAK,KAAK;oBACR,OAAO;wBACL,IAAI,EAAE,KAAK;wBACX,MAAM,EAAE,MAAM;wBACd,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,GAAG,EAAE,KAAK,CAAC,GAAG;qBACI,CAAC;gBACvB;oBACE,OAAO,IAAI,CAAC;aACf;QACH,CAAC,CAAC,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,KAAK,IAAI,EAAd,CAAc,CAAC,CAAC;QACnC,OAAO;YACL,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACzB,GAAG,EAAE,EAAE;YACP,OAAO,EAAE,OAAO;SACjB,CAAC;IACJ,CAAC;IAED,mCAAQ,GAAR,UAAS,IAAY;QACnB,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;SAC/B;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEO,mCAAQ,GAAhB,UAAiB,GAAW;QAC1B,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IAEO,qCAAU,GAAlB,UAAmB,MAAc;QAC/B,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAhPU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;QAYa,uEAAM,CAAC,sDAAU,CAAC;yCAAa,qDAAS,EAAsB,+DAAU;OAX1E,gBAAgB,CAkP5B;IAAD,uBAAC;CAAA;AAlP4B;;;;;;;;;;;;ACxI7B,+DAA+D,mO;;;;;;;;;;;ACA/D,wgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAwD;AACQ;AAYhE;IAIE,2CAAoB,SAA0D,EACzC,IAAkC;QADnD,cAAS,GAAT,SAAS,CAAiD;QAE5E,IAAI,CAAC,mBAAmB,GAAG,EAAC,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,EAAC,CAAC;IACtF,CAAC;IAED,oDAAQ,GAAR;IACA,CAAC;IAED,kDAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,qEAAyB,GAAzB,UAA0B,QAA8D;QACtF,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;IACtC,CAAC;IAED,sEAA0B,GAA1B;QACE,OAAO,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;IACpE,CAAC;IAED,kDAAM,GAAN;QACE,OAAO,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3F,CAAC;IA1BU,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;YAC3C,2LAA2D;;SAE5D,CAAC;QAMa,uEAAM,CAAC,iEAAe,CAAC;yCADL,8DAAY;OAJhC,iCAAiC,CA2B7C;IAAD,wCAAC;CAAA;AA3B6C;;;;;;;;;;;;ACb9C,+DAA+D,+M;;;;;;;;;;;ACA/D,ulCAAulC,UAAU,u0BAAu0B,UAAU,mrD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA30D;AACF;AACiB;AAC3C;AACvC;AACwB;AAEhB;AACyF;AAOrI;IAaE,qCACU,WAAwB,EACxB,gBAAkC,EACnC,MAAiB;QAFhB,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QACnC,WAAM,GAAN,MAAM,CAAW;QAbhB,uBAAkB,GACxB,IAAI,0DAAY,EAAuB,CAAC;QAClC,wBAAmB,GACzB,IAAI,0DAAY,EAAuB,CAAC;QAGpC,mBAAc,GAAG,KAAK,CAAC;QACvB,WAAM,GAAiB,EAAE,CAAC,CAAC,6CAA6C;QACxE,cAAS,GAAmB,EAAE,CAAC,CAAC,2CAA2C;IAKrD,CAAC;IAE/B,8CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,iDAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,4DAAsB,GAAtB;QAAA,iBA+BC;QA9BC,OAAO,UAAC,OAAwB;YAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC5B,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAChB,gEAAS,CAAC;gBACR,IAAI,CAAC,KAAK,EAAE;oBACV,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;iBACjB;gBACD,OAAO,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAC1C,4DAAK,EAAE,EACP,0DAAG,CAAC,eAAK;oBACP,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC,EACF,iEAAU,CAAC;oBACT,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBACjB,OAAO,+CAAE,CAAC,EAAC,cAAc,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC;gBAC9C,CAAC,CAAC,CACL,CAAC;YACJ,CAAC,CAAC,EACF,+DAAQ,CAAC;gBACP,IAAI,KAAI,CAAC,IAAI,EAAE;oBACb,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,sBAAsB,EAAE,CAAC;iBAChD;YACH,CAAC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,wDAAkB,GAAlB;QAAA,iBAsCC;QArCC,OAAO,UAAC,OAAwB;YAC9B,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAChB,gEAAS,CAAC;gBACR,IAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC/B,IAAI,CAAC,QAAQ,EAAE;oBACb,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;iBACjB;gBACD,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE;oBACxB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,OAAO,+CAAE,CAAC,EAAC,iBAAiB,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;iBACnD;gBACD,IAAM,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,QAAQ,EAAnB,CAAmB,CAAC,CAAC;gBACxD,IAAI,CAAC,IAAI,EAAE;oBACT,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,OAAO,+CAAE,CAAC,EAAC,aAAa,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;iBAC/C;gBACD,OAAO,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CACtE,4DAAK,EAAE,EACP,0DAAG,CAAC,kBAAQ;oBACV,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;oBAC1B,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC,EACF,iEAAU,CAAC;oBACT,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,OAAO,+CAAE,CAAC,EAAC,aAAa,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;gBAChD,CAAC,CAAC,CACL,CAAC;YACJ,CAAC,CAAC,EACF,+DAAQ,CAAC;gBACP,IAAI,KAAI,CAAC,IAAI,EAAE;oBACb,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,sBAAsB,EAAE,CAAC;iBAClD;YACH,CAAC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,0DAAoB,GAApB;QAAA,iBAqBC;QApBC,OAAO,CAAC,UAAC,OAAwB;YAC/B,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAChB,gEAAS,CAAC;gBACR,IAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;gBACjC,IAAI,CAAC,UAAU,EAAE;oBACf,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;iBACjB;gBACD,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE;oBACxB,OAAO,+CAAE,CAAC,EAAC,mBAAmB,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,EAAC,CAAC,CAAC;iBACvD;gBACD,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,UAAU,EAArB,CAAqB,CAAC,CAAC;gBAC/D,OAAO,+CAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,eAAe,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,EAAC,CAAC,CAAC;YACpE,CAAC,CAAC,EACF,+DAAQ,CAAC;gBACP,IAAI,KAAI,CAAC,IAAI,EAAE;oBACb,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,sBAAsB,EAAE,CAAC;iBAChD;YACH,CAAC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,wDAAkB,GAAlB;QAAA,iBA8BC;QA7BC,OAAO,UAAC,OAAwB;YAC9B,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAChB,gEAAS,CAAC;gBACR,IAAI,CAAC,KAAI,CAAC,IAAI,EAAE;oBACd,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;iBACjB;gBACD,IAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC3B,IAAM,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAC1C,IAAM,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;gBAC1C,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,UAAU,EAArB,CAAqB,CAAC,CAAC;gBAC/D,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;oBACpB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;iBACjB;gBACD,OAAO,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAC7D,4DAAK,EAAE,EACP,0DAAG,CAAC,UAAC,OAA6C;oBAChD,IAAI,OAAO,CAAC,IAAI,KAAK,KAAK,EAAE;wBAC1B,OAAO,CAAC,aAAa,EAAE,CAAC;wBACxB,OAAO,EAAC,aAAa,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,EAAC,CAAC;qBACvC;gBACH,CAAC,CAAC,EACF,iEAAU,CAAC;oBACT,OAAO,CAAC,aAAa,EAAE,CAAC;oBACxB,OAAO,+CAAE,CAAC,EAAC,aAAa,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,EAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,CACL,CAAC;YACJ,CAAC,CAAC,CACL,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,8CAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAM,aAAa,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC7H,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,QAAQ,EAAE,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;gBAC1F,IAAI,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;gBAC9E,MAAM,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;gBACjE,IAAI,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;aAC5D,CAAC,CAAC;SACJ;IACH,CAAC;IAED,gDAAU,GAAV;QACE,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAM,aAAa,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC7H,IAAI,CAAC,IAAI,CAAC,UAAU,CAClB;gBACE,QAAQ,EAAE,aAAa,CAAC,QAAQ;gBAChC,IAAI,EAAE,aAAa,CAAC,IAAI;gBACxB,MAAM,EAAE,aAAa,CAAC,MAAM;gBAC5B,IAAI,EAAE,aAAa,CAAC,IAAI;aACzB,EACD,EAAC,SAAS,EAAE,KAAK,EAAC,CACnB,CAAC;SACH;IACH,CAAC;IAEO,0DAAoB,GAA5B,UAA6B,UAAkB;QAC7C,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3E,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACtC,IAAM,IAAI,GAAe,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,QAAQ,EAAnB,CAAmB,CAAC,CAAC;QACpE,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QACzC,OAAO,IAAI,yEAAmB,CAC5B,EAAE,EACF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EACxB,KAAK,EACL,QAAQ,EACR,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EACtB,UAAU,CACX,CAAC;IACJ,CAAC;IAED,uDAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,IAAI,EAAX,CAAW,CAAC,CAAC;IACnD,CAAC;IAED,oDAAc,GAAd;QACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,EAAT,CAAS,CAAC,CAAC;IAC5C,CAAC;IAED,qDAAe,GAAf;QAAA,iBAgBC;QAfC,IAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QACzC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC5D,IAAI,EAAE;gBACF,aAAa,EAAE,IAAI;gBACnB,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACrD,kBAAkB,EAAE,KAAK;aACF;SAC9B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAwB;YACvD,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACjD;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,+DAAyB,GAAzB;QACE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,gEAA0B,GAA1B;QACE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IACjF,CAAC;IArOQ;QAAR,2DAAK,EAAE;kCAAsB,yEAAmB;4EAAC;IACxC;QAAT,4DAAM,EAAE;kCAAqB,0DAAY;2EACE;IAClC;QAAT,4DAAM,EAAE;kCAAsB,0DAAY;4EACC;IANjC,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,sKAAoD;;SAErD,CAAC;yCAeuB,0DAAW;YACN,oEAAgB;YAC3B,2DAAS;OAhBf,2BAA2B,CAwOvC;IAAD,kCAAC;CAAA;AAxOuC;;;;;;;;;;;;;ACdxC;AAAA;AAAA;AAAA;AAA8D;AAGE;AAahE;IASI,6BACY,GAAgB,EAChB,SAAiB,EACjB,MAAc,EACd,KAAa,EACb,OAAoB,EACpB,KAAkB;QALlB,QAAG,GAAH,GAAG,CAAa;QAChB,cAAS,GAAT,SAAS,CAAQ;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAQ;QACb,YAAO,GAAP,OAAO,CAAa;QACpB,UAAK,GAAL,KAAK,CAAa;QAbrB,SAAI,GAAG,2EAAgB,CAAC,MAAM,CAAC;IAcrC,CAAC;IAZG,+BAAW,GAAlB,UAAmB,oBAA0C,EAAE,cAAsB;QACjF,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAqB,CAAC;QAC1D,OAAO,IAAI,mBAAmB,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;IAC9F,CAAC;IAWD,uCAAS,GAAT,UAAU,oBAA0C;QACjD,IAAM,EAAE,GAAqB;YACzB,YAAY,EAAE,2EAAgB,CAAC,MAAM;YACrC,OAAO,EAAE,GAAG;YACZ,EAAE,EAAE,IAAI,CAAC,GAAG;YACZ,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,MAAM,EAAE,IAAI,CAAC,OAAO;YACpB,IAAI,EAAE,IAAI,CAAC,KAAK;SACnB,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,kCAAI,GAAJ;QACI,OAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAChH,CAAC;IAED,sBAAI,mCAAE;aAAN;YACI,OAAO,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;aAED,UAAO,KAAa;YAChB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMM,oCAAM,GAAb,UAAc,OAAiC;QAC3C,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,2EAAgB,CAAC,MAAM,EAAE;YACtD,OAAO,KAAK,CAAC;SAChB;QACD,IAAM,uBAAuB,GAAG,OAA8B,CAAC;QAC/D,OAAO,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,QAAQ;eACpD,IAAI,CAAC,IAAI,KAAK,uBAAuB,CAAC,IAAI;eAC1C,IAAI,CAAC,MAAM,KAAK,uBAAuB,CAAC,MAAM;eAC9C,IAAI,CAAC,IAAI,KAAK,uBAAuB,CAAC,IAAI,CAAC;IACpD,CAAC;IAEM,wCAAU,GAAjB;QACI,OAAO,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;IACtC,CAAC;IAEM,uCAAS,GAAhB;QACI,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;QACxD,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;QAChD,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7C,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,OAAO;YACH,IAAI,EAAE,aAAa;YACnB,KAAK,EAAK,KAAK,SAAI,IAAI,SAAI,MAAM,SAAI,IAAM;SAC9C,CAAC;IACN,CAAC;IAED,sBAAI,yCAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAED,sBAAI,sCAAK;aAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAED,sBAAI,qCAAI;aAAR;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,uCAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAI,qCAAI;aAAR;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAEM,6CAAe,GAAtB;QACI,OAAO,IAAI,8EAAqB,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEM,kDAAoB,GAA3B,UAA4B,OAAe;QACvC,IAAM,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAM,OAAO,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAC7E,OAAO,IAAI,8EAAqB,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACpE,CAAC;IAED;;OAEG;IACI,wCAAU,GAAjB;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAEL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;AC1HD;AAAA;AAAA;AAA8D;AAa9D;IAgBI,+BACkB,IAAkB,EAC3B,aAAkC,EAClC,IAAY,EACZ,IAAY,EACZ,QAA6B;QAJpB,SAAI,GAAJ,IAAI,CAAc;QAC3B,kBAAa,GAAb,aAAa,CAAqB;QAClC,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAqB;IAAG,CAAC;IAnBnC,iCAAW,GAAlB,UAAmB,oBAA0C,EAAE,cAAsB;QACjF,IAAM,QAAQ,GAAqB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAM,QAAQ,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YAC1C,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,yBAAe,IAAI,2BAAoB,CAAC,2BAA2B,CAAC,eAAe,CAAC,EAAjE,CAAiE,CAAC,CAAC,CAAC;YAC7G,IAAI,CAAC;QACP,OAAO,IAAI,qBAAqB,CAC9B,QAAQ,CAAC,IAAI,EACb,oBAAoB,CAAC,6BAA6B,CAAC,QAAQ,CAAC,aAAa,CAAwB,EACjG,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CACT,CAAC;IACN,CAAC;IASM,yCAAS,GAAhB,UAAiB,oBAA0C;QACvD,IAAM,QAAQ,GAAqB;YAC/B,YAAY,EAAE,2EAAgB,CAAC,MAAM;YACrC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,GAAG;YACZ,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,oBAAoB,CAAC;YACjE,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAE,IAAI,SAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAlC,CAAkC,CAAC,CAAC,CAAC,CAAC,IAAI;SAEjG,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAEM,sCAAM,GAAb,UAAc,OAAyB;QACnC,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;YACpC,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACnD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI;eAC5B,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI;eAC1B,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC;IACpC,CAAC;IAED;;OAEG;IACI,2CAAW,GAAlB;QACI,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACI,uCAAO,GAAd;QACI,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,UAAU,IAAI,CAAC,EAAE;YACjB,OAAO,IAAI,CAAC;SACf;QACD,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;QACvD,IAAM,cAAc,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnD,IAAM,UAAU,GAAG,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QAC9F,OAAO,IAAI,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACxF,CAAC;IAED;;;;;;OAMG;IACI,qDAAqB,GAA5B,UAA6B,OAAe;QACxC,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;YAChE,OAAO,IAAI,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;SAClF;aAAM;YACH,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,GAAG,EAAE;gBACL,OAAO,GAAG,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;aAC7C;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;IACL,CAAC;IAEL,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GkD;AAenD;IAAgC,8BAAW;IAazC,oBAAY,YAA8B,EAAE,KAAa,EAAE,KAAa,EAAE,QAAgB,EAAE,IAAY;QAAxG,YACE,kBAAM,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,SAE5C;QADC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;;IAClB,CAAC;IAbM,sBAAW,GAAlB,UAAmB,oBAA0C,EAAE,cAAsB;QACnF,IAAM,QAAQ,GAAqB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9D,OAAO,IAAI,UAAU,CACnB,oBAAoB,CAAC,2BAA2B,CAAC,QAAQ,CAAC,WAAW,CAAC,EACtE,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,OAAO,EAChB,QAAQ,CAAC,GAAG,CAAC,CAAC;IAClB,CAAC;IAOM,8BAAS,GAAhB,UAAiB,oBAA0C;QACzD,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,OAAO,EAAE,GAAG;YACZ,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC;YAC7D,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,GAAG,EAAE,IAAI,CAAC,GAAG;SACM,CAAC,CAAC;IACzB,CAAC;IAED;;;OAGG;IACI,uCAAkB,GAAzB,UAA0B,UAAkB;QAC1C,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9F,CAAC;IAED;;;OAGG;IACH,0CAAqB,GAArB,UAAsB,MAAwB;QAC5C,OAAO,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACxF,CAAC;IAEH,iBAAC;AAAD,CAAC,CA9C+B,gEAAW,GA8C1C;;;;;;;;;;;;;AC7DD,+DAA+D,mO;;;;;;;;;;;ACA/D,2e;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6E;AACP;AAEV;AAChB;AACyF;AAOrI;IAOE,4CAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAH1B,iBAAY,GAAmC,IAAI,0DAAY,EAAE,CAAC;QAClE,0BAAqB,GAAmC,IAAI,0DAAY,EAAE,CAAC;IAE7C,CAAC;IAEzC,qDAAQ,GAAR;IACA,CAAC;IAED,uDAAU,GAAV;QAAA,iBAaC;QAZC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uHAA2B,EAAE;YAC9D,IAAI,EAAE;gBACJ,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,kBAAkB,EAAE,MAAM;aACD;SAC5B,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,MAAwB;YACzD,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAvBQ;QAAR,2DAAK,EAAE;kCAAkB,6EAAkB;8EAAC;IACpC;QAAR,2DAAK,EAAE;kCAAgB,yEAAmB;6EAAC;IAClC;QAAT,4DAAM,EAAE;kCAAe,0DAAY;4EAAwC;IAClE;QAAT,4DAAM,EAAE;kCAAwB,0DAAY;qFAAwC;IAL1E,kCAAkC;QAL9C,+DAAS,CAAC;YACT,QAAQ,EAAE,kCAAkC;YAC5C,8LAA4D;;SAE7D,CAAC;yCAQ2B,2DAAS;OAPzB,kCAAkC,CA0B9C;IAAD,yCAAC;CAAA;AA1B8C;;;;;;;;;;;;ACZ/C,+DAA+D,2J;;;;;;;;;;;ACA/D,sV;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACqB;AAIhC;AAOvC;IAEE,6BAAoB,kBAAyC,EAAU,MAAc;QAAjE,uBAAkB,GAAlB,kBAAkB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE1F,sCAAQ,GAAR;IACA,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IAClD,CAAC;IAED,yCAAW,GAAX;QACE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC;IAClF,CAAC;IAED;;;OAGG;IACH,qDAAuB,GAAvB,UAAwB,eAAgC;QACtD,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,oDAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,cAAc,EAAE;eACvB,IAAI,CAAC,cAAc,EAAE,CAAC,0BAA0B,EAAE;eAClD,IAAI,CAAC,cAAc,EAAE,CAAC,0BAA0B,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACtE,CAAC;IA5BU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;yCAGwC,oFAAqB,EAAkB,sDAAM;OAF1E,mBAAmB,CA8B/B;IAAD,0BAAC;CAAA;AA9B+B;;;;;;;;;;;;ACZhC,+DAA+D,+J;;;;;;;;;;;ACA/D,y3BAAy3B,0BAA0B,0DAA0D,qBAAqB,wJAAwJ,8CAA8C,MAAM,kDAAkD,sB;;;;;;;;;;;;;;;;;;;;;;;;;ACAzqC;AACY;AAQnE;IAIE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IAED,iDAAiB,GAAjB;QACE,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC;SACvD;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,sDAAsB,GAAtB;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAC7D,IAAI,YAAY,CAAC,IAAI,EAAE,KAAK,aAAa,EAAE;YACzC,IAAM,MAAM,GAAoE,YAAY,CAAC;YAC7F,OAAO,MAAM,CAAC,sBAAsB,EAAE,CAAC;SACxC;IACH,CAAC;IArBQ;QAAR,2DAAK,EAAE;kCAAsB,gFAAmB;sEAAC;IAFvC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2HAA6C;;SAE9C,CAAC;;OACW,qBAAqB,CAwBjC;IAAD,4BAAC;CAAA;AAxBiC;;;;;;;;;;;;ACTlC,+DAA+D,mJ;;;;;;;;;;;ACA/D,sCAAsC,+BAA+B,oCAAoC,KAAK,0CAA0C,QAAQ,yBAAyB,mBAAmB,qBAAqB,0U;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/K;AACqB;AAChC;AAQvC;IAEE,2BAAoB,iBAAwC,EAAU,MAAc;QAAhE,sBAAiB,GAAjB,iBAAiB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzF,oCAAQ,GAAR;IACA,CAAC;IAEM,oCAAQ,GAAf;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IAC3C,CAAC;IAEM,wCAAY,GAAnB,UAAoB,OAA2B;QAC7C,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAEM,yCAAa,GAApB,UAAqB,OAA2B;QAC9C,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAEM,uCAAW,GAAlB,UAAmB,OAA2B;QAC5C,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAtBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;yCAGuC,oFAAqB,EAAkB,sDAAM;OAFzE,iBAAiB,CAuB7B;IAAD,wBAAC;CAAA;AAvB6B;;;;;;;;;;;;ACV9B,mHAAmH,MAAM,sB;;;;;;;;;;;ACAzH,wCAAwC,wBAAwB,wBAAwB,4BAA4B,WAAW,wBAAwB,wBAAwB,4BAA4B,kBAAkB,qBAAqB,mBAAmB,gBAAgB,kBAAkB,mBAAmB,6BAA6B,UAAU,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+BAA+B,cAAc,+BAA+B,gCAAgC,+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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { DOMParser, XMLSerializer } from 'xmldom';\nimport { __extends, __spread } from 'tslib';\nimport { isNullOrUndefined, isString, format } from 'util';\nimport * as Tokenizr from 'tokenizr';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\nvar NgxI18nsupportLibModule = /** @class */ (function () {\r\n    function NgxI18nsupportLibModule() {\r\n    }\r\n    NgxI18nsupportLibModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [],\r\n                    exports: []\r\n                },] }\r\n    ];\r\n    return NgxI18nsupportLibModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 08.05.2017.\r\n * Some constant values used in the API.\r\n */\r\n/**\r\n * supported file formats\r\n * @type {?}\r\n */\r\nvar FORMAT_XLIFF12 = 'xlf';\r\n/** @type {?} */\r\nvar FORMAT_XLIFF20 = 'xlf2';\r\n/** @type {?} */\r\nvar FORMAT_XMB = 'xmb';\r\n/** @type {?} */\r\nvar FORMAT_XTB = 'xtb';\r\n/**\r\n * File types\r\n * (returned by fileType() method)\r\n * @type {?}\r\n */\r\nvar FILETYPE_XLIFF12 = 'XLIFF 1.2';\r\n/** @type {?} */\r\nvar FILETYPE_XLIFF20 = 'XLIFF 2.0';\r\n/** @type {?} */\r\nvar FILETYPE_XMB = 'XMB';\r\n/** @type {?} */\r\nvar FILETYPE_XTB = 'XTB';\r\n/**\r\n * State NEW.\r\n * Signals an untranslated unit.\r\n * @type {?}\r\n */\r\nvar STATE_NEW = 'new';\r\n/**\r\n * State TRANSLATED.\r\n * Signals a translated unit, that is not reviewed until now.\r\n * @type {?}\r\n */\r\nvar STATE_TRANSLATED = 'translated';\r\n/**\r\n * State FINAL.\r\n * Signals a translated unit, that is reviewed and ready for use.\r\n * @type {?}\r\n */\r\nvar STATE_FINAL = 'final';\r\n/**\r\n * Default format, contains placeholders, html markup.\r\n * @type {?}\r\n */\r\nvar NORMALIZATION_FORMAT_DEFAULT = 'default';\r\n/**\r\n * Format for usage in ngxtranslate messages.\r\n * Placeholder are in the form {{n}}, no html markup.\r\n * @type {?}\r\n */\r\nvar NORMALIZATION_FORMAT_NGXTRANSLATE = 'ngxtranslate';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nDOMUtilities = /** @class */ (function () {\r\n    function DOMUtilities() {\r\n    }\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    DOMUtilities.getFirstElementByTagName = /**\r\n     * return the first subelement with the given tag.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    function (element, tagName) {\r\n        /** @type {?} */\r\n        var matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            return matchingElements.item(0);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @param id id\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @param {?} id id\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    DOMUtilities.getElementByTagNameAndId = /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @param {?} id id\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    function (element, tagName, id) {\r\n        /** @type {?} */\r\n        var matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            for (var i = 0; i < matchingElements.length; i++) {\r\n                /** @type {?} */\r\n                var node = matchingElements.item(i);\r\n                if (node.getAttribute('id') === id) {\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.getElementFollowingSibling = /**\r\n     * Get next sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var e = element.nextSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (e));\r\n            }\r\n            e = e.nextSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.getElementPrecedingSibling = /**\r\n     * Get previous sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var e = element.previousSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (e));\r\n            }\r\n            e = e.previousSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param element element\r\n     * @return content of element as string, including all markup.\r\n     */\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param {?} element element\r\n     * @return {?} content of element as string, including all markup.\r\n     */\r\n    DOMUtilities.getXMLContent = /**\r\n     * return content of element as string, including all markup.\r\n     * @param {?} element element\r\n     * @return {?} content of element as string, including all markup.\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var result = new XMLSerializer().serializeToString(element);\r\n        /** @type {?} */\r\n        var tagName = element.nodeName;\r\n        /** @type {?} */\r\n        var reStartMsg = new RegExp('<' + tagName + '[^>]*>', 'g');\r\n        result = result.replace(reStartMsg, '');\r\n        /** @type {?} */\r\n        var reEndMsg = new RegExp('</' + tagName + '>', 'g');\r\n        result = result.replace(reEndMsg, '');\r\n        return result;\r\n    };\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param element element\r\n     * @return PCDATA content of element.\r\n     */\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param {?} element element\r\n     * @return {?} PCDATA content of element.\r\n     */\r\n    DOMUtilities.getPCDATA = /**\r\n     * return PCDATA content of element.\r\n     * @param {?} element element\r\n     * @return {?} PCDATA content of element.\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var result = '';\r\n        /** @type {?} */\r\n        var childNodes = element.childNodes;\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            /** @type {?} */\r\n            var child = childNodes.item(i);\r\n            if (child.nodeType === child.TEXT_NODE || child.nodeType === child.CDATA_SECTION_NODE) {\r\n                result = result + child.nodeValue;\r\n            }\r\n        }\r\n        return result.length === 0 ? null : result;\r\n    };\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param element element\r\n     * @param pcdata pcdata\r\n     */\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param {?} element element\r\n     * @param {?} pcdata pcdata\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.replaceContentWithXMLContent = /**\r\n     * replace PCDATA content with a new one.\r\n     * @param {?} element element\r\n     * @param {?} pcdata pcdata\r\n     * @return {?}\r\n     */\r\n    function (element, pcdata) {\r\n        // remove all children\r\n        while (element.firstChild) {\r\n            element.removeChild(element.firstChild);\r\n        }\r\n        // parseICUMessage pcdata\r\n        /** @type {?} */\r\n        var pcdataFragment = new DOMParser().parseFromString('<fragment>' + pcdata + '</fragment>', 'application/xml');\r\n        /** @type {?} */\r\n        var newChildren = pcdataFragment.getElementsByTagName('fragment').item(0).childNodes;\r\n        for (var j = 0; j < newChildren.length; j++) {\r\n            /** @type {?} */\r\n            var newChild = newChildren.item(j);\r\n            element.appendChild(element.ownerDocument.importNode(newChild, true));\r\n        }\r\n    };\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param element element\r\n     * @return the previous sibling that is an element or null.\r\n     */\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param {?} element element\r\n     * @return {?} the previous sibling that is an element or null.\r\n     */\r\n    DOMUtilities.getPreviousElementSibling = /**\r\n     * find the previous sibling that is an element.\r\n     * @param {?} element element\r\n     * @return {?} the previous sibling that is an element or null.\r\n     */\r\n    function (element) {\r\n        /** @type {?} */\r\n        var node = element.previousSibling;\r\n        while (node !== null) {\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (node));\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param elementNameToCreate elementNameToCreate\r\n     * @param previousSibling previousSibling\r\n     * @return new element\r\n     */\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param {?} elementNameToCreate elementNameToCreate\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?} new element\r\n     */\r\n    DOMUtilities.createFollowingSibling = /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param {?} elementNameToCreate elementNameToCreate\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?} new element\r\n     */\r\n    function (elementNameToCreate, previousSibling) {\r\n        /** @type {?} */\r\n        var newElement = previousSibling.ownerDocument.createElement(elementNameToCreate);\r\n        return (/** @type {?} */ (DOMUtilities.insertAfter(newElement, previousSibling)));\r\n    };\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param newElement newElement\r\n     * @param previousSibling previousSibling\r\n     */\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.insertAfter = /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?}\r\n     */\r\n    function (newElement, previousSibling) {\r\n        if (previousSibling.nextSibling !== null) {\r\n            previousSibling.parentNode.insertBefore(newElement, previousSibling.nextSibling);\r\n        }\r\n        else {\r\n            previousSibling.parentNode.appendChild(newElement);\r\n        }\r\n        return newElement;\r\n    };\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param newElement newElement\r\n     * @param nextSibling nextSibling\r\n     */\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} nextSibling nextSibling\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.insertBefore = /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} nextSibling nextSibling\r\n     * @return {?}\r\n     */\r\n    function (newElement, nextSibling) {\r\n        nextSibling.parentNode.insertBefore(newElement, nextSibling);\r\n        return newElement;\r\n    };\r\n    return DOMUtilities;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar DEFAULT_INDENT_STRING = '  ';\r\nvar XmlSerializer = /** @class */ (function () {\r\n    function XmlSerializer() {\r\n    }\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param document the document\r\n     * @param options can be used to activate beautifying.\r\n     */\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param {?} document the document\r\n     * @param {?=} options can be used to activate beautifying.\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.serializeToString = /**\r\n     * Serialze xml document to string.\r\n     * @param {?} document the document\r\n     * @param {?=} options can be used to activate beautifying.\r\n     * @return {?}\r\n     */\r\n    function (document, options) {\r\n        /** @type {?} */\r\n        var buf = [];\r\n        /** @type {?} */\r\n        var visibleNamespaces = [];\r\n        /** @type {?} */\r\n        var refNode = document.documentElement;\r\n        /** @type {?} */\r\n        var prefix = refNode.prefix;\r\n        /** @type {?} */\r\n        var uri = refNode.namespaceURI;\r\n        if (uri && prefix == null) {\r\n            prefix = refNode.lookupPrefix(uri);\r\n            if (prefix == null) {\r\n                visibleNamespaces = [\r\n                    { namespace: uri, prefix: null }\r\n                    // {namespace:uri,prefix:''}\r\n                ];\r\n            }\r\n        }\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (options.indentString) {\r\n            if (!this.containsOnlyWhiteSpace(options.indentString)) {\r\n                throw new Error('indentString must not contain non white characters');\r\n            }\r\n        }\r\n        this.doSerializeToString(document, options, buf, 0, false, visibleNamespaces);\r\n        return buf.join('');\r\n    };\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param node the node to be formatted.\r\n     * @param options options\r\n     * @param buf outputbuffer, new output will be appended to this array.\r\n     * @param indentLevel Lever of indentation for formatted output.\r\n     * @param partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param visibleNamespaces visibleNamespaces\r\n     */\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param {?} node the node to be formatted.\r\n     * @param {?} options options\r\n     * @param {?} buf outputbuffer, new output will be appended to this array.\r\n     * @param {?} indentLevel Lever of indentation for formatted output.\r\n     * @param {?} partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param {?} visibleNamespaces visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.doSerializeToString = /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param {?} node the node to be formatted.\r\n     * @param {?} options options\r\n     * @param {?} buf outputbuffer, new output will be appended to this array.\r\n     * @param {?} indentLevel Lever of indentation for formatted output.\r\n     * @param {?} partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param {?} visibleNamespaces visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    function (node, options, buf, indentLevel, partOfMixedContent, visibleNamespaces) {\r\n        /** @type {?} */\r\n        var child;\r\n        switch (node.nodeType) {\r\n            case node.ELEMENT_NODE:\r\n                /** @type {?} */\r\n                var elementNode = (/** @type {?} */ (node));\r\n                /** @type {?} */\r\n                var attrs = elementNode.attributes;\r\n                /** @type {?} */\r\n                var len = attrs.length;\r\n                child = elementNode.firstChild;\r\n                /** @type {?} */\r\n                var nodeName = elementNode.tagName;\r\n                /** @type {?} */\r\n                var elementHasMixedContent = this.isMixedContentElement(nodeName, options);\r\n                if (partOfMixedContent) {\r\n                    buf.push('<', nodeName);\r\n                }\r\n                else {\r\n                    this.outputIndented(options, buf, indentLevel, '<', nodeName);\r\n                }\r\n                for (var i = 0; i < len; i++) {\r\n                    // add namespaces for attributes\r\n                    /** @type {?} */\r\n                    var attr = attrs.item(i);\r\n                    if (attr.prefix === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\r\n                    }\r\n                    else if (attr.nodeName === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: '', namespace: attr.value });\r\n                    }\r\n                }\r\n                for (var i = 0; i < len; i++) {\r\n                    /** @type {?} */\r\n                    var attr = attrs.item(i);\r\n                    if (this.needNamespaceDefine(attr, visibleNamespaces)) {\r\n                        /** @type {?} */\r\n                        var prefix = attr.prefix || '';\r\n                        /** @type {?} */\r\n                        var uri = attr.namespaceURI;\r\n                        /** @type {?} */\r\n                        var ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                        buf.push(ns, '=\"', uri, '\"');\r\n                        visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                    }\r\n                    this.doSerializeToString(attr, options, buf, indentLevel, false, visibleNamespaces);\r\n                }\r\n                // add namespace for current node\r\n                if (this.needNamespaceDefine(elementNode, visibleNamespaces)) {\r\n                    /** @type {?} */\r\n                    var prefix = elementNode.prefix || '';\r\n                    /** @type {?} */\r\n                    var uri = node.namespaceURI;\r\n                    /** @type {?} */\r\n                    var ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                    buf.push(ns, '=\"', uri, '\"');\r\n                    visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                }\r\n                if (child) {\r\n                    buf.push('>');\r\n                    // if is cdata child node\r\n                    /** @type {?} */\r\n                    var hasComplexContent = false;\r\n                    while (child) {\r\n                        if (child.nodeType === child.ELEMENT_NODE) {\r\n                            hasComplexContent = true;\r\n                        }\r\n                        this.doSerializeToString(child, options, buf, indentLevel + 1, partOfMixedContent || elementHasMixedContent, visibleNamespaces);\r\n                        child = child.nextSibling;\r\n                    }\r\n                    if (!partOfMixedContent && !elementHasMixedContent && hasComplexContent) {\r\n                        this.outputIndented(options, buf, indentLevel, '</', nodeName, '>');\r\n                    }\r\n                    else {\r\n                        buf.push('</', nodeName, '>');\r\n                    }\r\n                }\r\n                else {\r\n                    buf.push('/>');\r\n                }\r\n                return;\r\n            case node.DOCUMENT_NODE:\r\n            case node.DOCUMENT_FRAGMENT_NODE:\r\n                child = node.firstChild;\r\n                while (child) {\r\n                    this.doSerializeToString(child, options, buf, indentLevel, false, visibleNamespaces);\r\n                    child = child.nextSibling;\r\n                }\r\n                return;\r\n            case node.ATTRIBUTE_NODE:\r\n                /** @type {?} */\r\n                var attrNode = (/** @type {?} */ (node));\r\n                return buf.push(' ', attrNode.name, '=\"', attrNode.value.replace(/[<&\"]/g, this._xmlEncoder), '\"');\r\n            case node.TEXT_NODE:\r\n                /** @type {?} */\r\n                var textNode = (/** @type {?} */ (node));\r\n                if (!options.beautify || partOfMixedContent || !this.containsOnlyWhiteSpace(textNode.data)) {\r\n                    return buf.push(textNode.data.replace(/[<&]/g, this._xmlEncoder));\r\n                }\r\n                return;\r\n            case node.CDATA_SECTION_NODE:\r\n                /** @type {?} */\r\n                var cdatasectionNode = (/** @type {?} */ (node));\r\n                return buf.push('<![CDATA[', cdatasectionNode.data, ']]>');\r\n            case node.COMMENT_NODE:\r\n                /** @type {?} */\r\n                var commentNode = (/** @type {?} */ (node));\r\n                return buf.push('<!--', commentNode.data, '-->');\r\n            case node.DOCUMENT_TYPE_NODE:\r\n                /** @type {?} */\r\n                var documenttypeNode = (/** @type {?} */ (node));\r\n                /** @type {?} */\r\n                var pubid = documenttypeNode.publicId;\r\n                /** @type {?} */\r\n                var sysid = documenttypeNode.systemId;\r\n                buf.push('<!DOCTYPE ', documenttypeNode.name);\r\n                if (pubid) {\r\n                    buf.push(' PUBLIC \"', pubid);\r\n                    if (sysid && sysid !== '.') {\r\n                        buf.push('\" \"', sysid);\r\n                    }\r\n                    buf.push('\">');\r\n                }\r\n                else if (sysid && sysid !== '.') {\r\n                    buf.push(' SYSTEM \"', sysid, '\">');\r\n                }\r\n                else {\r\n                    buf.push('>');\r\n                }\r\n                return;\r\n            case node.PROCESSING_INSTRUCTION_NODE:\r\n                /** @type {?} */\r\n                var piNode = (/** @type {?} */ (node));\r\n                return buf.push('<?', piNode.target, ' ', piNode.data, '?>');\r\n            case node.ENTITY_REFERENCE_NODE:\r\n                return buf.push('&', node.nodeName, ';');\r\n            // case ENTITY_NODE:\r\n            // case NOTATION_NODE:\r\n            default:\r\n                buf.push('??', node.nodeName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.needNamespaceDefine = /**\r\n     * @param {?} node\r\n     * @param {?} visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    function (node, visibleNamespaces) {\r\n        /** @type {?} */\r\n        var prefix = node.prefix || '';\r\n        /** @type {?} */\r\n        var uri = node.namespaceURI;\r\n        if (!prefix && !uri) {\r\n            return false;\r\n        }\r\n        if (prefix === 'xml' && uri === 'http://www.w3.org/XML/1998/namespace'\r\n            || uri === 'http://www.w3.org/2000/xmlns/') {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var i = visibleNamespaces.length;\r\n        while (i--) {\r\n            /** @type {?} */\r\n            var ns = visibleNamespaces[i];\r\n            // get namespace prefix\r\n            if (ns.prefix === prefix) {\r\n                return ns.namespace !== uri;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} c\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype._xmlEncoder = /**\r\n     * @param {?} c\r\n     * @return {?}\r\n     */\r\n    function (c) {\r\n        return c === '<' && '&lt;' ||\r\n            c === '>' && '&gt;' ||\r\n            c === '&' && '&amp;' ||\r\n            c === '\"' && '&quot;' ||\r\n            '&#' + c.charCodeAt(0) + ';';\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} buf\r\n     * @param {?} indentLevel\r\n     * @param {...?} outputParts\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.outputIndented = /**\r\n     * @param {?} options\r\n     * @param {?} buf\r\n     * @param {?} indentLevel\r\n     * @param {...?} outputParts\r\n     * @return {?}\r\n     */\r\n    function (options, buf, indentLevel) {\r\n        var outputParts = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            outputParts[_i - 3] = arguments[_i];\r\n        }\r\n        if (options.beautify) {\r\n            buf.push('\\n');\r\n            if (indentLevel > 0) {\r\n                buf.push(this.indentationString(options, indentLevel));\r\n            }\r\n        }\r\n        buf.push.apply(buf, __spread(outputParts));\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} indentLevel\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.indentationString = /**\r\n     * @param {?} options\r\n     * @param {?} indentLevel\r\n     * @return {?}\r\n     */\r\n    function (options, indentLevel) {\r\n        /** @type {?} */\r\n        var indent = (options.indentString) ? options.indentString : DEFAULT_INDENT_STRING;\r\n        /** @type {?} */\r\n        var result = '';\r\n        for (var i = 0; i < indentLevel; i++) {\r\n            result = result + indent;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param tagName tagName\r\n     * @param options options\r\n     */\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param {?} tagName tagName\r\n     * @param {?} options options\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.isMixedContentElement = /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param {?} tagName tagName\r\n     * @param {?} options options\r\n     * @return {?}\r\n     */\r\n    function (tagName, options) {\r\n        if (options && options.mixedContentElements) {\r\n            return !!options.mixedContentElements.find(function (tag) { return tag === tagName; });\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.containsOnlyWhiteSpace = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        for (var i = 0; i < text.length; i++) {\r\n            /** @type {?} */\r\n            var c = text.charAt(i);\r\n            if (!(c === ' ' || c === '\\t' || c === '\\r' || c === '\\n')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return XmlSerializer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n * @abstract\r\n */\r\nAbstractTranslationMessagesFile = /** @class */ (function () {\r\n    function AbstractTranslationMessagesFile() {\r\n        this.transUnits = null;\r\n        this._warnings = [];\r\n    }\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param xmlString xmlString\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMaster optionalMaster\r\n     */\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param {?} xmlString xmlString\r\n     * @param {?} path path\r\n     * @param {?} encoding encoding\r\n     * @param {?=} optionalMaster optionalMaster\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.parseContent = /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param {?} xmlString xmlString\r\n     * @param {?} path path\r\n     * @param {?} encoding encoding\r\n     * @param {?=} optionalMaster optionalMaster\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding, optionalMaster) {\r\n        this._filename = path;\r\n        this._encoding = encoding;\r\n        this._parsedDocument = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n        this._fileEndsWithEOL = xmlString.endsWith('\\n');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.lazyInitializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this.transUnits)) {\r\n            this.initializeTransUnits();\r\n            this.countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * count units after changes of trans units\r\n     */\r\n    /**\r\n     * count units after changes of trans units\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.countNumbers = /**\r\n     * count units after changes of trans units\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this._numberOfUntranslatedTransUnits = 0;\r\n        this._numberOfReviewedTransUnits = 0;\r\n        this.forEachTransUnit(function (tu) {\r\n            if (isNullOrUndefined(tu.id) || tu.id === '') {\r\n                _this._numberOfTransUnitsWithMissingId++;\r\n            }\r\n            /** @type {?} */\r\n            var state = tu.targetState();\r\n            if (isNullOrUndefined(state) || state === STATE_NEW) {\r\n                _this._numberOfUntranslatedTransUnits++;\r\n            }\r\n            if (state === STATE_TRANSLATED) {\r\n                _this._numberOfReviewedTransUnits++;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.warnings = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._warnings;\r\n    };\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     */\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfTransUnits = /**\r\n     * Total number of translation units found in the file.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.length;\r\n    };\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfUntranslatedTransUnits = /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfUntranslatedTransUnits;\r\n    };\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     */\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfReviewedTransUnits = /**\r\n     * Number of translation units with state 'final'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfReviewedTransUnits;\r\n    };\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfTransUnitsWithMissingId = /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfTransUnitsWithMissingId;\r\n    };\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param callback callback\r\n     */\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param {?} callback callback\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.forEachTransUnit = /**\r\n     * Loop over all Translation Units.\r\n     * @param {?} callback callback\r\n     * @return {?}\r\n     */\r\n    function (callback) {\r\n        this.lazyInitializeTransUnits();\r\n        this.transUnits.forEach(function (tu) { return callback(tu); });\r\n    };\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param id id\r\n     * @return trans-unit with given id.\r\n     */\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param {?} id id\r\n     * @return {?} trans-unit with given id.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.transUnitWithId = /**\r\n     * Get trans-unit with given id.\r\n     * @param {?} id id\r\n     * @return {?} trans-unit with given id.\r\n     */\r\n    function (id) {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.find(function (tu) { return tu.id === id; });\r\n    };\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetPraefix targetPraefix\r\n     */\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetPraefix targetPraefix\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.setNewTransUnitTargetPraefix = /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetPraefix targetPraefix\r\n     * @return {?}\r\n     */\r\n    function (targetPraefix) {\r\n        this.targetPraefix = targetPraefix;\r\n    };\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the praefix used when copying source to target.\r\n     */\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the praefix used when copying source to target.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.getNewTransUnitTargetPraefix = /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the praefix used when copying source to target.\r\n     */\r\n    function () {\r\n        return isNullOrUndefined(this.targetPraefix) ? '' : this.targetPraefix;\r\n    };\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetSuffix targetSuffix\r\n     */\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetSuffix targetSuffix\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.setNewTransUnitTargetSuffix = /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetSuffix targetSuffix\r\n     * @return {?}\r\n     */\r\n    function (targetSuffix) {\r\n        this.targetSuffix = targetSuffix;\r\n    };\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the suffix used when copying source to target.\r\n     */\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the suffix used when copying source to target.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.getNewTransUnitTargetSuffix = /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the suffix used when copying source to target.\r\n     */\r\n    function () {\r\n        return isNullOrUndefined(this.targetSuffix) ? '' : this.targetSuffix;\r\n    };\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param id id\r\n     */\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param {?} id id\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.removeTransUnitWithId = /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param {?} id id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var tuNode = this._parsedDocument.getElementById(id);\r\n        if (tuNode) {\r\n            tuNode.parentNode.removeChild(tuNode);\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits = this.transUnits.filter(function (tu) { return tu.id !== id; });\r\n            this.countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * The filename where the data is read from.\r\n     */\r\n    /**\r\n     * The filename where the data is read from.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.filename = /**\r\n     * The filename where the data is read from.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._filename;\r\n    };\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     */\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.encoding = /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._encoding;\r\n    };\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param {?=} beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.editedContent = /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param {?=} beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     * @return {?}\r\n     */\r\n    function (beautifyOutput) {\r\n        /** @type {?} */\r\n        var options = {};\r\n        if (beautifyOutput === true) {\r\n            options.beautify = true;\r\n            options.indentString = '  ';\r\n            options.mixedContentElements = this.elementsWithMixedContent();\r\n        }\r\n        /** @type {?} */\r\n        var result = new XmlSerializer().serializeToString(this._parsedDocument, options);\r\n        if (this._fileEndsWithEOL) {\r\n            // add eol if there was eol in original source\r\n            return result + '\\n';\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    };\r\n    return AbstractTranslationMessagesFile;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n * @abstract\r\n */\r\nAbstractTransUnit = /** @class */ (function () {\r\n    function AbstractTransUnit(_element, _id, _translationMessagesFile) {\r\n        this._element = _element;\r\n        this._id = _id;\r\n        this._translationMessagesFile = _translationMessagesFile;\r\n    }\r\n    Object.defineProperty(AbstractTransUnit.prototype, \"id\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The file the unit belongs to.,\r\n     */\r\n    /**\r\n     * The file the unit belongs to.,\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.translationMessagesFile = /**\r\n     * The file the unit belongs to.,\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._translationMessagesFile;\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.sourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this._sourceContentNormalized)) {\r\n            this._sourceContentNormalized = this.createSourceContentNormalized();\r\n        }\r\n        return this._sourceContentNormalized;\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.targetState = /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var nativeState = this.nativeTargetState();\r\n        return this.mapNativeStateToState(nativeState);\r\n    };\r\n    /**\r\n     * Modify the target state.\r\n     * @param newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     */\r\n    /**\r\n     * Modify the target state.\r\n     * @param {?} newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.setTargetState = /**\r\n     * Modify the target state.\r\n     * @param {?} newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     * @return {?}\r\n     */\r\n    function (newState) {\r\n        this.setNativeTargetState(this.mapStateToNativeState(newState));\r\n        if (this.translationMessagesFile() instanceof AbstractTranslationMessagesFile) {\r\n            ((/** @type {?} */ (this.translationMessagesFile()))).countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetSourceReferences = /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Check notes\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    /**\r\n     * Check notes\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.checkNotes = /**\r\n     * Check notes\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // check from values\r\n        /** @type {?} */\r\n        var errorInFromNote = newNotes.find(function (note) { return note.from === 'description' || note.from === 'meaning'; });\r\n        if (!isNullOrUndefined(errorInFromNote)) {\r\n            throw new Error('description or meaning are not allowed as from atttribute');\r\n        }\r\n    };\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return real xml element used for the trans unit.\r\n     */\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return {?} real xml element used for the trans unit.\r\n     */\r\n    AbstractTransUnit.prototype.asXmlElement = /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return {?} real xml element used for the trans unit.\r\n     */\r\n    function () {\r\n        return this._element;\r\n    };\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     */\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param {?} translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.translate = /**\r\n     * Translate the trans unit.\r\n     * @param {?} translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var translationNative;\r\n        if (isString(translation)) {\r\n            translationNative = (/** @type {?} */ (translation));\r\n        }\r\n        else {\r\n            translationNative = ((/** @type {?} */ (translation))).asNativeString();\r\n        }\r\n        this.translateNative(translationNative);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param message message\r\n     * @return wether message looks like ICU message.\r\n     */\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param {?} message message\r\n     * @return {?} wether message looks like ICU message.\r\n     */\r\n    AbstractTransUnit.prototype.isICUMessage = /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param {?} message message\r\n     * @return {?} wether message looks like ICU message.\r\n     */\r\n    function (message) {\r\n        return this.messageParser().isICUMessageStart(message);\r\n    };\r\n    return AbstractTransUnit;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A part of a parsed message.\r\n * Can be a text, a placeholder, a tag\r\n */\r\n/** @enum {number} */\r\nvar ParsedMessagePartType = {\r\n    TEXT: 0,\r\n    PLACEHOLDER: 1,\r\n    START_TAG: 2,\r\n    END_TAG: 3,\r\n    EMPTY_TAG: 4,\r\n    ICU_MESSAGE: 5,\r\n    ICU_MESSAGE_REF: 6,\r\n};\r\nParsedMessagePartType[ParsedMessagePartType.TEXT] = 'TEXT';\r\nParsedMessagePartType[ParsedMessagePartType.PLACEHOLDER] = 'PLACEHOLDER';\r\nParsedMessagePartType[ParsedMessagePartType.START_TAG] = 'START_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.END_TAG] = 'END_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.EMPTY_TAG] = 'EMPTY_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE] = 'ICU_MESSAGE';\r\nParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE_REF] = 'ICU_MESSAGE_REF';\r\n/**\r\n * @abstract\r\n */\r\nvar /**\r\n * @abstract\r\n */\r\nParsedMessagePart = /** @class */ (function () {\r\n    function ParsedMessagePart(type) {\r\n        this.type = type;\r\n    }\r\n    return ParsedMessagePart;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nParsedMessagePartText = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartText, _super);\r\n    function ParsedMessagePartText(text) {\r\n        var _this = _super.call(this, ParsedMessagePartType.TEXT) || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartText.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        return this.text;\r\n    };\r\n    return ParsedMessagePartText;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nParsedMessagePartPlaceholder = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartPlaceholder, _super);\r\n    function ParsedMessagePartPlaceholder(index, disp) {\r\n        var _this = _super.call(this, ParsedMessagePartType.PLACEHOLDER) || this;\r\n        _this._index = index;\r\n        _this._disp = disp;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        if (format$$1 === NORMALIZATION_FORMAT_NGXTRANSLATE) {\r\n            return '{{' + this._index + '}}';\r\n        }\r\n        return '{{' + this._index + '}}';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.index = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.disp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._disp;\r\n    };\r\n    return ParsedMessagePartPlaceholder;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nParsedMessagePartStartTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartStartTag, _super);\r\n    function ParsedMessagePartStartTag(tagname, idcounter) {\r\n        var _this = _super.call(this, ParsedMessagePartType.START_TAG) || this;\r\n        _this._tagname = tagname;\r\n        _this._idcounter = idcounter;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.idCounter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._idcounter;\r\n    };\r\n    return ParsedMessagePartStartTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nParsedMessagePartEndTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartEndTag, _super);\r\n    function ParsedMessagePartEndTag(tagname) {\r\n        var _this = _super.call(this, ParsedMessagePartType.END_TAG) || this;\r\n        _this._tagname = tagname;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEndTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        return '</' + this._tagname + '>';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEndTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    return ParsedMessagePartEndTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n// Tokens\r\n/**\r\n * Created by martin on 04.06.2017.\r\n * A tokenizer for ICU messages.\r\n * @type {?}\r\n */\r\nvar TEXT = 'TEXT';\r\n/** @type {?} */\r\nvar CURLY_BRACE_OPEN = 'CURLY_BRACE_OPEN';\r\n/** @type {?} */\r\nvar CURLY_BRACE_CLOSE = 'CURLY_BRACE_CLOSE';\r\n/** @type {?} */\r\nvar COMMA = 'COMMA';\r\n/** @type {?} */\r\nvar PLURAL = 'PLURAL';\r\n/** @type {?} */\r\nvar SELECT = 'SELECT';\r\n// states: default normal in_message\r\n/** @type {?} */\r\nvar STATE_DEFAULT = 'default';\r\n/** @type {?} */\r\nvar STATE_NORMAL = 'normal';\r\n/** @type {?} */\r\nvar STATE_IN_MESSAGE = 'in_message';\r\nvar ICUMessageTokenizer = /** @class */ (function () {\r\n    function ICUMessageTokenizer() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.getLexer = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var lexer = new Tokenizr();\r\n        /** @type {?} */\r\n        var plaintext = '';\r\n        /** @type {?} */\r\n        var openedCurlyBracesInTextCounter = 0;\r\n        lexer.before(function (ctx, match, rule) {\r\n            if (rule.name !== TEXT) {\r\n                if (_this.containsNonWhiteSpace(plaintext)) {\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                }\r\n                else {\r\n                    ctx.ignore();\r\n                }\r\n            }\r\n        });\r\n        lexer.finish(function (ctx) {\r\n            if (_this.containsNonWhiteSpace(plaintext)) {\r\n                ctx.accept(TEXT, plaintext);\r\n            }\r\n        });\r\n        // curly brace\r\n        lexer.rule(STATE_DEFAULT, /{/, function (ctx, match) {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_NORMAL);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /{/, function (ctx, match) {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_IN_MESSAGE);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /}/, function (ctx, match) {\r\n            ctx.pop();\r\n            ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n        }, CURLY_BRACE_CLOSE);\r\n        // masked ' { and }\r\n        lexer.rule(STATE_IN_MESSAGE, /'[{}]?'/, function (ctx, match) {\r\n            if (match[0] === '\\'\\'') {\r\n                plaintext += '\\'';\r\n            }\r\n            else if (match[0] === '\\'{\\'') {\r\n                plaintext += '{';\r\n            }\r\n            else if (match[0] === '\\'}\\'') {\r\n                plaintext += '}';\r\n            }\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(STATE_IN_MESSAGE, /./, function (ctx, match) {\r\n            /** @type {?} */\r\n            var char = match[0];\r\n            if (char === '{') {\r\n                openedCurlyBracesInTextCounter++;\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n            else if (char === '}') {\r\n                if (openedCurlyBracesInTextCounter > 0) {\r\n                    openedCurlyBracesInTextCounter--;\r\n                    plaintext += match[0];\r\n                    ctx.ignore();\r\n                }\r\n                else {\r\n                    ctx.pop();\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                    ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n                }\r\n            }\r\n            else {\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n        }, TEXT);\r\n        // comma\r\n        lexer.rule(STATE_NORMAL, /,/, function (ctx, match) {\r\n            ctx.accept(COMMA, match[0]);\r\n        }, COMMA);\r\n        // keywords plural and select\r\n        lexer.rule(STATE_NORMAL, /plural/, function (ctx, match) {\r\n            ctx.accept(PLURAL, match[0]);\r\n        }, PLURAL);\r\n        lexer.rule(STATE_NORMAL, /select/, function (ctx, match) {\r\n            ctx.accept(SELECT, match[0]);\r\n        }, SELECT);\r\n        // text\r\n        lexer.rule(/./, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\s]+/, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.containsNonWhiteSpace = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        for (var i = 0; i < text.length; i++) {\r\n            if (!/\\s/.test(text.charAt(i))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.tokenize = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        /** @type {?} */\r\n        var lexer = this.getLexer();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.input = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        this.lexer = this.getLexer();\r\n        this.lexer.input(normalizedMessage);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.next = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lexer.token();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.peek = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lexer.peek();\r\n    };\r\n    return ICUMessageTokenizer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\nvar MessageCategory = /** @class */ (function () {\r\n    function MessageCategory(_category, _message) {\r\n        this._category = _category;\r\n        this._message = _message;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MessageCategory.prototype.getCategory = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._category;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MessageCategory.prototype.getMessageNormalized = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._message;\r\n    };\r\n    return MessageCategory;\r\n}());\r\n/**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nvar /**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nICUMessage = /** @class */ (function () {\r\n    function ICUMessage(_parser, isPluralMessage) {\r\n        this._parser = _parser;\r\n        this._isPluralMessage = isPluralMessage;\r\n        this._categories = [];\r\n    }\r\n    /**\r\n     * @param {?} category\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.addCategory = /**\r\n     * @param {?} category\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (category, message) {\r\n        this._categories.push(new MessageCategory(category, message));\r\n    };\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return ICU message as native string.\r\n     */\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return {?} ICU message as native string.\r\n     */\r\n    ICUMessage.prototype.asNativeString = /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return {?} ICU message as native string.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var varname = (this.isPluralMessage()) ? 'VAR_PLURAL' : 'VAR_SELECT';\r\n        /** @type {?} */\r\n        var type = (this.isPluralMessage()) ? 'plural' : 'select';\r\n        /** @type {?} */\r\n        var choiceString = '';\r\n        this._categories.forEach(function (category) {\r\n            choiceString = choiceString + format(' %s {%s}', category.getCategory(), category.getMessageNormalized().asNativeString());\r\n        });\r\n        return format('{%s, %s,%s}', varname, type, choiceString);\r\n    };\r\n    /**\r\n     * Is it a plural message?\r\n     */\r\n    /**\r\n     * Is it a plural message?\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.isPluralMessage = /**\r\n     * Is it a plural message?\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._isPluralMessage;\r\n    };\r\n    /**\r\n     * Is it a select message?\r\n     */\r\n    /**\r\n     * Is it a select message?\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.isSelectMessage = /**\r\n     * Is it a select message?\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return !this._isPluralMessage;\r\n    };\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     */\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.getCategories = /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._categories;\r\n    };\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @param translation the translation (hashmap of categories and translations).\r\n     * @return new message wit translated content.\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     */\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     * @param {?} translation the translation (hashmap of categories and translations).\r\n     * @return {?} new message wit translated content.\r\n     */\r\n    ICUMessage.prototype.translate = /**\r\n     * Translate message and return a new, translated message\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     * @param {?} translation the translation (hashmap of categories and translations).\r\n     * @return {?} new message wit translated content.\r\n     */\r\n    function (translation) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var message = new ICUMessage(this._parser, this.isPluralMessage());\r\n        /** @type {?} */\r\n        var translatedCategories = new Set();\r\n        this._categories.forEach(function (category) {\r\n            /** @type {?} */\r\n            var translatedMessage;\r\n            /** @type {?} */\r\n            var translationForCategory = translation[category.getCategory()];\r\n            if (isNullOrUndefined(translationForCategory)) {\r\n                translatedMessage = category.getMessageNormalized();\r\n            }\r\n            else if (isString(translationForCategory)) {\r\n                translatedCategories.add(category.getCategory());\r\n                translatedMessage = _this._parser.parseNormalizedString((/** @type {?} */ (translationForCategory)), null);\r\n            }\r\n            else {\r\n                // TODO embedded ICU Message\r\n                translatedMessage = null;\r\n            }\r\n            message.addCategory(category.getCategory(), translatedMessage);\r\n        });\r\n        // new categories, which are not part of the original message\r\n        Object.keys(translation).forEach(function (categoryName) {\r\n            if (!translatedCategories.has(categoryName)) {\r\n                if (_this.isSelectMessage()) {\r\n                    throw new Error(format('adding a new category not allowed for select messages (\"%s\" is not part of message)', categoryName));\r\n                }\r\n                else {\r\n                    _this.checkValidPluralCategory(categoryName);\r\n                    // TODO embedded ICU Message\r\n                    /** @type {?} */\r\n                    var translatedMessage = _this._parser.parseNormalizedString((/** @type {?} */ (translation[categoryName])), null);\r\n                    message.addCategory(categoryName, translatedMessage);\r\n                }\r\n            }\r\n        });\r\n        return message;\r\n    };\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @param categoryName category\r\n     * @throws an error, if it is not a valid category name\r\n     */\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @throws an error, if it is not a valid category name\r\n     * @param {?} categoryName category\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.checkValidPluralCategory = /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @throws an error, if it is not a valid category name\r\n     * @param {?} categoryName category\r\n     * @return {?}\r\n     */\r\n    function (categoryName) {\r\n        /** @type {?} */\r\n        var allowedKeywords = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n        if (categoryName.match(/=\\d+/)) {\r\n            return;\r\n        }\r\n        if (allowedKeywords.find(function (key) { return key === categoryName; })) {\r\n            return;\r\n        }\r\n        throw new Error(format('invalid plural category \"%s\", allowed are =<n> and %s', categoryName, allowedKeywords));\r\n    };\r\n    return ICUMessage;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nvar /**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nParsedMessagePartICUMessage = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartICUMessage, _super);\r\n    function ParsedMessagePartICUMessage(icuMessageText, _parser) {\r\n        var _this = _super.call(this, ParsedMessagePartType.ICU_MESSAGE) || this;\r\n        _this._parser = _parser;\r\n        if (icuMessageText) {\r\n            _this.parseICUMessage(icuMessageText);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param icuMessageText icuMessageText\r\n     * @return wether text might be an ICU message.\r\n     */\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} icuMessageText icuMessageText\r\n     * @return {?} wether text might be an ICU message.\r\n     */\r\n    ParsedMessagePartICUMessage.looksLikeICUMessage = /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} icuMessageText icuMessageText\r\n     * @return {?} wether text might be an ICU message.\r\n     */\r\n    function (icuMessageText) {\r\n        /** @type {?} */\r\n        var part = new ParsedMessagePartICUMessage(null, null);\r\n        return part.looksLikeICUMessage(icuMessageText);\r\n    };\r\n    /**\r\n     * @param {?=} displayFormat\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.asDisplayString = /**\r\n     * @param {?=} displayFormat\r\n     * @return {?}\r\n     */\r\n    function (displayFormat) {\r\n        return '<ICU-Message/>';\r\n    };\r\n    /**\r\n     * return the parsed message.\r\n     * @return parsed message\r\n     */\r\n    /**\r\n     * return the parsed message.\r\n     * @return {?} parsed message\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.getICUMessage = /**\r\n     * return the parsed message.\r\n     * @return {?} parsed message\r\n     */\r\n    function () {\r\n        return this._message;\r\n    };\r\n    /**\r\n     * Parse the message.\r\n     * @param text message text to parse\r\n     * @throws an error if the syntax is not ok in any way.\r\n     */\r\n    /**\r\n     * Parse the message.\r\n     * @throws an error if the syntax is not ok in any way.\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.parseICUMessage = /**\r\n     * Parse the message.\r\n     * @throws an error if the syntax is not ok in any way.\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._messageText = text;\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        this.expectNext(CURLY_BRACE_OPEN);\r\n        this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n        this.expectNext(COMMA);\r\n        /** @type {?} */\r\n        var token = this._tokenizer.next();\r\n        if (token.type === PLURAL) {\r\n            this._message = new ICUMessage(this._parser, true);\r\n        }\r\n        else if (token.type === SELECT) {\r\n            this._message = new ICUMessage(this._parser, false);\r\n        }\r\n        this.expectNext(COMMA);\r\n        token = this._tokenizer.peek();\r\n        while (token.type !== CURLY_BRACE_CLOSE) {\r\n            /** @type {?} */\r\n            var category = this.expectNext(TEXT).value.trim();\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            /** @type {?} */\r\n            var message = this.expectNext(TEXT).value;\r\n            this._message.addCategory(category, this.parseNativeSubMessage(message));\r\n            this.expectNext(CURLY_BRACE_CLOSE);\r\n            token = this._tokenizer.peek();\r\n        }\r\n        this.expectNext(CURLY_BRACE_CLOSE);\r\n        this.expectNext('EOF');\r\n    };\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param text message text to parse\r\n     */\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.looksLikeICUMessage = /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        try {\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n            this.expectNext(COMMA);\r\n            /** @type {?} */\r\n            var token = this._tokenizer.next();\r\n            if (token.type !== PLURAL && token.type !== SELECT) {\r\n                return false;\r\n            }\r\n            this.expectNext(COMMA);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @param tokentype expected type.\r\n     * @return Token\r\n     * @throws error, if next token has wrong type.\r\n     */\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @throws error, if next token has wrong type.\r\n     * @param {?} tokentype expected type.\r\n     * @return {?} Token\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.expectNext = /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @throws error, if next token has wrong type.\r\n     * @param {?} tokentype expected type.\r\n     * @return {?} Token\r\n     */\r\n    function (tokentype) {\r\n        /** @type {?} */\r\n        var token = this._tokenizer.next();\r\n        if (token.type !== tokentype) {\r\n            throw new Error(format('Error parsing ICU Message: expected %s, found %s (%s) (message %s)', tokentype, token.type, token.value, this._messageText));\r\n        }\r\n        return token;\r\n    };\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param message message in format dependent xml syntax.\r\n     * @return normalized message\r\n     */\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param {?} message message in format dependent xml syntax.\r\n     * @return {?} normalized message\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.parseNativeSubMessage = /**\r\n     * Parse XML text to normalized message.\r\n     * @param {?} message message in format dependent xml syntax.\r\n     * @return {?} normalized message\r\n     */\r\n    function (message) {\r\n        return this._parser.createNormalizedMessageFromXMLString(message, null);\r\n    };\r\n    return ParsedMessagePartICUMessage;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nParsedMessagePartICUMessageRef = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartICUMessageRef, _super);\r\n    function ParsedMessagePartICUMessageRef(index, disp) {\r\n        var _this = _super.call(this, ParsedMessagePartType.ICU_MESSAGE_REF) || this;\r\n        _this._index = index;\r\n        _this._disp = disp;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        return '<ICU-Message-Ref_' + this._index + '/>';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.index = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.disp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._disp;\r\n    };\r\n    return ParsedMessagePartICUMessageRef;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nvar /**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nParsedMessagePartEmptyTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartEmptyTag, _super);\r\n    function ParsedMessagePartEmptyTag(tagname, idcounter) {\r\n        var _this = _super.call(this, ParsedMessagePartType.EMPTY_TAG) || this;\r\n        _this._tagname = tagname;\r\n        _this._idcounter = idcounter;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.idCounter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._idcounter;\r\n    };\r\n    return ParsedMessagePartEmptyTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nParsedMessage = /** @class */ (function () {\r\n    function ParsedMessage(parser, sourceMessage) {\r\n        this._parser = parser;\r\n        this.sourceMessage = sourceMessage;\r\n        this._parts = [];\r\n    }\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return parser\r\n     */\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return {?} parser\r\n     */\r\n    ParsedMessage.prototype.getParser = /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return {?} parser\r\n     */\r\n    function () {\r\n        return this._parser;\r\n    };\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @param normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     */\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     * @param {?} normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translate = /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     * @param {?} normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @return {?}\r\n     */\r\n    function (normalizedString) {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return this._parser.parseNormalizedString((/** @type {?} */ (normalizedString)), this);\r\n        }\r\n        else {\r\n            throw new Error(format('cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")', normalizedString, this.asNativeString()));\r\n        }\r\n    };\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @param icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     */\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     * @param {?} icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translateICUMessage = /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     * @param {?} icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @return {?}\r\n     */\r\n    function (icuTranslation) {\r\n        /** @type {?} */\r\n        var icuMessage = this.getICUMessage();\r\n        if (isNullOrUndefined(icuMessage)) {\r\n            throw new Error(format('this is not an ICU message, use translate() instead (\"%s\", \"%s\")', icuTranslation, this.asNativeString()));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var translatedICUMessage = icuMessage.translate(icuTranslation);\r\n            return this._parser.parseICUMessage(translatedICUMessage.asNativeString(), this);\r\n        }\r\n    };\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     */\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param {?} nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translateNativeString = /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param {?} nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     * @return {?}\r\n     */\r\n    function (nativeString) {\r\n        return this._parser.createNormalizedMessageFromXMLString(nativeString, this);\r\n    };\r\n    /**\r\n     * normalized message as string.\r\n     * @param displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     */\r\n    /**\r\n     * normalized message as string.\r\n     * @param {?=} displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.asDisplayString = /**\r\n     * normalized message as string.\r\n     * @param {?=} displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     * @return {?}\r\n     */\r\n    function (displayFormat) {\r\n        return this._parts.map(function (part) { return part.asDisplayString(displayFormat); }).join('');\r\n    };\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     */\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.asNativeString = /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return DOMUtilities.getXMLContent(this._xmlRepresentation);\r\n        }\r\n        else {\r\n            return this.getICUMessage().asNativeString();\r\n        }\r\n    };\r\n    /**\r\n     * Validate the message.\r\n     * @return null, if ok, error object otherwise.\r\n     */\r\n    /**\r\n     * Validate the message.\r\n     * @return {?} null, if ok, error object otherwise.\r\n     */\r\n    ParsedMessage.prototype.validate = /**\r\n     * Validate the message.\r\n     * @return {?} null, if ok, error object otherwise.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var hasErrors = false;\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var e;\r\n        e = this.checkPlaceholderAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.placeholderAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefRemoved();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefRemoved = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        return hasErrors ? errors : null;\r\n    };\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return null, if no warning, warnings as error object otherwise.\r\n     */\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return {?} null, if no warning, warnings as error object otherwise.\r\n     */\r\n    ParsedMessage.prototype.validateWarnings = /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return {?} null, if no warning, warnings as error object otherwise.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var hasWarnings = false;\r\n        /** @type {?} */\r\n        var warnings = {};\r\n        /** @type {?} */\r\n        var w;\r\n        w = this.checkPlaceholderRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.placeholderRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagAdded();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagAdded = w;\r\n            hasWarnings = true;\r\n        }\r\n        return hasWarnings ? warnings : null;\r\n    };\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return ICUMessage or null.\r\n     */\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return {?} ICUMessage or null.\r\n     */\r\n    ParsedMessage.prototype.getICUMessage = /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return {?} ICUMessage or null.\r\n     */\r\n    function () {\r\n        if (this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE) {\r\n            /** @type {?} */\r\n            var icuPart = (/** @type {?} */ (this._parts[0]));\r\n            return icuPart.getICUMessage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkPlaceholderAdded = /**\r\n     * Check for added placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourcePlaceholders_1 = this.sourceMessage.allPlaceholders();\r\n            /** @type {?} */\r\n            var myPlaceholders = this.allPlaceholders();\r\n            myPlaceholders.forEach(function (index) {\r\n                if (!sourcePlaceholders_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added placeholder ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_1 = '';\r\n            /** @type {?} */\r\n            var first_1 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_1) {\r\n                    allSuspiciousIndexes_1 = allSuspiciousIndexes_1 + ', ';\r\n                }\r\n                allSuspiciousIndexes_1 = allSuspiciousIndexes_1 + index;\r\n                first_1 = false;\r\n            });\r\n            e = 'added placeholders ' + allSuspiciousIndexes_1 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkPlaceholderRemoved = /**\r\n     * Check for removed placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var w = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            /** @type {?} */\r\n            var myPlaceholders_1 = this.allPlaceholders();\r\n            sourcePlaceholders.forEach(function (index) {\r\n                if (!myPlaceholders_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            w = 'removed placeholder ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_2 = '';\r\n            /** @type {?} */\r\n            var first_2 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_2) {\r\n                    allSuspiciousIndexes_2 = allSuspiciousIndexes_2 + ', ';\r\n                }\r\n                allSuspiciousIndexes_2 = allSuspiciousIndexes_2 + index;\r\n                first_2 = false;\r\n            });\r\n            w = 'removed placeholders ' + allSuspiciousIndexes_2 + ' from original message';\r\n        }\r\n        return w;\r\n    };\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkICUMessageRefAdded = /**\r\n     * Check for added ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceICURefs_1 = this.sourceMessage.allICUMessageRefs();\r\n            /** @type {?} */\r\n            var myICURefs = this.allICUMessageRefs();\r\n            myICURefs.forEach(function (index) {\r\n                if (!sourceICURefs_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added ICU message reference ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_3 = '';\r\n            /** @type {?} */\r\n            var first_3 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_3) {\r\n                    allSuspiciousIndexes_3 = allSuspiciousIndexes_3 + ', ';\r\n                }\r\n                allSuspiciousIndexes_3 = allSuspiciousIndexes_3 + index;\r\n                first_3 = false;\r\n            });\r\n            e = 'added ICU message references ' + allSuspiciousIndexes_3 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkICUMessageRefRemoved = /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            /** @type {?} */\r\n            var myICURefs_1 = this.allICUMessageRefs();\r\n            sourceICURefs.forEach(function (index) {\r\n                if (!myICURefs_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'removed ICU message reference ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_4 = '';\r\n            /** @type {?} */\r\n            var first_4 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_4) {\r\n                    allSuspiciousIndexes_4 = allSuspiciousIndexes_4 + ', ';\r\n                }\r\n                allSuspiciousIndexes_4 = allSuspiciousIndexes_4 + index;\r\n                first_4 = false;\r\n            });\r\n            e = 'removed ICU message references ' + allSuspiciousIndexes_4 + ' from original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     */\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allPlaceholders = /**\r\n     * Get all indexes of placeholders used in the message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                /** @type {?} */\r\n                var index = ((/** @type {?} */ (part))).index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param index index of placeholder\r\n     * @return disp or null\r\n     */\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param {?} index index of placeholder\r\n     * @return {?} disp or null\r\n     */\r\n    ParsedMessage.prototype.getPlaceholderDisp = /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param {?} index index of placeholder\r\n     * @return {?} disp or null\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var placeHolder = null;\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                /** @type {?} */\r\n                var phPart = (/** @type {?} */ (part));\r\n                if (phPart.index() === index) {\r\n                    placeHolder = phPart;\r\n                }\r\n            }\r\n        });\r\n        return placeHolder ? placeHolder.disp() : null;\r\n    };\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     */\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allICUMessageRefs = /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                /** @type {?} */\r\n                var index = ((/** @type {?} */ (part))).index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param index of ref\r\n     * @return disp or null\r\n     */\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param {?} index of ref\r\n     * @return {?} disp or null\r\n     */\r\n    ParsedMessage.prototype.getICUMessageRefDisp = /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param {?} index of ref\r\n     * @return {?} disp or null\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var icuMessageRefPart = null;\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                /** @type {?} */\r\n                var refPart = (/** @type {?} */ (part));\r\n                if (refPart.index() === index) {\r\n                    icuMessageRefPart = refPart;\r\n                }\r\n            }\r\n        });\r\n        return icuMessageRefPart ? icuMessageRefPart.disp() : null;\r\n    };\r\n    /**\r\n     * Check for added tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkTagAdded = /**\r\n     * Check for added tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceTags_1 = this.sourceMessage.allTags();\r\n            /** @type {?} */\r\n            var myTags = this.allTags();\r\n            myTags.forEach(function (tagName) {\r\n                if (!sourceTags_1.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            e = 'added tag <' + suspiciousTags[0] + '>, which is not in original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousTags_1 = '';\r\n            /** @type {?} */\r\n            var first_5 = true;\r\n            suspiciousTags.forEach(function (tag) {\r\n                if (!first_5) {\r\n                    allSuspiciousTags_1 = allSuspiciousTags_1 + ', ';\r\n                }\r\n                allSuspiciousTags_1 = allSuspiciousTags_1 + '<' + tag + '>';\r\n                first_5 = false;\r\n            });\r\n            e = 'added tags ' + allSuspiciousTags_1 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkTagRemoved = /**\r\n     * Check for removed tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var w = null;\r\n        /** @type {?} */\r\n        var suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceTags = this.sourceMessage.allTags();\r\n            /** @type {?} */\r\n            var myTags_1 = this.allTags();\r\n            sourceTags.forEach(function (tagName) {\r\n                if (!myTags_1.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            w = 'removed tag <' + suspiciousTags[0] + '> from original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousTags_2 = '';\r\n            /** @type {?} */\r\n            var first_6 = true;\r\n            suspiciousTags.forEach(function (tag) {\r\n                if (!first_6) {\r\n                    allSuspiciousTags_2 = allSuspiciousTags_2 + ', ';\r\n                }\r\n                allSuspiciousTags_2 = allSuspiciousTags_2 + '<' + tag + '>';\r\n                first_6 = false;\r\n            });\r\n            w = 'removed tags ' + allSuspiciousTags_2 + ' from original message';\r\n        }\r\n        return w;\r\n    };\r\n    /**\r\n     * Get all tag names used in the message.\r\n     */\r\n    /**\r\n     * Get all tag names used in the message.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allTags = /**\r\n     * Get all tag names used in the message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.START_TAG || part.type === ParsedMessagePartType.EMPTY_TAG) {\r\n                /** @type {?} */\r\n                var tagName = ((/** @type {?} */ (part))).tagName();\r\n                result.add(tagName);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.parts = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._parts;\r\n    };\r\n    /**\r\n     * @param {?} xmlRepresentation\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.setXmlRepresentation = /**\r\n     * @param {?} xmlRepresentation\r\n     * @return {?}\r\n     */\r\n    function (xmlRepresentation) {\r\n        this._xmlRepresentation = xmlRepresentation;\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addText = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        this._parts.push(new ParsedMessagePartText(text));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addPlaceholder = /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    function (index, disp) {\r\n        this._parts.push(new ParsedMessagePartPlaceholder(index, disp));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addStartTag = /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    function (tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartStartTag(tagname, idcounter));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addEndTag = /**\r\n     * @param {?} tagname\r\n     * @return {?}\r\n     */\r\n    function (tagname) {\r\n        // check if well formed\r\n        /** @type {?} */\r\n        var openTag = this.calculateOpenTagName();\r\n        if (!openTag || openTag !== tagname) {\r\n            // oops, not well formed\r\n            throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagname, openTag, this.asNativeString()));\r\n        }\r\n        this._parts.push(new ParsedMessagePartEndTag(tagname));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addEmptyTag = /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    function (tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartEmptyTag(tagname, idcounter));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addICUMessageRef = /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    function (index, disp) {\r\n        this._parts.push(new ParsedMessagePartICUMessageRef(index, disp));\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addICUMessage = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        this._parts.push(new ParsedMessagePartICUMessage(text, this._parser));\r\n    };\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     */\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.calculateOpenTagName = /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var openTags = [];\r\n        this._parts.forEach(function (part) {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.START_TAG:\r\n                    openTags.push(((/** @type {?} */ (part))).tagName());\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    /** @type {?} */\r\n                    var tagName = ((/** @type {?} */ (part))).tagName();\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== tagName) {\r\n                        // oops, not well formed\r\n                        /** @type {?} */\r\n                        var openTag = (openTags.length === 0) ? 'nothing' : openTags[openTags.length - 1];\r\n                        throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagName, openTag, _this.asNativeString()));\r\n                    }\r\n                    openTags.pop();\r\n            }\r\n        });\r\n        return openTags.length === 0 ? null : openTags[openTags.length - 1];\r\n    };\r\n    return ParsedMessage;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n// Tokens\r\n/**\r\n * Created by martin on 14.05.2017.\r\n * A tokenizer for normalized messages.\r\n * @type {?}\r\n */\r\nvar TEXT$1 = 'TEXT';\r\n/** @type {?} */\r\nvar START_TAG = 'START_TAG';\r\n/** @type {?} */\r\nvar END_TAG = 'END_TAG';\r\n/** @type {?} */\r\nvar EMPTY_TAG = 'EMPTY_TAG';\r\n/** @type {?} */\r\nvar PLACEHOLDER = 'PLACEHOLDER';\r\n/** @type {?} */\r\nvar ICU_MESSAGE_REF = 'ICU_MESSAGE_REF';\r\n/** @type {?} */\r\nvar ICU_MESSAGE = 'ICU_MESSAGE';\r\nvar ParsedMesageTokenizer = /** @class */ (function () {\r\n    function ParsedMesageTokenizer() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMesageTokenizer.prototype.getLexer = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var lexer = new Tokenizr();\r\n        /** @type {?} */\r\n        var plaintext = '';\r\n        lexer.before(function (ctx, match, rule) {\r\n            if (rule.name !== TEXT$1 && plaintext !== '') {\r\n                ctx.accept(TEXT$1, { text: plaintext });\r\n                plaintext = '';\r\n            }\r\n        });\r\n        lexer.finish(function (ctx) {\r\n            if (plaintext !== '') {\r\n                ctx.accept(TEXT$1, { text: plaintext });\r\n            }\r\n        });\r\n        // empty tag, there are only a few allowed (see tag-mappings): ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR']\r\n        // format is <name id=\"nr\">, nr ist optional, z.B. <img> oder <img id=\"2\">\r\n        lexer.rule(/<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>/, function (ctx, match) {\r\n            /** @type {?} */\r\n            var idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(EMPTY_TAG, { name: match[1], idcounter: idcount });\r\n        }, EMPTY_TAG);\r\n        // start tag, Format <name id=\"nr\">, nr ist optional, z.B. <mytag> oder <mytag id=\"2\">\r\n        lexer.rule(/<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>/, function (ctx, match) {\r\n            /** @type {?} */\r\n            var idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(START_TAG, { name: match[1], idcounter: idcount });\r\n        }, START_TAG);\r\n        // end tag\r\n        lexer.rule(/<\\/([a-zA-Z][a-zA-Z-0-9]*)>/, function (ctx, match) {\r\n            ctx.accept(END_TAG, { name: match[1] });\r\n        }, END_TAG);\r\n        // placeholder\r\n        lexer.rule(/{{([0-9]+)}}/, function (ctx, match) {\r\n            ctx.accept(PLACEHOLDER, { idcounter: parseInt(match[1], 10) });\r\n        }, PLACEHOLDER);\r\n        // icu message ref\r\n        lexer.rule(/<ICU-Message-Ref_([0-9]+)\\/>/, function (ctx, match) {\r\n            ctx.accept(ICU_MESSAGE_REF, { idcounter: parseInt(match[1], 10) });\r\n        }, ICU_MESSAGE_REF);\r\n        // icu message\r\n        lexer.rule(/<ICU-Message\\/>/, function (ctx, match) {\r\n            ctx.accept(ICU_MESSAGE, { message: match[0] });\r\n        }, ICU_MESSAGE);\r\n        // text\r\n        lexer.rule(/./, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT$1);\r\n        lexer.rule(/[\\t\\r\\n]+/, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT$1);\r\n        return lexer;\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ParsedMesageTokenizer.prototype.tokenize = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        /** @type {?} */\r\n        var lexer = this.getLexer();\r\n        lexer.reset();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    };\r\n    return ParsedMesageTokenizer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n * @abstract\r\n */\r\nAbstractMessageParser = /** @class */ (function () {\r\n    function AbstractMessageParser() {\r\n    }\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param xmlElement the xml representation\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param {?} xmlElement the xml representation\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createNormalizedMessageFromXML = /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param {?} xmlElement the xml representation\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    function (xmlElement, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        if (xmlElement) {\r\n            message.setXmlRepresentation(xmlElement);\r\n            this.addPartsOfNodeToMessage(xmlElement, message, false);\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param {?} xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createNormalizedMessageFromXMLString = /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param {?} xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    function (xmlString, sourceMessage) {\r\n        /** @type {?} */\r\n        var doc = new DOMParser().parseFromString('<dummy>' + xmlString + '</dummy>', 'text/xml');\r\n        /** @type {?} */\r\n        var xmlElement = (/** @type {?} */ (doc.childNodes.item(0)));\r\n        return this.createNormalizedMessageFromXML(xmlElement, sourceMessage);\r\n    };\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param node node\r\n     * @param message message to be generated.\r\n     * @param includeSelf if true, add node by itself, otherwise only children.\r\n     */\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param {?} node node\r\n     * @param {?} message message to be generated.\r\n     * @param {?} includeSelf if true, add node by itself, otherwise only children.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.addPartsOfNodeToMessage = /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param {?} node node\r\n     * @param {?} message message to be generated.\r\n     * @param {?} includeSelf if true, add node by itself, otherwise only children.\r\n     * @return {?}\r\n     */\r\n    function (node, message, includeSelf) {\r\n        /** @type {?} */\r\n        var processChildren = true;\r\n        if (includeSelf) {\r\n            if (node.nodeType === node.TEXT_NODE) {\r\n                message.addText(node.textContent);\r\n                return;\r\n            }\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                processChildren = this.processStartElement((/** @type {?} */ (node)), message);\r\n            }\r\n        }\r\n        if (processChildren) {\r\n            /** @type {?} */\r\n            var icuMessageText = this.getICUMessageText(node);\r\n            /** @type {?} */\r\n            var isICU = !isNullOrUndefined(icuMessageText);\r\n            if (isICU) {\r\n                try {\r\n                    message.addICUMessage(icuMessageText);\r\n                }\r\n                catch (error) {\r\n                    // if it is not parsable, handle it as non ICU\r\n                    console.log('non ICU message: ', icuMessageText, error);\r\n                    isICU = false;\r\n                }\r\n            }\r\n            if (!isICU) {\r\n                /** @type {?} */\r\n                var children = node.childNodes;\r\n                for (var i = 0; i < children.length; i++) {\r\n                    this.addPartsOfNodeToMessage(children.item(i), message, true);\r\n                }\r\n            }\r\n        }\r\n        if (node.nodeType === node.ELEMENT_NODE) {\r\n            this.processEndElement((/** @type {?} */ (node)), message);\r\n        }\r\n    };\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    AbstractMessageParser.prototype.getICUMessageText = /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    function (node) {\r\n        /** @type {?} */\r\n        var children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var firstChild = children.item(0);\r\n        if (firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                return DOMUtilities.getXMLContent((/** @type {?} */ (node)));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param text text\r\n     */\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param {?} text text\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.isICUMessageStart = /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param {?} text text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        return ParsedMessagePartICUMessage.looksLikeICUMessage(text);\r\n        //        return text.startsWith('{VAR_PLURAL') || text.startsWith('{VAR_SELECT');\r\n    };\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param normalizedString normalized string\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param {?} normalizedString normalized string\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    AbstractMessageParser.prototype.parseNormalizedString = /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param {?} normalizedString normalized string\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    function (normalizedString, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        /** @type {?} */\r\n        var openTags = [];\r\n        /** @type {?} */\r\n        var tokens;\r\n        try {\r\n            tokens = new ParsedMesageTokenizer().tokenize(normalizedString);\r\n        }\r\n        catch (error) {\r\n            throw new Error(format('unexpected error while parsing message: \"%s\" (parsed \"%\")', error.message, normalizedString));\r\n        }\r\n        tokens.forEach(function (token) {\r\n            /** @type {?} */\r\n            var disp = null;\r\n            switch (token.type) {\r\n                case TEXT$1:\r\n                    message.addText(token.value.text);\r\n                    break;\r\n                case START_TAG:\r\n                    message.addStartTag(token.value.name, token.value.idcounter);\r\n                    openTags.push(token.value.name);\r\n                    break;\r\n                case END_TAG:\r\n                    message.addEndTag(token.value.name);\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== token.value.name) {\r\n                        // oops, not well formed\r\n                        throw new Error(format('unexpected close tag \"%s\" (parsed \"%s\")', token.value.name, normalizedString));\r\n                    }\r\n                    openTags.pop();\r\n                    break;\r\n                case EMPTY_TAG:\r\n                    message.addEmptyTag(token.value.name, token.value.idcounter);\r\n                    break;\r\n                case PLACEHOLDER:\r\n                    disp = (sourceMessage) ? sourceMessage.getPlaceholderDisp(token.value.idcounter) : null;\r\n                    message.addPlaceholder(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE_REF:\r\n                    disp = (sourceMessage) ? sourceMessage.getICUMessageRefDisp(token.value.idcounter) : null;\r\n                    message.addICUMessageRef(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE:\r\n                    throw new Error(format('<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")', normalizedString));\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        if (openTags.length > 0) {\r\n            // oops, not well closed tags\r\n            throw new Error(format('missing close tag \"%s\" (parsed \"%s\")', openTags[openTags.length - 1], normalizedString));\r\n        }\r\n        message.setXmlRepresentation(this.createXmlRepresentation(message));\r\n        return message;\r\n    };\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param {?} icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    AbstractMessageParser.prototype.parseICUMessage = /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param {?} icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    function (icuMessageString, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        message.addICUMessage(icuMessageString);\r\n        return message;\r\n    };\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param name name\r\n     * @return id count\r\n     */\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param {?} name name\r\n     * @return {?} id count\r\n     */\r\n    AbstractMessageParser.prototype.parseIdCountFromName = /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param {?} name name\r\n     * @return {?} id count\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var regex = /.*_([0-9]*)/;\r\n        /** @type {?} */\r\n        var match = regex.exec(name);\r\n        if (isNullOrUndefined(match) || match[1] === '') {\r\n            return 0;\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var num = match[1];\r\n            return parseInt(num, 10);\r\n        }\r\n    };\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param message message\r\n     */\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param {?} message message\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createXmlRepresentation = /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param {?} message message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        /** @type {?} */\r\n        var root = new DOMParser().parseFromString('<dummy/>', 'text/xml');\r\n        /** @type {?} */\r\n        var rootElem = root.getElementsByTagName('dummy').item(0);\r\n        this.addXmlRepresentationToRoot(message, rootElem);\r\n        return rootElem;\r\n    };\r\n    /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createXmlRepresentationOfTextPart = /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        return rootElem.ownerDocument.createTextNode(part.asDisplayString());\r\n    };\r\n    return AbstractMessageParser;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 16.05.2017.\r\n * Mapping from normalized tag names to placeholder names.\r\n */\r\n/*\r\ncopied from https://github.com/angular/angular/blob/master/packages/compiler/src/i18n/serializers/placeholder.ts\r\n */\r\n/** @type {?} */\r\nvar TAG_TO_PLACEHOLDER_NAMES = {\r\n    'A': 'LINK',\r\n    'B': 'BOLD_TEXT',\r\n    'BR': 'LINE_BREAK',\r\n    'EM': 'EMPHASISED_TEXT',\r\n    'H1': 'HEADING_LEVEL1',\r\n    'H2': 'HEADING_LEVEL2',\r\n    'H3': 'HEADING_LEVEL3',\r\n    'H4': 'HEADING_LEVEL4',\r\n    'H5': 'HEADING_LEVEL5',\r\n    'H6': 'HEADING_LEVEL6',\r\n    'HR': 'HORIZONTAL_RULE',\r\n    'I': 'ITALIC_TEXT',\r\n    'LI': 'LIST_ITEM',\r\n    'LINK': 'MEDIA_LINK',\r\n    'OL': 'ORDERED_LIST',\r\n    'P': 'PARAGRAPH',\r\n    'Q': 'QUOTATION',\r\n    'S': 'STRIKETHROUGH_TEXT',\r\n    'SMALL': 'SMALL_TEXT',\r\n    'SUB': 'SUBSTRIPT',\r\n    'SUP': 'SUPERSCRIPT',\r\n    'TBODY': 'TABLE_BODY',\r\n    'TD': 'TABLE_CELL',\r\n    'TFOOT': 'TABLE_FOOTER',\r\n    'TH': 'TABLE_HEADER_CELL',\r\n    'THEAD': 'TABLE_HEADER',\r\n    'TR': 'TABLE_ROW',\r\n    'TT': 'MONOSPACED_TEXT',\r\n    'U': 'UNDERLINED_TEXT',\r\n    'UL': 'UNORDERED_LIST',\r\n};\r\n/**\r\n * HTML Tags (in uppercase) that are empty, they have no content, but do not need a close tag, e.g. <br>, <img>, <hr>.\r\n * @type {?}\r\n */\r\nvar VOID_TAGS = ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR'];\r\nvar TagMapping = /** @class */ (function () {\r\n    function TagMapping() {\r\n    }\r\n    /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getStartTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (tag, id) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return \"START_\" + baseName + this.counterString(id);\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getCloseTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return \"CLOSE_\" + baseName;\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getEmptyTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (tag, id) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return baseName + this.counterString(id);\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getCtypeForTag = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n                return 'lb';\r\n            case 'img':\r\n                return 'image';\r\n            default:\r\n                return \"x-\" + tag;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromStartTagPlaceholderName = /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName.startsWith('START_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('START_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('START_')) {\r\n            /** @type {?} */\r\n            var ph_1 = this.stripCounter(placeholderName.substring('START_'.length));\r\n            /** @type {?} */\r\n            var matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph_1; });\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromCloseTagPlaceholderName = /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName.startsWith('CLOSE_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('CLOSE_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('CLOSE_')) {\r\n            /** @type {?} */\r\n            var ph_2 = this.stripCounter(placeholderName.substring('CLOSE_'.length));\r\n            /** @type {?} */\r\n            var matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph_2; });\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.isEmptyTagPlaceholderName = /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        /** @type {?} */\r\n        var ph = this.stripCounter(placeholderName);\r\n        /** @type {?} */\r\n        var matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph; });\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromEmptyTagPlaceholderName = /**\r\n     * tagname of empty tag placeholder.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        /** @type {?} */\r\n        var ph = this.stripCounter(placeholderName);\r\n        /** @type {?} */\r\n        var matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph; });\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return matchKey.toLowerCase();\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param placeholderName placeholderName\r\n     * @return placeholderName without counter at end.\r\n     */\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param {?} placeholderName placeholderName\r\n     * @return {?} placeholderName without counter at end.\r\n     */\r\n    TagMapping.prototype.stripCounter = /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param {?} placeholderName placeholderName\r\n     * @return {?} placeholderName without counter at end.\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName) {\r\n            /** @type {?} */\r\n            var re = /(.*)_[0-9]+$/;\r\n            if (placeholderName.match(re)) {\r\n                return placeholderName.replace(re, '$1');\r\n            }\r\n        }\r\n        return placeholderName;\r\n    };\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param id id\r\n     * @return suffix for counter.\r\n     */\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param {?} id id\r\n     * @return {?} suffix for counter.\r\n     */\r\n    TagMapping.prototype.counterString = /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param {?} id id\r\n     * @return {?} suffix for counter.\r\n     */\r\n    function (id) {\r\n        if (id === 0) {\r\n            return '';\r\n        }\r\n        else {\r\n            return '_' + id.toString(10);\r\n        }\r\n    };\r\n    return TagMapping;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nXliffMessageParser = /** @class */ (function (_super) {\r\n    __extends(XliffMessageParser, _super);\r\n    function XliffMessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    XliffMessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        if (tagName === 'x') {\r\n            // placeholder are like <x id=\"INTERPOLATION\"/> or <x id=\"INTERPOLATION_1\">\r\n            /** @type {?} */\r\n            var id = elementNode.getAttribute('id');\r\n            if (!id) {\r\n                return; // should not happen\r\n            }\r\n            if (id.startsWith('INTERPOLATION')) {\r\n                /** @type {?} */\r\n                var index = this.parsePlaceholderIndexFromId(id);\r\n                message.addPlaceholder(index, null);\r\n            }\r\n            else if (id.startsWith('ICU')) {\r\n                /** @type {?} */\r\n                var index = this.parseICUMessageRefIndexFromId(id);\r\n                message.addICUMessageRef(index, null);\r\n            }\r\n            else if (id.startsWith('START_')) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromStartTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    /** @type {?} */\r\n                    var idcount = this.parseIdCountFromName(id);\r\n                    message.addStartTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n            else if (id.startsWith('CLOSE_')) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromCloseTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    message.addEndTag(normalizedTagName);\r\n                }\r\n            }\r\n            else if (tagMapping.isEmptyTagPlaceholderName(id)) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromEmptyTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    /** @type {?} */\r\n                    var idcount = this.parseIdCountFromName(id);\r\n                    message.addEmptyTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return index\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} index\r\n     */\r\n    XliffMessageParser.prototype.parsePlaceholderIndexFromId = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} index\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (id === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} id as number\r\n     */\r\n    XliffMessageParser.prototype.parseICUMessageRefIndexFromId = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} id as number\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (id === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        message.parts().forEach(function (part) {\r\n            /** @type {?} */\r\n            var child;\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    child = _this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    child = _this.createXmlRepresentationOfStartTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    child = _this.createXmlRepresentationOfEndTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    child = _this.createXmlRepresentationOfEmptyTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    child = _this.createXmlRepresentationOfPlaceholderPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    child = _this.createXmlRepresentationOfICUMessageRefPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n            }\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        /** @type {?} */\r\n        var ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        /** @type {?} */\r\n        var equivTextAttr = '<' + part.tagName() + '>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        /** @type {?} */\r\n        var ctypeAttrib = 'x-' + part.tagName();\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        /** @type {?} */\r\n        var ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        /** @type {?} */\r\n        var equivTextAttr = '<' + part.tagName() + '/>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var idAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        /** @type {?} */\r\n        var equivTextAttr = part.disp();\r\n        xElem.setAttribute('id', idAttrib);\r\n        if (equivTextAttr) {\r\n            xElem.setAttribute('equiv-text', equivTextAttr);\r\n        }\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var idAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        xElem.setAttribute('id', idAttrib);\r\n        return xElem;\r\n    };\r\n    return XliffMessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nXliffTransUnit = /** @class */ (function (_super) {\r\n    __extends(XliffTransUnit, _super);\r\n    function XliffTransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.sourceContent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            source = this._element.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XliffMessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new XliffMessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            return targetElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            targetElement.setAttribute('state', nativeState);\r\n        }\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XliffTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'new';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        switch (nativeState) {\r\n            case 'new':\r\n                return STATE_NEW;\r\n            case 'needs-translation':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-translation':\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            case 'signed-off':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('context-group');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                /** @type {?} */\r\n                var contextElements = elem.getElementsByTagName('context');\r\n                /** @type {?} */\r\n                var sourcefile = null;\r\n                /** @type {?} */\r\n                var linenumber = 0;\r\n                for (var j = 0; j < contextElements.length; j++) {\r\n                    /** @type {?} */\r\n                    var contextElem = contextElements.item(j);\r\n                    if (contextElem.getAttribute('context-type') === 'sourcefile') {\r\n                        sourcefile = DOMUtilities.getPCDATA(contextElem);\r\n                    }\r\n                    if (contextElem.getAttribute('context-type') === 'linenumber') {\r\n                        linenumber = Number.parseInt(DOMUtilities.getPCDATA(contextElem), 10);\r\n                    }\r\n                }\r\n                sourceRefs.push({ sourcefile: sourcefile, linenumber: linenumber });\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        var _this = this;\r\n        this.removeAllSourceReferences();\r\n        sourceRefs.forEach(function (ref) {\r\n            /** @type {?} */\r\n            var contextGroup = _this._element.ownerDocument.createElement('context-group');\r\n            contextGroup.setAttribute('purpose', 'location');\r\n            /** @type {?} */\r\n            var contextSource = _this._element.ownerDocument.createElement('context');\r\n            contextSource.setAttribute('context-type', 'sourcefile');\r\n            contextSource.appendChild(_this._element.ownerDocument.createTextNode(ref.sourcefile));\r\n            /** @type {?} */\r\n            var contextLine = _this._element.ownerDocument.createElement('context');\r\n            contextLine.setAttribute('context-type', 'linenumber');\r\n            contextLine.appendChild(_this._element.ownerDocument.createTextNode(ref.linenumber.toString(10)));\r\n            contextGroup.appendChild(contextSource);\r\n            contextGroup.appendChild(contextLine);\r\n            _this._element.appendChild(contextGroup);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeAllSourceReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('context-group');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach(function (elem) { elem.parentNode.removeChild(elem); });\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('description');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     * @return element or null is absent\r\n     */\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?} element or null is absent\r\n     */\r\n    XliffTransUnit.prototype.findNoteElementWithFromAttribute = /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?} element or null is absent\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('from') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    XliffTransUnit.prototype.findAllAdditionalNoteElements = /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var result = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            /** @type {?} */\r\n            var fromAttribute = noteElem.getAttribute('from');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param fromAttrValue value of \"from\" attribute\r\n     * @param content text value of note element\r\n     * @return the new created element\r\n     */\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} fromAttrValue value of \"from\" attribute\r\n     * @param {?} content text value of note element\r\n     * @return {?} the new created element\r\n     */\r\n    XliffTransUnit.prototype.createNoteElementWithFromAttribute = /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} fromAttrValue value of \"from\" attribute\r\n     * @param {?} content text value of note element\r\n     * @return {?} the new created element\r\n     */\r\n    function (fromAttrValue, content) {\r\n        /** @type {?} */\r\n        var noteElement = this._element.ownerDocument.createElement('note');\r\n        if (fromAttrValue) {\r\n            noteElement.setAttribute('from', fromAttrValue);\r\n        }\r\n        noteElement.setAttribute('priority', '1');\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        this._element.appendChild(noteElement);\r\n        return noteElement;\r\n    };\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeNoteElementWithFromAttribute = /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElement = this.findNoteElementWithFromAttribute(attrValue);\r\n        if (noteElement) {\r\n            this._element.removeChild(noteElement);\r\n        }\r\n    };\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeAllAdditionalNoteElements = /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach(function (noteElement) {\r\n            _this._element.removeChild(noteElement);\r\n        });\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param  meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('meaning');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(function (elem) {\r\n            return {\r\n                from: elem.getAttribute('from'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        var _this = this;\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach(function (note) {\r\n                /** @type {?} */\r\n                var noteElem = _this.createNoteElementWithFromAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            /** @type {?} */\r\n            var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, (/** @type {?} */ (translation)));\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this._element.cloneNode(true)));\r\n        /** @type {?} */\r\n        var clone = new XliffTransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            /** @type {?} */\r\n            var sourceString = DOMUtilities.getXMLContent(source);\r\n            /** @type {?} */\r\n            var newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        if (isDefaultLang) {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n        }\r\n        else {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n        }\r\n    };\r\n    return XliffTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nvar /**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nXliffFile = /** @class */ (function (_super) {\r\n    __extends(XliffFile, _super);\r\n    /**\r\n     * Create an xlf-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XliffFile\r\n     */\r\n    function XliffFile(xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        /** @type {?} */\r\n        var xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var version = xliffList.item(0).getAttribute('version');\r\n            /** @type {?} */\r\n            var expectedVersion = '1.2';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XLIFF12;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XLIFF12;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['source', 'target', 'tool', 'seg-source', 'g', 'ph', 'bpt', 'ept', 'it', 'sub', 'mrk'];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('trans-unit');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var transunit = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XliffTransUnit(transunit, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    XliffFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('source-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('source-language', language);\r\n        }\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    XliffFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('target-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('target-language', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XliffFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var bodyElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'body');\r\n        if (!bodyElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 1.2 file (should contain a body element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            bodyElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'trans-unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to body\r\n                bodyElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'trans-unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationFile = new XliffFile(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit(function (transUnit) {\r\n            ((/** @type {?} */ (transUnit))).useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    };\r\n    return XliffFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nXmbMessageParser = /** @class */ (function (_super) {\r\n    __extends(XmbMessageParser, _super);\r\n    function XmbMessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    XmbMessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // There are 4 different usages of ph element:\r\n            // 1. placeholders are like <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph>\r\n            // or <ph name=\"INTERPOLATION_1\"><ex>INTERPOLATION_1</ex></ph>\r\n            // 2. start tags:\r\n            // <ph name=\"START_LINK\"><ex>&lt;a&gt;</ex></ph>\r\n            // 3. empty tags:\r\n            // <ph name=\"TAG_IMG\"><ex>&lt;img&gt;</ex></ph>\r\n            // 4. ICU:\r\n            // <ph name=\"ICU\"><ex>ICU</ex></ph>\r\n            /** @type {?} */\r\n            var name_1 = elementNode.getAttribute('name');\r\n            if (!name_1) {\r\n                return true; // should not happen\r\n            }\r\n            if (name_1.startsWith('INTERPOLATION')) {\r\n                /** @type {?} */\r\n                var index = this.parsePlaceholderIndexFromName(name_1);\r\n                message.addPlaceholder(index, null);\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('START_')) {\r\n                /** @type {?} */\r\n                var tag = this.parseTagnameFromPhElement(elementNode);\r\n                /** @type {?} */\r\n                var idcounter = this.parseIdCountFromName(name_1);\r\n                if (tag) {\r\n                    message.addStartTag(tag, idcounter);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('CLOSE_')) {\r\n                /** @type {?} */\r\n                var tag = this.parseTagnameFromPhElement(elementNode);\r\n                if (tag) {\r\n                    message.addEndTag(tag);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(name_1)) {\r\n                /** @type {?} */\r\n                var emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(name_1);\r\n                /** @type {?} */\r\n                var idcounter = this.parseIdCountFromName(name_1);\r\n                message.addEmptyTag(emptyTagName, idcounter);\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('ICU')) {\r\n                /** @type {?} */\r\n                var index = this.parseICUMessageIndexFromName(name_1);\r\n                message.addICUMessageRef(index, null);\r\n                return false; // ignore children\r\n            }\r\n        }\r\n        else if (tagName === 'source') {\r\n            // ignore source\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    XmbMessageParser.prototype.getICUMessageText = /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    function (node) {\r\n        /** @type {?} */\r\n        var children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var firstChild = null;\r\n        // find first child that is no source element.\r\n        /** @type {?} */\r\n        var i;\r\n        for (i = 0; i < children.length; i++) {\r\n            /** @type {?} */\r\n            var child = children.item(i);\r\n            if (child.nodeType !== child.ELEMENT_NODE || ((/** @type {?} */ (child))).tagName !== 'source') {\r\n                firstChild = child;\r\n                break;\r\n            }\r\n        }\r\n        if (firstChild && firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                /** @type {?} */\r\n                var messageText = DOMUtilities.getXMLContent((/** @type {?} */ (node)));\r\n                if (i > 0) {\r\n                    // drop <source> elements\r\n                    /** @type {?} */\r\n                    var reSource = new RegExp('<source[^>]*>.*</source>', 'g');\r\n                    return messageText.replace(reSource, '');\r\n                }\r\n                else {\r\n                    return messageText;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    XmbMessageParser.prototype.parsePlaceholderIndexFromName = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (name === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    XmbMessageParser.prototype.parseICUMessageIndexFromName = /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (name === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param phElement phElement\r\n     */\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param {?} phElement phElement\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.parseTagnameFromPhElement = /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param {?} phElement phElement\r\n     * @return {?}\r\n     */\r\n    function (phElement) {\r\n        /** @type {?} */\r\n        var exElement = DOMUtilities.getFirstElementByTagName(phElement, 'ex');\r\n        if (exElement) {\r\n            /** @type {?} */\r\n            var value = DOMUtilities.getPCDATA(exElement);\r\n            if (!value || !value.startsWith('<') || !value.endsWith('>')) {\r\n                // oops\r\n                return null;\r\n            }\r\n            if (value.charAt(1) === '/') {\r\n                return value.substring(2, value.length - 1);\r\n            }\r\n            else {\r\n                return value.substring(1, value.length - 1);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        message.parts().forEach(function (part) {\r\n            /** @type {?} */\r\n            var child = _this.createXmlRepresentationOfPart(part, rootElem);\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfPart = /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        switch (part.type) {\r\n            case ParsedMessagePartType.TEXT:\r\n                return this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem);\r\n            case ParsedMessagePartType.START_TAG:\r\n                return this.createXmlRepresentationOfStartTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.END_TAG:\r\n                return this.createXmlRepresentationOfEndTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.EMPTY_TAG:\r\n                return this.createXmlRepresentationOfEmptyTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.PLACEHOLDER:\r\n                return this.createXmlRepresentationOfPlaceholderPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                return this.createXmlRepresentationOfICUMessageRefPart(((/** @type {?} */ (part))), rootElem);\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('</' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var nameAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var nameAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    return XmbMessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nXmbTransUnit = /** @class */ (function (_super) {\r\n    __extends(XmbTransUnit, _super);\r\n    function XmbTransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and linenumber\r\n     */\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and linenumber\r\n     */\r\n    XmbTransUnit.parseSourceAndPos = /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and linenumber\r\n     */\r\n    function (sourceAndPos) {\r\n        /** @type {?} */\r\n        var index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: XmbTransUnit.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.parseLineNumber = /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    function (lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    };\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return source content\r\n     */\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} source content\r\n     */\r\n    XmbTransUnit.prototype.sourceContent = /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} source content\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var msgContent = DOMUtilities.getXMLContent(this._element);\r\n        /** @type {?} */\r\n        var reSourceElem = /<source>.*<\\/source>/g;\r\n        msgContent = msgContent.replace(reSourceElem, '');\r\n        return msgContent;\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        // not supported\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, null);\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // in fact, target and source are just the same in xmb\r\n        return this.sourceContent();\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return null; // not supported in xmb\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XmbTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        return state;\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        return nativeState;\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        // not supported for xmb\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('source');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            /** @type {?} */\r\n            var sourceAndPos = DOMUtilities.getPCDATA(elem);\r\n            sourceRefs.push(XmbTransUnit.parseSourceAndPos(sourceAndPos));\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        /** @type {?} */\r\n        var insertPosition = this._element.childNodes.item(0);\r\n        for (var i = sourceRefs.length - 1; i >= 0; i--) {\r\n            /** @type {?} */\r\n            var ref = sourceRefs[i];\r\n            /** @type {?} */\r\n            var source = this._element.ownerDocument.createElement('source');\r\n            source.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            this._element.insertBefore(source, insertPosition);\r\n            insertPosition = source;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.removeAllSourceReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('source');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            toBeRemoved.push(elem);\r\n        }\r\n        toBeRemoved.forEach(function (elem) { elem.parentNode.removeChild(elem); });\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.getAttribute('desc');\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.getAttribute('meaning');\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        // do nothing\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        throw new Error('You cannot translate xmb files, use xtb instead.');\r\n    };\r\n    return XmbTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Doctype of xtb translation file corresponding with thos xmb file.\r\n * @type {?}\r\n */\r\nvar XTB_DOCTYPE = \"<!DOCTYPE translationbundle [\\n  <!ELEMENT translationbundle (translation)*>\\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\\n  <!ELEMENT translation (#PCDATA|ph)*>\\n  <!ATTLIST translation id CDATA #REQUIRED>\\n  <!ELEMENT ph EMPTY>\\n  <!ATTLIST ph name CDATA #REQUIRED>\\n]>\";\r\nvar XmbFile = /** @class */ (function (_super) {\r\n    __extends(XmbFile, _super);\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XmbFile\r\n     */\r\n    function XmbFile(_translationMessageFileFactory, xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('messagebundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xmb file (should contain a messagebundle element)', path));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('msg');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var msg = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XmbTransUnit(msg, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XMB;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XMB;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['message'];\r\n    };\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return Language or null\r\n     */\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return {?} Language or null\r\n     */\r\n    XmbFile.prototype.guessLanguageFromFilename = /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return {?} Language or null\r\n     */\r\n    function () {\r\n        if (this._filename) {\r\n            /** @type {?} */\r\n            var parts = this._filename.split('.');\r\n            if (parts.length > 2 && parts[parts.length - 1].toLowerCase() === 'xmb') {\r\n                return parts[parts.length - 2];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    XmbFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        return this.guessLanguageFromFilename();\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xmb has no notation for this.\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} target language.\r\n     */\r\n    XmbFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        return this.guessLanguageFromFilename();\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xmb has no notation for this.\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XmbFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        throw Error('xmb file cannot be used to store translations, use xtb file');\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationbundleXMLSource = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + XTB_DOCTYPE + '\\n<translationbundle>\\n</translationbundle>\\n';\r\n        /** @type {?} */\r\n        var translationFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XTB, translationbundleXMLSource, filename, this.encoding(), { xmlContent: this.editedContent(), path: this.filename(), encoding: this.encoding() });\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.setNewTransUnitTargetPraefix(this.getNewTransUnitTargetPraefix());\r\n        translationFile.setNewTransUnitTargetSuffix(this.getNewTransUnitTargetSuffix());\r\n        this.forEachTransUnit(function (tu) {\r\n            translationFile.importNewTransUnit(tu, isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    };\r\n    return XmbFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nXliff2MessageParser = /** @class */ (function (_super) {\r\n    __extends(Xliff2MessageParser, _super);\r\n    function Xliff2MessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    Xliff2MessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // placeholder are like <ph id=\"0\" equiv=\"INTERPOLATION\" disp=\"{{number()}}\"/>\r\n            // They contain the id and also a name (number in the example)\r\n            // TODO make some use of the name (but it is not available in XLIFF 1.2)\r\n            // ICU message are handled with the same tag\r\n            // Before 4.3.2 they did not have an equiv and disp (Bug #17344):\r\n            // e.g. <ph id=\"0\"/>\r\n            // Beginning with 4.3.2 they do have an equiv ICU and disp:\r\n            // e.g. <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>\r\n            // and empty tags have equiv other then INTERPOLATION:\r\n            // e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n            // or <ph equiv=\"LINE_BREAK\" type=\"lb\" disp=\"&lt;br/>\"/>\r\n            /** @type {?} */\r\n            var isInterpolation = false;\r\n            /** @type {?} */\r\n            var isICU = false;\r\n            /** @type {?} */\r\n            var isEmptyTag = false;\r\n            /** @type {?} */\r\n            var equiv = elementNode.getAttribute('equiv');\r\n            /** @type {?} */\r\n            var disp = elementNode.getAttribute('disp');\r\n            /** @type {?} */\r\n            var indexString = null;\r\n            /** @type {?} */\r\n            var index = 0;\r\n            /** @type {?} */\r\n            var emptyTagName = null;\r\n            if (!equiv) {\r\n                // old ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                indexString = elementNode.getAttribute('id');\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('ICU')) {\r\n                // new ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                if (equiv === 'ICU') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('ICU_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('INTERPOLATION')) {\r\n                isInterpolation = true;\r\n                if (equiv === 'INTERPOLATION') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('INTERPOLATION_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(equiv)) {\r\n                isEmptyTag = true;\r\n                emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(equiv);\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n            if (isInterpolation) {\r\n                message.addPlaceholder(index, disp);\r\n            }\r\n            else if (isICU) {\r\n                message.addICUMessageRef(index, disp);\r\n            }\r\n            else if (isEmptyTag) {\r\n                message.addEmptyTag(emptyTagName, this.parseIdCountFromName(equiv));\r\n            }\r\n        }\r\n        else if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            /** @type {?} */\r\n            var embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addStartTag(embeddedTagName, this.parseIdCountFromName(elementNode.getAttribute('equivStart')));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            /** @type {?} */\r\n            var embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addEndTag(embeddedTagName);\r\n            }\r\n            return;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} pcNode\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.tagNameFromPCElement = /**\r\n     * @param {?} pcNode\r\n     * @return {?}\r\n     */\r\n    function (pcNode) {\r\n        /** @type {?} */\r\n        var dispStart = pcNode.getAttribute('dispStart');\r\n        if (dispStart.startsWith('<')) {\r\n            dispStart = dispStart.substring(1);\r\n        }\r\n        if (dispStart.endsWith('>')) {\r\n            dispStart = dispStart.substring(0, dispStart.length - 1);\r\n        }\r\n        return dispStart;\r\n    };\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param message message\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param {?} message message\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param {?} message message\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var stack = [{ element: rootElem, tagName: 'root' }];\r\n        /** @type {?} */\r\n        var id = 0;\r\n        message.parts().forEach(function (part) {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfPlaceholderPart((/** @type {?} */ (part)), rootElem, id++));\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfICUMessageRefPart((/** @type {?} */ (part)), rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    /** @type {?} */\r\n                    var newTagElem = _this.createXmlRepresentationOfStartTagPart((/** @type {?} */ (part)), rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(newTagElem);\r\n                    stack.push({ element: (/** @type {?} */ (newTagElem)), tagName: ((/** @type {?} */ (part))).tagName() });\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    /** @type {?} */\r\n                    var closeTagName = ((/** @type {?} */ (part))).tagName();\r\n                    if (stack.length <= 1 || stack[stack.length - 1].tagName !== closeTagName) {\r\n                        // oops, not well formed\r\n                        throw new Error('unexpected close tag ' + closeTagName);\r\n                    }\r\n                    stack.pop();\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    /** @type {?} */\r\n                    var emptyTagElem = _this.createXmlRepresentationOfEmptyTagPart((/** @type {?} */ (part)), rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(emptyTagElem);\r\n                    break;\r\n            }\r\n        });\r\n        if (stack.length !== 1) {\r\n            // oops, not well closed tags\r\n            throw new Error('missing close tag ' + stack[stack.length - 1].tagName);\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var pcElem = rootElem.ownerDocument.createElement('pc');\r\n        /** @type {?} */\r\n        var tagName = part.tagName();\r\n        /** @type {?} */\r\n        var equivStart = tagMapping.getStartTagPlaceholderName(tagName, part.idCounter());\r\n        /** @type {?} */\r\n        var equivEnd = tagMapping.getCloseTagPlaceholderName(tagName);\r\n        /** @type {?} */\r\n        var dispStart = '<' + tagName + '>';\r\n        /** @type {?} */\r\n        var dispEnd = '</' + tagName + '>';\r\n        pcElem.setAttribute('id', id.toString(10));\r\n        pcElem.setAttribute('equivStart', equivStart);\r\n        pcElem.setAttribute('equivEnd', equivEnd);\r\n        pcElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        pcElem.setAttribute('dispStart', dispStart);\r\n        pcElem.setAttribute('dispEnd', dispEnd);\r\n        return pcElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        // not used\r\n        return null;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagName = part.tagName();\r\n        /** @type {?} */\r\n        var equiv = tagMapping.getEmptyTagPlaceholderName(tagName, part.idCounter());\r\n        /** @type {?} */\r\n        var disp = '<' + tagName + '/>';\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equiv);\r\n        phElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        phElem.setAttribute('disp', disp);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.getTypeForTag = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n            case 'b':\r\n            case 'i':\r\n            case 'u':\r\n                return 'fmt';\r\n            case 'img':\r\n                return 'image';\r\n            case 'a':\r\n                return 'link';\r\n            default:\r\n                return 'other';\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var equivAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        /** @type {?} */\r\n        var disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var equivAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', part.index().toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        /** @type {?} */\r\n        var disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    };\r\n    return Xliff2MessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nvar /**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nXliff2TransUnit = /** @class */ (function (_super) {\r\n    __extends(Xliff2TransUnit, _super);\r\n    function Xliff2TransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.sourceContent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            /** @type {?} */\r\n            var segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n            source = segment.parentNode.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Xliff2MessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new Xliff2MessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            return segmentElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        /** @type {?} */\r\n        var segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            segmentElement.setAttribute('state', nativeState);\r\n        }\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    Xliff2TransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'initial';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        switch (nativeState) {\r\n            case 'initial':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'reviewed': // same as translated\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // Source is found as <file>:<line> in <note category=\"location\">...\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === 'location') {\r\n                /** @type {?} */\r\n                var sourceAndPos = DOMUtilities.getPCDATA(noteElem);\r\n                sourceRefs.push(this.parseSourceAndPos(sourceAndPos));\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and line number\r\n     */\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and line number\r\n     */\r\n    Xliff2TransUnit.prototype.parseSourceAndPos = /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and line number\r\n     */\r\n    function (sourceAndPos) {\r\n        /** @type {?} */\r\n        var index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: this.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.parseLineNumber = /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    function (lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        var _this = this;\r\n        this.removeAllSourceReferences();\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (sourceRefs.length === 0 && !isNullOrUndefined(notesElement) && notesElement.childNodes.length === 0) {\r\n            // remove empty notes element\r\n            notesElement.parentNode.removeChild(notesElement);\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(notesElement)) {\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.insertBefore(notesElement, this._element.childNodes.item(0));\r\n        }\r\n        sourceRefs.forEach(function (ref) {\r\n            /** @type {?} */\r\n            var note = _this._element.ownerDocument.createElement('note');\r\n            note.setAttribute('category', 'location');\r\n            note.appendChild(_this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            notesElement.appendChild(note);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeAllSourceReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = noteElements.item(i);\r\n            if (elem.getAttribute('category') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach(function (elem) { elem.parentNode.removeChild(elem); });\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('description');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param attrValue value of category attribute\r\n     * @return element or null is absent\r\n     */\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param {?} attrValue value of category attribute\r\n     * @return {?} element or null is absent\r\n     */\r\n    Xliff2TransUnit.prototype.findNoteElementWithCategoryAttribute = /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param {?} attrValue value of category attribute\r\n     * @return {?} element or null is absent\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    Xliff2TransUnit.prototype.findAllAdditionalNoteElements = /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var result = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            /** @type {?} */\r\n            var fromAttribute = noteElem.getAttribute('category');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param attrValue category attribute value\r\n     * @param content content of note element\r\n     * @return the new created element\r\n     */\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue category attribute value\r\n     * @param {?} content content of note element\r\n     * @return {?} the new created element\r\n     */\r\n    Xliff2TransUnit.prototype.createNoteElementWithCategoryAttribute = /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue category attribute value\r\n     * @param {?} content content of note element\r\n     * @return {?} the new created element\r\n     */\r\n    function (attrValue, content) {\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (isNullOrUndefined(notesElement)) {\r\n            // create it\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.appendChild(notesElement);\r\n        }\r\n        /** @type {?} */\r\n        var noteElement = this._element.ownerDocument.createElement('note');\r\n        if (attrValue) {\r\n            noteElement.setAttribute('category', attrValue);\r\n        }\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        notesElement.appendChild(noteElement);\r\n        return noteElement;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeNotesElementIfEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (notesElement) {\r\n            /** @type {?} */\r\n            var childNote = DOMUtilities.getFirstElementByTagName(this._element, 'note');\r\n            if (!childNote) {\r\n                // remove notes element\r\n                notesElement.parentNode.removeChild(notesElement);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeNoteElementWithCategoryAttribute = /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElement = this.findNoteElementWithCategoryAttribute(attrValue);\r\n        if (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        }\r\n        this.removeNotesElementIfEmpty();\r\n    };\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeAllAdditionalNoteElements = /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach(function (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        });\r\n        this.removeNotesElementIfEmpty();\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('meaning');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(function (elem) {\r\n            return {\r\n                from: elem.getAttribute('category'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        var _this = this;\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach(function (note) {\r\n                _this.createNoteElementWithCategoryAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            /** @type {?} */\r\n            var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, (/** @type {?} */ (translation)));\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this._element.cloneNode(true)));\r\n        /** @type {?} */\r\n        var clone = new Xliff2TransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            /** @type {?} */\r\n            var sourceString = DOMUtilities.getXMLContent(source);\r\n            /** @type {?} */\r\n            var newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        /** @type {?} */\r\n        var segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segment) {\r\n            if (isDefaultLang) {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n            }\r\n            else {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n            }\r\n        }\r\n    };\r\n    return Xliff2TransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nvar /**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nXliff2File = /** @class */ (function (_super) {\r\n    __extends(Xliff2File, _super);\r\n    /**\r\n     * Create an XLIFF 2.0-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return xliff file\r\n     */\r\n    function Xliff2File(xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        /** @type {?} */\r\n        var xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var version = xliffList.item(0).getAttribute('version');\r\n            /** @type {?} */\r\n            var expectedVersion = '2.0';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XLIFF20;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XLIFF20;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['skeleton', 'note', 'data', 'source', 'target', 'pc', 'mrk'];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('unit');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var transunit = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new Xliff2TransUnit(transunit, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    Xliff2File.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('srcLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('srcLang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    Xliff2File.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('trgLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('trgLang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    Xliff2File.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var fileElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (!fileElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 2.0 file (should contain a file element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            fileElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to first file element\r\n                fileElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationFile = new Xliff2File(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit(function (transUnit) {\r\n            ((/** @type {?} */ (transUnit))).useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    };\r\n    return Xliff2File;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nvar /**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nXtbTransUnit = /** @class */ (function (_super) {\r\n    __extends(XtbTransUnit, _super);\r\n    function XtbTransUnit(_element, _id, _translationMessagesFile, _sourceTransUnitFromMaster) {\r\n        var _this = _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n        _this._sourceTransUnitFromMaster = _sourceTransUnitFromMaster;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return content to translate.\r\n     */\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} content to translate.\r\n     */\r\n    XtbTransUnit.prototype.sourceContent = /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} content to translate.\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceContent();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        // xtb has no source content, they are part of the master\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser(); // no typo!, Same as for Xmb\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.createSourceContentNormalized();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return DOMUtilities.getXMLContent(this._element);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            /** @type {?} */\r\n            var sourceContent = this._sourceTransUnitFromMaster.sourceContent();\r\n            if (!sourceContent || sourceContent === this.targetContent() || !this.targetContent()) {\r\n                return 'new';\r\n            }\r\n            else {\r\n                return 'final';\r\n            }\r\n        }\r\n        return null; // not supported in xmb\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XtbTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        return state;\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        return nativeState;\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        // TODO some logic to store it anywhere\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceReferences();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetSourceReferences = /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        // xtb has no source refs, they are part of the master\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.description();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.meaning();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        // do nothing\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = this._element;\r\n        if (isNullOrUndefined(translation)) {\r\n            translation = '';\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n    };\r\n    return XtbTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nvar /**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nXtbFile = /** @class */ (function (_super) {\r\n    __extends(XtbFile, _super);\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * @return XmbFile\r\n     */\r\n    function XtbFile(_translationMessageFileFactory, xmlString, path, encoding, optionalMaster) {\r\n        var _this = _super.call(this) || this;\r\n        _this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding, optionalMaster);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @param {?=} optionalMaster\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @param {?=} optionalMaster\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding, optionalMaster) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('translationbundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', path));\r\n        }\r\n        if (optionalMaster) {\r\n            try {\r\n                this._masterFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XMB, optionalMaster.xmlContent, optionalMaster.path, optionalMaster.encoding);\r\n                // check, wether this can be the master ...\r\n                /** @type {?} */\r\n                var numberInMaster = this._masterFile.numberOfTransUnits();\r\n                /** @type {?} */\r\n                var myNumber = this.numberOfTransUnits();\r\n                if (numberInMaster !== myNumber) {\r\n                    this._warnings.push(format('%s trans units found in master, but this file has %s. Check if it is the correct master', numberInMaster, myNumber));\r\n                }\r\n            }\r\n            catch (error) {\r\n                throw new Error(format('File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.', optionalMaster.path));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('translation');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var msg = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            /** @type {?} */\r\n            var masterUnit = null;\r\n            if (this._masterFile) {\r\n                masterUnit = this._masterFile.transUnitWithId(id);\r\n            }\r\n            this.transUnits.push(new XtbTransUnit(msg, id, this, (/** @type {?} */ (masterUnit))));\r\n        }\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XTB;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XTB;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['translation'];\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    XtbFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        if (this._masterFile) {\r\n            return this._masterFile.sourceLanguage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xtb has no notation for this.\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    XtbFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            return translationbundleElem.getAttribute('lang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            translationbundleElem.setAttribute('lang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XtbFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newMasterTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (!translationbundleElem) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var translationElement = translationbundleElem.ownerDocument.createElement('translation');\r\n        translationElement.setAttribute('id', foreignTransUnit.id);\r\n        /** @type {?} */\r\n        var newContent = (copyContent || isDefaultLang) ? foreignTransUnit.sourceContent() : '';\r\n        if (!((/** @type {?} */ (foreignTransUnit))).isICUMessage(newContent)) {\r\n            newContent = this.getNewTransUnitTargetPraefix() + newContent + this.getNewTransUnitTargetSuffix();\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(translationElement, newContent);\r\n        /** @type {?} */\r\n        var newTu = new XtbTransUnit(translationElement, foreignTransUnit.id, this, newMasterTu);\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            translationbundleElem.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstTranslationElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translation');\r\n            if (firstTranslationElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstTranslationElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to bundle at end\r\n                translationbundleElem.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'translation', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        throw new Error(format('File \"%s\", xtb files are not translatable, they are already translations', filename));\r\n    };\r\n    return XtbFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nvar  /**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nTranslationMessagesFileFactory = /** @class */ (function () {\r\n    function TranslationMessagesFileFactory() {\r\n    }\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.fromFileContent = /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster);\r\n    };\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.fromUnknownFormatFileContent = /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster);\r\n    };\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.prototype.createFileFromFileContent = /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        if (i18nFormat === FORMAT_XLIFF12) {\r\n            return new XliffFile(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XLIFF20) {\r\n            return new Xliff2File(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return new XmbFile(this, xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XTB) {\r\n            return new XtbFile(this, xmlContent, path, encoding, optionalMaster);\r\n        }\r\n        throw new Error(format('oops, unsupported format \"%s\"', i18nFormat));\r\n    };\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.prototype.createFileFromUnknownFormatFileContent = /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (xmlContent, path, encoding, optionalMaster) {\r\n        /** @type {?} */\r\n        var formatCandidates = [FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB];\r\n        if (path && path.endsWith('xmb')) {\r\n            formatCandidates = [FORMAT_XMB, FORMAT_XTB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        if (path && path.endsWith('xtb')) {\r\n            formatCandidates = [FORMAT_XTB, FORMAT_XMB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        // try all candidate formats to get the right one\r\n        for (var i = 0; i < formatCandidates.length; i++) {\r\n            /** @type {?} */\r\n            var formatCandidate = formatCandidates[i];\r\n            try {\r\n                /** @type {?} */\r\n                var translationFile = TranslationMessagesFileFactory.fromFileContent(formatCandidate, xmlContent, path, encoding, optionalMaster);\r\n                if (translationFile) {\r\n                    return translationFile;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // seams to be the wrong format\r\n            }\r\n        }\r\n        throw new Error(format('could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB'));\r\n    };\r\n    return TranslationMessagesFileFactory;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\nexport { NgxI18nsupportLibModule, TranslationMessagesFileFactory, FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB, FILETYPE_XLIFF12, FILETYPE_XLIFF20, FILETYPE_XMB, FILETYPE_XTB, STATE_NEW, STATE_TRANSLATED, STATE_FINAL, NORMALIZATION_FORMAT_DEFAULT, NORMALIZATION_FORMAT_NGXTRANSLATE };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n/**\r\n * Created by martin on 30.03.2017.\r\n * Guard that checks wether there is an active project selected.\r\n * If not, it redirects to the home page, where you can select one.\r\n */\r\n@Injectable()\r\nexport class ActiveProjectGuard implements CanActivate {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    routerState: RouterStateSnapshot\r\n  ): Observable<boolean>|Promise<boolean>|boolean {\r\n      if (this.translatorService.currentProject()) {\r\n        return true;\r\n      } else {\r\n        this.router.navigateByUrl('home');\r\n        return false;\r\n      }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {\r\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n  MatAutocompleteModule,\r\n  MatButtonModule, MatCardModule, MatCheckboxModule, MatDialogModule, MatExpansionModule, MatIconModule, MatInputModule, MatListModule,\r\n  MatMenuModule, MatOptionModule, MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule, MatSelectModule, MatSlideToggleModule, MatSnackBarModule,\r\n  MatToolbarModule, MatTooltipModule, MatTreeModule\r\n} from '@angular/material';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\n/**\r\n * All imports of used material components.\r\n */\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n      MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    FlexLayoutModule\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n      MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    FlexLayoutModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' }}\r\n  ],\r\n})\r\nexport class AppMaterialModule { }\r\n","module.exports = \"<div id=\\\"container\\\" fxLayout=\\\"column\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <mat-toolbar-row>\\r\\n      <span id=\\\"apptitle\\\">Tiny Translator</span>\\r\\n      <span>&nbsp;</span>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"10px\\\">\\r\\n        <app-language code=\\\"en\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"de\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"fr\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"en-us\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"ru\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"zh\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"ar\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"in\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n        <app-language code=\\\"pt-br\\\" [showCode]=\\\"false\\\"></app-language>\\r\\n      </div>\\r\\n    </mat-toolbar-row>\\r\\n    <mat-toolbar-row>\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" matTooltip=\\\"Open menu... (configuration options, ...)\\\" i18n-matTooltip>\\r\\n        <mat-icon>more_vert</mat-icon>\\r\\n      </button>\\r\\n      <a mat-icon-button routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"List of available projects...\\\" i18n-matTooltip>\\r\\n        <mat-icon>home</mat-icon>\\r\\n      </a>\\r\\n      <a mat-icon-button routerLink=\\\"/editproject\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"Details of the project (click to open)\\\" i18n-matTooltip>\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </a>\\r\\n      <a mat-icon-button routerLink=\\\"/translate\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"Translate the project\\\" i18n-matTooltip>\\r\\n        <mat-icon>translate</mat-icon>\\r\\n        {{currentProjectName() | abbreviate: 30}}\\r\\n      </a>\\r\\n      <!-- main menu -->\\r\\n      <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item (click)=\\\"download()\\\"\\r\\n                matTooltip=\\\"export current translation state to file (download)\\\" i18n-matTooltip>\\r\\n          <mat-icon>save</mat-icon>\\r\\n          <span i18n>Save...</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"publish()\\\" [disabled]=\\\"!publishEnabled()\\\"\\r\\n                matTooltip=\\\"publish translated state to Github...\\\" i18n-matTooltip>\\r\\n          <mat-icon>publish</mat-icon>\\r\\n          <span i18n>Publish...</span>\\r\\n        </button>\\r\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"configMenu\\\">\\r\\n          <mat-icon>settings</mat-icon>\\r\\n          <span i18n>Settings...</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"autoTranslate()\\\"\\r\\n          matTooltip=\\\"Translate all untranslated units with Google Translate\\\" i18n-matTooltip>\\r\\n          <mat-icon>g_translate</mat-icon>\\r\\n          <span i18n>Google Translate units...</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"navigateToAutoTranslateSummary()\\\"\\r\\n                matTooltip=\\\"Open summary page of last autotranslate run\\\" i18n-matTooltip>\\r\\n          <mat-icon>g_translate</mat-icon>\\r\\n          <span i18n>Last results...</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n      <!-- config menu -->\\r\\n      <mat-menu #configMenu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item (click)=\\\"configureAutoTranslate()\\\"\\r\\n                matTooltip=\\\"configure Google Translate API Key\\\" i18n-matTooltip>\\r\\n          <mat-icon>g_translate</mat-icon>\\r\\n          <span i18n>Google Translate settings...</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"configureGithub()\\\"\\r\\n                matTooltip=\\\"configure Github API access\\\" i18n-matTooltip>\\r\\n          <img class=\\\"mat-icon\\\" src=\\\"../assets/Octocat.jpg\\\" id=\\\"githublogo\\\">\\r\\n          <span i18n>Github access settings..</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n  <div id=\\\"main\\\" fxFlex=\\\"1 1 auto\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <div id=\\\"footer\\\">\\r\\n    Version <span id=\\\"buildversion\\\">{{buildversion()}}</span>; buildtime <span id=\\\"buildtime\\\">{{buildtime()}}</span>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n/* You can add global styles to this file, and also import other style files */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-badge-small .mat-badge-content{font-size:6px}\\n.mat-badge-large .mat-badge-content{font-size:24px}\\n.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h5,.mat-typography h5{font:400 11.62px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-h6,.mat-typography h6{font:400 9.38px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-body-2,.mat-body-strong{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}\\n.mat-caption,.mat-small{font:400 12px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 56px;letter-spacing:-.05em}\\n.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.02em}\\n.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.005em}\\n.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px}\\n.mat-bottom-sheet-container{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button,.mat-stroked-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-button-toggle{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card-title{font-size:24px;font-weight:500}\\n.mat-card-header .mat-card-title{font-size:20px}\\n.mat-card-content,.mat-card-subtitle{font-size:14px}\\n.mat-checkbox{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-checkbox-layout .mat-checkbox-label{line-height:24px}\\n.mat-chip{font-size:14px;font-weight:500}\\n.mat-chip .mat-chip-remove.mat-icon,.mat-chip .mat-chip-trailing-icon.mat-icon{font-size:18px}\\n.mat-table{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-header-cell{font-size:12px;font-weight:500}\\n.mat-cell,.mat-footer-cell{font-size:14px}\\n.mat-calendar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-calendar-body{font-size:13px}\\n.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}\\n.mat-calendar-table-header th{font-size:11px;font-weight:400}\\n.mat-dialog-title{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-expansion-panel-header{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:15px;font-weight:400}\\n.mat-expansion-panel-content{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field-wrapper{padding-bottom:1.34375em}\\n.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}\\n.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}\\n.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}\\n.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}\\n.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.34375em) scale(.75);transform:translateY(-1.34375em) scale(.75);width:133.33333%}\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.34374em) scale(.75);transform:translateY(-1.34374em) scale(.75);width:133.33334%}\\n.mat-form-field-label-wrapper{top:-.84375em;padding-top:.84375em}\\n.mat-form-field-label{top:1.34375em}\\n.mat-form-field-underline{bottom:1.34375em}\\n.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.66667em;top:calc(100% - 1.79167em)}\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);-ms-transform:translateY(-1.28125em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);-ms-transform:translateY(-1.28124em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);-ms-transform:translateY(-1.28123em) scale(.75);width:133.33335%}\\n.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.54167em;top:calc(100% - 1.66667em)}\\n@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28122em) scale(.75);transform:translateY(-1.28122em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28121em) scale(.75);transform:translateY(-1.28121em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.2812em) scale(.75);transform:translateY(-1.2812em) scale(.75)}}\\n.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em 0}\\n.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-.5em}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-.59375em) scale(.75);transform:translateY(-.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-.59374em) scale(.75);transform:translateY(-.59374em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0 1em 0}\\n.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-.25em}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.59375em) scale(.75);transform:translateY(-1.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.59374em) scale(.75);transform:translateY(-1.59374em) scale(.75);width:133.33334%}\\n.mat-grid-tile-footer,.mat-grid-tile-header{font-size:14px}\\n.mat-grid-tile-footer .mat-line,.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}\\ninput.mat-input-element{margin-top:-.0625em}\\n.mat-menu-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:400}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px}\\n.mat-radio-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select-trigger{height:1.125em}\\n.mat-slide-toggle-content{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-slider-thumb-label-text{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-stepper-horizontal,.mat-stepper-vertical{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-step-label{font-size:14px;font-weight:400}\\n.mat-step-sub-label-error{font-weight:400}\\n.mat-step-label-error{font-size:14px}\\n.mat-step-label-selected{font-size:14px;font-weight:500}\\n.mat-tab-group{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-tab-label,.mat-tab-link{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0}\\n.mat-tooltip{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}\\n.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}\\n.mat-list-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-base .mat-list-item{font-size:16px}\\n.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-list-option{font-size:16px}\\n.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-list-base[dense] .mat-list-item{font-size:12px}\\n.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-list-option{font-size:12px}\\n.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:16px}\\n.mat-optgroup-label{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-simple-snackbar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px}\\n.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}\\n.mat-tree{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-nested-tree-node,.mat-tree-node{font-weight:400;font-size:14px}\\n.mat-ripple{overflow:hidden;position:relative}\\n.mat-ripple.mat-ripple-unbounded{overflow:visible}\\n.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,-webkit-transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1),-webkit-transform 0s cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}\\n@media (-ms-high-contrast:active){.mat-ripple-element{display:none}}\\n.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none}\\n.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}\\n.cdk-overlay-container{position:fixed;z-index:1000}\\n.cdk-overlay-container:empty{display:none}\\n.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}\\n.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}\\n.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}\\n@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}\\n.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}\\n.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}\\n.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}\\n.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n@-webkit-keyframes cdk-text-field-autofill-start{/*!*/}\\n@keyframes cdk-text-field-autofill-start{/*!*/}\\n@-webkit-keyframes cdk-text-field-autofill-end{/*!*/}\\n@keyframes cdk-text-field-autofill-end{/*!*/}\\n.cdk-text-field-autofill-monitored:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start}\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}\\ntextarea.cdk-textarea-autosize{resize:none}\\ntextarea.cdk-textarea-autosize-measuring{height:auto!important;overflow:hidden!important;padding:2px 0!important;box-sizing:content-box!important}\\n.mat-ripple-element{background-color:rgba(0,0,0,.1)}\\n.mat-option{color:rgba(0,0,0,.87)}\\n.mat-option:focus:not(.mat-option-disabled),.mat-option:hover:not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}\\n.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:#3f51b5}\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled){color:#ff4081}\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled){color:#f44336}\\n.mat-optgroup-label{color:rgba(0,0,0,.54)}\\n.mat-optgroup-disabled .mat-optgroup-label{color:rgba(0,0,0,.38)}\\n.mat-pseudo-checkbox{color:rgba(0,0,0,.54)}\\n.mat-pseudo-checkbox::after{color:#fafafa}\\n.mat-accent .mat-pseudo-checkbox-checked,.mat-accent .mat-pseudo-checkbox-indeterminate,.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate{background:#ff4081}\\n.mat-primary .mat-pseudo-checkbox-checked,.mat-primary .mat-pseudo-checkbox-indeterminate{background:#3f51b5}\\n.mat-warn .mat-pseudo-checkbox-checked,.mat-warn .mat-pseudo-checkbox-indeterminate{background:#f44336}\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}\\n.mat-elevation-z0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-elevation-z1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}\\n.mat-elevation-z8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}\\n.mat-elevation-z24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}\\n.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-theme-loaded-marker{display:none}\\n.mat-autocomplete-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover){background:#fff}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled){color:rgba(0,0,0,.87)}\\n.mat-badge-content{color:#fff;background:#3f51b5}\\n@media (-ms-high-contrast:active){.mat-badge-content{outline:solid 1px;border-radius:0}}\\n.mat-badge-accent .mat-badge-content{background:#ff4081;color:#fff}\\n.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}\\n.mat-badge{position:relative}\\n.mat-badge-hidden .mat-badge-content{display:none}\\n.mat-badge-disabled .mat-badge-content{background:#b9b9b9;color:rgba(0,0,0,.38)}\\n.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out, -webkit-transform .2s ease-in-out;-webkit-transform:scale(.6);transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}\\n.mat-badge-content.mat-badge-active{-webkit-transform:none;transform:none}\\n.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}\\n.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}\\n.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}\\n.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}\\n.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}\\n.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}\\n.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}\\n.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}\\n.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}\\n.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}\\n.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}\\n.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}\\n.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}\\n.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}\\n.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}\\n.mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-button,.mat-icon-button,.mat-stroked-button{color:inherit;background:0 0}\\n.mat-button.mat-primary,.mat-icon-button.mat-primary,.mat-stroked-button.mat-primary{color:#3f51b5}\\n.mat-button.mat-accent,.mat-icon-button.mat-accent,.mat-stroked-button.mat-accent{color:#ff4081}\\n.mat-button.mat-warn,.mat-icon-button.mat-warn,.mat-stroked-button.mat-warn{color:#f44336}\\n.mat-button.mat-accent[disabled],.mat-button.mat-primary[disabled],.mat-button.mat-warn[disabled],.mat-button[disabled][disabled],.mat-icon-button.mat-accent[disabled],.mat-icon-button.mat-primary[disabled],.mat-icon-button.mat-warn[disabled],.mat-icon-button[disabled][disabled],.mat-stroked-button.mat-accent[disabled],.mat-stroked-button.mat-primary[disabled],.mat-stroked-button.mat-warn[disabled],.mat-stroked-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-button.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-stroked-button.mat-primary .mat-button-focus-overlay{background-color:#3f51b5}\\n.mat-button.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-stroked-button.mat-accent .mat-button-focus-overlay{background-color:#ff4081}\\n.mat-button.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-stroked-button.mat-warn .mat-button-focus-overlay{background-color:#f44336}\\n.mat-button[disabled] .mat-button-focus-overlay,.mat-icon-button[disabled] .mat-button-focus-overlay,.mat-stroked-button[disabled] .mat-button-focus-overlay{background-color:transparent}\\n.mat-button .mat-ripple-element,.mat-icon-button .mat-ripple-element,.mat-stroked-button .mat-ripple-element{opacity:.1;background-color:currentColor}\\n.mat-button-focus-overlay{background:#000}\\n.mat-stroked-button:not([disabled]){border-color:rgba(0,0,0,.12)}\\n.mat-fab,.mat-flat-button,.mat-mini-fab,.mat-raised-button{color:rgba(0,0,0,.87);background-color:#fff}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{color:#fff}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{color:#fff}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{color:#fff}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{background-color:#3f51b5}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{background-color:#ff4081}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{background-color:#f44336}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{background-color:rgba(0,0,0,.12)}\\n.mat-fab.mat-primary .mat-ripple-element,.mat-flat-button.mat-primary .mat-ripple-element,.mat-mini-fab.mat-primary .mat-ripple-element,.mat-raised-button.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-accent .mat-ripple-element,.mat-flat-button.mat-accent .mat-ripple-element,.mat-mini-fab.mat-accent .mat-ripple-element,.mat-raised-button.mat-accent .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-warn .mat-ripple-element,.mat-flat-button.mat-warn .mat-ripple-element,.mat-mini-fab.mat-warn .mat-ripple-element,.mat-raised-button.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-flat-button:not([class*=mat-elevation-z]),.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-raised-button[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-fab[disabled]:not([class*=mat-elevation-z]),.mat-mini-fab[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group,.mat-button-toggle-standalone{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{box-shadow:none}\\n.mat-button-toggle{color:rgba(0,0,0,.38)}\\n.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(0,0,0,.12)}\\n.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87);background:#fff}\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#000}\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px rgba(0,0,0,.12)}\\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-checked{background-color:#e0e0e0;color:rgba(0,0,0,.54)}\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87)}\\n.mat-button-toggle-disabled{color:rgba(0,0,0,.26);background-color:#eee}\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#fff}\\n.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{border:solid 1px rgba(0,0,0,.12)}\\n.mat-card{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-card:not([class*=mat-elevation-z]){box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-card-subtitle{color:rgba(0,0,0,.54)}\\n.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}\\n.mat-checkbox-checkmark{fill:#fafafa}\\n.mat-checkbox-checkmark-path{stroke:#fafafa!important}\\n@media (-ms-high-contrast:black-on-white){.mat-checkbox-checkmark-path{stroke:#000!important}}\\n.mat-checkbox-mixedmark{background-color:#fafafa}\\n.mat-checkbox-checked.mat-primary .mat-checkbox-background,.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background{background-color:#3f51b5}\\n.mat-checkbox-checked.mat-accent .mat-checkbox-background,.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#ff4081}\\n.mat-checkbox-checked.mat-warn .mat-checkbox-background,.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background{background-color:#f44336}\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}\\n.mat-checkbox-disabled .mat-checkbox-label{color:rgba(0,0,0,.54)}\\n@media (-ms-high-contrast:active){.mat-checkbox-disabled{opacity:.5}}\\n@media (-ms-high-contrast:active){.mat-checkbox-background{background:0 0}}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element{background-color:#3f51b5}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#ff4081}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element{background-color:#f44336}\\n.mat-chip.mat-standard-chip{background-color:#e0e0e0;color:rgba(0,0,0,.87)}\\n.mat-chip.mat-standard-chip .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover{opacity:.54}\\n.mat-chip.mat-standard-chip.mat-chip-disabled{opacity:.4}\\n.mat-chip.mat-standard-chip::after{background:#000}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#3f51b5;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn{background-color:#f44336;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent{background-color:#ff4081;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-table{background:#fff}\\n.mat-table tbody,.mat-table tfoot,.mat-table thead,.mat-table-sticky,[mat-footer-row],[mat-header-row],[mat-row],mat-footer-row,mat-header-row,mat-row{background:inherit}\\nmat-footer-row,mat-header-row,mat-row,td.mat-cell,td.mat-footer-cell,th.mat-header-cell{border-bottom-color:rgba(0,0,0,.12)}\\n.mat-header-cell{color:rgba(0,0,0,.54)}\\n.mat-cell,.mat-footer-cell{color:rgba(0,0,0,.87)}\\n.mat-calendar-arrow{border-top-color:rgba(0,0,0,.54)}\\n.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button,.mat-datepicker-toggle{color:rgba(0,0,0,.54)}\\n.mat-calendar-table-header{color:rgba(0,0,0,.38)}\\n.mat-calendar-table-header-divider::after{background:rgba(0,0,0,.12)}\\n.mat-calendar-body-label{color:rgba(0,0,0,.54)}\\n.mat-calendar-body-cell-content{color:rgba(0,0,0,.87);border-color:transparent}\\n.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){color:rgba(0,0,0,.38)}\\n.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:rgba(0,0,0,.04)}\\n.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.38)}\\n.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.18)}\\n.mat-calendar-body-selected{background-color:#3f51b5;color:#fff}\\n.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(63,81,181,.4)}\\n.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#ff4081;color:#fff}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(255,64,129,.4)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-datepicker-toggle-active{color:#3f51b5}\\n.mat-datepicker-toggle-active.mat-accent{color:#ff4081}\\n.mat-datepicker-toggle-active.mat-warn{color:#f44336}\\n.mat-dialog-container{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-divider{border-top-color:rgba(0,0,0,.12)}\\n.mat-divider-vertical{border-right-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-action-row{border-top-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#fff}}\\n.mat-expansion-panel-header-title{color:rgba(0,0,0,.87)}\\n.mat-expansion-indicator::after,.mat-expansion-panel-header-description{color:rgba(0,0,0,.54)}\\n.mat-expansion-panel-header[aria-disabled=true]{color:rgba(0,0,0,.26)}\\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title{color:inherit}\\n.mat-form-field-label{color:rgba(0,0,0,.6)}\\n.mat-hint{color:rgba(0,0,0,.6)}\\n.mat-form-field.mat-focused .mat-form-field-label{color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent{color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn{color:#f44336}\\n.mat-focused .mat-form-field-required-marker{color:#ff4081}\\n.mat-form-field-ripple{background-color:rgba(0,0,0,.87)}\\n.mat-form-field.mat-focused .mat-form-field-ripple{background-color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent{background-color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn{background-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after{color:#3f51b5}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after{color:#ff4081}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker,.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent{background-color:#f44336}\\n.mat-error{color:#f44336}\\n.mat-form-field-appearance-legacy .mat-form-field-label{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-hint{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-standard .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-fill .mat-form-field-flex{background-color:rgba(0,0,0,.04)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{background-color:rgba(0,0,0,.02)}\\n.mat-form-field-appearance-fill .mat-form-field-underline::before{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before{background-color:transparent}\\n.mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(0,0,0,.12)}\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:rgba(0,0,0,.87)}\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:#3f51b5}\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick{color:#ff4081}\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:rgba(0,0,0,.06)}\\n.mat-icon.mat-primary{color:#3f51b5}\\n.mat-icon.mat-accent{color:#ff4081}\\n.mat-icon.mat-warn{color:#f44336}\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after{color:rgba(0,0,0,.54)}\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after,.mat-input-element:disabled{color:rgba(0,0,0,.38)}\\n.mat-input-element{caret-color:#3f51b5}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-moz-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-accent .mat-input-element{caret-color:#ff4081}\\n.mat-form-field-invalid .mat-input-element,.mat-warn .mat-input-element{caret-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after{color:#f44336}\\n.mat-list-base .mat-list-item{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-list-option{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-subheader{color:rgba(0,0,0,.54)}\\n.mat-list-item-disabled{background-color:#eee}\\n.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover{background:rgba(0,0,0,.04)}\\n.mat-menu-panel{background:#fff}\\n.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-menu-item{background:0 0;color:rgba(0,0,0,.87)}\\n.mat-menu-item[disabled],.mat-menu-item[disabled]::after{color:rgba(0,0,0,.38)}\\n.mat-menu-item .mat-icon-no-color,.mat-menu-item-submenu-trigger::after{color:rgba(0,0,0,.54)}\\n.mat-menu-item-highlighted:not([disabled]),.mat-menu-item.cdk-keyboard-focused:not([disabled]),.mat-menu-item.cdk-program-focused:not([disabled]),.mat-menu-item:hover:not([disabled]){background:rgba(0,0,0,.04)}\\n.mat-paginator{background:#fff}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{color:rgba(0,0,0,.54)}\\n.mat-paginator-decrement,.mat-paginator-increment{border-top:2px solid rgba(0,0,0,.54);border-right:2px solid rgba(0,0,0,.54)}\\n.mat-paginator-first,.mat-paginator-last{border-top:2px solid rgba(0,0,0,.54)}\\n.mat-icon-button[disabled] .mat-paginator-decrement,.mat-icon-button[disabled] .mat-paginator-first,.mat-icon-button[disabled] .mat-paginator-increment,.mat-icon-button[disabled] .mat-paginator-last{border-color:rgba(0,0,0,.38)}\\n.mat-progress-bar-background{fill:#c5cae9}\\n.mat-progress-bar-buffer{background-color:#c5cae9}\\n.mat-progress-bar-fill::after{background-color:#3f51b5}\\n.mat-progress-bar.mat-accent .mat-progress-bar-background{fill:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#ff4081}\\n.mat-progress-bar.mat-warn .mat-progress-bar-background{fill:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#f44336}\\n.mat-progress-spinner circle,.mat-spinner circle{stroke:#3f51b5}\\n.mat-progress-spinner.mat-accent circle,.mat-spinner.mat-accent circle{stroke:#ff4081}\\n.mat-progress-spinner.mat-warn circle,.mat-spinner.mat-warn circle{stroke:#f44336}\\n.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle{border-color:#3f51b5}\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple{background-color:#3f51b5}\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#ff4081}\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple{background-color:#ff4081}\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle{border-color:#f44336}\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple{background-color:#f44336}\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle,.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle,.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element{background-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content{color:rgba(0,0,0,.38)}\\n.mat-radio-button .mat-ripple-element{background-color:#000}\\n.mat-select-value{color:rgba(0,0,0,.87)}\\n.mat-select-placeholder{color:rgba(0,0,0,.42)}\\n.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}\\n.mat-select-arrow{color:rgba(0,0,0,.54)}\\n.mat-select-panel{background:#fff}\\n.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple){background:rgba(0,0,0,.12)}\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow{color:#3f51b5}\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow{color:#ff4081}\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow{color:rgba(0,0,0,.38)}\\n.mat-drawer-container{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-drawer{background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-drawer.mat-drawer-push{background-color:#fff}\\n.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-drawer-side{border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(0,0,0,.6)}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background-color:#ff4081}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar{background-color:rgba(255,64,129,.54)}\\n.mat-slide-toggle.mat-checked .mat-ripple-element{background-color:#ff4081}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb{background-color:#3f51b5}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar{background-color:rgba(63,81,181,.54)}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element{background-color:#3f51b5}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb{background-color:#f44336}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar{background-color:rgba(244,67,54,.54)}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element{background-color:#f44336}\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:#000}\\n.mat-slide-toggle-thumb{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12);background-color:#fafafa}\\n.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}\\n.mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label,.mat-primary .mat-slider-track-fill{background-color:#3f51b5}\\n.mat-primary .mat-slider-thumb-label-text{color:#fff}\\n.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label,.mat-accent .mat-slider-track-fill{background-color:#ff4081}\\n.mat-accent .mat-slider-thumb-label-text{color:#fff}\\n.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label,.mat-warn .mat-slider-track-fill{background-color:#f44336}\\n.mat-warn .mat-slider-thumb-label-text{color:#fff}\\n.mat-slider-focus-ring{background-color:rgba(255,64,129,.2)}\\n.cdk-focused .mat-slider-track-background,.mat-slider:hover .mat-slider-track-background{background-color:rgba(0,0,0,.38)}\\n.mat-slider-disabled .mat-slider-thumb,.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill{background-color:rgba(0,0,0,.26)}\\n.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(0,0,0,.12)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:rgba(0,0,0,.87)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb{border-color:rgba(0,0,0,.38)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}\\n.mat-slider-has-ticks .mat-slider-wrapper::after{border-color:rgba(0,0,0,.7)}\\n.mat-slider-horizontal .mat-slider-ticks{background-image:repeating-linear-gradient(to right,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent);background-image:-moz-repeating-linear-gradient(.0001deg,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-slider-vertical .mat-slider-ticks{background-image:repeating-linear-gradient(to bottom,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover{background-color:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-step-header:hover{background:0 0}}\\n.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(0,0,0,.54)}\\n.mat-step-header .mat-step-icon{background-color:rgba(0,0,0,.54);color:#fff}\\n.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#3f51b5;color:#fff}\\n.mat-step-header .mat-step-icon-state-error{background-color:transparent;color:#f44336}\\n.mat-step-header .mat-step-label.mat-step-label-active{color:rgba(0,0,0,.87)}\\n.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}\\n.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#fff}\\n.mat-stepper-vertical-line::before{border-left-color:rgba(0,0,0,.12)}\\n.mat-horizontal-stepper-header::after,.mat-horizontal-stepper-header::before,.mat-stepper-horizontal-line{border-top-color:rgba(0,0,0,.12)}\\n.mat-sort-header-arrow{color:#757575}\\n.mat-tab-header,.mat-tab-nav-bar{border-bottom:1px solid rgba(0,0,0,.12)}\\n.mat-tab-group-inverted-header .mat-tab-header,.mat-tab-group-inverted-header .mat-tab-nav-bar{border-top:1px solid rgba(0,0,0,.12);border-bottom:none}\\n.mat-tab-label,.mat-tab-link{color:rgba(0,0,0,.87)}\\n.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.38)}\\n.mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.87)}\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.38)}\\n.mat-tab-group[class*=mat-background-] .mat-tab-header,.mat-tab-nav-bar[class*=mat-background-]{border-bottom:none;border-top:none}\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary .mat-ink-bar{background-color:#3f51b5}\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent .mat-ink-bar{background-color:#ff4081}\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn .mat-ink-bar{background-color:#f44336}\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-background-primary .mat-tab-header,.mat-tab-group.mat-background-primary .mat-tab-links,.mat-tab-nav-bar.mat-background-primary .mat-tab-header,.mat-tab-nav-bar.mat-background-primary .mat-tab-links{background-color:#3f51b5}\\n.mat-tab-group.mat-background-primary .mat-tab-label,.mat-tab-group.mat-background-primary .mat-tab-link,.mat-tab-nav-bar.mat-background-primary .mat-tab-label,.mat-tab-nav-bar.mat-background-primary .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-background-accent .mat-tab-header,.mat-tab-group.mat-background-accent .mat-tab-links,.mat-tab-nav-bar.mat-background-accent .mat-tab-header,.mat-tab-nav-bar.mat-background-accent .mat-tab-links{background-color:#ff4081}\\n.mat-tab-group.mat-background-accent .mat-tab-label,.mat-tab-group.mat-background-accent .mat-tab-link,.mat-tab-nav-bar.mat-background-accent .mat-tab-label,.mat-tab-nav-bar.mat-background-accent .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-background-warn .mat-tab-header,.mat-tab-group.mat-background-warn .mat-tab-links,.mat-tab-nav-bar.mat-background-warn .mat-tab-header,.mat-tab-nav-bar.mat-background-warn .mat-tab-links{background-color:#f44336}\\n.mat-tab-group.mat-background-warn .mat-tab-label,.mat-tab-group.mat-background-warn .mat-tab-link,.mat-tab-nav-bar.mat-background-warn .mat-tab-label,.mat-tab-nav-bar.mat-background-warn .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}\\n.mat-toolbar.mat-primary{background:#3f51b5;color:#fff}\\n.mat-toolbar.mat-accent{background:#ff4081;color:#fff}\\n.mat-toolbar.mat-warn{background:#f44336;color:#fff}\\n.mat-toolbar .mat-focused .mat-form-field-ripple,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-form-field-underline{background-color:currentColor}\\n.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-select-value{color:inherit}\\n.mat-toolbar .mat-input-element{caret-color:currentColor}\\n.mat-tooltip{background:rgba(97,97,97,.9)}\\n.mat-tree{background:#fff}\\n.mat-nested-tree-node,.mat-tree-node{color:rgba(0,0,0,.87)}\\n.mat-snack-bar-container{color:rgba(255,255,255,.7);background:#323232;box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-simple-snackbar-action{color:#ff4081}\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 500; }\\n.mat-card-header .mat-card-title {\\n  font-size: 20px; }\\n.mat-card-subtitle,\\n.mat-card-content {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n@media print {\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n    -webkit-transform: translateY(-1.28122em) scale(0.75);\\n            transform: translateY(-1.28122em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.28121em) scale(0.75);\\n            transform: translateY(-1.28121em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.2812em) scale(0.75);\\n            transform: translateY(-1.2812em) scale(0.75); } }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-sub-label-error {\\n  font-weight: normal; }\\n.mat-step-label-error {\\n  font-size: 14px; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 8px;\\n  padding-bottom: 8px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-base .mat-list-item {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-list-option {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list-base[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden;\\n  position: relative; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.32); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-active {\\n    background: rgba(0, 0, 0, 0.04);\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-option.mat-option-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #69f0ae; }\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-optgroup-disabled .mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-pseudo-checkbox {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-pseudo-checkbox::after {\\n    color: #fafafa; }\\n.mat-pseudo-checkbox-checked,\\n.mat-pseudo-checkbox-indeterminate,\\n.mat-accent .mat-pseudo-checkbox-checked,\\n.mat-accent .mat-pseudo-checkbox-indeterminate {\\n  background: #69f0ae; }\\n.mat-primary .mat-pseudo-checkbox-checked,\\n.mat-primary .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-warn .mat-pseudo-checkbox-checked,\\n.mat-warn .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\\n  background: #b0b0b0; }\\n.mat-elevation-z0 {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z1 {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z2 {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z3 {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z4 {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z5 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z6 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z7 {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z8 {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z9 {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z10 {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z11 {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z12 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z13 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z14 {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z15 {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z16 {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z17 {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z18 {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z19 {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z20 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z21 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z22 {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z23 {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z24 {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n.mat-app-background {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-theme-loaded-marker {\\n  display: none; }\\n.mat-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-autocomplete-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n    background: white; }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n      color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n@media (-ms-high-contrast: active) {\\n    .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-accent .mat-badge-content {\\n  background: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-warn .mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n.mat-badge {\\n  position: relative; }\\n.mat-badge-hidden .mat-badge-content {\\n  display: none; }\\n.mat-badge-disabled .mat-badge-content {\\n  background: #b9b9b9;\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-badge-content {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  transition: -webkit-transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\\n  -webkit-transform: scale(0.6);\\n          transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none; }\\n.mat-badge-content.mat-badge-active {\\n  -webkit-transform: none;\\n          transform: none; }\\n.mat-badge-small .mat-badge-content {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px; }\\n.mat-badge-small.mat-badge-above .mat-badge-content {\\n  top: -8px; }\\n.mat-badge-small.mat-badge-below .mat-badge-content {\\n  bottom: -8px; }\\n.mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -16px; }\\n.mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -16px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -8px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -8px; }\\n.mat-badge-medium .mat-badge-content {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px; }\\n.mat-badge-medium.mat-badge-above .mat-badge-content {\\n  top: -11px; }\\n.mat-badge-medium.mat-badge-below .mat-badge-content {\\n  bottom: -11px; }\\n.mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -22px; }\\n.mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -22px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -11px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -11px; }\\n.mat-badge-large .mat-badge-content {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px; }\\n.mat-badge-large.mat-badge-above .mat-badge-content {\\n  top: -14px; }\\n.mat-badge-large.mat-badge-below .mat-badge-content {\\n  bottom: -14px; }\\n.mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -28px; }\\n.mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -28px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -14px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -14px; }\\n.mat-bottom-sheet-container {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-button, .mat-icon-button, .mat-stroked-button {\\n  color: inherit;\\n  background: transparent; }\\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\\n    color: #f44336; }\\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\\n    color: #69f0ae; }\\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\\n    color: #f44336; }\\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\\n    background-color: #69f0ae; }\\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\\n    opacity: 0.1;\\n    background-color: currentColor; }\\n.mat-button-focus-overlay {\\n  background: black; }\\n.mat-stroked-button:not([disabled]) {\\n  border-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\\n  color: rgba(0, 0, 0, 0.87);\\n  background-color: white; }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    color: white; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    color: white; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\\n    background-color: rgba(0, 0, 0, 0.1); }\\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-stroked-button:not([class*='mat-elevation-z']), .mat-flat-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([class*='mat-elevation-z']), .mat-mini-fab:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([disabled]):active:not([class*='mat-elevation-z']), .mat-mini-fab:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-fab[disabled]:not([class*='mat-elevation-z']), .mat-mini-fab[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone,\\n.mat-button-toggle-group {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  box-shadow: none; }\\n.mat-button-toggle {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-button-toggle .mat-button-toggle-focus-overlay {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-appearance-standard {\\n  color: rgba(0, 0, 0, 0.87);\\n  background: white; }\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\\n    background-color: black; }\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12); }\\n[dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: none;\\n  border-top: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-checked {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-button-toggle-disabled {\\n  color: rgba(0, 0, 0, 0.26);\\n  background-color: #eeeeee; }\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\\n    background: white; }\\n.mat-button-toggle-disabled.mat-button-toggle-checked {\\n    background-color: #bdbdbd; }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  border: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-card {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-card:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card.mat-card-flat:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card-subtitle {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-frame {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-checkmark {\\n  fill: #fafafa; }\\n.mat-checkbox-checkmark-path {\\n  stroke: #fafafa !important; }\\n@media (-ms-high-contrast: black-on-white) {\\n    .mat-checkbox-checkmark-path {\\n      stroke: #000 !important; } }\\n.mat-checkbox-mixedmark {\\n  background-color: #fafafa; }\\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\\n  background-color: #69f0ae; }\\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #b0b0b0; }\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\\n  border-color: #b0b0b0; }\\n.mat-checkbox-disabled .mat-checkbox-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-disabled {\\n    opacity: 0.5; } }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-background {\\n    background: none; } }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\\n    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-disabled {\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip::after {\\n    background: black; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\\n  background-color: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\\n    background: rgba(0, 0, 0, 0.1); }\\n.mat-table {\\n  background: white; }\\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\\nmat-header-row, mat-row, mat-footer-row,\\n[mat-header-row], [mat-row], [mat-footer-row],\\n.mat-table-sticky {\\n  background: inherit; }\\nmat-row, mat-header-row, mat-footer-row,\\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\\n.mat-header-cell {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-cell, .mat-footer-cell {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-calendar-arrow {\\n  border-top-color: rgba(0, 0, 0, 0.54); }\\n.mat-datepicker-toggle,\\n.mat-datepicker-content .mat-calendar-next-button,\\n.mat-datepicker-content .mat-calendar-previous-button {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-table-header {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-table-header-divider::after {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-calendar-body-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-body-cell-content {\\n  color: rgba(0, 0, 0, 0.87);\\n  border-color: transparent; }\\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.18); }\\n.mat-calendar-body-selected {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\\n  background-color: rgba(244, 67, 54, 0.4); }\\n.mat-calendar-body-today.mat-calendar-body-selected {\\n  box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\\n    background-color: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(105, 240, 174, 0.4); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\\n    background-color: #f44336;\\n    color: white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(244, 67, 54, 0.4); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content-touch {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-datepicker-toggle-active {\\n  color: #f44336; }\\n.mat-datepicker-toggle-active.mat-accent {\\n    color: #69f0ae; }\\n.mat-datepicker-toggle-active.mat-warn {\\n    color: #f44336; }\\n.mat-dialog-container {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-divider-vertical {\\n  border-right-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-action-row {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-keyboard-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-program-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']):hover {\\n  background: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\\n.mat-expansion-panel-header:hover {\\n    background: white; } }\\n.mat-expansion-panel-header-title {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel-header-description,\\n.mat-expansion-indicator::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-expansion-panel-header[aria-disabled='true'] {\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\\n    color: inherit; }\\n.mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-hint {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-form-field.mat-focused .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\\n    color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\\n    color: #f44336; }\\n.mat-focused .mat-form-field-required-marker {\\n  color: #69f0ae; }\\n.mat-form-field-ripple {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\\n    background-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\\n  color: #69f0ae; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\\n    color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\\n  background-color: #f44336; }\\n.mat-error {\\n  color: #f44336; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-hint {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-standard .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-fill .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.02); }\\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\\n  background-color: transparent; }\\n.mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.12); }\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\\n  color: #69f0ae; }\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.06); }\\n.mat-icon.mat-primary {\\n  color: #f44336; }\\n.mat-icon.mat-accent {\\n  color: #69f0ae; }\\n.mat-icon.mat-warn {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-input-element:disabled,\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-input-element {\\n  caret-color: #f44336; }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-accent .mat-input-element {\\n  caret-color: #69f0ae; }\\n.mat-warn .mat-input-element,\\n.mat-form-field-invalid .mat-input-element {\\n  caret-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-list-base .mat-list-item {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-list-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-subheader {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-list-item-disabled {\\n  background-color: #eeeeee; }\\n.mat-list-option:hover, .mat-list-option:focus,\\n.mat-nav-list .mat-list-item:hover,\\n.mat-nav-list .mat-list-item:focus {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-menu-panel {\\n  background: white; }\\n.mat-menu-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-menu-item {\\n  background: transparent;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-menu-item .mat-icon-no-color,\\n.mat-menu-item-submenu-trigger::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-menu-item:hover:not([disabled]),\\n.mat-menu-item.cdk-program-focused:not([disabled]),\\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\\n.mat-menu-item-highlighted:not([disabled]) {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-paginator {\\n  background: white; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-paginator-decrement,\\n.mat-paginator-increment {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-paginator-first,\\n.mat-paginator-last {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-icon-button[disabled] .mat-paginator-decrement,\\n.mat-icon-button[disabled] .mat-paginator-increment,\\n.mat-icon-button[disabled] .mat-paginator-first,\\n.mat-icon-button[disabled] .mat-paginator-last {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\\n  fill: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\\n  background-color: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\\n  background-color: #69f0ae; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-spinner circle, .mat-spinner circle {\\n  stroke: #f44336; }\\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\\n  stroke: #69f0ae; }\\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\\n  stroke: #f44336; }\\n.mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #69f0ae; }\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\\n  background-color: #69f0ae; }\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button .mat-ripple-element {\\n  background-color: black; }\\n.mat-select-value {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-select-placeholder {\\n  color: rgba(0, 0, 0, 0.42); }\\n.mat-select-disabled .mat-select-value {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-select-panel {\\n  background: white; }\\n.mat-select-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\\n    background: rgba(0, 0, 0, 0.12); }\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\\n  color: #69f0ae; }\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-drawer-container {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer.mat-drawer-push {\\n    background-color: white; }\\n.mat-drawer:not(.mat-drawer-side) {\\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side {\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side.mat-drawer-end {\\n    border-left: solid 1px rgba(0, 0, 0, 0.12);\\n    border-right: none; }\\n[dir='rtl'] .mat-drawer-side {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\\n  border-right: none; }\\n[dir='rtl'] .mat-drawer-side.mat-drawer-end {\\n    border-left: none;\\n    border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-backdrop.mat-drawer-shown {\\n  background-color: rgba(0, 0, 0, 0.6); }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(105, 240, 174, 0.54); }\\n.mat-slide-toggle.mat-checked .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\\n  background-color: black; }\\n.mat-slide-toggle-thumb {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n  background-color: #fafafa; }\\n.mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-primary .mat-slider-track-fill,\\n.mat-primary .mat-slider-thumb,\\n.mat-primary .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-primary .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-accent .mat-slider-track-fill,\\n.mat-accent .mat-slider-thumb,\\n.mat-accent .mat-slider-thumb-label {\\n  background-color: #69f0ae; }\\n.mat-accent .mat-slider-thumb-label-text {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-warn .mat-slider-track-fill,\\n.mat-warn .mat-slider-thumb,\\n.mat-warn .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-warn .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-slider-focus-ring {\\n  background-color: rgba(105, 240, 174, 0.2); }\\n.mat-slider:hover .mat-slider-track-background,\\n.cdk-focused .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-disabled .mat-slider-track-background,\\n.mat-slider-disabled .mat-slider-track-fill,\\n.mat-slider-disabled .mat-slider-thumb {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-disabled:hover .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value .mat-slider-focus-ring {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26);\\n  background-color: transparent; }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-has-ticks .mat-slider-wrapper::after {\\n  border-color: rgba(0, 0, 0, 0.7); }\\n.mat-slider-horizontal .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-slider-vertical .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-step-header:hover {\\n    background: none; } }\\n.mat-step-header .mat-step-label,\\n.mat-step-header .mat-step-optional {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-step-header .mat-step-icon {\\n  background-color: rgba(0, 0, 0, 0.54);\\n  color: white; }\\n.mat-step-header .mat-step-icon-selected,\\n.mat-step-header .mat-step-icon-state-done,\\n.mat-step-header .mat-step-icon-state-edit {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-step-header .mat-step-icon-state-error {\\n  background-color: transparent;\\n  color: #f44336; }\\n.mat-step-header .mat-step-label.mat-step-label-active {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-step-header .mat-step-label.mat-step-label-error {\\n  color: #f44336; }\\n.mat-stepper-horizontal, .mat-stepper-vertical {\\n  background-color: white; }\\n.mat-stepper-vertical-line::before {\\n  border-left-color: rgba(0, 0, 0, 0.12); }\\n.mat-horizontal-stepper-header::before,\\n.mat-horizontal-stepper-header::after,\\n.mat-stepper-horizontal-line {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-sort-header-arrow {\\n  color: #757575; }\\n.mat-tab-nav-bar,\\n.mat-tab-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\\n.mat-tab-group-inverted-header .mat-tab-header {\\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\\n  border-bottom: none; }\\n.mat-tab-label, .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n.mat-tab-nav-bar[class*='mat-background-'] {\\n  border-bottom: none;\\n  border-top: none; }\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-warn {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n.mat-tooltip {\\n  background: rgba(97, 97, 97, 0.9); }\\n.mat-tree {\\n  background: white; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-snack-bar-container {\\n  color: rgba(255, 255, 255, 0.7);\\n  background: #323232;\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-simple-snackbar-action {\\n  color: #69f0ae; }\\nbody {\\n  margin: 0;\\n  font-family: Roboto; }\\n.warn {\\n  color: #ef9a9a; }\\n.error {\\n  color: #ff1744; }\\nmat-toolbar .mat-toolbar-layout mat-toolbar-row {\\n  flex-direction: column;\\n  align-content: flex-start;\\n  align-items: flex-start;\\n  min-height: 40px; }\\n.content {\\n  margin-top: 40px; }\\n#container {\\n  min-height: 100vh; }\\n#main {\\n  overflow: auto;\\n  margin: 8px;\\n  /* 164px = Height of toolbar (128) plus footer (20) + 2*margin */\\n  max-height: calc(100vh - 164px);\\n  max-width: calc(1000vw); }\\n#footer {\\n  background-color: #f44336;\\n  height: 20px; }\\n#githublogo {\\n  width: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, Inject, OnInit, Optional} from '@angular/core';\r\nimport {AppConfig, APP_CONFIG} from './app.config';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {SwUpdate} from '@angular/service-worker';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {UpdateAvailableEvent} from '@angular/service-worker/src/low_level';\r\nimport {UpdateAvailableComponent} from './update-available/update-available.component';\r\nimport {ICommitData} from './file-accessors/common/i-file-access-service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app works!';\r\n\r\n  constructor(\r\n    @Inject(APP_CONFIG) private appConfig: AppConfig,\r\n    private translatorService: TinyTranslatorService,\r\n    private router: Router,\r\n    @Optional() private swUpdate: SwUpdate,\r\n    private matSnackBar: MatSnackBar\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.swUpdate) {\r\n      this.swUpdate.available.subscribe((event: UpdateAvailableEvent) => {\r\n        console.log('[App] Update available: current version is ', event.current, ', available version is', event.available);\r\n        this.matSnackBar.openFromComponent(UpdateAvailableComponent, {duration: 3000});\r\n      });\r\n    }\r\n  }\r\n\r\n  buildtime() {\r\n    return this.appConfig.BUILDTIME;\r\n  }\r\n\r\n  buildversion() {\r\n    return this.appConfig.BUILDVERSION;\r\n  }\r\n\r\n  currentProjectName(): string {\r\n    const project = this.translatorService.currentProject();\r\n    return project ? project.name : '';\r\n  }\r\n\r\n  /**\r\n   * Download using Browser functionality..\r\n   */\r\n  download() {\r\n    this.translatorService.downloadProject(this.translatorService.currentProject());\r\n  }\r\n\r\n  /**\r\n   * Publish to the configured backend (Github, ...)\r\n   */\r\n  publish() {\r\n    this.router.navigateByUrl('publishproject');\r\n  }\r\n\r\n  publishEnabled(): boolean {\r\n    return this.translatorService.currentProject() && this.translatorService.currentProject().canPublish();\r\n  }\r\n  /**\r\n   * Auto translate all untranslated units.\r\n   * Redirects to a config page, if Google Translate is currently not available.\r\n   * Otherwise auto translates all untranslated units..\r\n   */\r\n  autoTranslate() {\r\n    this.translatorService.canAutoTranslate().subscribe((canTranslate: boolean) => {\r\n      if (canTranslate) {\r\n        this.translatorService.autoTranslate().subscribe((summary) => {\r\n          console.log('Summary: ', summary.content(), summary); // TODO show Toast or result page...\r\n          this.translatorService.currentProject().setAutoTranslateSummaryReport(summary);\r\n          this.router.navigateByUrl('autotranslatesummary');\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl('configureautotranslate');\r\n      }\r\n    });\r\n  }\r\n\r\n  configureAutoTranslate() {\r\n    this.router.navigateByUrl('configureautotranslate');\r\n  }\r\n\r\n  navigateToAutoTranslateSummary() {\r\n    this.router.navigateByUrl('autotranslatesummary');\r\n  }\r\n\r\n  configureGithub() {\r\n    this.router.navigateByUrl('configuregithub');\r\n  }\r\n\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\nimport {environment} from '../environments/environment';\r\n/**\r\n * Created by martin on 23.03.2017.\r\n * Configuration Data of the application.\r\n */\r\n\r\nexport class AppConfig {\r\n  // URL to Google translate API (optional)\r\n  GOOGLETRANSLATE_API_ROOT_URL?: string;\r\n  // Your API Key, should not be set here, because it is secret\r\n  // can be typed in in the application, but test config needs it\r\n  GOOGLETRANSLATE_API_KEY?: string;\r\n  // a setting for tests!!\r\n  // if set to true, all autotranslations containing placeholder or tags will FAIL BY DESIGN\r\n  // Used to allow testing of report page and filters for failed translations.\r\n  GOOGLETRANSLATE_PROVOKE_FAILURES?: boolean;\r\n  // URL to Github API (optional)\r\n  GITHUB_API_ROOT_URL?: string;\r\n  // Your API Key, should not be set here, because it is secret\r\n  // can be typed in in the application, but test config needs it\r\n  GITHUB_API_KEY?: string;\r\n  GITHUB_PROVOKE_FAILURES?: boolean;\r\n  BUILDVERSION: string;\r\n  BUILDTIME: string;\r\n}\r\n\r\nexport const APP_CONFIG_VALUE: AppConfig = {\r\n  // set values here\r\n  'BUILDVERSION': '0.14.0',\r\n  'BUILDTIME': '2018-12-02', // TODO should be dynamic\r\n  GOOGLETRANSLATE_API_ROOT_URL: 'https://translation.googleapis.com/',\r\n  GOOGLETRANSLATE_API_KEY: environment.googletranslate_api_key,\r\n  GOOGLETRANSLATE_PROVOKE_FAILURES: environment.googletranslate_provoke_failures,\r\n  GITHUB_API_ROOT_URL: 'https://api.github.com/',\r\n  GITHUB_API_KEY: environment.github_api_key,\r\n  GITHUB_PROVOKE_FAILURES: environment.github_provoke_failures,\r\n};\r\n\r\nexport let APP_CONFIG = new InjectionToken<AppConfig>('app.config');\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ServiceWorkerModule} from '@angular/service-worker';\r\nimport {environment} from '../environments/environment';\r\n\r\nimport {APP_CONFIG, APP_CONFIG_VALUE} from './app.config';\r\nimport {routing, appRoutingProviders} from './app.routing';\r\n\r\nimport 'hammerjs';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProjectStarterComponent } from './project-starter/project-starter.component';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport { TranslationFileStatusComponent } from './translation-file-status/translation-file-status.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { TranslatePageComponent } from './translate-page/translate-page.component';\r\nimport { TranslateUnitComponent } from './translate-unit/translate-unit.component';\r\nimport {DownloaderService} from './file-accessors/download-upload/downloader.service';\r\nimport { TranslateUnitListComponent } from './translate-unit-list/translate-unit-list.component';\r\nimport { AbbreviatePipe } from './common/abbreviate.pipe';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport {ActiveProjectGuard} from './active-project.guard';\r\nimport {BackendServiceAPI} from './model/backend-service-api';\r\nimport {BackendLocalStorageService} from './model/backend-local-storage.service';\r\nimport {AutoTranslateServiceAPI} from './model/auto-translate-service-api';\r\nimport {AutoTranslateGoogleService} from './model/auto-translate-google.service';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { ProjectListComponent } from './project-list/project-list.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { CreateProjectPageComponent } from './create-project-page/create-project-page.component';\r\nimport { ProjectStatusComponent } from './project-status/project-status.component';\r\nimport {AsynchronousFileReaderService} from './file-accessors/download-upload/asynchronous-file-reader.service';\r\nimport { NormalizedMessageInputComponent } from './normalized-message-input/normalized-message-input.component';\r\nimport {TranslateUnitWarningConfirmDialogComponent} from './translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component';\r\nimport {AppMaterialModule} from './app-material.module';\r\nimport { EditProjectPageComponent } from './edit-project-page/edit-project-page.component';\r\nimport { ProjectEditorComponent } from './project-editor/project-editor.component';\r\nimport { ConfigureAutoTranslatePageComponent } from './configure-auto-translate-page/configure-auto-translate-page.component';\r\nimport { AutoTranslateSummaryPageComponent } from './auto-translate-summary-page/auto-translate-summary-page.component';\r\nimport { TranslationUnitFilterService } from './model/filters/translation-unit-filter.service';\r\nimport { FilterStatusComponent } from './filter-status/filter-status.component';\r\nimport { FilterPageComponent } from './filter-page/filter-page.component';\r\nimport { UpdateAvailableComponent } from './update-available/update-available.component';\r\nimport {TranslationFileUploadComponent} from './file-accessors/download-upload/translation-file-upload/translation-file-upload.component';\r\nimport {DownloadUploadService} from './file-accessors/download-upload/download-upload.service';\r\nimport {TranslationFileFromGithubComponent} from './file-accessors/github/translation-file-from-github/translation-file-from-github.component';\r\nimport {GithubAccessorService} from './file-accessors/github/github-accessor.service';\r\nimport {GithubConfigEditorComponent} from './file-accessors/github/github-config-editor/github-config-editor.component';\r\nimport {ConfigureGithubPageComponent} from './file-accessors/github/configure-github-page/configure-github-page.component';\r\nimport {FileExplorerComponent} from './file-accessors/common/file-explorer/file-explorer.component';\r\nimport {FileExplorerDialogComponent} from './file-accessors/common/file-explorer-dialog/file-explorer-dialog.component';\r\nimport {PublishProjectPageComponent} from './publish-project-page/publish-project-page.component';\r\nimport {GithubConfigEditorDialogComponent} from './file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component';\r\nimport {ConfirmDialogComponent} from './confirm-dialog/confirm-dialog.component';\r\nimport {SaveAsExplorerComponent} from './file-accessors/common/save-as-explorer/save-as-explorer.component';\r\nimport {FileToSaveComponent} from './file-accessors/common/file-to-save/file-to-save.component';\r\nimport {SaveAsExplorerDialogComponent} from './file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AbbreviatePipe,\r\n    AppComponent,\r\n    AutoTranslateSummaryPageComponent,\r\n    ConfigureAutoTranslatePageComponent,\r\n    ConfigureGithubPageComponent,\r\n    ConfirmDialogComponent,\r\n    CreateProjectPageComponent,\r\n    EditProjectPageComponent,\r\n    FileToSaveComponent,\r\n    FileExplorerComponent,\r\n    FileExplorerDialogComponent,\r\n    FilterStatusComponent,\r\n    FilterPageComponent,\r\n    GithubConfigEditorComponent,\r\n    GithubConfigEditorDialogComponent,\r\n    HomePageComponent,\r\n    LanguageComponent,\r\n    NormalizedMessageInputComponent,\r\n    ProjectComponent,\r\n    ProjectEditorComponent,\r\n    ProjectListComponent,\r\n    ProjectStarterComponent,\r\n    ProjectStatusComponent,\r\n    PublishProjectPageComponent,\r\n    SaveAsExplorerComponent,\r\n    SaveAsExplorerDialogComponent,\r\n    TranslationFileStatusComponent,\r\n    TranslatePageComponent,\r\n    TranslateUnitComponent,\r\n    TranslateUnitListComponent,\r\n    TranslationFileUploadComponent,\r\n    TranslationFileFromGithubComponent,\r\n    TranslateUnitWarningConfirmDialogComponent,\r\n    UpdateAvailableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppMaterialModule,\r\n    routing,\r\n    ServiceWorkerModule.register(environment.base_href + 'ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    {provide: APP_CONFIG, useValue: APP_CONFIG_VALUE},\r\n    appRoutingProviders,\r\n    TinyTranslatorService,\r\n    AsynchronousFileReaderService,\r\n    DownloaderService,\r\n    DownloadUploadService,\r\n    GithubAccessorService,\r\n    ActiveProjectGuard,\r\n    {provide: BackendServiceAPI, useClass: BackendLocalStorageService},\r\n    {provide: AutoTranslateServiceAPI, useClass: AutoTranslateGoogleService},\r\n    TranslationUnitFilterService,\r\n  ],\r\n  entryComponents: [\r\n    ConfirmDialogComponent,\r\n    FileExplorerDialogComponent,\r\n    GithubConfigEditorDialogComponent,\r\n    SaveAsExplorerDialogComponent,\r\n    TranslateUnitWarningConfirmDialogComponent,\r\n    UpdateAvailableComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {ModuleWithProviders} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport {TranslatePageComponent} from './translate-page/translate-page.component';\r\nimport {FilterPageComponent} from './filter-page/filter-page.component';\r\nimport {ActiveProjectGuard} from './active-project.guard';\r\nimport {CreateProjectPageComponent} from './create-project-page/create-project-page.component';\r\nimport {EditProjectPageComponent} from './edit-project-page/edit-project-page.component';\r\nimport {AutoTranslateSummaryPageComponent} from './auto-translate-summary-page/auto-translate-summary-page.component';\r\nimport {ConfigureAutoTranslatePageComponent} from './configure-auto-translate-page/configure-auto-translate-page.component';\r\nimport {ConfigureGithubPageComponent} from './file-accessors/github/configure-github-page/configure-github-page.component';\r\nimport {PublishProjectPageComponent} from './publish-project-page/publish-project-page.component';\r\n\r\n/**\r\n * Created by martin on 23.03.2017.\r\n * Routing informations.\r\n */\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'home', component: HomePageComponent },\r\n  { path: 'createproject', component: CreateProjectPageComponent },\r\n  { path: 'editproject', component: EditProjectPageComponent, canActivate: [ActiveProjectGuard] },\r\n  { path: 'publishproject', component: PublishProjectPageComponent, canActivate: [ActiveProjectGuard]},\r\n  { path: 'translate', component: TranslatePageComponent, canActivate: [ActiveProjectGuard] },\r\n  { path: 'selectfilter', component: FilterPageComponent, canActivate: [ActiveProjectGuard] },\r\n  { path: 'autotranslatesummary', component: AutoTranslateSummaryPageComponent},\r\n  { path: 'configureautotranslate', component: ConfigureAutoTranslatePageComponent},\r\n  { path: 'configuregithub', component: ConfigureGithubPageComponent},\r\n  { path: '', redirectTo: '/translate', pathMatch: 'full' },\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [\r\n\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes, { useHash: true });\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dG8tdHJhbnNsYXRlLXN1bW1hcnktcGFnZS9hdXRvLXRyYW5zbGF0ZS1zdW1tYXJ5LXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3 i18n>Autotranslate Run Result</h3>\\r\\n<div *ngIf=\\\"!hasTranslateSummaryReport()\\\">\\r\\n  <p i18n>No Autotranslate run result available.</p>\\r\\n</div>\\r\\n<div *ngIf=\\\"hasTranslateSummaryReport()\\\">\\r\\n  <p>{{autoTranslateSummaryReport().content()}}</p>\\r\\n  <div *ngIf=\\\"ignoredResults().length > 0\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"50px\\\">\\r\\n      <h4 i18n>Ignored</h4>\\r\\n      <button fxFlexAlign=\\\"start\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"navigateToAutoTranslatedIgnored()\\\"\\r\\n              i18n matTooltip=\\\"show all untranslated that were ignored by auto translation\\\" i18n-matTooltip>navigate to ignored units</button>\\r\\n    </div>\\r\\n    <mat-list>\\r\\n      <mat-list-item *ngFor=\\\"let result of ignoredResults()\\\">\\r\\n        <h4 matLine>{{showTransUnitOfResult(result)}}</h4>\\r\\n        <p matLine>{{result.details()}}</p>\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"failedResults().length > 0\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"50px\\\">\\r\\n      <h4 i18n>Failed</h4>\\r\\n      <button fxFlexAlign=\\\"start\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"navigateToAutoTranslatedFailed()\\\"\\r\\n              i18n matTooltip=\\\"show all untranslated where auto translation failed\\\" i18n-matTooltip>navigate to failed units</button>\\r\\n    </div>\\r\\n    <mat-list>\\r\\n      <mat-list-item *ngFor=\\\"let result of failedResults()\\\">\\r\\n        <h4 matLine>{{showTransUnitOfResult(result)}}</h4>\\r\\n        <p matLine>{{result.details()}}</p>\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"50px\\\">\\r\\n    <button *ngIf=\\\"autoTranslateSummaryReport().success() > 0\\\"\\r\\n            fxFlexAlign=\\\"start\\\"\\r\\n            mat-raised-button color=\\\"accent\\\"\\r\\n            (click)=\\\"navigateToAutoTranslated()\\\"\\r\\n            i18n\\r\\n            matTooltip=\\\"show overview of auto translated units\\\" i18n-matTooltip>navigate to translated units</button>\\r\\n    <button\\r\\n            fxFlexAlign=\\\"start\\\"\\r\\n            mat-raised-button color=\\\"accent\\\"\\r\\n            (click)=\\\"navigateToContinueWork()\\\"\\r\\n            i18n\\r\\n            matTooltip=\\\"continue translation\\\" i18n-matTooltip>continue</button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {AutoTranslateSummaryReport} from '../model/auto-translate-summary-report';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationUnitFilterAll} from '../model/filters/translation-unit-filter-all';\r\nimport {TranslationUnitFilterAutoTranslated} from '../model/filters/translation-unit-filter-autotranslated';\r\nimport {AutoTranslateResult} from '../model/auto-translate-result';\r\nimport {TranslationUnitFilterAutoTranslatedFailed} from '../model/filters/translation-unit-filter-autotranslated-failed';\r\nimport {TranslationUnitFilterAutoTranslatedIgnored} from '../model/filters/translation-unit-filter-autotranslated-ignored';\r\nimport {\r\n  FILTER_AUTOTRANSLATED, FILTER_AUTOTRANSLATED_FAILED, FILTER_AUTOTRANSLATED_IGNORED,\r\n  TranslationUnitFilterService\r\n} from '../model/filters/translation-unit-filter.service';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\n\r\n@Component({\r\n  selector: 'app-auto-translate-summary-page',\r\n  templateUrl: './auto-translate-summary-page.component.html',\r\n  styleUrls: ['./auto-translate-summary-page.component.css']\r\n})\r\nexport class AutoTranslateSummaryPageComponent implements OnInit {\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  constructor(private translatorService: TinyTranslatorService,\r\n              private translationUnitFilterService: TranslationUnitFilterService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    const project = this.translatorService.currentProject();\r\n    if (project) {\r\n      this._autoTranslateSummaryReport = project.autoTranslateSummaryReport();\r\n    }\r\n    this.translationUnitFilterService.setAutotranslateSummaryReport(this._autoTranslateSummaryReport);\r\n  }\r\n\r\n  hasTranslateSummaryReport(): boolean {\r\n    return !isNullOrUndefined(this._autoTranslateSummaryReport);\r\n  }\r\n\r\n  autoTranslateSummaryReport() {\r\n    return this._autoTranslateSummaryReport;\r\n  }\r\n\r\n  ignoredResults(): AutoTranslateResult[] {\r\n    return (this._autoTranslateSummaryReport) ? this._autoTranslateSummaryReport.allResults().filter((result) => result.ignored()) : [];\r\n  }\r\n\r\n  failedResults(): AutoTranslateResult[] {\r\n    return (this._autoTranslateSummaryReport) ? this._autoTranslateSummaryReport.allResults().filter((result) => result.failed()) : [];\r\n  }\r\n\r\n  /**\r\n   * Show a brief overview of the transunit of the result.\r\n   * @param result\r\n   */\r\n  showTransUnitOfResult(result: AutoTranslateResult): string {\r\n    const tu: TranslationUnit = result.translationUnit();\r\n    if (tu) {\r\n      return tu.sourceContentNormalized().dislayText(true);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  navigateToAutoTranslated() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToAutoTranslatedFailed() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_FAILED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToAutoTranslatedIgnored() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_IGNORED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToContinueWork() {\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {isNullOrUndefined, isString} from '../common/util';\r\n\r\n/**\r\n * A Pipe to abbreviate long text.\r\n * The text is cut and .. is added at the end.\r\n * The length can be given as parameter.\r\n * Default is 20.\r\n * Examples:\r\n * 'abcdefghijklmnopqrstuvwxyz' | abbreviate -> 'abcdefghijklmnopqrst..'\r\n * 'abcdefghijklmnopqrstuvwxyz' | abbreviate:5 -> 'abcde..'\r\n */\r\n@Pipe({\r\n  name: 'abbreviate'\r\n})\r\nexport class AbbreviatePipe implements PipeTransform {\r\n\r\n  private DEFAULT_LENGTH = 20; // aabreviation length if not given as parameter\r\n\r\n  transform(value: string, lengthParam?: number): any {\r\n    const length = (!isNullOrUndefined(lengthParam))? lengthParam : this.DEFAULT_LENGTH;\r\n    if (isString(value)) {\r\n      if (value.length > length) {\r\n        return value.substring(0, length).concat('..');\r\n      } else {\r\n        return value;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n}\r\n","/**\r\n * Sammlung einfacher Hilfsfunktionen, die man ab und an mal braucht.\r\n */\r\n\r\n/**\r\n * Ersatz für deprecated node isNullOrUndefined-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isNullOrUndefined(value: any) {\r\n    return value === undefined || value === null;\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isString-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isString(value: any) {\r\n    return typeof value === 'string';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isBoolean-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isBoolean(value: any) {\r\n    return typeof value === 'boolean';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isNumber-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isNumber(value: any) {\r\n    return typeof value === 'number';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isArray-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isArray(value: any) {\r\n    return Array.isArray(value);\r\n}\r\n\r\n/**\r\n * Function to filter out duplicates.\r\n * Usage: anArray.filter( onlyUnique )\r\n * @param value\r\n * @param index\r\n * @param self\r\n * @return {boolean}\r\n */\r\nexport function onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n}\r\n\r\n/**\r\n * Liste als kommaseparierter String.\r\n * @param {string[]} list\r\n * @return {string}\r\n */\r\nexport function asCommaSeparatedList(list: string[]): string {\r\n    if (isNullOrUndefined(list)) {\r\n        return '';\r\n    }\r\n    let result = '';\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (i > 0) {\r\n            result = result + ',';\r\n        }\r\n        result = result + list[i];\r\n    }\r\n    return result;\r\n}\r\n","module.exports = \".reason {\\r\\n  font-family: \\\"Courier New\\\";\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29uZmlndXJlLWF1dG8tdHJhbnNsYXRlLXBhZ2UvY29uZmlndXJlLWF1dG8tdHJhbnNsYXRlLXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDJCQUEyQjtFQUMzQixrQkFBa0I7Q0FDbkI7O0FBRUQ7RUFDRSxhQUFhO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb25maWd1cmUtYXV0by10cmFuc2xhdGUtcGFnZS9jb25maWd1cmUtYXV0by10cmFuc2xhdGUtcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlYXNvbiB7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ291cmllciBOZXdcIjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICB3aWR0aDogMjAwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<h3 i18n>Google Translate status for current project</h3>\\r\\n<div *ngIf=\\\"autoTranslateDisabled()|async; else okBlock\\\">\\r\\n  <p><mat-icon color=\\\"primary\\\">error</mat-icon><span i18n>Google Translate is currently disabled due to the following reason:</span></p>\\r\\n  <p class=\\\"reason\\\">{{autoTranslateDisabledReason()|async}}</p>\\r\\n</div>\\r\\n<ng-template #okBlock>\\r\\n  <div>\\r\\n    <p><mat-icon>done</mat-icon><span i18n>Google Translate is ready to translate from {{sourceLanguage()}} to {{targetLanguage()}}</span></p>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<h3 i18n>Google Translate Settings</h3>\\r\\n<div class=\\\"info\\\">\\r\\n  <p i18n>To use Google Translate you need an account on <a href=\\\"https://cloud.google.com\\\">Google Cloud Platform</a>.</p>\\r\\n  <p i18n>Then you have to create an API Key.</p>\\r\\n  <p><span i18n>For details follow:</span> <a href=\\\"https://support.google.com/cloud/answer/6158862?hl=en\\\" target=\\\"_blank\\\">create an API key for your Google Cloud Platform Console project</a></p>\\r\\n</div>\\r\\n<form fxLayout=\\\"column\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"apiKey\\\" name=\\\"apiKey\\\" placeholder=\\\"API key\\\" i18n-placeholder\\r\\n    matTooltip=\\\"API Key will be stored in the local storage of your browser. It will not be sent to anywhere but the Google Translate Service.\\\" i18n-matTooltip>\\r\\n  </mat-form-field>\\r\\n  <button color=\\\"primary\\\" mat-raised-button i18n (click)=\\\"setApiKey()\\\"\\r\\n          matTooltip=\\\"API Key will be stored in the local storage of your browser. It will not be sent to anywhere but the Google Translate Service.\\\" i18n-matTooltip>\\r\\n    Store API Key\\r\\n  </button>\\r\\n</form>\\r\\n<h3 i18n>Google Translate Test</h3>\\r\\n<div *ngIf=\\\"autoTranslateDisabledTest()|async; else okBlockTest\\\">\\r\\n  <p><mat-icon color=\\\"primary\\\">error</mat-icon><span i18n>Google Translate cannot translate from {{sourceLanguageTest()}} to {{targetLanguageTest()}} due to the following reason:</span></p>\\r\\n  <p class=\\\"reason\\\">{{autoTranslateDisabledReasonTest()|async}}</p>\\r\\n</div>\\r\\n<ng-template #okBlockTest>\\r\\n  <div>\\r\\n    <p><mat-icon>done</mat-icon><span i18n>Google Translate is ready to translate from {{sourceLanguageTest()}} to {{targetLanguageTest()}}</span></p>\\r\\n    <p>{{testCallSourceResult}}</p>\\r\\n    <p>{{testCallTargetResult}}</p>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<form fxLayout=\\\"column\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"_sourceLanguageTest\\\" name=\\\"_sourceLanguageTest\\\" placeholder=\\\"Source language code\\\" i18n-placeholder>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input matInput [(ngModel)]=\\\"_targetLanguageTest\\\" name=\\\"_targetLanguageTest\\\" placeholder=\\\"Target language code\\\" i18n-placeholder>\\r\\n  </mat-form-field>\\r\\n  <button mat-raised-button color=\\\"accent\\\" i18n (click)=\\\"testCall()\\\"\\r\\n          matTooltip=\\\"Test a call\\\" i18n-matTooltip>\\r\\n    Test\\r\\n  </button>\\r\\n</form>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\nconst TEST_MESSAGE = 'Hello world!';\r\n\r\n@Component({\r\n  selector: 'app-configure-auto-translate-page',\r\n  templateUrl: './configure-auto-translate-page.component.html',\r\n  styleUrls: ['./configure-auto-translate-page.component.css']\r\n})\r\nexport class ConfigureAutoTranslatePageComponent implements OnInit {\r\n\r\n  apiKey: string; // connected to input field\r\n\r\n  _sourceLanguage: string;\r\n  _targetLanguage: string;\r\n  _sourceLanguageTest: string;\r\n  _targetLanguageTest: string;\r\n  testCallSourceResult: string;\r\n  testCallTargetResult: string;\r\n\r\n  constructor(private translatorService: TinyTranslatorService) {\r\n    if (this.translatorService.currentProject() && this.translatorService.currentProject().canTranslate()) {\r\n      this._sourceLanguage = this.translatorService.currentProject().translationFile.sourceLanguage();\r\n      this._targetLanguage = this.translatorService.currentProject().translationFile.targetLanguage();\r\n    }\r\n    this._sourceLanguageTest = 'en';\r\n    this._targetLanguageTest = 'de';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiKey = this.translatorService.autoTranslateApiKey();\r\n  }\r\n\r\n  autoTranslateDisabled(): Observable<boolean> {\r\n    return this.translatorService.canAutoTranslate().pipe(map((val) => !val));\r\n  }\r\n\r\n  autoTranslateDisabledReason(): Observable<string> {\r\n    return this.translatorService.autoTranslateDisabledReason();\r\n  }\r\n\r\n  sourceLanguage(): string {\r\n    return this._sourceLanguage;\r\n  }\r\n\r\n  targetLanguage(): string {\r\n    return this._targetLanguage;\r\n  }\r\n\r\n  autoTranslateDisabledTest(): Observable<boolean> {\r\n    return this.translatorService.canAutoTranslateForLanguages(this._sourceLanguageTest, this._targetLanguageTest).pipe(map((val) => !val));\r\n  }\r\n\r\n  autoTranslateDisabledReasonTest(): Observable<string> {\r\n    return this.translatorService.autoTranslateDisabledReasonForLanguages(this._sourceLanguageTest, this._targetLanguageTest);\r\n  }\r\n\r\n  sourceLanguageTest(): string {\r\n    return this._sourceLanguageTest;\r\n  }\r\n\r\n  targetLanguageTest(): string {\r\n    return this._targetLanguageTest;\r\n  }\r\n\r\n  setApiKey() {\r\n    this.translatorService.setAutoTranslateApiKey(this.apiKey);\r\n  }\r\n\r\n  testCall() {\r\n    this.testCallSourceResult = null;\r\n    this.testCallTargetResult = null;\r\n    if (this._sourceLanguageTest !== 'en') {\r\n      this.translatorService.testAutoTranslate(TEST_MESSAGE, 'en', this._sourceLanguageTest)\r\n        .subscribe((translationToSource) => {\r\n          this.testCallSourceResult = translationToSource;\r\n          this.translatorService.testAutoTranslate(translationToSource, this._sourceLanguageTest, this._targetLanguageTest)\r\n            .subscribe((translationToTarget) => {\r\n              this.testCallTargetResult = translationToTarget;\r\n            });\r\n        });\r\n    } else {\r\n      this.testCallSourceResult = TEST_MESSAGE;\r\n      this.translatorService.testAutoTranslate(this.testCallSourceResult, this._sourceLanguageTest, this._targetLanguageTest)\r\n        .subscribe((translationToTarget) => {\r\n          this.testCallTargetResult = translationToTarget;\r\n        });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpcm0tZGlhbG9nL2NvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3 matDialogTitle>{{question}}</h3>\\n<div mat-dialog-content>\\n  <p *ngIf=\\\"info\\\" class=\\\"info\\\">{{info}}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button color=\\\"primary\\\" matDialogClose (click)=\\\"cancel()\\\" i18n>Cancel</button>\\n  <button mat-button color=\\\"primary\\\" matDialogClose (click)=\\\"accept()\\\" i18n>Accept</button>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\nexport interface ConfirmDialogData {\n  question: string;\n  info: string;\n}\n\n/**\n * Dialog used to confirm simple questions.\n * There are 2 possible results:\n * false: User says no to the question.\n * true: User says yes.\n */\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  question: string;\n  info: string;\n\n  constructor(private dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) private data: ConfirmDialogData) { }\n\n  ngOnInit() {\n    this.question = this.data.question;\n    this.info = this.data.info;\n  }\n\n  accept() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1wcm9qZWN0LXBhZ2UvY3JlYXRlLXByb2plY3QtcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-project-starter (addProject)=\\\"addProject($event)\\\"></app-project-starter>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-project-page',\r\n  templateUrl: './create-project-page.component.html',\r\n  styleUrls: ['./create-project-page.component.css']\r\n})\r\nexport class CreateProjectPageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public addProject(newProject: TranslationProject) {\r\n      this.translatorService.addProject(newProject);\r\n      this.translatorService.setCurrentProject(newProject);\r\n      this.router.navigateByUrl('/translate');\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcHJvamVjdC1wYWdlL2VkaXQtcHJvamVjdC1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-project-editor [project]=\\\"currentProject()\\\" (onEditProject)=\\\"editProject($event)\\\"></app-project-editor>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n/**\r\n * Page to show and edit some properties of the current project.\r\n * (name, workflowType).-\r\n */\r\n@Component({\r\n  selector: 'app-edit-project-page',\r\n  templateUrl: './edit-project-page.component.html',\r\n  styleUrls: ['./edit-project-page.component.css']\r\n})\r\nexport class EditProjectPageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public editProject(newProject: TranslationProject) {\r\n    this.translatorService.setCurrentProject(newProject);\r\n    this.translatorService.commitChanges(newProject);\r\n    this.router.navigateByUrl('/translate');\r\n  }\r\n\r\n  public currentProject(): TranslationProject {\r\n    return this.translatorService.currentProject();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {DownloadUploadService} from '../download-upload/download-upload.service';\nimport {IFileAccessService} from './i-file-access-service';\nimport {FileAccessorType} from './file-accessor-type';\nimport {GithubAccessorService} from '../github/github-accessor.service';\n\n/**\n * This service returns a suitable service used to load and save a translation file.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileAccessServiceFactoryService {\n\n  constructor(\n      private downloadUploadService: DownloadUploadService,\n      private githubAccessorService: GithubAccessorService\n  ) { }\n\n  getFileAccessService(filetype: FileAccessorType): IFileAccessService {\n    switch (filetype) {\n      case FileAccessorType.DOWNLOAD_UPLOAD:\n        return this.downloadUploadService;\n      case FileAccessorType.GITHUB:\n        return this.githubAccessorService;\n      default:\n        throw new Error('Unknown file type ' + filetype);\n    }\n  }\n\n}\n","export enum FileAccessorType {\r\n    DOWNLOAD_UPLOAD = 'Browser Upload and Download',\r\n    GITHUB = 'Github'\r\n}\r\n","module.exports = \"<h1 mat-dialog-title i18n *ngIf=\\\"selectableFileType === 'file'\\\">Select a file</h1>\\n<h1 mat-dialog-title i18n *ngIf=\\\"selectableFileType === 'dir'\\\">Select a directory</h1>\\n<h1 mat-dialog-title i18n *ngIf=\\\"!selectableFileType\\\">Select a file or directory</h1>\\n<div mat-dialog-content id=\\\"content\\\">\\n  <ng-container *ngIf=\\\"root | async; let currentRoot; else loadingOrError\\\">\\n    <h2 mat-dialog-title>{{currentRoot?.configuration.label}}</h2>\\n    <app-file-explorer\\n            [configurations]=\\\"configurations\\\"\\n            [root]=\\\"currentRoot\\\"\\n            [file]=\\\"file\\\"\\n            [selectableFileType] = \\\"selectableFileType\\\"\\n            (selectedFile)=\\\"selectedFile($event)\\\" >\\n    </app-file-explorer>\\n  </ng-container>\\n  <ng-template #loadingOrError>\\n    <div *ngIf=\\\"errorLoading$ | async; let errorMessage; else loading\\\">\\n      <ng-container i18n>Error loading: {{errorMessage}}.</ng-container>\\n    </div>\\n    <ng-template #loading>\\n      <ng-container i18n>Loading ...</ng-container>\\n    </ng-template>\\n  </ng-template>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"cancel()\\\" i18n>Cancel</button>\\n  <button mat-button color=\\\"primary\\\" [disabled]=\\\"!isFileSelected()\\\" [mat-dialog-close]=\\\"result()\\\" cdkFocusInitial i18n>Ok</button>\\n</div>\\n\"","module.exports = \"#content {\\n  min-height: 65vh;\\n  min-width: 65vw; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmlsZS1hY2Nlc3NvcnMvY29tbW9uL2ZpbGUtZXhwbG9yZXItZGlhbG9nL1M6XFxleHBlcmltZW50ZVxcbmd4LWkxOG5zdXBwb3J0XFxwcm9qZWN0c1xcdGlueS10cmFuc2xhdG9yL3NyY1xcYXBwXFxmaWxlLWFjY2Vzc29yc1xcY29tbW9uXFxmaWxlLWV4cGxvcmVyLWRpYWxvZ1xcZmlsZS1leHBsb3Jlci1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFDaEIiLCJmaWxlIjoic3JjL2FwcC9maWxlLWFjY2Vzc29ycy9jb21tb24vZmlsZS1leHBsb3Jlci1kaWFsb2cvZmlsZS1leHBsb3Jlci1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGVudCB7XHJcbiAgbWluLWhlaWdodDogNjV2aDtcclxuICBtaW4td2lkdGg6IDY1dnc7XHJcbn1cclxuIl19 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {IFileDescription} from '../i-file-description';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {FileAccessServiceFactoryService} from '../file-access-service-factory.service';\nimport {catchError} from 'rxjs/operators';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\n\nexport interface FileExplorerDialogData {\n  configurations?: IFileAccessConfiguration[];\n  configuration?: IFileAccessConfiguration;\n  file?: IFileDescription;\n  selectableFileType?: 'file'|'dir';\n}\n\n/**\n * A dialog containing a file explorer.\n */\n@Component({\n  selector: 'app-file-explorer-dialog',\n  templateUrl: './file-explorer-dialog.component.html',\n  styleUrls: ['./file-explorer-dialog.component.scss']\n})\nexport class FileExplorerDialogComponent implements OnInit {\n\n  configurations?: IFileAccessConfiguration[];\n  configuration: IFileAccessConfiguration;\n  file: IFileDescription;\n  selectableFileType: 'file'|'dir';\n  root: Observable<IFileDescription>;\n  errorLoading$ = new Subject<string>();\n  _selectedFile: IFileDescription;\n\n  constructor(\n      private dialogRef: MatDialogRef<FileExplorerDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) data: FileExplorerDialogData,\n      private fileAccessServiceFactoryService: FileAccessServiceFactoryService) {\n    this.configurations = data.configurations;\n    this.configuration = data.configuration;\n    this.file = data.file;\n    this.selectableFileType = data.selectableFileType;\n    this._selectedFile = null;\n  }\n\n  ngOnInit() {\n    const accessService = this.fileAccessServiceFactoryService.getFileAccessService(this.configuration.type);\n    const rootDir = this.configuration.rootDescription();\n    this.root = accessService.load(rootDir).pipe(\n        catchError((error) => {\n          this.errorLoading$.next(error.message);\n          return of(undefined);\n        }));\n  }\n\n  selectedFile(file: IFileDescription) {\n    this._selectedFile = file;\n  }\n\n  isFileSelected(): boolean {\n    return !!this._selectedFile;\n  }\n\n  result() {\n    return this._selectedFile;\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\">\\n  <mat-form-field *ngIf=\\\"configurations\\\">\\n    <mat-label i18n>select a configuration..</mat-label>\\n    <mat-select placeholder=\\\"select a configuration..\\\" i18n-placeholder formControlName=\\\"selectedConfigurationIndex\\\" name=\\\"selectedConfigurationIndex\\\">\\n      <mat-option *ngFor=\\\"let accessor of configurations; let i = index\\\" [value]=\\\"i\\\" i18n>{{accessor.type}} {{accessor.shortLabel()}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-tree *ngIf=\\\"dataSource\\\" [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\" class=\\\"file-explorer-tree\\\">\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding\\n                   (click)=\\\"selected(node)\\\"\\n                   [ngClass]=\\\"{ 'background-highlight': activeNode === node }\\\">\\n      <button mat-icon-button disabled></button>\\n      {{node.item}}\\n    </mat-tree-node>\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding\\n                   (click)=\\\"selected(node)\\\"\\n                   [ngClass]=\\\"{ 'background-highlight': activeNode === node }\\\">\\n      <button mat-icon-button matTreeNodeToggle>\\n        <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n        </mat-icon>\\n      </button>\\n      <mat-icon *ngIf=\\\"node.maticon\\\">{{node.maticon}}</mat-icon>\\n      <img *ngIf=\\\"node.icon\\\" class=\\\"mat-icon\\\" src=\\\"../assets/{{node.icon}}\\\">\\n      {{node.item}}\\n      <mat-progress-bar *ngIf=\\\"node.isLoading\\\"\\n                        mode=\\\"indeterminate\\\"\\n                        class=\\\"tree-progress-bar\\\">\\n      </mat-progress-bar>\\n    </mat-tree-node>\\n  </mat-tree>\\n</form>\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n/* You can add global styles to this file, and also import other style files */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-badge-small .mat-badge-content{font-size:6px}\\n.mat-badge-large .mat-badge-content{font-size:24px}\\n.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h5,.mat-typography h5{font:400 11.62px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-h6,.mat-typography h6{font:400 9.38px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-body-2,.mat-body-strong{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}\\n.mat-caption,.mat-small{font:400 12px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 56px;letter-spacing:-.05em}\\n.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.02em}\\n.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.005em}\\n.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px}\\n.mat-bottom-sheet-container{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button,.mat-stroked-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-button-toggle{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card-title{font-size:24px;font-weight:500}\\n.mat-card-header .mat-card-title{font-size:20px}\\n.mat-card-content,.mat-card-subtitle{font-size:14px}\\n.mat-checkbox{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-checkbox-layout .mat-checkbox-label{line-height:24px}\\n.mat-chip{font-size:14px;font-weight:500}\\n.mat-chip .mat-chip-remove.mat-icon,.mat-chip .mat-chip-trailing-icon.mat-icon{font-size:18px}\\n.mat-table{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-header-cell{font-size:12px;font-weight:500}\\n.mat-cell,.mat-footer-cell{font-size:14px}\\n.mat-calendar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-calendar-body{font-size:13px}\\n.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}\\n.mat-calendar-table-header th{font-size:11px;font-weight:400}\\n.mat-dialog-title{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-expansion-panel-header{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:15px;font-weight:400}\\n.mat-expansion-panel-content{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field-wrapper{padding-bottom:1.34375em}\\n.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}\\n.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}\\n.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}\\n.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}\\n.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.34375em) scale(.75);transform:translateY(-1.34375em) scale(.75);width:133.33333%}\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.34374em) scale(.75);transform:translateY(-1.34374em) scale(.75);width:133.33334%}\\n.mat-form-field-label-wrapper{top:-.84375em;padding-top:.84375em}\\n.mat-form-field-label{top:1.34375em}\\n.mat-form-field-underline{bottom:1.34375em}\\n.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.66667em;top:calc(100% - 1.79167em)}\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);-ms-transform:translateY(-1.28125em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);-ms-transform:translateY(-1.28124em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);-ms-transform:translateY(-1.28123em) scale(.75);width:133.33335%}\\n.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.54167em;top:calc(100% - 1.66667em)}\\n@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28122em) scale(.75);transform:translateY(-1.28122em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28121em) scale(.75);transform:translateY(-1.28121em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.2812em) scale(.75);transform:translateY(-1.2812em) scale(.75)}}\\n.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em 0}\\n.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-.5em}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-.59375em) scale(.75);transform:translateY(-.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-.59374em) scale(.75);transform:translateY(-.59374em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0 1em 0}\\n.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-.25em}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.59375em) scale(.75);transform:translateY(-1.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.59374em) scale(.75);transform:translateY(-1.59374em) scale(.75);width:133.33334%}\\n.mat-grid-tile-footer,.mat-grid-tile-header{font-size:14px}\\n.mat-grid-tile-footer .mat-line,.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}\\ninput.mat-input-element{margin-top:-.0625em}\\n.mat-menu-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:400}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px}\\n.mat-radio-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select-trigger{height:1.125em}\\n.mat-slide-toggle-content{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-slider-thumb-label-text{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-stepper-horizontal,.mat-stepper-vertical{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-step-label{font-size:14px;font-weight:400}\\n.mat-step-sub-label-error{font-weight:400}\\n.mat-step-label-error{font-size:14px}\\n.mat-step-label-selected{font-size:14px;font-weight:500}\\n.mat-tab-group{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-tab-label,.mat-tab-link{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0}\\n.mat-tooltip{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}\\n.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}\\n.mat-list-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-base .mat-list-item{font-size:16px}\\n.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-list-option{font-size:16px}\\n.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-list-base[dense] .mat-list-item{font-size:12px}\\n.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-list-option{font-size:12px}\\n.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:16px}\\n.mat-optgroup-label{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-simple-snackbar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px}\\n.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}\\n.mat-tree{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-nested-tree-node,.mat-tree-node{font-weight:400;font-size:14px}\\n.mat-ripple{overflow:hidden;position:relative}\\n.mat-ripple.mat-ripple-unbounded{overflow:visible}\\n.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,-webkit-transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1),-webkit-transform 0s cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}\\n@media (-ms-high-contrast:active){.mat-ripple-element{display:none}}\\n.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none}\\n.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}\\n.cdk-overlay-container{position:fixed;z-index:1000}\\n.cdk-overlay-container:empty{display:none}\\n.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}\\n.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}\\n.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}\\n@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}\\n.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}\\n.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}\\n.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}\\n.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n@-webkit-keyframes cdk-text-field-autofill-start{/*!*/}\\n@keyframes cdk-text-field-autofill-start{/*!*/}\\n@-webkit-keyframes cdk-text-field-autofill-end{/*!*/}\\n@keyframes cdk-text-field-autofill-end{/*!*/}\\n.cdk-text-field-autofill-monitored:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start}\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}\\ntextarea.cdk-textarea-autosize{resize:none}\\ntextarea.cdk-textarea-autosize-measuring{height:auto!important;overflow:hidden!important;padding:2px 0!important;box-sizing:content-box!important}\\n.mat-ripple-element{background-color:rgba(0,0,0,.1)}\\n.mat-option{color:rgba(0,0,0,.87)}\\n.mat-option:focus:not(.mat-option-disabled),.mat-option:hover:not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}\\n.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:#3f51b5}\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled){color:#ff4081}\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled){color:#f44336}\\n.mat-optgroup-label{color:rgba(0,0,0,.54)}\\n.mat-optgroup-disabled .mat-optgroup-label{color:rgba(0,0,0,.38)}\\n.mat-pseudo-checkbox{color:rgba(0,0,0,.54)}\\n.mat-pseudo-checkbox::after{color:#fafafa}\\n.mat-accent .mat-pseudo-checkbox-checked,.mat-accent .mat-pseudo-checkbox-indeterminate,.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate{background:#ff4081}\\n.mat-primary .mat-pseudo-checkbox-checked,.mat-primary .mat-pseudo-checkbox-indeterminate{background:#3f51b5}\\n.mat-warn .mat-pseudo-checkbox-checked,.mat-warn .mat-pseudo-checkbox-indeterminate{background:#f44336}\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}\\n.mat-elevation-z0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-elevation-z1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}\\n.mat-elevation-z8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}\\n.mat-elevation-z24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}\\n.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-theme-loaded-marker{display:none}\\n.mat-autocomplete-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover){background:#fff}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled){color:rgba(0,0,0,.87)}\\n.mat-badge-content{color:#fff;background:#3f51b5}\\n@media (-ms-high-contrast:active){.mat-badge-content{outline:solid 1px;border-radius:0}}\\n.mat-badge-accent .mat-badge-content{background:#ff4081;color:#fff}\\n.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}\\n.mat-badge{position:relative}\\n.mat-badge-hidden .mat-badge-content{display:none}\\n.mat-badge-disabled .mat-badge-content{background:#b9b9b9;color:rgba(0,0,0,.38)}\\n.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out, -webkit-transform .2s ease-in-out;-webkit-transform:scale(.6);transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}\\n.mat-badge-content.mat-badge-active{-webkit-transform:none;transform:none}\\n.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}\\n.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}\\n.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}\\n.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}\\n.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}\\n.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}\\n.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}\\n.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}\\n.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}\\n.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}\\n.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}\\n.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}\\n.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}\\n.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}\\n.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}\\n.mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-button,.mat-icon-button,.mat-stroked-button{color:inherit;background:0 0}\\n.mat-button.mat-primary,.mat-icon-button.mat-primary,.mat-stroked-button.mat-primary{color:#3f51b5}\\n.mat-button.mat-accent,.mat-icon-button.mat-accent,.mat-stroked-button.mat-accent{color:#ff4081}\\n.mat-button.mat-warn,.mat-icon-button.mat-warn,.mat-stroked-button.mat-warn{color:#f44336}\\n.mat-button.mat-accent[disabled],.mat-button.mat-primary[disabled],.mat-button.mat-warn[disabled],.mat-button[disabled][disabled],.mat-icon-button.mat-accent[disabled],.mat-icon-button.mat-primary[disabled],.mat-icon-button.mat-warn[disabled],.mat-icon-button[disabled][disabled],.mat-stroked-button.mat-accent[disabled],.mat-stroked-button.mat-primary[disabled],.mat-stroked-button.mat-warn[disabled],.mat-stroked-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-button.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-stroked-button.mat-primary .mat-button-focus-overlay{background-color:#3f51b5}\\n.mat-button.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-stroked-button.mat-accent .mat-button-focus-overlay{background-color:#ff4081}\\n.mat-button.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-stroked-button.mat-warn .mat-button-focus-overlay{background-color:#f44336}\\n.mat-button[disabled] .mat-button-focus-overlay,.mat-icon-button[disabled] .mat-button-focus-overlay,.mat-stroked-button[disabled] .mat-button-focus-overlay{background-color:transparent}\\n.mat-button .mat-ripple-element,.mat-icon-button .mat-ripple-element,.mat-stroked-button .mat-ripple-element{opacity:.1;background-color:currentColor}\\n.mat-button-focus-overlay{background:#000}\\n.mat-stroked-button:not([disabled]){border-color:rgba(0,0,0,.12)}\\n.mat-fab,.mat-flat-button,.mat-mini-fab,.mat-raised-button{color:rgba(0,0,0,.87);background-color:#fff}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{color:#fff}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{color:#fff}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{color:#fff}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{background-color:#3f51b5}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{background-color:#ff4081}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{background-color:#f44336}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{background-color:rgba(0,0,0,.12)}\\n.mat-fab.mat-primary .mat-ripple-element,.mat-flat-button.mat-primary .mat-ripple-element,.mat-mini-fab.mat-primary .mat-ripple-element,.mat-raised-button.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-accent .mat-ripple-element,.mat-flat-button.mat-accent .mat-ripple-element,.mat-mini-fab.mat-accent .mat-ripple-element,.mat-raised-button.mat-accent .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-warn .mat-ripple-element,.mat-flat-button.mat-warn .mat-ripple-element,.mat-mini-fab.mat-warn .mat-ripple-element,.mat-raised-button.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-flat-button:not([class*=mat-elevation-z]),.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-raised-button[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-fab[disabled]:not([class*=mat-elevation-z]),.mat-mini-fab[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group,.mat-button-toggle-standalone{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{box-shadow:none}\\n.mat-button-toggle{color:rgba(0,0,0,.38)}\\n.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(0,0,0,.12)}\\n.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87);background:#fff}\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#000}\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px rgba(0,0,0,.12)}\\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-checked{background-color:#e0e0e0;color:rgba(0,0,0,.54)}\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87)}\\n.mat-button-toggle-disabled{color:rgba(0,0,0,.26);background-color:#eee}\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#fff}\\n.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{border:solid 1px rgba(0,0,0,.12)}\\n.mat-card{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-card:not([class*=mat-elevation-z]){box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-card-subtitle{color:rgba(0,0,0,.54)}\\n.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}\\n.mat-checkbox-checkmark{fill:#fafafa}\\n.mat-checkbox-checkmark-path{stroke:#fafafa!important}\\n@media (-ms-high-contrast:black-on-white){.mat-checkbox-checkmark-path{stroke:#000!important}}\\n.mat-checkbox-mixedmark{background-color:#fafafa}\\n.mat-checkbox-checked.mat-primary .mat-checkbox-background,.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background{background-color:#3f51b5}\\n.mat-checkbox-checked.mat-accent .mat-checkbox-background,.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#ff4081}\\n.mat-checkbox-checked.mat-warn .mat-checkbox-background,.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background{background-color:#f44336}\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}\\n.mat-checkbox-disabled .mat-checkbox-label{color:rgba(0,0,0,.54)}\\n@media (-ms-high-contrast:active){.mat-checkbox-disabled{opacity:.5}}\\n@media (-ms-high-contrast:active){.mat-checkbox-background{background:0 0}}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element{background-color:#3f51b5}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#ff4081}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element{background-color:#f44336}\\n.mat-chip.mat-standard-chip{background-color:#e0e0e0;color:rgba(0,0,0,.87)}\\n.mat-chip.mat-standard-chip .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover{opacity:.54}\\n.mat-chip.mat-standard-chip.mat-chip-disabled{opacity:.4}\\n.mat-chip.mat-standard-chip::after{background:#000}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#3f51b5;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn{background-color:#f44336;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent{background-color:#ff4081;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-table{background:#fff}\\n.mat-table tbody,.mat-table tfoot,.mat-table thead,.mat-table-sticky,[mat-footer-row],[mat-header-row],[mat-row],mat-footer-row,mat-header-row,mat-row{background:inherit}\\nmat-footer-row,mat-header-row,mat-row,td.mat-cell,td.mat-footer-cell,th.mat-header-cell{border-bottom-color:rgba(0,0,0,.12)}\\n.mat-header-cell{color:rgba(0,0,0,.54)}\\n.mat-cell,.mat-footer-cell{color:rgba(0,0,0,.87)}\\n.mat-calendar-arrow{border-top-color:rgba(0,0,0,.54)}\\n.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button,.mat-datepicker-toggle{color:rgba(0,0,0,.54)}\\n.mat-calendar-table-header{color:rgba(0,0,0,.38)}\\n.mat-calendar-table-header-divider::after{background:rgba(0,0,0,.12)}\\n.mat-calendar-body-label{color:rgba(0,0,0,.54)}\\n.mat-calendar-body-cell-content{color:rgba(0,0,0,.87);border-color:transparent}\\n.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){color:rgba(0,0,0,.38)}\\n.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:rgba(0,0,0,.04)}\\n.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.38)}\\n.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.18)}\\n.mat-calendar-body-selected{background-color:#3f51b5;color:#fff}\\n.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(63,81,181,.4)}\\n.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#ff4081;color:#fff}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(255,64,129,.4)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-datepicker-toggle-active{color:#3f51b5}\\n.mat-datepicker-toggle-active.mat-accent{color:#ff4081}\\n.mat-datepicker-toggle-active.mat-warn{color:#f44336}\\n.mat-dialog-container{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-divider{border-top-color:rgba(0,0,0,.12)}\\n.mat-divider-vertical{border-right-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-action-row{border-top-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#fff}}\\n.mat-expansion-panel-header-title{color:rgba(0,0,0,.87)}\\n.mat-expansion-indicator::after,.mat-expansion-panel-header-description{color:rgba(0,0,0,.54)}\\n.mat-expansion-panel-header[aria-disabled=true]{color:rgba(0,0,0,.26)}\\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title{color:inherit}\\n.mat-form-field-label{color:rgba(0,0,0,.6)}\\n.mat-hint{color:rgba(0,0,0,.6)}\\n.mat-form-field.mat-focused .mat-form-field-label{color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent{color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn{color:#f44336}\\n.mat-focused .mat-form-field-required-marker{color:#ff4081}\\n.mat-form-field-ripple{background-color:rgba(0,0,0,.87)}\\n.mat-form-field.mat-focused .mat-form-field-ripple{background-color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent{background-color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn{background-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after{color:#3f51b5}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after{color:#ff4081}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker,.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent{background-color:#f44336}\\n.mat-error{color:#f44336}\\n.mat-form-field-appearance-legacy .mat-form-field-label{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-hint{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-standard .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-fill .mat-form-field-flex{background-color:rgba(0,0,0,.04)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{background-color:rgba(0,0,0,.02)}\\n.mat-form-field-appearance-fill .mat-form-field-underline::before{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before{background-color:transparent}\\n.mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(0,0,0,.12)}\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:rgba(0,0,0,.87)}\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:#3f51b5}\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick{color:#ff4081}\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:rgba(0,0,0,.06)}\\n.mat-icon.mat-primary{color:#3f51b5}\\n.mat-icon.mat-accent{color:#ff4081}\\n.mat-icon.mat-warn{color:#f44336}\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after{color:rgba(0,0,0,.54)}\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after,.mat-input-element:disabled{color:rgba(0,0,0,.38)}\\n.mat-input-element{caret-color:#3f51b5}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-moz-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-accent .mat-input-element{caret-color:#ff4081}\\n.mat-form-field-invalid .mat-input-element,.mat-warn .mat-input-element{caret-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after{color:#f44336}\\n.mat-list-base .mat-list-item{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-list-option{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-subheader{color:rgba(0,0,0,.54)}\\n.mat-list-item-disabled{background-color:#eee}\\n.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover{background:rgba(0,0,0,.04)}\\n.mat-menu-panel{background:#fff}\\n.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-menu-item{background:0 0;color:rgba(0,0,0,.87)}\\n.mat-menu-item[disabled],.mat-menu-item[disabled]::after{color:rgba(0,0,0,.38)}\\n.mat-menu-item .mat-icon-no-color,.mat-menu-item-submenu-trigger::after{color:rgba(0,0,0,.54)}\\n.mat-menu-item-highlighted:not([disabled]),.mat-menu-item.cdk-keyboard-focused:not([disabled]),.mat-menu-item.cdk-program-focused:not([disabled]),.mat-menu-item:hover:not([disabled]){background:rgba(0,0,0,.04)}\\n.mat-paginator{background:#fff}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{color:rgba(0,0,0,.54)}\\n.mat-paginator-decrement,.mat-paginator-increment{border-top:2px solid rgba(0,0,0,.54);border-right:2px solid rgba(0,0,0,.54)}\\n.mat-paginator-first,.mat-paginator-last{border-top:2px solid rgba(0,0,0,.54)}\\n.mat-icon-button[disabled] .mat-paginator-decrement,.mat-icon-button[disabled] .mat-paginator-first,.mat-icon-button[disabled] .mat-paginator-increment,.mat-icon-button[disabled] .mat-paginator-last{border-color:rgba(0,0,0,.38)}\\n.mat-progress-bar-background{fill:#c5cae9}\\n.mat-progress-bar-buffer{background-color:#c5cae9}\\n.mat-progress-bar-fill::after{background-color:#3f51b5}\\n.mat-progress-bar.mat-accent .mat-progress-bar-background{fill:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#ff4081}\\n.mat-progress-bar.mat-warn .mat-progress-bar-background{fill:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#f44336}\\n.mat-progress-spinner circle,.mat-spinner circle{stroke:#3f51b5}\\n.mat-progress-spinner.mat-accent circle,.mat-spinner.mat-accent circle{stroke:#ff4081}\\n.mat-progress-spinner.mat-warn circle,.mat-spinner.mat-warn circle{stroke:#f44336}\\n.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle{border-color:#3f51b5}\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple{background-color:#3f51b5}\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#ff4081}\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple{background-color:#ff4081}\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle{border-color:#f44336}\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple{background-color:#f44336}\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle,.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle,.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element{background-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content{color:rgba(0,0,0,.38)}\\n.mat-radio-button .mat-ripple-element{background-color:#000}\\n.mat-select-value{color:rgba(0,0,0,.87)}\\n.mat-select-placeholder{color:rgba(0,0,0,.42)}\\n.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}\\n.mat-select-arrow{color:rgba(0,0,0,.54)}\\n.mat-select-panel{background:#fff}\\n.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple){background:rgba(0,0,0,.12)}\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow{color:#3f51b5}\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow{color:#ff4081}\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow{color:rgba(0,0,0,.38)}\\n.mat-drawer-container{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-drawer{background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-drawer.mat-drawer-push{background-color:#fff}\\n.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-drawer-side{border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(0,0,0,.6)}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background-color:#ff4081}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar{background-color:rgba(255,64,129,.54)}\\n.mat-slide-toggle.mat-checked .mat-ripple-element{background-color:#ff4081}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb{background-color:#3f51b5}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar{background-color:rgba(63,81,181,.54)}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element{background-color:#3f51b5}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb{background-color:#f44336}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar{background-color:rgba(244,67,54,.54)}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element{background-color:#f44336}\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:#000}\\n.mat-slide-toggle-thumb{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12);background-color:#fafafa}\\n.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}\\n.mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label,.mat-primary .mat-slider-track-fill{background-color:#3f51b5}\\n.mat-primary .mat-slider-thumb-label-text{color:#fff}\\n.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label,.mat-accent .mat-slider-track-fill{background-color:#ff4081}\\n.mat-accent .mat-slider-thumb-label-text{color:#fff}\\n.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label,.mat-warn .mat-slider-track-fill{background-color:#f44336}\\n.mat-warn .mat-slider-thumb-label-text{color:#fff}\\n.mat-slider-focus-ring{background-color:rgba(255,64,129,.2)}\\n.cdk-focused .mat-slider-track-background,.mat-slider:hover .mat-slider-track-background{background-color:rgba(0,0,0,.38)}\\n.mat-slider-disabled .mat-slider-thumb,.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill{background-color:rgba(0,0,0,.26)}\\n.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(0,0,0,.12)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:rgba(0,0,0,.87)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb{border-color:rgba(0,0,0,.38)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}\\n.mat-slider-has-ticks .mat-slider-wrapper::after{border-color:rgba(0,0,0,.7)}\\n.mat-slider-horizontal .mat-slider-ticks{background-image:repeating-linear-gradient(to right,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent);background-image:-moz-repeating-linear-gradient(.0001deg,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-slider-vertical .mat-slider-ticks{background-image:repeating-linear-gradient(to bottom,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover{background-color:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-step-header:hover{background:0 0}}\\n.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(0,0,0,.54)}\\n.mat-step-header .mat-step-icon{background-color:rgba(0,0,0,.54);color:#fff}\\n.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#3f51b5;color:#fff}\\n.mat-step-header .mat-step-icon-state-error{background-color:transparent;color:#f44336}\\n.mat-step-header .mat-step-label.mat-step-label-active{color:rgba(0,0,0,.87)}\\n.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}\\n.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#fff}\\n.mat-stepper-vertical-line::before{border-left-color:rgba(0,0,0,.12)}\\n.mat-horizontal-stepper-header::after,.mat-horizontal-stepper-header::before,.mat-stepper-horizontal-line{border-top-color:rgba(0,0,0,.12)}\\n.mat-sort-header-arrow{color:#757575}\\n.mat-tab-header,.mat-tab-nav-bar{border-bottom:1px solid rgba(0,0,0,.12)}\\n.mat-tab-group-inverted-header .mat-tab-header,.mat-tab-group-inverted-header .mat-tab-nav-bar{border-top:1px solid rgba(0,0,0,.12);border-bottom:none}\\n.mat-tab-label,.mat-tab-link{color:rgba(0,0,0,.87)}\\n.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.38)}\\n.mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.87)}\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.38)}\\n.mat-tab-group[class*=mat-background-] .mat-tab-header,.mat-tab-nav-bar[class*=mat-background-]{border-bottom:none;border-top:none}\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary .mat-ink-bar{background-color:#3f51b5}\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent .mat-ink-bar{background-color:#ff4081}\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn .mat-ink-bar{background-color:#f44336}\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-background-primary .mat-tab-header,.mat-tab-group.mat-background-primary .mat-tab-links,.mat-tab-nav-bar.mat-background-primary .mat-tab-header,.mat-tab-nav-bar.mat-background-primary .mat-tab-links{background-color:#3f51b5}\\n.mat-tab-group.mat-background-primary .mat-tab-label,.mat-tab-group.mat-background-primary .mat-tab-link,.mat-tab-nav-bar.mat-background-primary .mat-tab-label,.mat-tab-nav-bar.mat-background-primary .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-background-accent .mat-tab-header,.mat-tab-group.mat-background-accent .mat-tab-links,.mat-tab-nav-bar.mat-background-accent .mat-tab-header,.mat-tab-nav-bar.mat-background-accent .mat-tab-links{background-color:#ff4081}\\n.mat-tab-group.mat-background-accent .mat-tab-label,.mat-tab-group.mat-background-accent .mat-tab-link,.mat-tab-nav-bar.mat-background-accent .mat-tab-label,.mat-tab-nav-bar.mat-background-accent .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-background-warn .mat-tab-header,.mat-tab-group.mat-background-warn .mat-tab-links,.mat-tab-nav-bar.mat-background-warn .mat-tab-header,.mat-tab-nav-bar.mat-background-warn .mat-tab-links{background-color:#f44336}\\n.mat-tab-group.mat-background-warn .mat-tab-label,.mat-tab-group.mat-background-warn .mat-tab-link,.mat-tab-nav-bar.mat-background-warn .mat-tab-label,.mat-tab-nav-bar.mat-background-warn .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}\\n.mat-toolbar.mat-primary{background:#3f51b5;color:#fff}\\n.mat-toolbar.mat-accent{background:#ff4081;color:#fff}\\n.mat-toolbar.mat-warn{background:#f44336;color:#fff}\\n.mat-toolbar .mat-focused .mat-form-field-ripple,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-form-field-underline{background-color:currentColor}\\n.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-select-value{color:inherit}\\n.mat-toolbar .mat-input-element{caret-color:currentColor}\\n.mat-tooltip{background:rgba(97,97,97,.9)}\\n.mat-tree{background:#fff}\\n.mat-nested-tree-node,.mat-tree-node{color:rgba(0,0,0,.87)}\\n.mat-snack-bar-container{color:rgba(255,255,255,.7);background:#323232;box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-simple-snackbar-action{color:#ff4081}\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 500; }\\n.mat-card-header .mat-card-title {\\n  font-size: 20px; }\\n.mat-card-subtitle,\\n.mat-card-content {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n@media print {\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n    -webkit-transform: translateY(-1.28122em) scale(0.75);\\n            transform: translateY(-1.28122em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.28121em) scale(0.75);\\n            transform: translateY(-1.28121em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.2812em) scale(0.75);\\n            transform: translateY(-1.2812em) scale(0.75); } }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-sub-label-error {\\n  font-weight: normal; }\\n.mat-step-label-error {\\n  font-size: 14px; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 8px;\\n  padding-bottom: 8px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-base .mat-list-item {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-list-option {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list-base[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden;\\n  position: relative; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.32); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-active {\\n    background: rgba(0, 0, 0, 0.04);\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-option.mat-option-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #69f0ae; }\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-optgroup-disabled .mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-pseudo-checkbox {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-pseudo-checkbox::after {\\n    color: #fafafa; }\\n.mat-pseudo-checkbox-checked,\\n.mat-pseudo-checkbox-indeterminate,\\n.mat-accent .mat-pseudo-checkbox-checked,\\n.mat-accent .mat-pseudo-checkbox-indeterminate {\\n  background: #69f0ae; }\\n.mat-primary .mat-pseudo-checkbox-checked,\\n.mat-primary .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-warn .mat-pseudo-checkbox-checked,\\n.mat-warn .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\\n  background: #b0b0b0; }\\n.mat-elevation-z0 {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z1 {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z2 {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z3 {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z4 {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z5 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z6 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z7 {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z8 {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z9 {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z10 {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z11 {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z12 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z13 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z14 {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z15 {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z16 {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z17 {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z18 {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z19 {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z20 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z21 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z22 {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z23 {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z24 {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n.mat-app-background {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-theme-loaded-marker {\\n  display: none; }\\n.mat-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-autocomplete-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n    background: white; }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n      color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n@media (-ms-high-contrast: active) {\\n    .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-accent .mat-badge-content {\\n  background: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-warn .mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n.mat-badge {\\n  position: relative; }\\n.mat-badge-hidden .mat-badge-content {\\n  display: none; }\\n.mat-badge-disabled .mat-badge-content {\\n  background: #b9b9b9;\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-badge-content {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  transition: -webkit-transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\\n  -webkit-transform: scale(0.6);\\n          transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none; }\\n.mat-badge-content.mat-badge-active {\\n  -webkit-transform: none;\\n          transform: none; }\\n.mat-badge-small .mat-badge-content {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px; }\\n.mat-badge-small.mat-badge-above .mat-badge-content {\\n  top: -8px; }\\n.mat-badge-small.mat-badge-below .mat-badge-content {\\n  bottom: -8px; }\\n.mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -16px; }\\n.mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -16px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -8px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -8px; }\\n.mat-badge-medium .mat-badge-content {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px; }\\n.mat-badge-medium.mat-badge-above .mat-badge-content {\\n  top: -11px; }\\n.mat-badge-medium.mat-badge-below .mat-badge-content {\\n  bottom: -11px; }\\n.mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -22px; }\\n.mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -22px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -11px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -11px; }\\n.mat-badge-large .mat-badge-content {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px; }\\n.mat-badge-large.mat-badge-above .mat-badge-content {\\n  top: -14px; }\\n.mat-badge-large.mat-badge-below .mat-badge-content {\\n  bottom: -14px; }\\n.mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -28px; }\\n.mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -28px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -14px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -14px; }\\n.mat-bottom-sheet-container {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-button, .mat-icon-button, .mat-stroked-button {\\n  color: inherit;\\n  background: transparent; }\\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\\n    color: #f44336; }\\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\\n    color: #69f0ae; }\\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\\n    color: #f44336; }\\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\\n    background-color: #69f0ae; }\\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\\n    opacity: 0.1;\\n    background-color: currentColor; }\\n.mat-button-focus-overlay {\\n  background: black; }\\n.mat-stroked-button:not([disabled]) {\\n  border-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\\n  color: rgba(0, 0, 0, 0.87);\\n  background-color: white; }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    color: white; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    color: white; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\\n    background-color: rgba(0, 0, 0, 0.1); }\\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-stroked-button:not([class*='mat-elevation-z']), .mat-flat-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([class*='mat-elevation-z']), .mat-mini-fab:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([disabled]):active:not([class*='mat-elevation-z']), .mat-mini-fab:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-fab[disabled]:not([class*='mat-elevation-z']), .mat-mini-fab[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone,\\n.mat-button-toggle-group {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  box-shadow: none; }\\n.mat-button-toggle {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-button-toggle .mat-button-toggle-focus-overlay {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-appearance-standard {\\n  color: rgba(0, 0, 0, 0.87);\\n  background: white; }\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\\n    background-color: black; }\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12); }\\n[dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: none;\\n  border-top: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-checked {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-button-toggle-disabled {\\n  color: rgba(0, 0, 0, 0.26);\\n  background-color: #eeeeee; }\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\\n    background: white; }\\n.mat-button-toggle-disabled.mat-button-toggle-checked {\\n    background-color: #bdbdbd; }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  border: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-card {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-card:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card.mat-card-flat:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card-subtitle {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-frame {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-checkmark {\\n  fill: #fafafa; }\\n.mat-checkbox-checkmark-path {\\n  stroke: #fafafa !important; }\\n@media (-ms-high-contrast: black-on-white) {\\n    .mat-checkbox-checkmark-path {\\n      stroke: #000 !important; } }\\n.mat-checkbox-mixedmark {\\n  background-color: #fafafa; }\\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\\n  background-color: #69f0ae; }\\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #b0b0b0; }\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\\n  border-color: #b0b0b0; }\\n.mat-checkbox-disabled .mat-checkbox-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-disabled {\\n    opacity: 0.5; } }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-background {\\n    background: none; } }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\\n    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-disabled {\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip::after {\\n    background: black; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\\n  background-color: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\\n    background: rgba(0, 0, 0, 0.1); }\\n.mat-table {\\n  background: white; }\\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\\nmat-header-row, mat-row, mat-footer-row,\\n[mat-header-row], [mat-row], [mat-footer-row],\\n.mat-table-sticky {\\n  background: inherit; }\\nmat-row, mat-header-row, mat-footer-row,\\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\\n.mat-header-cell {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-cell, .mat-footer-cell {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-calendar-arrow {\\n  border-top-color: rgba(0, 0, 0, 0.54); }\\n.mat-datepicker-toggle,\\n.mat-datepicker-content .mat-calendar-next-button,\\n.mat-datepicker-content .mat-calendar-previous-button {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-table-header {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-table-header-divider::after {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-calendar-body-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-body-cell-content {\\n  color: rgba(0, 0, 0, 0.87);\\n  border-color: transparent; }\\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.18); }\\n.mat-calendar-body-selected {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\\n  background-color: rgba(244, 67, 54, 0.4); }\\n.mat-calendar-body-today.mat-calendar-body-selected {\\n  box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\\n    background-color: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(105, 240, 174, 0.4); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\\n    background-color: #f44336;\\n    color: white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(244, 67, 54, 0.4); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content-touch {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-datepicker-toggle-active {\\n  color: #f44336; }\\n.mat-datepicker-toggle-active.mat-accent {\\n    color: #69f0ae; }\\n.mat-datepicker-toggle-active.mat-warn {\\n    color: #f44336; }\\n.mat-dialog-container {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-divider-vertical {\\n  border-right-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-action-row {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-keyboard-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-program-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']):hover {\\n  background: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\\n.mat-expansion-panel-header:hover {\\n    background: white; } }\\n.mat-expansion-panel-header-title {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel-header-description,\\n.mat-expansion-indicator::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-expansion-panel-header[aria-disabled='true'] {\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\\n    color: inherit; }\\n.mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-hint {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-form-field.mat-focused .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\\n    color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\\n    color: #f44336; }\\n.mat-focused .mat-form-field-required-marker {\\n  color: #69f0ae; }\\n.mat-form-field-ripple {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\\n    background-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\\n  color: #69f0ae; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\\n    color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\\n  background-color: #f44336; }\\n.mat-error {\\n  color: #f44336; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-hint {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-standard .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-fill .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.02); }\\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\\n  background-color: transparent; }\\n.mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.12); }\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\\n  color: #69f0ae; }\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.06); }\\n.mat-icon.mat-primary {\\n  color: #f44336; }\\n.mat-icon.mat-accent {\\n  color: #69f0ae; }\\n.mat-icon.mat-warn {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-input-element:disabled,\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-input-element {\\n  caret-color: #f44336; }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-accent .mat-input-element {\\n  caret-color: #69f0ae; }\\n.mat-warn .mat-input-element,\\n.mat-form-field-invalid .mat-input-element {\\n  caret-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-list-base .mat-list-item {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-list-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-subheader {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-list-item-disabled {\\n  background-color: #eeeeee; }\\n.mat-list-option:hover, .mat-list-option:focus,\\n.mat-nav-list .mat-list-item:hover,\\n.mat-nav-list .mat-list-item:focus {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-menu-panel {\\n  background: white; }\\n.mat-menu-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-menu-item {\\n  background: transparent;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-menu-item .mat-icon-no-color,\\n.mat-menu-item-submenu-trigger::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-menu-item:hover:not([disabled]),\\n.mat-menu-item.cdk-program-focused:not([disabled]),\\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\\n.mat-menu-item-highlighted:not([disabled]) {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-paginator {\\n  background: white; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-paginator-decrement,\\n.mat-paginator-increment {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-paginator-first,\\n.mat-paginator-last {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-icon-button[disabled] .mat-paginator-decrement,\\n.mat-icon-button[disabled] .mat-paginator-increment,\\n.mat-icon-button[disabled] .mat-paginator-first,\\n.mat-icon-button[disabled] .mat-paginator-last {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\\n  fill: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\\n  background-color: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\\n  background-color: #69f0ae; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-spinner circle, .mat-spinner circle {\\n  stroke: #f44336; }\\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\\n  stroke: #69f0ae; }\\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\\n  stroke: #f44336; }\\n.mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #69f0ae; }\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\\n  background-color: #69f0ae; }\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button .mat-ripple-element {\\n  background-color: black; }\\n.mat-select-value {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-select-placeholder {\\n  color: rgba(0, 0, 0, 0.42); }\\n.mat-select-disabled .mat-select-value {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-select-panel {\\n  background: white; }\\n.mat-select-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\\n    background: rgba(0, 0, 0, 0.12); }\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\\n  color: #69f0ae; }\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-drawer-container {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer.mat-drawer-push {\\n    background-color: white; }\\n.mat-drawer:not(.mat-drawer-side) {\\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side {\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side.mat-drawer-end {\\n    border-left: solid 1px rgba(0, 0, 0, 0.12);\\n    border-right: none; }\\n[dir='rtl'] .mat-drawer-side {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\\n  border-right: none; }\\n[dir='rtl'] .mat-drawer-side.mat-drawer-end {\\n    border-left: none;\\n    border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-backdrop.mat-drawer-shown {\\n  background-color: rgba(0, 0, 0, 0.6); }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(105, 240, 174, 0.54); }\\n.mat-slide-toggle.mat-checked .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\\n  background-color: black; }\\n.mat-slide-toggle-thumb {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n  background-color: #fafafa; }\\n.mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-primary .mat-slider-track-fill,\\n.mat-primary .mat-slider-thumb,\\n.mat-primary .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-primary .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-accent .mat-slider-track-fill,\\n.mat-accent .mat-slider-thumb,\\n.mat-accent .mat-slider-thumb-label {\\n  background-color: #69f0ae; }\\n.mat-accent .mat-slider-thumb-label-text {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-warn .mat-slider-track-fill,\\n.mat-warn .mat-slider-thumb,\\n.mat-warn .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-warn .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-slider-focus-ring {\\n  background-color: rgba(105, 240, 174, 0.2); }\\n.mat-slider:hover .mat-slider-track-background,\\n.cdk-focused .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-disabled .mat-slider-track-background,\\n.mat-slider-disabled .mat-slider-track-fill,\\n.mat-slider-disabled .mat-slider-thumb {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-disabled:hover .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value .mat-slider-focus-ring {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26);\\n  background-color: transparent; }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-has-ticks .mat-slider-wrapper::after {\\n  border-color: rgba(0, 0, 0, 0.7); }\\n.mat-slider-horizontal .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-slider-vertical .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-step-header:hover {\\n    background: none; } }\\n.mat-step-header .mat-step-label,\\n.mat-step-header .mat-step-optional {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-step-header .mat-step-icon {\\n  background-color: rgba(0, 0, 0, 0.54);\\n  color: white; }\\n.mat-step-header .mat-step-icon-selected,\\n.mat-step-header .mat-step-icon-state-done,\\n.mat-step-header .mat-step-icon-state-edit {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-step-header .mat-step-icon-state-error {\\n  background-color: transparent;\\n  color: #f44336; }\\n.mat-step-header .mat-step-label.mat-step-label-active {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-step-header .mat-step-label.mat-step-label-error {\\n  color: #f44336; }\\n.mat-stepper-horizontal, .mat-stepper-vertical {\\n  background-color: white; }\\n.mat-stepper-vertical-line::before {\\n  border-left-color: rgba(0, 0, 0, 0.12); }\\n.mat-horizontal-stepper-header::before,\\n.mat-horizontal-stepper-header::after,\\n.mat-stepper-horizontal-line {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-sort-header-arrow {\\n  color: #757575; }\\n.mat-tab-nav-bar,\\n.mat-tab-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\\n.mat-tab-group-inverted-header .mat-tab-header {\\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\\n  border-bottom: none; }\\n.mat-tab-label, .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n.mat-tab-nav-bar[class*='mat-background-'] {\\n  border-bottom: none;\\n  border-top: none; }\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-warn {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n.mat-tooltip {\\n  background: rgba(97, 97, 97, 0.9); }\\n.mat-tree {\\n  background: white; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-snack-bar-container {\\n  color: rgba(255, 255, 255, 0.7);\\n  background: #323232;\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-simple-snackbar-action {\\n  color: #69f0ae; }\\nbody {\\n  margin: 0;\\n  font-family: Roboto; }\\n.warn {\\n  color: #ef9a9a; }\\n.error {\\n  color: #ff1744; }\\nform {\\n  max-height: 50vh;\\n  overflow: auto; }\\n.background-highlight {\\n  background-color: #69f0ae; }\\ntree-progress-bar {\\n  margin-left: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {IFileDescription} from '../i-file-description';\nimport {BehaviorSubject, EMPTY, merge, Observable, of} from 'rxjs';\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\nimport {expand, last, map, } from 'rxjs/operators';\nimport {IFileAccessService} from '../i-file-access-service';\nimport {FileAccessServiceFactoryService} from '../file-access-service-factory.service';\nimport {isNullOrUndefined} from '../../../common/util';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n/** Flat node with expandable and level information */\nclass DynamicFlatNode {\n\n  item: string;\n  maticon?: string;\n  icon?: string;\n\n  constructor(public node: IFileDescription, public level = 1, public expandable = false,\n              public isLoading = false) {\n    if (level === 0) {\n      const configLabel = node.configuration.fullLabel();\n      this.item = configLabel.label;\n      this.maticon = configLabel.maticon;\n      this.icon = configLabel.icon;\n    } else {\n      this.item = node.name;\n    }\n  }\n}\n\n/**\n * Database for dynamic file accesss data. When expanding a node in the tree, the data source will need to fetch\n * the descendants data from the service.\n */\nclass FileData {\n\n  private rootLevelNodes: IFileDescription[];\n\n  constructor(root: IFileDescription, private accessService: IFileAccessService, private onlyDirectories: boolean) {\n    this.rootLevelNodes = [root];\n  }\n\n  /** Initial data from database */\n  initialData(): DynamicFlatNode[] {\n    return this.rootLevelNodes.map(dir => new DynamicFlatNode(dir, 0, true));\n  }\n\n  getChildren(node: IFileDescription): Observable<IFileDescription[] | undefined> {\n    if (node.type === 'file') {\n      return of(undefined);\n    } else {\n      const children = node.children;\n      if (isNullOrUndefined(children)) {\n        return this.accessService.load(node).pipe(\n            map((result: IFileDescription) => {\n                return result.children.filter(fd => !this.onlyDirectories || fd.type === 'dir');\n            })\n        );\n      } else {\n        return of(children.filter(fd => !this.onlyDirectories || fd.type === 'dir'));\n      }\n    }\n  }\n\n  isExpandable(node: IFileDescription): boolean {\n    return node.type === 'dir';\n  }\n}\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\nclass DynamicFileDataSource {\n\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\n              private database: FileData) {}\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this.treeControl.expansionModel.changed.subscribe(change => {\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\n          (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: DynamicFlatNode, expandNode: boolean) {\n    const children = this.database.getChildren(node.node);\n    const index = this.data.indexOf(node);\n    if (index < 0) { // If cannot find the node, no op\n      return;\n    }\n\n    node.isLoading = true;\n    children.subscribe(childrenDescr => {\n      if (expandNode) {\n        const nodes = childrenDescr.map(filedescr =>\n            new DynamicFlatNode(filedescr, node.level + 1, this.database.isExpandable(filedescr)));\n        this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n        && this.data[i].level > node.level; i++, count++) {}\n        this.data.splice(index + 1, count);\n      }\n\n      // notify the change\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }, (error) => {\n      console.log('error loading children', error); // TODO\n      node.isLoading = false;\n    });\n  }\n\n  /**\n   * Open the tree up to the given node.\n   * @param node node to be visible\n   * @param callBack called when node is contained in the tree.\n   */\n  openNode(node: IFileDescription, callBack: (node: DynamicFlatNode) => void) {\n    const start: {data: DynamicFlatNode[], index: number, path: string, pathIndex: number}\n      = {data: this.data, index: 0, path: node.path, pathIndex: 0};\n    of(start).pipe(\n      expand(current => {\n        if (current.index < 0 || current.pathIndex < 0) {\n          return EMPTY;\n        } else {\n          return this.openSubdir(current);\n        }\n      }),\n      last()\n    ).subscribe(current => {\n      this.dataChange.next(current.data);\n      if (current.index >= 0) {\n        callBack(current.data[current.index]);\n      }\n    });\n  }\n\n  openSubdir(current: {data: DynamicFlatNode[], index: number, path: string, pathIndex: number})\n    : Observable<{data: DynamicFlatNode[], index: number, path: string, pathIndex: number}> {\n    if (current.index < 0 || current.pathIndex < 0) {\n      return of(current);\n    }\n    const nodeToExpand = current.data[current.index];\n    const pathParts = (current.path) ? current.path.split('/') : [];\n    if (!nodeToExpand || current.pathIndex >= pathParts.length) {\n      return of({data: current.data, index: current.index, path: current.path, pathIndex: -1});\n    }\n    const dirNameToOpen = pathParts[current.pathIndex];\n    return this.database.getChildren(nodeToExpand.node).pipe(\n      map((childrenDescr: IFileDescription[]) => {\n        const nodes = childrenDescr.map(filedescr =>\n          new DynamicFlatNode(filedescr, nodeToExpand.level + 1, this.database.isExpandable(filedescr)));\n        const newData = current.data.slice();\n        newData.splice(current.index + 1, 0, ...nodes);\n        const indexInNewNodes = nodes.findIndex((node) => node.node.name === dirNameToOpen);\n        if (indexInNewNodes < 0) {\n          return {data: current.data, index: -1, path: current.path, pathIndex: current.pathIndex};\n        } else {\n          const newIndex = current.index + 1 + indexInNewNodes;\n          return {\n            data: newData,\n            index: newIndex,\n            path: current.path,\n            pathIndex: current.pathIndex + 1\n          };\n        }\n      })\n    );\n  }\n}\n\n@Component({\n  selector: 'app-file-explorer',\n  templateUrl: './file-explorer.component.html',\n  styleUrls: ['./file-explorer.component.scss']\n})\nexport class FileExplorerComponent implements OnInit {\n\n  /**\n   * The selectable configurations.\n   * If null, there will be no selection.\n   */\n  @Input() configurations?: IFileAccessConfiguration[];\n\n  /**\n   * Root file (a directory) to be shown in the explorer.\n   */\n  @Input() root: IFileDescription;\n\n  /**\n   * Selected file when starting the component.\n   */\n  @Input() file: IFileDescription;\n\n  /**\n   * Determine what sort of entries can be selected.\n   * 'file': only files.\n   * 'dir': only directories\n   * undefined: everything.\n   */\n  @Input() selectableFileType?: 'file'|'dir';\n\n  /**\n   * The selected file node.\n   */\n  @Output() selectedFile: EventEmitter<IFileDescription> = new EventEmitter<IFileDescription>();\n\n  form: FormGroup;\n  _currentRoot: IFileDescription;\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n  dataSource: DynamicFileDataSource;\n\n  activeNode: DynamicFlatNode;\n\n  getLevel = (node: DynamicFlatNode) => node.level;\n\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\n\n  constructor(private formBuilder: FormBuilder, private fileAccessServiceFactoryService: FileAccessServiceFactoryService) {\n  }\n\n  ngOnInit() {\n    this.currentRoot = this.root.configuration.rootDescription();\n    this.initForm();\n    this.form.valueChanges.subscribe((val) => {\n      this.currentRoot = this.configurations[val.selectedConfigurationIndex].rootDescription();\n    });\n  }\n\n  initForm() {\n    if (!this.form) {\n      const index = (!this.root || !this.configurations) ?\n        0 :\n        this.configurations.findIndex(conf => conf.id === this.root.configuration.id);\n      this.form = this.formBuilder.group(\n        {\n          selectedConfigurationIndex: [index]\n        }\n      );\n    }\n  }\n\n  get currentRoot(): IFileDescription {\n    return this._currentRoot;\n  }\n\n  set currentRoot(newRoot: IFileDescription) {\n    if (newRoot) {\n      const accessService = this.fileAccessServiceFactoryService.getFileAccessService(newRoot.configuration.type);\n      const database = new FileData(newRoot, accessService, (this.selectableFileType === 'dir'));\n      this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n      this.dataSource = new DynamicFileDataSource(this.treeControl, database);\n\n      this.dataSource.data = database.initialData();\n      if (this.file && !this._currentRoot) {\n        this.dataSource.openNode(this.file, (node) => { this.activeNode = node; });\n      } else {\n        this.dataSource.openNode(newRoot, (node) => {\n          this.activeNode = node;\n          this.selected(this.activeNode);\n        });\n      }\n      if (this.fileTypeMatches(newRoot)) {\n        this.selectedFile.emit(newRoot);\n      }\n    } else {\n      this.dataSource = null;\n    }\n    this._currentRoot = newRoot;\n  }\n\n  selected(node: DynamicFlatNode) {\n    if (node && this.fileTypeMatches(node.node)) {\n      this.selectedFile.emit(node.node);\n      this.activeNode = node;\n    } else {\n      this.selectedFile.emit(null);\n      this.activeNode = null;\n    }\n  }\n\n  private fileTypeMatches(file: IFileDescription): boolean {\n    if (isNullOrUndefined(this.selectableFileType)) {\n      return true;\n    } else {\n      return this.selectableFileType === file.type;\n    }\n  }\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"20px\\\">\\n  <mat-icon *ngIf=\\\"configuration.fullLabel().maticon\\\">{{configuration.fullLabel().maticon}}</mat-icon>\\n  <img *ngIf=\\\"configuration.fullLabel().icon\\\" class=\\\"mat-icon\\\" src=\\\"../assets/{{configuration.fullLabel().icon}}\\\">\\n  <p>{{configuration.fullLabel().label}}/{{file.path}}</p>\\n  <ng-container *ngIf=\\\"configurations\\\">\\n    <button color=\\\"accent\\\" mat-icon-button i18n (click)=\\\"openSaveAsExplorer()\\\"\\n            matTooltip=\\\"Select another location...\\\" i18n-matTooltip>\\n      <mat-icon>edit</mat-icon>\\n    </button>\\n  </ng-container>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2NvbW1vbi9maWxlLXRvLXNhdmUvZmlsZS10by1zYXZlLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {IFileDescription} from '../i-file-description';\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../file-explorer-dialog/file-explorer-dialog.component';\nimport {MatDialog} from '@angular/material';\nimport {SaveAsExplorerDialogComponent, SaveAsExplorerDialogData} from '../save-as-explorer-dialog/save-as-explorer-dialog.component';\n\n/**\n * A component showing a file.\n * Normally readonly, but if you set \"configurations\", there will be a button opening a save as dialog.\n */\n@Component({\n  selector: 'app-file-to-save',\n  templateUrl: './file-to-save.component.html',\n  styleUrls: ['./file-to-save.component.scss']\n})\nexport class FileToSaveComponent implements OnInit, OnChanges {\n\n  /**\n   * The configurations that can be used to save file.\n   * If set, a save as dialog can be opened.\n   */\n  @Input() configurations: IFileAccessConfiguration[];\n\n  /**\n   * The file to show.\n   */\n  @Input() file: IFileDescription;\n\n  /**\n   * The file selected in the save as dialog.\n   */\n  @Output() selectedFile = new EventEmitter<IFileDescription>();\n\n  configuration: IFileAccessConfiguration;\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.configuration = this.file.configuration;\n  }\n\n  openSaveAsExplorer() {\n    const dialogRef = this.dialog.open(SaveAsExplorerDialogComponent, {\n      data: {\n        configurations: this.configurations,\n        configuration: this.configuration,\n        file: this.file\n      } as SaveAsExplorerDialogData\n    });\n    dialogRef.afterClosed().subscribe((result: IFileDescription) => {\n      if (result) {\n        this.selectedFile.emit(result);\n      }\n    });\n  }\n}\n","import {IFile} from './i-file';\r\nimport {IFileDescription} from './i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\n\r\ninterface SerializedFormV1 {\r\n    version: '1';\r\n    description: string;\r\n    name: string;\r\n    size: number;\r\n    content: string;\r\n}\r\n\r\nexport class GenericFile implements IFile {\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GenericFile {\r\n        const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n        return new GenericFile(\r\n            serializationService.deserializeIFileDescription(v1Object.description),\r\n            v1Object.name,\r\n            v1Object.size,\r\n            v1Object.content);\r\n    }\r\n\r\n    constructor(public description: IFileDescription, public name: string, public size: number, public content: string) { }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            version: '1',\r\n            description: this.description.serialize(serializationService),\r\n            name: this.name,\r\n            content: this.content,\r\n            size: this.size\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    /**\r\n     * Return a copy that has some edited content.\r\n     * @param newContent the changed content\r\n     */\r\n    public copyWithNewContent(newContent: string): IFile {\r\n        return new GenericFile(this.description, this.name, newContent.length, newContent);\r\n    }\r\n\r\n    /**\r\n     * Create a copy that can be stored under a new location.\r\n     * @param saveAs new location to save file\r\n     */\r\n    copyForNewDescription(saveAs: IFileDescription): IFile {\r\n        return new GenericFile(saveAs, this.name, this.content.length, this.content);\r\n    }\r\n\r\n}\r\n","/**\r\n * Interface to read and save file like objects from a backend system.\r\n */\r\nimport {Observable} from 'rxjs';\r\nimport {IFile} from './i-file';\r\nimport {IFileAccessConfiguration} from './i-file-access-configuration';\r\nimport {IFileDescription} from './i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\n\r\n/**\r\n * Data needed to save a file.\r\n */\r\nexport interface ICommitData {\r\n    message: string;\r\n    override?: boolean; // if file to save exists and this is false, an error occures\r\n}\r\n\r\n// changed: if existing file was changed after the initial load\r\n// unchanged: if existing file was not changed after the initial load\r\n// exists_not: if file does not exist\r\nexport enum FileStatus {\r\n    CHANGED = 'CHANGED',\r\n    UNCHANGED = 'UNCHANGED',\r\n    'EXISTS_NOT' = 'EXISTS_NOT'\r\n}\r\n\r\nexport interface IFileStats {\r\n    status: FileStatus;\r\n}\r\n\r\nexport interface IFileAccessService {\r\n\r\n    /**\r\n     * Load a file from the backend system.\r\n     * @param description backend dependent description of the file to load.\r\n     * @return Observable of the loaded file or a directory description.\r\n     */\r\n    load(description: IFileDescription): Observable<IFile|IFileDescription>;\r\n\r\n    /**\r\n     * Save a file in the backend.\r\n     * @param file file loaded from the same backend.\r\n     * @param commitData additional data needed to store it in the backend.\r\n     * @return saved file if successful.\r\n     */\r\n    save(file: IFile, commitData?: ICommitData): Observable<IFile>;\r\n\r\n    /**\r\n     * Get some infos about a file.\r\n     * @param file file (existing or not)\r\n     */\r\n    stats(file: IFile): Observable<IFileStats>;\r\n\r\n    /**\r\n     * Serialize a configuration to store it.\r\n     * @param configuration configuration to be serialized.\r\n     * @param serializationService service to be used.\r\n     * @return serialized form that can be deserialized.\r\n     */\r\n    serialize(serializationService: SerializationService, configuration: IFileAccessConfiguration): string;\r\n\r\n    /**\r\n     * Create a configuration from a stored string (generated by serialize()).\r\n     * @param serializationService service to be used.\r\n     * @param serialzedConfiguration stored configuration string\r\n     * @return deserialized version.\r\n     */\r\n    deserialize(serializationService: SerializationService, serialzedConfiguration: string): IFileAccessConfiguration;\r\n}\r\n","module.exports = \"<h1 mat-dialog-title i18n>Select a file to save</h1>\\n<div mat-dialog-content id=\\\"content\\\">\\n  <app-save-as-explorer\\n          [configurations]=\\\"configurations\\\"\\n          [file]=\\\"file\\\"\\n          (selectedFile)=\\\"selectedFile($event)\\\">\\n  </app-save-as-explorer>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"cancel()\\\" i18n>Cancel</button>\\n  <button mat-button [disabled]=\\\"!isFileSelected()\\\" [mat-dialog-close]=\\\"result()\\\" cdkFocusInitial i18n>Ok</button>\\n</div>\\n\"","module.exports = \"#content {\\n  min-height: 65vh;\\n  min-width: 80vw; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmlsZS1hY2Nlc3NvcnMvY29tbW9uL3NhdmUtYXMtZXhwbG9yZXItZGlhbG9nL1M6XFxleHBlcmltZW50ZVxcbmd4LWkxOG5zdXBwb3J0XFxwcm9qZWN0c1xcdGlueS10cmFuc2xhdG9yL3NyY1xcYXBwXFxmaWxlLWFjY2Vzc29yc1xcY29tbW9uXFxzYXZlLWFzLWV4cGxvcmVyLWRpYWxvZ1xcc2F2ZS1hcy1leHBsb3Jlci1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBZ0I7RUFDaEIsZ0JBQWUsRUFDaEIiLCJmaWxlIjoic3JjL2FwcC9maWxlLWFjY2Vzc29ycy9jb21tb24vc2F2ZS1hcy1leHBsb3Jlci1kaWFsb2cvc2F2ZS1hcy1leHBsb3Jlci1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGVudCB7XHJcbiAgbWluLWhlaWdodDogNjV2aDtcclxuICBtaW4td2lkdGg6IDgwdnc7XHJcbn1cclxuIl19 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {IFileDescription} from '../i-file-description';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\nexport interface SaveAsExplorerDialogData {\n  configurations?: IFileAccessConfiguration[];\n  configuration?: IFileAccessConfiguration;\n  file?: IFileDescription;\n}\n\n/**\n * A Dialog to choose a file to save.\n */\n@Component({\n  selector: 'app-save-as-explorer-dialog',\n  templateUrl: './save-as-explorer-dialog.component.html',\n  styleUrls: ['./save-as-explorer-dialog.component.scss']\n})\nexport class SaveAsExplorerDialogComponent implements OnInit {\n\n  configurations: IFileAccessConfiguration[];\n  file: IFileDescription;\n  _result: IFileDescription;\n\n  constructor(private dialogRef: MatDialogRef<SaveAsExplorerDialogData>,\n              @Inject(MAT_DIALOG_DATA) data: SaveAsExplorerDialogData) {\n    this.configurations = data.configurations;\n    this.file = data.file;\n    this._result = this.file;\n  }\n\n  ngOnInit() {\n  }\n\n  selectedFile(f: IFileDescription) {\n    this._result = f;\n  }\n\n  isFileSelected(): boolean {\n    return !!this._result;\n  }\n\n  result(): IFileDescription {\n    return this._result;\n  }\n\n  cancel() {\n    this.dialogRef.close(null);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2NvbW1vbi9zYXZlLWFzLWV4cGxvcmVyL3NhdmUtYXMtZXhwbG9yZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n  <app-file-explorer\\n          [configurations]=\\\"configurations\\\"\\n          [root]=\\\"configuration.rootDescription()\\\"\\n          [file]=\\\"file\\\"\\n          (selectedFile)=\\\"setSelectedFileFromExplorer($event)\\\">\\n  </app-file-explorer>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field fxFlex=\\\"90%\\\">\\n      <mat-label i18n>name</mat-label>\\n      <input type=\\\"text\\\" placeholder=\\\"name\\\" i18n-placeholder matInput formControlName=\\\"name\\\" name=\\\"name\\\"/>\\n    </mat-form-field>\\n  </div>\\n</form>\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IFileDescription} from '../i-file-description';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-save-as-explorer',\n  templateUrl: './save-as-explorer.component.html',\n  styleUrls: ['./save-as-explorer.component.css']\n})\nexport class SaveAsExplorerComponent implements OnInit {\n\n  @Input() configurations: IFileAccessConfiguration[];\n  @Input() file: IFileDescription;\n  private _selectedFileInExplorer: IFileDescription;\n  @Output() selectedFile = new EventEmitter<IFileDescription>();\n\n  configuration: IFileAccessConfiguration;\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.configuration = this.file.configuration;\n    this._selectedFileInExplorer = this.file;\n    this.form.valueChanges.subscribe(val => {\n      if (val.name) {\n        this.selectedFile.emit(this._selectedFileInExplorer.createFileDescription(val.name));\n      }\n    });\n  }\n\n  private initForm() {\n    if (!this.form) {\n      this.form = this.formBuilder.group({\n        name: [this.file.name]\n      });\n    }\n  }\n\n  setSelectedFileFromExplorer(newFile: IFileDescription) {\n    this._selectedFileInExplorer = newFile;\n    if (newFile && newFile.type === 'file') {\n      this.form.patchValue({\n        name: newFile.name\n      });\n    } else {\n      this.selectedFile.emit(this._selectedFileInExplorer.createFileDescription(this.form.value.name));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {IFile} from '../common/i-file';\r\n\r\n/**\r\n * Service to read a file.\r\n * (File means an uploaded Blob file object)\r\n * It gives an observable based API instead of just using basic FileReader.\r\n */\r\n\r\ninterface FileResult {\r\n  name: string;\r\n  size: number;\r\n  content: string;\r\n}\r\n\r\n@Injectable()\r\nexport class AsynchronousFileReaderService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Asynchronously read an uploaded file.\r\n   * @param file the file to (may be null, then the Observable will return result with name and content null)\r\n   * @return Observable of file name and content.\r\n   */\r\n  public readFile(file: File): Observable<FileResult> {\r\n    const subject = new ReplaySubject<FileResult>();\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const fileContent = reader.result as string;\r\n        subject.next({name: file.name, size: file.size, content: fileContent});\r\n        subject.complete();\r\n      };\r\n      reader.onerror = () => {\r\n        subject.error(reader.error);\r\n      };\r\n      reader.onabort = () => {\r\n        subject.error('read aborted');\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      subject.next({name: null, size: 0, content: null});\r\n      subject.complete();\r\n    }\r\n    return subject;\r\n  }\r\n\r\n}\r\n","import {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {DownloadUploadFileDescription} from './download-upload-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.DOWNLOAD_UPLOAD;\r\n    version: '1';\r\n}\r\n\r\nexport class DownloadUploadConfiguration implements IFileAccessConfiguration {\r\n\r\n    static _instance = new DownloadUploadConfiguration();\r\n\r\n    readonly type = FileAccessorType.DOWNLOAD_UPLOAD;\r\n\r\n    readonly id = '0';\r\n\r\n    public static singleInstance() {\r\n        return this._instance;\r\n    }\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): DownloadUploadConfiguration {\r\n        return this._instance;\r\n    }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            accessorType: FileAccessorType.DOWNLOAD_UPLOAD,\r\n            version: '1'\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    public equals(another: IFileAccessConfiguration): boolean {\r\n        return another && another.type === FileAccessorType.DOWNLOAD_UPLOAD;\r\n    }\r\n\r\n    public shortLabel(): string {\r\n        return '';\r\n    }\r\n\r\n    public fullLabel(): { maticon?: string; icon?: string; label: string } {\r\n        return {\r\n            maticon: 'save',\r\n            label: ''\r\n        };\r\n    }\r\n\r\n    public rootDescription(): IFileDescription {\r\n        return new DownloadUploadFileDescription('dir', this, null);\r\n    }\r\n\r\n    /**\r\n     * Return a directory with the given path\r\n     */\r\n    public directoryDescription(dirPath: string): IFileDescription {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Check, wether a publish is possible.\r\n     */\r\n    public canPublish(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public copy() {\r\n        return this;\r\n    }\r\n}\r\n","import {SerializationService} from '../../model/serialization.service';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\n\r\ninterface SerializedFormV1 {\r\n    type: FileAccessorType.DOWNLOAD_UPLOAD;\r\n    version: '1';\r\n    name: string;\r\n}\r\n\r\nexport class DownloadUploadFileDescription implements IFileDescription {\r\n\r\n    name: string;\r\n    children = [];\r\n\r\n    static fromBrowserFile(configuration: IFileAccessConfiguration, file: File) {\r\n        return new DownloadUploadFileDescription('file', configuration, file);\r\n    }\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): DownloadUploadFileDescription {\r\n        return DownloadUploadFileDescription.fromBrowserFile(serializationService.deserializeIFileConfiguration(serializedForm), null);\r\n    }\r\n\r\n    constructor(public type: 'file'|'dir',\r\n                public readonly configuration: IFileAccessConfiguration,\r\n                private _file: File, newName?: string) {\r\n        if (!newName && this._file) {\r\n            this.name = this._file.name;\r\n        } else {\r\n            this.name = newName;\r\n        }\r\n    }\r\n\r\n    get browserFile(): File {\r\n        return this._file;\r\n    }\r\n\r\n    get path(): string {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * Download targets are never equal.\r\n     */\r\n    public equals(another: IFileDescription): boolean {\r\n        return false;\r\n    }\r\n\r\n    public isDirectory(): boolean {\r\n        return this.type === 'dir';\r\n    }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        return JSON.stringify({\r\n            type: FileAccessorType.DOWNLOAD_UPLOAD,\r\n            version: '1',\r\n            name: this.name\r\n        } as SerializedFormV1);\r\n    }\r\n\r\n    public dirname(): IFileDescription|null {\r\n        return null;\r\n    }\r\n\r\n    public createFileDescription(newName: string): IFileDescription {\r\n        return new DownloadUploadFileDescription('file', this.configuration, this._file, newName);\r\n    }\r\n}\r\n","import {Observable, of} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {FileStatus, IFileAccessService, IFileStats} from '../common/i-file-access-service';\r\nimport {IFile} from '../common/i-file';\r\nimport {DownloadUploadFileDescription} from './download-upload-file-description';\r\nimport {AsynchronousFileReaderService} from './asynchronous-file-reader.service';\r\nimport {DownloaderService} from './downloader.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {DownloadUploadConfiguration} from './download-upload-configuration';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {GenericFile} from '../common/generic-file';\r\nimport {IFileDescription} from '../common/i-file-description';\r\n\r\n@Injectable()\r\nexport class DownloadUploadService implements IFileAccessService {\r\n\r\n    constructor(\r\n        private fileReaderService: AsynchronousFileReaderService,\r\n        private downloaderService: DownloaderService) {}\r\n\r\n    load(description: DownloadUploadFileDescription): Observable<IFile|IFileDescription> {\r\n        if (description.isDirectory()) {\r\n            return of(description);\r\n        }\r\n        const file = description.browserFile;\r\n        return this.fileReaderService.readFile(file).pipe(\r\n            map(result => {\r\n                return new GenericFile(description, result.name, result.size, result.content);\r\n            })\r\n        );\r\n    }\r\n\r\n    save(file: IFile): Observable<IFile> {\r\n        this.downloaderService.downloadXliffFile(file.description.name, file.content);\r\n        return of(file);\r\n    }\r\n\r\n    stats(file: IFile): Observable<IFileStats> {\r\n        return of({status: FileStatus.EXISTS_NOT});\r\n    }\r\n\r\n    serialize(serializationService: SerializationService, configuration: IFileAccessConfiguration): string {\r\n        return 'DOWNLOAD_UPLOAD';\r\n    }\r\n\r\n    deserialize(serializationService: SerializationService, serialzedConfiguration: string): IFileAccessConfiguration {\r\n        return DownloadUploadConfiguration.singleInstance();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {saveAs} from 'file-saver';\r\n\r\n@Injectable()\r\nexport class DownloaderService {\r\n\r\n  constructor() { }\r\n\r\n  downloadFile(filename: string, content: string, filetype: string) {\r\n    const blob = new Blob([content], {type: filetype});\r\n    saveAs(blob, filename);\r\n  }\r\n\r\n  downloadXliffFile(filename: string, content: string) {\r\n    this.downloadFile(filename, content, 'application/xml');\r\n  }\r\n}\r\n","module.exports = \"<form id=\\\"fileUploadForm\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"form\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\n        <p fxFlex=\\\"50%\\\" i18n>Select the file you want to translate.<br>\\n            The file can be of format XLIFF 1.2, XLIFF 2.0 or XMB.<br>\\n            The file will be stored in your browser local storage until you export the translated version.</p>\\n        <div fxLayout=\\\"column\\\" fxFlexAlign=\\\"end\\\" fxFlex=\\\"40%\\\">\\n            <input type=\\\"file\\\" id=\\\"fileupload\\\" (change)=\\\"fileSelectionChange(input)\\\" formControlName=\\\"selectedFiles\\\"\\n                   name=\\\"selectedFiles\\\" class=\\\"inputfile\\\" #input/>\\n            <label for=\\\"fileupload\\\">\\n                <mat-icon>open_in_browser</mat-icon>&nbsp;<span i18n>Upload a translation file (xlf, xtb)</span></label>\\n            <div><span i18n>selected: </span>{{selectedFilesFormatted()}}</div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"isMasterXmbFileNeeded()\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\n        <p fxFlex=\\\"50%\\\" i18n>You selected an xtb file.<br>\\n            This file type only contains one language, the target language.<br>\\n            To show you the original source texts, you should also select the master xmb file.</p>\\n        <div fxFlex=\\\"50%\\\" fxLayout=\\\"column\\\">\\n            <input type=\\\"file\\\" id=\\\"masterfileupload\\\" (change)=\\\"masterXmlFileSelectionChange(masterinput)\\\"\\n                   formControlName=\\\"selectedMasterXmbFiles\\\" name=\\\"selectedMasterXmbFiles\\\" class=\\\"inputfile\\\"\\n                   #masterinput/>\\n            <label for=\\\"masterfileupload\\\">\\n                <mat-icon>open_in_browser</mat-icon>&nbsp;<span i18n>Upload master xmb file</span></label>\\n            <div><span i18n>selected: </span>{{selectedMasterFilesFormatted()}}</div>\\n        </div>\\n    </div>\\n</form>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n/* You can add global styles to this file, and also import other style files */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-badge-small .mat-badge-content{font-size:6px}\\n.mat-badge-large .mat-badge-content{font-size:24px}\\n.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h5,.mat-typography h5{font:400 11.62px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-h6,.mat-typography h6{font:400 9.38px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-body-2,.mat-body-strong{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}\\n.mat-caption,.mat-small{font:400 12px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 56px;letter-spacing:-.05em}\\n.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.02em}\\n.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.005em}\\n.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px}\\n.mat-bottom-sheet-container{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button,.mat-stroked-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-button-toggle{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card-title{font-size:24px;font-weight:500}\\n.mat-card-header .mat-card-title{font-size:20px}\\n.mat-card-content,.mat-card-subtitle{font-size:14px}\\n.mat-checkbox{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-checkbox-layout .mat-checkbox-label{line-height:24px}\\n.mat-chip{font-size:14px;font-weight:500}\\n.mat-chip .mat-chip-remove.mat-icon,.mat-chip .mat-chip-trailing-icon.mat-icon{font-size:18px}\\n.mat-table{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-header-cell{font-size:12px;font-weight:500}\\n.mat-cell,.mat-footer-cell{font-size:14px}\\n.mat-calendar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-calendar-body{font-size:13px}\\n.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}\\n.mat-calendar-table-header th{font-size:11px;font-weight:400}\\n.mat-dialog-title{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-expansion-panel-header{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:15px;font-weight:400}\\n.mat-expansion-panel-content{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field-wrapper{padding-bottom:1.34375em}\\n.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}\\n.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}\\n.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}\\n.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}\\n.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.34375em) scale(.75);transform:translateY(-1.34375em) scale(.75);width:133.33333%}\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.34374em) scale(.75);transform:translateY(-1.34374em) scale(.75);width:133.33334%}\\n.mat-form-field-label-wrapper{top:-.84375em;padding-top:.84375em}\\n.mat-form-field-label{top:1.34375em}\\n.mat-form-field-underline{bottom:1.34375em}\\n.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.66667em;top:calc(100% - 1.79167em)}\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);-ms-transform:translateY(-1.28125em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);-ms-transform:translateY(-1.28124em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);-ms-transform:translateY(-1.28123em) scale(.75);width:133.33335%}\\n.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.54167em;top:calc(100% - 1.66667em)}\\n@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28122em) scale(.75);transform:translateY(-1.28122em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28121em) scale(.75);transform:translateY(-1.28121em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.2812em) scale(.75);transform:translateY(-1.2812em) scale(.75)}}\\n.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em 0}\\n.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-.5em}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-.59375em) scale(.75);transform:translateY(-.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-.59374em) scale(.75);transform:translateY(-.59374em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0 1em 0}\\n.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-.25em}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.59375em) scale(.75);transform:translateY(-1.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.59374em) scale(.75);transform:translateY(-1.59374em) scale(.75);width:133.33334%}\\n.mat-grid-tile-footer,.mat-grid-tile-header{font-size:14px}\\n.mat-grid-tile-footer .mat-line,.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}\\ninput.mat-input-element{margin-top:-.0625em}\\n.mat-menu-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:400}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px}\\n.mat-radio-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select-trigger{height:1.125em}\\n.mat-slide-toggle-content{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-slider-thumb-label-text{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-stepper-horizontal,.mat-stepper-vertical{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-step-label{font-size:14px;font-weight:400}\\n.mat-step-sub-label-error{font-weight:400}\\n.mat-step-label-error{font-size:14px}\\n.mat-step-label-selected{font-size:14px;font-weight:500}\\n.mat-tab-group{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-tab-label,.mat-tab-link{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0}\\n.mat-tooltip{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}\\n.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}\\n.mat-list-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-base .mat-list-item{font-size:16px}\\n.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-list-option{font-size:16px}\\n.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-list-base[dense] .mat-list-item{font-size:12px}\\n.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-list-option{font-size:12px}\\n.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:16px}\\n.mat-optgroup-label{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-simple-snackbar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px}\\n.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}\\n.mat-tree{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-nested-tree-node,.mat-tree-node{font-weight:400;font-size:14px}\\n.mat-ripple{overflow:hidden;position:relative}\\n.mat-ripple.mat-ripple-unbounded{overflow:visible}\\n.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,-webkit-transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1),-webkit-transform 0s cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}\\n@media (-ms-high-contrast:active){.mat-ripple-element{display:none}}\\n.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none}\\n.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}\\n.cdk-overlay-container{position:fixed;z-index:1000}\\n.cdk-overlay-container:empty{display:none}\\n.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}\\n.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}\\n.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}\\n@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}\\n.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}\\n.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}\\n.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}\\n.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n@-webkit-keyframes cdk-text-field-autofill-start{/*!*/}\\n@keyframes cdk-text-field-autofill-start{/*!*/}\\n@-webkit-keyframes cdk-text-field-autofill-end{/*!*/}\\n@keyframes cdk-text-field-autofill-end{/*!*/}\\n.cdk-text-field-autofill-monitored:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start}\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}\\ntextarea.cdk-textarea-autosize{resize:none}\\ntextarea.cdk-textarea-autosize-measuring{height:auto!important;overflow:hidden!important;padding:2px 0!important;box-sizing:content-box!important}\\n.mat-ripple-element{background-color:rgba(0,0,0,.1)}\\n.mat-option{color:rgba(0,0,0,.87)}\\n.mat-option:focus:not(.mat-option-disabled),.mat-option:hover:not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}\\n.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:#3f51b5}\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled){color:#ff4081}\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled){color:#f44336}\\n.mat-optgroup-label{color:rgba(0,0,0,.54)}\\n.mat-optgroup-disabled .mat-optgroup-label{color:rgba(0,0,0,.38)}\\n.mat-pseudo-checkbox{color:rgba(0,0,0,.54)}\\n.mat-pseudo-checkbox::after{color:#fafafa}\\n.mat-accent .mat-pseudo-checkbox-checked,.mat-accent .mat-pseudo-checkbox-indeterminate,.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate{background:#ff4081}\\n.mat-primary .mat-pseudo-checkbox-checked,.mat-primary .mat-pseudo-checkbox-indeterminate{background:#3f51b5}\\n.mat-warn .mat-pseudo-checkbox-checked,.mat-warn .mat-pseudo-checkbox-indeterminate{background:#f44336}\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}\\n.mat-elevation-z0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-elevation-z1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}\\n.mat-elevation-z8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}\\n.mat-elevation-z24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}\\n.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-theme-loaded-marker{display:none}\\n.mat-autocomplete-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover){background:#fff}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled){color:rgba(0,0,0,.87)}\\n.mat-badge-content{color:#fff;background:#3f51b5}\\n@media (-ms-high-contrast:active){.mat-badge-content{outline:solid 1px;border-radius:0}}\\n.mat-badge-accent .mat-badge-content{background:#ff4081;color:#fff}\\n.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}\\n.mat-badge{position:relative}\\n.mat-badge-hidden .mat-badge-content{display:none}\\n.mat-badge-disabled .mat-badge-content{background:#b9b9b9;color:rgba(0,0,0,.38)}\\n.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out, -webkit-transform .2s ease-in-out;-webkit-transform:scale(.6);transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}\\n.mat-badge-content.mat-badge-active{-webkit-transform:none;transform:none}\\n.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}\\n.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}\\n.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}\\n.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}\\n.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}\\n.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}\\n.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}\\n.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}\\n.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}\\n.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}\\n.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}\\n.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}\\n.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}\\n.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}\\n.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}\\n.mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-button,.mat-icon-button,.mat-stroked-button{color:inherit;background:0 0}\\n.mat-button.mat-primary,.mat-icon-button.mat-primary,.mat-stroked-button.mat-primary{color:#3f51b5}\\n.mat-button.mat-accent,.mat-icon-button.mat-accent,.mat-stroked-button.mat-accent{color:#ff4081}\\n.mat-button.mat-warn,.mat-icon-button.mat-warn,.mat-stroked-button.mat-warn{color:#f44336}\\n.mat-button.mat-accent[disabled],.mat-button.mat-primary[disabled],.mat-button.mat-warn[disabled],.mat-button[disabled][disabled],.mat-icon-button.mat-accent[disabled],.mat-icon-button.mat-primary[disabled],.mat-icon-button.mat-warn[disabled],.mat-icon-button[disabled][disabled],.mat-stroked-button.mat-accent[disabled],.mat-stroked-button.mat-primary[disabled],.mat-stroked-button.mat-warn[disabled],.mat-stroked-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-button.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-stroked-button.mat-primary .mat-button-focus-overlay{background-color:#3f51b5}\\n.mat-button.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-stroked-button.mat-accent .mat-button-focus-overlay{background-color:#ff4081}\\n.mat-button.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-stroked-button.mat-warn .mat-button-focus-overlay{background-color:#f44336}\\n.mat-button[disabled] .mat-button-focus-overlay,.mat-icon-button[disabled] .mat-button-focus-overlay,.mat-stroked-button[disabled] .mat-button-focus-overlay{background-color:transparent}\\n.mat-button .mat-ripple-element,.mat-icon-button .mat-ripple-element,.mat-stroked-button .mat-ripple-element{opacity:.1;background-color:currentColor}\\n.mat-button-focus-overlay{background:#000}\\n.mat-stroked-button:not([disabled]){border-color:rgba(0,0,0,.12)}\\n.mat-fab,.mat-flat-button,.mat-mini-fab,.mat-raised-button{color:rgba(0,0,0,.87);background-color:#fff}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{color:#fff}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{color:#fff}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{color:#fff}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{background-color:#3f51b5}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{background-color:#ff4081}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{background-color:#f44336}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{background-color:rgba(0,0,0,.12)}\\n.mat-fab.mat-primary .mat-ripple-element,.mat-flat-button.mat-primary .mat-ripple-element,.mat-mini-fab.mat-primary .mat-ripple-element,.mat-raised-button.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-accent .mat-ripple-element,.mat-flat-button.mat-accent .mat-ripple-element,.mat-mini-fab.mat-accent .mat-ripple-element,.mat-raised-button.mat-accent .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-warn .mat-ripple-element,.mat-flat-button.mat-warn .mat-ripple-element,.mat-mini-fab.mat-warn .mat-ripple-element,.mat-raised-button.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-flat-button:not([class*=mat-elevation-z]),.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-raised-button[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-fab[disabled]:not([class*=mat-elevation-z]),.mat-mini-fab[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group,.mat-button-toggle-standalone{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{box-shadow:none}\\n.mat-button-toggle{color:rgba(0,0,0,.38)}\\n.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(0,0,0,.12)}\\n.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87);background:#fff}\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#000}\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px rgba(0,0,0,.12)}\\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-checked{background-color:#e0e0e0;color:rgba(0,0,0,.54)}\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87)}\\n.mat-button-toggle-disabled{color:rgba(0,0,0,.26);background-color:#eee}\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#fff}\\n.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{border:solid 1px rgba(0,0,0,.12)}\\n.mat-card{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-card:not([class*=mat-elevation-z]){box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-card-subtitle{color:rgba(0,0,0,.54)}\\n.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}\\n.mat-checkbox-checkmark{fill:#fafafa}\\n.mat-checkbox-checkmark-path{stroke:#fafafa!important}\\n@media (-ms-high-contrast:black-on-white){.mat-checkbox-checkmark-path{stroke:#000!important}}\\n.mat-checkbox-mixedmark{background-color:#fafafa}\\n.mat-checkbox-checked.mat-primary .mat-checkbox-background,.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background{background-color:#3f51b5}\\n.mat-checkbox-checked.mat-accent .mat-checkbox-background,.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#ff4081}\\n.mat-checkbox-checked.mat-warn .mat-checkbox-background,.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background{background-color:#f44336}\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}\\n.mat-checkbox-disabled .mat-checkbox-label{color:rgba(0,0,0,.54)}\\n@media (-ms-high-contrast:active){.mat-checkbox-disabled{opacity:.5}}\\n@media (-ms-high-contrast:active){.mat-checkbox-background{background:0 0}}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element{background-color:#3f51b5}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#ff4081}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element{background-color:#f44336}\\n.mat-chip.mat-standard-chip{background-color:#e0e0e0;color:rgba(0,0,0,.87)}\\n.mat-chip.mat-standard-chip .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover{opacity:.54}\\n.mat-chip.mat-standard-chip.mat-chip-disabled{opacity:.4}\\n.mat-chip.mat-standard-chip::after{background:#000}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#3f51b5;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn{background-color:#f44336;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent{background-color:#ff4081;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-table{background:#fff}\\n.mat-table tbody,.mat-table tfoot,.mat-table thead,.mat-table-sticky,[mat-footer-row],[mat-header-row],[mat-row],mat-footer-row,mat-header-row,mat-row{background:inherit}\\nmat-footer-row,mat-header-row,mat-row,td.mat-cell,td.mat-footer-cell,th.mat-header-cell{border-bottom-color:rgba(0,0,0,.12)}\\n.mat-header-cell{color:rgba(0,0,0,.54)}\\n.mat-cell,.mat-footer-cell{color:rgba(0,0,0,.87)}\\n.mat-calendar-arrow{border-top-color:rgba(0,0,0,.54)}\\n.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button,.mat-datepicker-toggle{color:rgba(0,0,0,.54)}\\n.mat-calendar-table-header{color:rgba(0,0,0,.38)}\\n.mat-calendar-table-header-divider::after{background:rgba(0,0,0,.12)}\\n.mat-calendar-body-label{color:rgba(0,0,0,.54)}\\n.mat-calendar-body-cell-content{color:rgba(0,0,0,.87);border-color:transparent}\\n.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){color:rgba(0,0,0,.38)}\\n.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:rgba(0,0,0,.04)}\\n.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.38)}\\n.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.18)}\\n.mat-calendar-body-selected{background-color:#3f51b5;color:#fff}\\n.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(63,81,181,.4)}\\n.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#ff4081;color:#fff}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(255,64,129,.4)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-datepicker-toggle-active{color:#3f51b5}\\n.mat-datepicker-toggle-active.mat-accent{color:#ff4081}\\n.mat-datepicker-toggle-active.mat-warn{color:#f44336}\\n.mat-dialog-container{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-divider{border-top-color:rgba(0,0,0,.12)}\\n.mat-divider-vertical{border-right-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-action-row{border-top-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#fff}}\\n.mat-expansion-panel-header-title{color:rgba(0,0,0,.87)}\\n.mat-expansion-indicator::after,.mat-expansion-panel-header-description{color:rgba(0,0,0,.54)}\\n.mat-expansion-panel-header[aria-disabled=true]{color:rgba(0,0,0,.26)}\\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title{color:inherit}\\n.mat-form-field-label{color:rgba(0,0,0,.6)}\\n.mat-hint{color:rgba(0,0,0,.6)}\\n.mat-form-field.mat-focused .mat-form-field-label{color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent{color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn{color:#f44336}\\n.mat-focused .mat-form-field-required-marker{color:#ff4081}\\n.mat-form-field-ripple{background-color:rgba(0,0,0,.87)}\\n.mat-form-field.mat-focused .mat-form-field-ripple{background-color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent{background-color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn{background-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after{color:#3f51b5}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after{color:#ff4081}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker,.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent{background-color:#f44336}\\n.mat-error{color:#f44336}\\n.mat-form-field-appearance-legacy .mat-form-field-label{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-hint{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-standard .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-fill .mat-form-field-flex{background-color:rgba(0,0,0,.04)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{background-color:rgba(0,0,0,.02)}\\n.mat-form-field-appearance-fill .mat-form-field-underline::before{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before{background-color:transparent}\\n.mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(0,0,0,.12)}\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:rgba(0,0,0,.87)}\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:#3f51b5}\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick{color:#ff4081}\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:rgba(0,0,0,.06)}\\n.mat-icon.mat-primary{color:#3f51b5}\\n.mat-icon.mat-accent{color:#ff4081}\\n.mat-icon.mat-warn{color:#f44336}\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after{color:rgba(0,0,0,.54)}\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after,.mat-input-element:disabled{color:rgba(0,0,0,.38)}\\n.mat-input-element{caret-color:#3f51b5}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-moz-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-accent .mat-input-element{caret-color:#ff4081}\\n.mat-form-field-invalid .mat-input-element,.mat-warn .mat-input-element{caret-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after{color:#f44336}\\n.mat-list-base .mat-list-item{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-list-option{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-subheader{color:rgba(0,0,0,.54)}\\n.mat-list-item-disabled{background-color:#eee}\\n.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover{background:rgba(0,0,0,.04)}\\n.mat-menu-panel{background:#fff}\\n.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-menu-item{background:0 0;color:rgba(0,0,0,.87)}\\n.mat-menu-item[disabled],.mat-menu-item[disabled]::after{color:rgba(0,0,0,.38)}\\n.mat-menu-item .mat-icon-no-color,.mat-menu-item-submenu-trigger::after{color:rgba(0,0,0,.54)}\\n.mat-menu-item-highlighted:not([disabled]),.mat-menu-item.cdk-keyboard-focused:not([disabled]),.mat-menu-item.cdk-program-focused:not([disabled]),.mat-menu-item:hover:not([disabled]){background:rgba(0,0,0,.04)}\\n.mat-paginator{background:#fff}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{color:rgba(0,0,0,.54)}\\n.mat-paginator-decrement,.mat-paginator-increment{border-top:2px solid rgba(0,0,0,.54);border-right:2px solid rgba(0,0,0,.54)}\\n.mat-paginator-first,.mat-paginator-last{border-top:2px solid rgba(0,0,0,.54)}\\n.mat-icon-button[disabled] .mat-paginator-decrement,.mat-icon-button[disabled] .mat-paginator-first,.mat-icon-button[disabled] .mat-paginator-increment,.mat-icon-button[disabled] .mat-paginator-last{border-color:rgba(0,0,0,.38)}\\n.mat-progress-bar-background{fill:#c5cae9}\\n.mat-progress-bar-buffer{background-color:#c5cae9}\\n.mat-progress-bar-fill::after{background-color:#3f51b5}\\n.mat-progress-bar.mat-accent .mat-progress-bar-background{fill:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#ff4081}\\n.mat-progress-bar.mat-warn .mat-progress-bar-background{fill:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#f44336}\\n.mat-progress-spinner circle,.mat-spinner circle{stroke:#3f51b5}\\n.mat-progress-spinner.mat-accent circle,.mat-spinner.mat-accent circle{stroke:#ff4081}\\n.mat-progress-spinner.mat-warn circle,.mat-spinner.mat-warn circle{stroke:#f44336}\\n.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle{border-color:#3f51b5}\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple{background-color:#3f51b5}\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#ff4081}\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple{background-color:#ff4081}\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle{border-color:#f44336}\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple{background-color:#f44336}\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle,.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle,.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element{background-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content{color:rgba(0,0,0,.38)}\\n.mat-radio-button .mat-ripple-element{background-color:#000}\\n.mat-select-value{color:rgba(0,0,0,.87)}\\n.mat-select-placeholder{color:rgba(0,0,0,.42)}\\n.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}\\n.mat-select-arrow{color:rgba(0,0,0,.54)}\\n.mat-select-panel{background:#fff}\\n.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple){background:rgba(0,0,0,.12)}\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow{color:#3f51b5}\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow{color:#ff4081}\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow{color:rgba(0,0,0,.38)}\\n.mat-drawer-container{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-drawer{background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-drawer.mat-drawer-push{background-color:#fff}\\n.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-drawer-side{border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(0,0,0,.6)}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background-color:#ff4081}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar{background-color:rgba(255,64,129,.54)}\\n.mat-slide-toggle.mat-checked .mat-ripple-element{background-color:#ff4081}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb{background-color:#3f51b5}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar{background-color:rgba(63,81,181,.54)}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element{background-color:#3f51b5}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb{background-color:#f44336}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar{background-color:rgba(244,67,54,.54)}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element{background-color:#f44336}\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:#000}\\n.mat-slide-toggle-thumb{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12);background-color:#fafafa}\\n.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}\\n.mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label,.mat-primary .mat-slider-track-fill{background-color:#3f51b5}\\n.mat-primary .mat-slider-thumb-label-text{color:#fff}\\n.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label,.mat-accent .mat-slider-track-fill{background-color:#ff4081}\\n.mat-accent .mat-slider-thumb-label-text{color:#fff}\\n.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label,.mat-warn .mat-slider-track-fill{background-color:#f44336}\\n.mat-warn .mat-slider-thumb-label-text{color:#fff}\\n.mat-slider-focus-ring{background-color:rgba(255,64,129,.2)}\\n.cdk-focused .mat-slider-track-background,.mat-slider:hover .mat-slider-track-background{background-color:rgba(0,0,0,.38)}\\n.mat-slider-disabled .mat-slider-thumb,.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill{background-color:rgba(0,0,0,.26)}\\n.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(0,0,0,.12)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:rgba(0,0,0,.87)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb{border-color:rgba(0,0,0,.38)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}\\n.mat-slider-has-ticks .mat-slider-wrapper::after{border-color:rgba(0,0,0,.7)}\\n.mat-slider-horizontal .mat-slider-ticks{background-image:repeating-linear-gradient(to right,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent);background-image:-moz-repeating-linear-gradient(.0001deg,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-slider-vertical .mat-slider-ticks{background-image:repeating-linear-gradient(to bottom,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover{background-color:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-step-header:hover{background:0 0}}\\n.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(0,0,0,.54)}\\n.mat-step-header .mat-step-icon{background-color:rgba(0,0,0,.54);color:#fff}\\n.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#3f51b5;color:#fff}\\n.mat-step-header .mat-step-icon-state-error{background-color:transparent;color:#f44336}\\n.mat-step-header .mat-step-label.mat-step-label-active{color:rgba(0,0,0,.87)}\\n.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}\\n.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#fff}\\n.mat-stepper-vertical-line::before{border-left-color:rgba(0,0,0,.12)}\\n.mat-horizontal-stepper-header::after,.mat-horizontal-stepper-header::before,.mat-stepper-horizontal-line{border-top-color:rgba(0,0,0,.12)}\\n.mat-sort-header-arrow{color:#757575}\\n.mat-tab-header,.mat-tab-nav-bar{border-bottom:1px solid rgba(0,0,0,.12)}\\n.mat-tab-group-inverted-header .mat-tab-header,.mat-tab-group-inverted-header .mat-tab-nav-bar{border-top:1px solid rgba(0,0,0,.12);border-bottom:none}\\n.mat-tab-label,.mat-tab-link{color:rgba(0,0,0,.87)}\\n.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.38)}\\n.mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.87)}\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.38)}\\n.mat-tab-group[class*=mat-background-] .mat-tab-header,.mat-tab-nav-bar[class*=mat-background-]{border-bottom:none;border-top:none}\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary .mat-ink-bar{background-color:#3f51b5}\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent .mat-ink-bar{background-color:#ff4081}\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn .mat-ink-bar{background-color:#f44336}\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-background-primary .mat-tab-header,.mat-tab-group.mat-background-primary .mat-tab-links,.mat-tab-nav-bar.mat-background-primary .mat-tab-header,.mat-tab-nav-bar.mat-background-primary .mat-tab-links{background-color:#3f51b5}\\n.mat-tab-group.mat-background-primary .mat-tab-label,.mat-tab-group.mat-background-primary .mat-tab-link,.mat-tab-nav-bar.mat-background-primary .mat-tab-label,.mat-tab-nav-bar.mat-background-primary .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-background-accent .mat-tab-header,.mat-tab-group.mat-background-accent .mat-tab-links,.mat-tab-nav-bar.mat-background-accent .mat-tab-header,.mat-tab-nav-bar.mat-background-accent .mat-tab-links{background-color:#ff4081}\\n.mat-tab-group.mat-background-accent .mat-tab-label,.mat-tab-group.mat-background-accent .mat-tab-link,.mat-tab-nav-bar.mat-background-accent .mat-tab-label,.mat-tab-nav-bar.mat-background-accent .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-background-warn .mat-tab-header,.mat-tab-group.mat-background-warn .mat-tab-links,.mat-tab-nav-bar.mat-background-warn .mat-tab-header,.mat-tab-nav-bar.mat-background-warn .mat-tab-links{background-color:#f44336}\\n.mat-tab-group.mat-background-warn .mat-tab-label,.mat-tab-group.mat-background-warn .mat-tab-link,.mat-tab-nav-bar.mat-background-warn .mat-tab-label,.mat-tab-nav-bar.mat-background-warn .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}\\n.mat-toolbar.mat-primary{background:#3f51b5;color:#fff}\\n.mat-toolbar.mat-accent{background:#ff4081;color:#fff}\\n.mat-toolbar.mat-warn{background:#f44336;color:#fff}\\n.mat-toolbar .mat-focused .mat-form-field-ripple,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-form-field-underline{background-color:currentColor}\\n.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-select-value{color:inherit}\\n.mat-toolbar .mat-input-element{caret-color:currentColor}\\n.mat-tooltip{background:rgba(97,97,97,.9)}\\n.mat-tree{background:#fff}\\n.mat-nested-tree-node,.mat-tree-node{color:rgba(0,0,0,.87)}\\n.mat-snack-bar-container{color:rgba(255,255,255,.7);background:#323232;box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-simple-snackbar-action{color:#ff4081}\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 500; }\\n.mat-card-header .mat-card-title {\\n  font-size: 20px; }\\n.mat-card-subtitle,\\n.mat-card-content {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n@media print {\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n    -webkit-transform: translateY(-1.28122em) scale(0.75);\\n            transform: translateY(-1.28122em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.28121em) scale(0.75);\\n            transform: translateY(-1.28121em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.2812em) scale(0.75);\\n            transform: translateY(-1.2812em) scale(0.75); } }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-sub-label-error {\\n  font-weight: normal; }\\n.mat-step-label-error {\\n  font-size: 14px; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 8px;\\n  padding-bottom: 8px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-base .mat-list-item {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-list-option {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list-base[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden;\\n  position: relative; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.32); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-active {\\n    background: rgba(0, 0, 0, 0.04);\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-option.mat-option-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #69f0ae; }\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-optgroup-disabled .mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-pseudo-checkbox {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-pseudo-checkbox::after {\\n    color: #fafafa; }\\n.mat-pseudo-checkbox-checked,\\n.mat-pseudo-checkbox-indeterminate,\\n.mat-accent .mat-pseudo-checkbox-checked,\\n.mat-accent .mat-pseudo-checkbox-indeterminate {\\n  background: #69f0ae; }\\n.mat-primary .mat-pseudo-checkbox-checked,\\n.mat-primary .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-warn .mat-pseudo-checkbox-checked,\\n.mat-warn .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\\n  background: #b0b0b0; }\\n.mat-elevation-z0 {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z1 {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z2 {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z3 {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z4 {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z5 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z6 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z7 {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z8 {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z9 {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z10 {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z11 {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z12 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z13 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z14 {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z15 {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z16 {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z17 {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z18 {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z19 {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z20 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z21 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z22 {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z23 {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z24 {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n.mat-app-background {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-theme-loaded-marker {\\n  display: none; }\\n.mat-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-autocomplete-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n    background: white; }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n      color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n@media (-ms-high-contrast: active) {\\n    .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-accent .mat-badge-content {\\n  background: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-warn .mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n.mat-badge {\\n  position: relative; }\\n.mat-badge-hidden .mat-badge-content {\\n  display: none; }\\n.mat-badge-disabled .mat-badge-content {\\n  background: #b9b9b9;\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-badge-content {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  transition: -webkit-transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\\n  -webkit-transform: scale(0.6);\\n          transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none; }\\n.mat-badge-content.mat-badge-active {\\n  -webkit-transform: none;\\n          transform: none; }\\n.mat-badge-small .mat-badge-content {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px; }\\n.mat-badge-small.mat-badge-above .mat-badge-content {\\n  top: -8px; }\\n.mat-badge-small.mat-badge-below .mat-badge-content {\\n  bottom: -8px; }\\n.mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -16px; }\\n.mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -16px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -8px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -8px; }\\n.mat-badge-medium .mat-badge-content {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px; }\\n.mat-badge-medium.mat-badge-above .mat-badge-content {\\n  top: -11px; }\\n.mat-badge-medium.mat-badge-below .mat-badge-content {\\n  bottom: -11px; }\\n.mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -22px; }\\n.mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -22px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -11px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -11px; }\\n.mat-badge-large .mat-badge-content {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px; }\\n.mat-badge-large.mat-badge-above .mat-badge-content {\\n  top: -14px; }\\n.mat-badge-large.mat-badge-below .mat-badge-content {\\n  bottom: -14px; }\\n.mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -28px; }\\n.mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -28px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -14px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -14px; }\\n.mat-bottom-sheet-container {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-button, .mat-icon-button, .mat-stroked-button {\\n  color: inherit;\\n  background: transparent; }\\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\\n    color: #f44336; }\\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\\n    color: #69f0ae; }\\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\\n    color: #f44336; }\\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\\n    background-color: #69f0ae; }\\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\\n    opacity: 0.1;\\n    background-color: currentColor; }\\n.mat-button-focus-overlay {\\n  background: black; }\\n.mat-stroked-button:not([disabled]) {\\n  border-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\\n  color: rgba(0, 0, 0, 0.87);\\n  background-color: white; }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    color: white; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    color: white; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\\n    background-color: rgba(0, 0, 0, 0.1); }\\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-stroked-button:not([class*='mat-elevation-z']), .mat-flat-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([class*='mat-elevation-z']), .mat-mini-fab:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([disabled]):active:not([class*='mat-elevation-z']), .mat-mini-fab:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-fab[disabled]:not([class*='mat-elevation-z']), .mat-mini-fab[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone,\\n.mat-button-toggle-group {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  box-shadow: none; }\\n.mat-button-toggle {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-button-toggle .mat-button-toggle-focus-overlay {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-appearance-standard {\\n  color: rgba(0, 0, 0, 0.87);\\n  background: white; }\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\\n    background-color: black; }\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12); }\\n[dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: none;\\n  border-top: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-checked {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-button-toggle-disabled {\\n  color: rgba(0, 0, 0, 0.26);\\n  background-color: #eeeeee; }\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\\n    background: white; }\\n.mat-button-toggle-disabled.mat-button-toggle-checked {\\n    background-color: #bdbdbd; }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  border: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-card {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-card:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card.mat-card-flat:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card-subtitle {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-frame {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-checkmark {\\n  fill: #fafafa; }\\n.mat-checkbox-checkmark-path {\\n  stroke: #fafafa !important; }\\n@media (-ms-high-contrast: black-on-white) {\\n    .mat-checkbox-checkmark-path {\\n      stroke: #000 !important; } }\\n.mat-checkbox-mixedmark {\\n  background-color: #fafafa; }\\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\\n  background-color: #69f0ae; }\\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #b0b0b0; }\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\\n  border-color: #b0b0b0; }\\n.mat-checkbox-disabled .mat-checkbox-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-disabled {\\n    opacity: 0.5; } }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-background {\\n    background: none; } }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\\n    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-disabled {\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip::after {\\n    background: black; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\\n  background-color: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\\n    background: rgba(0, 0, 0, 0.1); }\\n.mat-table {\\n  background: white; }\\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\\nmat-header-row, mat-row, mat-footer-row,\\n[mat-header-row], [mat-row], [mat-footer-row],\\n.mat-table-sticky {\\n  background: inherit; }\\nmat-row, mat-header-row, mat-footer-row,\\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\\n.mat-header-cell {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-cell, .mat-footer-cell {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-calendar-arrow {\\n  border-top-color: rgba(0, 0, 0, 0.54); }\\n.mat-datepicker-toggle,\\n.mat-datepicker-content .mat-calendar-next-button,\\n.mat-datepicker-content .mat-calendar-previous-button {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-table-header {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-table-header-divider::after {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-calendar-body-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-body-cell-content {\\n  color: rgba(0, 0, 0, 0.87);\\n  border-color: transparent; }\\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.18); }\\n.mat-calendar-body-selected {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\\n  background-color: rgba(244, 67, 54, 0.4); }\\n.mat-calendar-body-today.mat-calendar-body-selected {\\n  box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\\n    background-color: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(105, 240, 174, 0.4); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\\n    background-color: #f44336;\\n    color: white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(244, 67, 54, 0.4); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content-touch {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-datepicker-toggle-active {\\n  color: #f44336; }\\n.mat-datepicker-toggle-active.mat-accent {\\n    color: #69f0ae; }\\n.mat-datepicker-toggle-active.mat-warn {\\n    color: #f44336; }\\n.mat-dialog-container {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-divider-vertical {\\n  border-right-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-action-row {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-keyboard-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-program-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']):hover {\\n  background: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\\n.mat-expansion-panel-header:hover {\\n    background: white; } }\\n.mat-expansion-panel-header-title {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel-header-description,\\n.mat-expansion-indicator::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-expansion-panel-header[aria-disabled='true'] {\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\\n    color: inherit; }\\n.mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-hint {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-form-field.mat-focused .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\\n    color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\\n    color: #f44336; }\\n.mat-focused .mat-form-field-required-marker {\\n  color: #69f0ae; }\\n.mat-form-field-ripple {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\\n    background-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\\n  color: #69f0ae; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\\n    color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\\n  background-color: #f44336; }\\n.mat-error {\\n  color: #f44336; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-hint {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-standard .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-fill .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.02); }\\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\\n  background-color: transparent; }\\n.mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.12); }\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\\n  color: #69f0ae; }\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.06); }\\n.mat-icon.mat-primary {\\n  color: #f44336; }\\n.mat-icon.mat-accent {\\n  color: #69f0ae; }\\n.mat-icon.mat-warn {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-input-element:disabled,\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-input-element {\\n  caret-color: #f44336; }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-accent .mat-input-element {\\n  caret-color: #69f0ae; }\\n.mat-warn .mat-input-element,\\n.mat-form-field-invalid .mat-input-element {\\n  caret-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-list-base .mat-list-item {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-list-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-subheader {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-list-item-disabled {\\n  background-color: #eeeeee; }\\n.mat-list-option:hover, .mat-list-option:focus,\\n.mat-nav-list .mat-list-item:hover,\\n.mat-nav-list .mat-list-item:focus {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-menu-panel {\\n  background: white; }\\n.mat-menu-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-menu-item {\\n  background: transparent;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-menu-item .mat-icon-no-color,\\n.mat-menu-item-submenu-trigger::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-menu-item:hover:not([disabled]),\\n.mat-menu-item.cdk-program-focused:not([disabled]),\\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\\n.mat-menu-item-highlighted:not([disabled]) {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-paginator {\\n  background: white; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-paginator-decrement,\\n.mat-paginator-increment {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-paginator-first,\\n.mat-paginator-last {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-icon-button[disabled] .mat-paginator-decrement,\\n.mat-icon-button[disabled] .mat-paginator-increment,\\n.mat-icon-button[disabled] .mat-paginator-first,\\n.mat-icon-button[disabled] .mat-paginator-last {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\\n  fill: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\\n  background-color: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\\n  background-color: #69f0ae; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-spinner circle, .mat-spinner circle {\\n  stroke: #f44336; }\\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\\n  stroke: #69f0ae; }\\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\\n  stroke: #f44336; }\\n.mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #69f0ae; }\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\\n  background-color: #69f0ae; }\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button .mat-ripple-element {\\n  background-color: black; }\\n.mat-select-value {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-select-placeholder {\\n  color: rgba(0, 0, 0, 0.42); }\\n.mat-select-disabled .mat-select-value {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-select-panel {\\n  background: white; }\\n.mat-select-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\\n    background: rgba(0, 0, 0, 0.12); }\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\\n  color: #69f0ae; }\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-drawer-container {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer.mat-drawer-push {\\n    background-color: white; }\\n.mat-drawer:not(.mat-drawer-side) {\\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side {\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side.mat-drawer-end {\\n    border-left: solid 1px rgba(0, 0, 0, 0.12);\\n    border-right: none; }\\n[dir='rtl'] .mat-drawer-side {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\\n  border-right: none; }\\n[dir='rtl'] .mat-drawer-side.mat-drawer-end {\\n    border-left: none;\\n    border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-backdrop.mat-drawer-shown {\\n  background-color: rgba(0, 0, 0, 0.6); }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(105, 240, 174, 0.54); }\\n.mat-slide-toggle.mat-checked .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\\n  background-color: black; }\\n.mat-slide-toggle-thumb {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n  background-color: #fafafa; }\\n.mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-primary .mat-slider-track-fill,\\n.mat-primary .mat-slider-thumb,\\n.mat-primary .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-primary .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-accent .mat-slider-track-fill,\\n.mat-accent .mat-slider-thumb,\\n.mat-accent .mat-slider-thumb-label {\\n  background-color: #69f0ae; }\\n.mat-accent .mat-slider-thumb-label-text {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-warn .mat-slider-track-fill,\\n.mat-warn .mat-slider-thumb,\\n.mat-warn .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-warn .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-slider-focus-ring {\\n  background-color: rgba(105, 240, 174, 0.2); }\\n.mat-slider:hover .mat-slider-track-background,\\n.cdk-focused .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-disabled .mat-slider-track-background,\\n.mat-slider-disabled .mat-slider-track-fill,\\n.mat-slider-disabled .mat-slider-thumb {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-disabled:hover .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value .mat-slider-focus-ring {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26);\\n  background-color: transparent; }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-has-ticks .mat-slider-wrapper::after {\\n  border-color: rgba(0, 0, 0, 0.7); }\\n.mat-slider-horizontal .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-slider-vertical .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-step-header:hover {\\n    background: none; } }\\n.mat-step-header .mat-step-label,\\n.mat-step-header .mat-step-optional {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-step-header .mat-step-icon {\\n  background-color: rgba(0, 0, 0, 0.54);\\n  color: white; }\\n.mat-step-header .mat-step-icon-selected,\\n.mat-step-header .mat-step-icon-state-done,\\n.mat-step-header .mat-step-icon-state-edit {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-step-header .mat-step-icon-state-error {\\n  background-color: transparent;\\n  color: #f44336; }\\n.mat-step-header .mat-step-label.mat-step-label-active {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-step-header .mat-step-label.mat-step-label-error {\\n  color: #f44336; }\\n.mat-stepper-horizontal, .mat-stepper-vertical {\\n  background-color: white; }\\n.mat-stepper-vertical-line::before {\\n  border-left-color: rgba(0, 0, 0, 0.12); }\\n.mat-horizontal-stepper-header::before,\\n.mat-horizontal-stepper-header::after,\\n.mat-stepper-horizontal-line {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-sort-header-arrow {\\n  color: #757575; }\\n.mat-tab-nav-bar,\\n.mat-tab-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\\n.mat-tab-group-inverted-header .mat-tab-header {\\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\\n  border-bottom: none; }\\n.mat-tab-label, .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n.mat-tab-nav-bar[class*='mat-background-'] {\\n  border-bottom: none;\\n  border-top: none; }\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-warn {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n.mat-tooltip {\\n  background: rgba(97, 97, 97, 0.9); }\\n.mat-tree {\\n  background: white; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-snack-bar-container {\\n  color: rgba(255, 255, 255, 0.7);\\n  background: #323232;\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-simple-snackbar-action {\\n  color: #69f0ae; }\\nbody {\\n  margin: 0;\\n  font-family: Roboto; }\\n.warn {\\n  color: #ef9a9a; }\\n.error {\\n  color: #ff1744; }\\n/*\\r\\nStyling of file upload part.\\r\\nfollows https://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/\\r\\n make input file button invisible\\r\\n*/\\n.inputfile {\\n  width: 0.1px;\\n  height: 0.1px;\\n  opacity: 0;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n.inputfile + label {\\n  font-size: 1.25em;\\n  font-weight: 700;\\n  color: black;\\n  background-color: #69f0ae;\\n  display: inline-block;\\n  padding: 20px; }\\n.inputfile:focus + label,\\n.inputfile + label:hover {\\n  background-color: #f44336; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmlsZS1hY2Nlc3NvcnMvZG93bmxvYWQtdXBsb2FkL3RyYW5zbGF0aW9uLWZpbGUtdXBsb2FkL1M6XFxleHBlcmltZW50ZVxcbmd4LWkxOG5zdXBwb3J0XFxwcm9qZWN0c1xcdGlueS10cmFuc2xhdG9yLy4uXFwuLlxcbm9kZV9tb2R1bGVzXFxAYW5ndWxhclxcbWF0ZXJpYWxcXF90aGVtaW5nLnNjc3MiLCJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2Rvd25sb2FkLXVwbG9hZC90cmFuc2xhdGlvbi1maWxlLXVwbG9hZC9TOlxcZXhwZXJpbWVudGVcXG5neC1pMThuc3VwcG9ydFxccHJvamVjdHNcXHRpbnktdHJhbnNsYXRvci9zcmNcXHN0eWxlcy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL21hdGVyaWFsL3ByZWJ1aWx0LXRoZW1lcy9pbmRpZ28tcGluay5jc3MiLCJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2Rvd25sb2FkLXVwbG9hZC90cmFuc2xhdGlvbi1maWxlLXVwbG9hZC90cmFuc2xhdGlvbi1maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZmlsZS1hY2Nlc3NvcnMvZG93bmxvYWQtdXBsb2FkL3RyYW5zbGF0aW9uLWZpbGUtdXBsb2FkL1M6XFxleHBlcmltZW50ZVxcbmd4LWkxOG5zdXBwb3J0XFxwcm9qZWN0c1xcdGlueS10cmFuc2xhdG9yL3NyY1xcYXBwXFxmaWxlLWFjY2Vzc29yc1xcZG93bmxvYWQtdXBsb2FkXFx0cmFuc2xhdGlvbi1maWxlLXVwbG9hZFxcdHJhbnNsYXRpb24tZmlsZS11cGxvYWQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUtBOzs7Ozs7R0FNRztBQW1xQ0gsbUNBQW1DO0FBNCtDbkMsNENBQTRDO0FBd0M1QyxzQkFBc0I7QUNsMkZ0QiwrRUFBK0U7QURxSy9FOzs7Ozs7R0FNRztBQW1xQ0gsbUNBQW1DO0FBNCtDbkMsNENBQTRDO0FB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LGFBdjJHd0IsRUFtNUdyQjtBQXhDSDs7O0lBR0UsK0JBQThCLEVBQy9CO0FBRUQ7Ozs7O0lBS0UsZUFBYyxFQUNmO0FBRUQ7SUFDRSwwQkFBeUIsRUFDMUI7QUF5REQ7RUFDRSxrQ0F0M0ZVLEVBdTNGWDtBQTh0QkQ7RUFDRSxrQkEvZ0hlLEVBZ2hIaEI7QUFFRDs7RUFFRSwyQkF6K0cyQixFQTArRzVCO0FBM3NCRDtFQUdFLGdDQWw5RzZCO0VBbTlHN0Isb0JBQThEO0VBN2lIaEUsNEhBRW1FLEVBOGlIbEU7QUFFRDtFQUNFLGVBL3BHVyxFQWdxR1o7QUN4OEhIO0VBQ0UsVUFBUztFQUNULG9CQUFtQixFQUNwQjtBQUVEO0VBQ0UsZURnZlksRUMvZWI7QUFFRDtFQUNFLGVEc2ZhLEVDcmZkO0FHdkNEOzs7O0VBSUU7QUFDRjtFQUNFLGFBQVk7RUFDWixjQUFhO0VBQ2IsV0FBVTtFQUNWLGlCQUFnQjtFQUNoQixtQkFBa0I7RUFDbEIsWUFBVyxFQUNaO0FBRUQ7RUFDRSxrQkFBaUI7RUFDakIsaUJBQWdCO0VBQ2hCLGFBQVk7RUFDWiwwQkprekJhO0VJanpCYixzQkFBcUI7RUFDckIsY0FBYSxFQUNkO0FBRUQ7O0VBRUUsMEJKNGZZLEVJM2ZiIiwiZmlsZSI6InNyYy9hcHAvZmlsZS1hY2Nlc3NvcnMvZG93bmxvYWQtdXBsb2FkL3RyYW5zbGF0aW9uLWZpbGUtdXBsb2FkL3RyYW5zbGF0aW9uLWZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0IGFsbCB0aGUgdGhlbWluZyBmdW5jdGlvbmFsaXR5LlxuLy8gV2UgY2FuIHVzZSByZWxhdGl2ZSBpbXBvcnRzIGZvciBpbXBvcnRzIGZyb20gdGhlIGNkayBiZWNhdXNlIHdlIGJ1bmRsZSBldmVyeXRoaW5nXG4vLyB1cCBpbnRvIGEgc2luZ2xlIGZsYXQgc2NzcyBmaWxlIGZvciBtYXRlcmlhbC5cbi8vIFdlIHdhbnQgb3ZlcmxheXMgdG8gYWx3YXlzIGFwcGVhciBvdmVyIHVzZXIgY29udGVudCwgc28gc2V0IGEgYmFzZWxpbmVcbi8vIHZlcnkgaGlnaCB6LWluZGV4IGZvciB0aGUgb3ZlcmxheSBjb250YWluZXIsIHdoaWNoIGlzIHdoZXJlIHdlIGNyZWF0ZSB0aGUgbmV3XG4vLyBzdGFja2luZyBjb250ZXh0IGZvciBhbGwgb3ZlcmxheXMuXG4kY2RrLXotaW5kZXgtb3ZlcmxheS1jb250YWluZXI6IDEwMDA7XG4kY2RrLXotaW5kZXgtb3ZlcmxheTogMTAwMDtcbiRjZGstei1pbmRleC1vdmVybGF5LWJhY2tkcm9wOiAxMDAwO1xuXG4vLyBCYWNrZ3JvdW5kIGNvbG9yIGZvciBhbGwgb2YgdGhlIGJhY2tkcm9wc1xuJGNkay1vdmVybGF5LWRhcmstYmFja2Ryb3AtYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjMyKTtcblxuLy8gRGVmYXVsdCBiYWNrZHJvcCBhbmltYXRpb24gaXMgYmFzZWQgb24gdGhlIE1hdGVyaWFsIERlc2lnbiBzd2lmdC1lYXNlLW91dC5cbiRiYWNrZHJvcC1hbmltYXRpb24tZHVyYXRpb246IDQwMG1zICFkZWZhdWx0O1xuJGJhY2tkcm9wLWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpICFkZWZhdWx0O1xuXG5cbkBtaXhpbiBjZGstb3ZlcmxheSgpIHtcbiAgLmNkay1vdmVybGF5LWNvbnRhaW5lciwgLmNkay1nbG9iYWwtb3ZlcmxheS13cmFwcGVyIHtcbiAgICAvLyBEaXNhYmxlIGV2ZW50cyBmcm9tIGJlaW5nIGNhcHR1cmVkIG9uIHRoZSBvdmVybGF5IGNvbnRhaW5lci5cbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgIC8vIFRoZSBjb250YWluZXIgc2hvdWxkIGJlIHRoZSBzaXplIG9mIHRoZSB2aWV3cG9ydC5cbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAvLyBUaGUgb3ZlcmxheS1jb250YWluZXIgaXMgYW4gaW52aXNpYmxlIGVsZW1lbnQgd2hpY2ggY29udGFpbnMgYWxsIGluZGl2aWR1YWwgb3ZlcmxheXMuXG4gIC5jZGstb3ZlcmxheS1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAkY2RrLXotaW5kZXgtb3ZlcmxheS1jb250YWluZXI7XG5cbiAgICAmOmVtcHR5IHtcbiAgICAgIC8vIEhpZGUgdGhlIGVsZW1lbnQgd2hlbiBpdCBkb2Vzbid0IGhhdmUgYW55IGNoaWxkIG5vZGVzLiBUaGlzIGRvZXNuJ3RcbiAgICAgIC8vIGluY2x1ZGUgb3ZlcmxheXMgdGhhdCBoYXZlIGJlZW4gZGV0YWNoZWQsIHJhdGhlciB0aGFuIGRpc3Bvc2VkLlxuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAvLyBXZSB1c2UgYW4gZXh0cmEgd3JhcHBlciBlbGVtZW50IGluIG9yZGVyIHRvIHVzZSBtYWtlIHRoZSBvdmVybGF5IGl0c2VsZiBhIGZsZXggaXRlbS5cbiAgLy8gVGhpcyBtYWtlcyBjZW50ZXJpbmcgdGhlIG92ZXJsYXkgZWFzeSB3aXRob3V0IHJ1bm5pbmcgaW50byB0aGUgc3VicGl4ZWwgcmVuZGVyaW5nXG4gIC8vIHByb2JsZW1zIHRpZWQgdG8gdXNpbmcgYHRyYW5zZm9ybWAgYW5kIHdpdGhvdXQgaW50ZXJmZXJpbmcgd2l0aCB0aGUgb3RoZXIgcG9zaXRpb25cbiAgLy8gc3RyYXRlZ2llcy5cbiAgLmNkay1nbG9iYWwtb3ZlcmxheS13cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAkY2RrLXotaW5kZXgtb3ZlcmxheTtcbiAgfVxuXG4gIC8vIEEgc2luZ2xlIG92ZXJsYXkgcGFuZS5cbiAgLmNkay1vdmVybGF5LXBhbmUge1xuICAgIC8vIE5vdGU6IGl0J3MgaW1wb3J0YW50IGZvciB0aGlzIG9uZSB0byBzdGFydCBvZmYgYGFic29sdXRlYCxcbiAgICAvLyBpbiBvcmRlciBmb3IgdXMgdG8gYmUgYWJsZSB0byBtZWFzdXJlIGl0IGNvcnJlY3RseS5cbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB6LWluZGV4OiAkY2RrLXotaW5kZXgtb3ZlcmxheTtcblxuICAgIC8vIEZvciBjb25uZWN0ZWQtcG9zaXRpb24gb3ZlcmxheXMsIHdlIHNldCBgZGlzcGxheTogZmxleGAgaW5cbiAgICAvLyBvcmRlciB0byBmb3JjZSBgbWF4LXdpZHRoYCBhbmQgYG1heC1oZWlnaHRgIHRvIHRha2UgZWZmZWN0LlxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1heC1oZWlnaHQ6IDEwMCU7XG4gIH1cblxuICAuY2RrLW92ZXJsYXktYmFja2Ryb3Age1xuICAgIC8vIFRPRE8oamVsYm91cm4pOiByZXVzZSBzaWRlbmF2IGZ1bGxzY3JlZW4gbWl4aW4uXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcblxuICAgIHotaW5kZXg6ICRjZGstei1pbmRleC1vdmVybGF5LWJhY2tkcm9wO1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAkYmFja2Ryb3AtYW5pbWF0aW9uLWR1cmF0aW9uICRiYWNrZHJvcC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uO1xuICAgIG9wYWNpdHk6IDA7XG5cbiAgICAmLmNkay1vdmVybGF5LWJhY2tkcm9wLXNob3dpbmcge1xuICAgICAgb3BhY2l0eTogMTtcblxuICAgICAgLy8gSW4gaGlnaCBjb250cmFzdCBtb2RlIHRoZSByZ2JhIGJhY2tncm91bmQgd2lsbCBiZWNvbWUgc29saWQgc28gd2UgbmVlZCB0byBmYWxsIGJhY2tcbiAgICAgIC8vIHRvIG1ha2luZyBpdCBvcGFxdWUgdXNpbmcgYG9wYWNpdHlgLiBOb3RlIHRoYXQgd2UgY2FuJ3QgdXNlIHRoZSBgY2RrLWhpZ2gtY29udHJhc3RgXG4gICAgICAvLyBtaXhpbiwgYmVjYXVzZSB3ZSBjYW4ndCBub3JtYWxpemUgdGhlIGltcG9ydCBwYXRoIHRvIHRoZSBfYTExeS5zY3NzIGJvdGggZm9yIHRoZVxuICAgICAgLy8gc291cmNlIGFuZCB3aGVuIHRoaXMgZmlsZSBpcyBkaXN0cmlidXRlZC4gU2VlICMxMDkwOC5cbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSB7XG4gICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuY2RrLW92ZXJsYXktZGFyay1iYWNrZHJvcCB7XG4gICAgYmFja2dyb3VuZDogJGNkay1vdmVybGF5LWRhcmstYmFja2Ryb3AtYmFja2dyb3VuZDtcbiAgfVxuXG4gIC5jZGstb3ZlcmxheS10cmFuc3BhcmVudC1iYWNrZHJvcCB7XG4gICAgLy8gTm90ZTogYXMgb2YgRmlyZWZveCA1NywgaGF2aW5nIHRoZSBiYWNrZHJvcCBiZSBgYmFja2dyb3VuZDogbm9uZWAgd2lsbCBwcmV2ZW50IGl0IGZyb21cbiAgICAvLyBjYXB0dXJpbmcgdGhlIHVzZXIncyBtb3VzZSBzY3JvbGwgZXZlbnRzLiBTaW5jZSB3ZSBhbHNvIGNhbid0IHVzZSBzb21ldGhpbmcgbGlrZVxuICAgIC8vIGByZ2JhKDAsIDAsIDAsIDApYCwgd2Ugd29yayBhcm91bmQgdGhlIGluY29uc2lzdGVuY3kgYnkgbm90IHNldHRpbmcgdGhlIGJhY2tncm91bmQgYXRcbiAgICAvLyBhbGwgYW5kIHVzaW5nIGBvcGFjaXR5YCB0byBtYWtlIHRoZSBlbGVtZW50IHRyYW5zcGFyZW50LlxuICAgICYsICYuY2RrLW92ZXJsYXktYmFja2Ryb3Atc2hvd2luZyB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgfVxuXG4gIC8vIE92ZXJsYXkgcGFyZW50IGVsZW1lbnQgdXNlZCB3aXRoIHRoZSBjb25uZWN0ZWQgcG9zaXRpb24gc3RyYXRlZ3kuIFVzZWQgdG8gY29uc3RyYWluIHRoZVxuICAvLyBvdmVybGF5IGVsZW1lbnQncyBzaXplIHRvIGZpdCB3aXRoaW4gdGhlIHZpZXdwb3J0LlxuICAuY2RrLW92ZXJsYXktY29ubmVjdGVkLXBvc2l0aW9uLWJvdW5kaW5nLWJveCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6ICRjZGstei1pbmRleC1vdmVybGF5O1xuXG4gICAgLy8gV2UgdXNlIGBkaXNwbGF5OiBmbGV4YCBvbiB0aGlzIGVsZW1lbnQgZXhjbHVzaXZlbHkgZm9yIGNlbnRlcmluZyBjb25uZWN0ZWQgb3ZlcmxheXMuXG4gICAgLy8gV2hlbiAqbm90KiBjZW50ZXJpbmcsIGEgdG9wL2xlZnQvYm90dG9tL3JpZ2h0IHdpbGwgYmUgc2V0IHdoaWNoIG92ZXJyaWRlcyB0aGUgbm9ybWFsXG4gICAgLy8gZmxleCBsYXlvdXQuXG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIC8vIFdlIHVzZSB0aGUgYGNvbHVtbmAgZGlyZWN0aW9uIGhlcmUgdG8gYXZvaWQgc29tZSBmbGV4Ym94IGlzc3VlcyBpbiBFZGdlXG4gICAgLy8gd2hlbiB1c2luZyB0aGUgXCJncm93IGFmdGVyIG9wZW5cIiBvcHRpb25zLlxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAvLyBBZGQgc29tZSBkaW1lbnNpb25zIHNvIHRoZSBlbGVtZW50IGhhcyBhbiBgaW5uZXJUZXh0YCB3aGljaCBzb21lIHBlb3BsZSBkZXBlbmQgb24gaW4gdGVzdHMuXG4gICAgbWluLXdpZHRoOiAxcHg7XG4gICAgbWluLWhlaWdodDogMXB4O1xuICB9XG5cbiAgLy8gVXNlZCB3aGVuIGRpc2FibGluZyBnbG9iYWwgc2Nyb2xsaW5nLlxuICAuY2RrLWdsb2JhbC1zY3JvbGxibG9jayB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuXG4gICAgLy8gTmVjZXNzYXJ5IGZvciB0aGUgY29udGVudCBub3QgdG8gbG9zZSBpdHMgd2lkdGguIE5vdGUgdGhhdCB3ZSdyZSB1c2luZyAxMDAlLCBpbnN0ZWFkIG9mXG4gICAgLy8gMTAwdncsIGJlY2F1c2UgMTAwdncgaW5jbHVkZXMgdGhlIHdpZHRoIHBsdXMgdGhlIHNjcm9sbGJhciwgd2hlcmVhcyAxMDAlIGlzIHRoZSB3aWR0aFxuICAgIC8vIHRoYXQgdGhlIGVsZW1lbnQgaGFkIGJlZm9yZSB3ZSBtYWRlIGl0IGBmaXhlZGAuXG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAvLyBOb3RlOiB0aGlzIHdpbGwgYWx3YXlzIGFkZCBhIHNjcm9sbGJhciB0byB3aGF0ZXZlciBlbGVtZW50IGl0IGlzIG9uLCB3aGljaCBjYW5cbiAgICAvLyBwb3RlbnRpYWxseSByZXN1bHQgaW4gZG91YmxlIHNjcm9sbGJhcnMuIEl0IHNob3VsZG4ndCBiZSBhbiBpc3N1ZSwgYmVjYXVzZSB3ZSB3b24ndFxuICAgIC8vIGJsb2NrIHNjcm9sbGluZyBvbiBhIHBhZ2UgdGhhdCBkb2Vzbid0IGhhdmUgYSBzY3JvbGxiYXIgaW4gdGhlIGZpcnN0IHBsYWNlLlxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgfVxufVxuXG5AbWl4aW4gY2RrLWExMXkge1xuICAuY2RrLXZpc3VhbGx5LWhpZGRlbiB7XG4gICAgYm9yZGVyOiAwO1xuICAgIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgbWFyZ2luOiAtMXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcGFkZGluZzogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDFweDtcblxuICAgIC8vIEF2b2lkIGJyb3dzZXJzIHJlbmRlcmluZyB0aGUgZm9jdXMgcmluZyBpbiBzb21lIGNhc2VzLlxuICAgIG91dGxpbmU6IDA7XG5cbiAgICAvLyBBdm9pZCBzb21lIGNhc2VzIHdoZXJlIHRoZSBicm93c2VyIHdpbGwgc3RpbGwgcmVuZGVyIHRoZSBuYXRpdmUgY29udHJvbHMgKHNlZSAjOTA0OSkuXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxufVxuXG4vKipcbiAqIEFwcGxpZXMgc3R5bGVzIGZvciB1c2VycyBpbiBoaWdoIGNvbnRyYXN0IG1vZGUuIE5vdGUgdGhhdCB0aGlzIG9ubHkgYXBwbGllc1xuICogdG8gTWljcm9zb2Z0IGJyb3dzZXJzLiBDaHJvbWUgY2FuIGJlIGluY2x1ZGVkIGJ5IGNoZWNraW5nIGZvciB0aGUgYGh0bWxbaGNdYFxuICogYXR0cmlidXRlLCBob3dldmVyIENocm9tZSBoYW5kbGVzIGhpZ2ggY29udHJhc3QgZGlmZmVyZW50bHkuXG4gKiBAcGFyYW0gdGFyZ2V0IFdoaWNoIGtpbmQgb2YgaGlnaCBjb250cmFzdCBzZXR0aW5nIHRvIHRhcmdldC4gRGVmYXVsdHMgdG8gYGFjdGl2ZWAsIGNhbiBiZVxuICogICAgYHdoaXRlLW9uLWJsYWNrYCBvciBgYmxhY2stb24td2hpdGVgLlxuICovXG5AbWl4aW4gY2RrLWhpZ2gtY29udHJhc3QoJHRhcmdldDogYWN0aXZlKSB7XG4gIEBtZWRpYSAoLW1zLWhpZ2gtY29udHJhc3Q6ICR0YXJnZXQpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBDb3JlIHN0eWxlcyB0aGF0IGVuYWJsZSBtb25pdG9yaW5nIGF1dG9maWxsIHN0YXRlIG9mIHRleHQgZmllbGRzLlxuQG1peGluIGNkay10ZXh0LWZpZWxkIHtcbiAgLy8gS2V5ZnJhbWVzIHRoYXQgYXBwbHkgbm8gc3R5bGVzLCBidXQgYWxsb3cgdXMgdG8gbW9uaXRvciB3aGVuIGFuIHRleHQgZmllbGQgYmVjb21lcyBhdXRvZmlsbGVkXG4gIC8vIGJ5IHdhdGNoaW5nIGZvciB0aGUgYW5pbWF0aW9uIGV2ZW50cyB0aGF0IGFyZSBmaXJlZCB3aGVuIHRoZXkgc3RhcnQuIE5vdGU6IHRoZSAvKiEqLyBjb21tZW50IGlzXG4gIC8vIG5lZWRlZCB0byBwcmV2ZW50IExpYlNhc3MgZnJvbSBzdHJpcHBpbmcgdGhlIGtleWZyYW1lcyBvdXQuXG4gIC8vIEJhc2VkIG9uOiBodHRwczovL21lZGl1bS5jb20vQGJydW5uL2RldGVjdGluZy1hdXRvZmlsbGVkLWZpZWxkcy1pbi1qYXZhc2NyaXB0LWFlZDU5OGQyNWRhN1xuICBAa2V5ZnJhbWVzIGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLXN0YXJ0IHsvKiEqL31cbiAgQGtleWZyYW1lcyBjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1lbmQgey8qISovfVxuXG4gIC5jZGstdGV4dC1maWVsZC1hdXRvZmlsbC1tb25pdG9yZWQ6LXdlYmtpdC1hdXRvZmlsbCB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLXN0YXJ0O1xuICB9XG5cbiAgLmNkay10ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3JlZDpub3QoOi13ZWJraXQtYXV0b2ZpbGwpIHtcbiAgICBhbmltYXRpb24tbmFtZTogY2RrLXRleHQtZmllbGQtYXV0b2ZpbGwtZW5kO1xuICB9XG5cbiAgLy8gUmVtb3ZlIHRoZSByZXNpemUgaGFuZGxlIG9uIGF1dG9zaXppbmcgdGV4dGFyZWFzLCBiZWNhdXNlIHdoYXRldmVyIGhlaWdodFxuICAvLyB0aGUgdXNlciByZXNpemVkIHRvIHdpbGwgYmUgb3ZlcndyaXR0ZW4gb25jZSB0aGV5IHN0YXJ0IHR5cGluZyBhZ2Fpbi5cbiAgdGV4dGFyZWEuY2RrLXRleHRhcmVhLWF1dG9zaXplIHtcbiAgICByZXNpemU6IG5vbmU7XG4gIH1cblxuICAvLyBUaGlzIGNsYXNzIGlzIHRlbXBvcmFyaWx5IGFwcGxpZWQgdG8gdGhlIHRleHRhcmVhIHdoZW4gaXQgaXMgYmVpbmcgbWVhc3VyZWQuIEl0IGlzIGltbWVkaWF0ZWx5XG4gIC8vIHJlbW92ZWQgd2hlbiBtZWFzdXJpbmcgaXMgY29tcGxldGUuIFdlIHVzZSBgIWltcG9ydGFudGAgcnVsZXMgaGVyZSB0byBtYWtlIHN1cmUgdXNlci1zcGVjaWZpZWRcbiAgLy8gcnVsZXMgZG8gbm90IGludGVyZmVyZSB3aXRoIHRoZSBtZWFzdXJlbWVudC5cbiAgdGV4dGFyZWEuY2RrLXRleHRhcmVhLWF1dG9zaXplLW1lYXN1cmluZyB7XG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICAgIC8vIEhhdmluZyAycHggdG9wIGFuZCBib3R0b20gcGFkZGluZyBzZWVtcyB0byBmaXggYSBidWcgd2hlcmUgQ2hyb21lIGdldHMgYW4gaW5jb3JyZWN0XG4gICAgLy8gbWVhc3VyZW1lbnQuIFdlIGp1c3QgaGF2ZSB0byBhY2NvdW50IGZvciBpdCBsYXRlciBhbmQgc3VidHJhY3QgaXQgb2ZmIHRoZSBmaW5hbCByZXN1bHQuXG4gICAgcGFkZGluZzogMnB4IDAgIWltcG9ydGFudDtcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveCAhaW1wb3J0YW50O1xuICB9XG59XG5cbi8vIFVzZWQgdG8gZ2VuZXJhdGUgVUlEcyBmb3Iga2V5ZnJhbWVzIHVzZWQgdG8gY2hhbmdlIHRoZSB0ZXh0IGZpZWxkIGF1dG9maWxsIHN0eWxlcy5cbiRjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1jb2xvci1mcmFtZS1jb3VudDogMDtcblxuLy8gTWl4aW4gdXNlZCB0byBhcHBseSBjdXN0b20gYmFja2dyb3VuZCBhbmQgZm9yZWdyb3VuZCBjb2xvcnMgdG8gYW4gYXV0b2ZpbGxlZCB0ZXh0IGZpZWxkLlxuLy8gQmFzZWQgb246IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzI3ODE1NDkvXG4vLyByZW1vdmluZy1pbnB1dC1iYWNrZ3JvdW5kLWNvbG91ci1mb3ItY2hyb21lLWF1dG9jb21wbGV0ZSNhbnN3ZXItMzc0MzIyNjBcbkBtaXhpbiBjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1jb2xvcigkYmFja2dyb3VuZCwgJGZvcmVncm91bmQ6JycpIHtcbiAgQGtleWZyYW1lcyBjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1jb2xvci0jeyRjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1jb2xvci1mcmFtZS1jb3VudH0ge1xuICAgIHRvIHtcbiAgICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuICAgICAgQGlmICRmb3JlZ3JvdW5kICE9ICcnIHsgY29sb3I6ICRmb3JlZ3JvdW5kOyB9XG4gICAgfVxuICB9XG5cbiAgJjotd2Via2l0LWF1dG9maWxsIHtcbiAgICBhbmltYXRpb24tbmFtZTogY2RrLXRleHQtZmllbGQtYXV0b2ZpbGwtY29sb3ItI3skY2RrLXRleHQtZmllbGQtYXV0b2ZpbGwtY29sb3ItZnJhbWUtY291bnR9O1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gIH1cblxuICAmLmNkay10ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3JlZDotd2Via2l0LWF1dG9maWxsIHtcbiAgICBhbmltYXRpb24tbmFtZTogY2RrLXRleHQtZmllbGQtYXV0b2ZpbGwtc3RhcnQsXG4gICAgICAgICAgICAgICAgICAgIGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLWNvbG9yLSN7JGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLWNvbG9yLWZyYW1lLWNvdW50fTtcbiAgfVxuXG4gICRjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1jb2xvci1mcmFtZS1jb3VudDpcbiAgICAgICRjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1jb2xvci1mcmFtZS1jb3VudCArIDEgIWdsb2JhbDtcbn1cblxuXG4vLyBDb3JlIHN0eWxlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIGFwcGx5IG1hdGVyaWFsIGRlc2lnbiB0cmVhdG1lbnRzIHRvIGFueSBlbGVtZW50LlxuLy8gTWVkaWEgcXVlcmllc1xuLy8gVE9ETyhqb3NlcGhwZXJyb3R0KTogQ2hhbmdlICRtYXQteHNtYWxsIGFuZCAkbWF0LXNtYWxsIHVzYWdlcyB0byByZWx5IG9uIEJyZWFrcG9pbnRPYnNlcnZlcixcbiRtYXQteHNtYWxsOiAnbWF4LXdpZHRoOiA1OTlweCc7XG4kbWF0LXNtYWxsOiAnbWF4LXdpZHRoOiA5NTlweCc7XG5cbi8vIFRPRE86IFJldmlzaXQgYWxsIHotaW5kaWNlcyBiZWZvcmUgYmV0YVxuLy8gei1pbmRleCBtYXN0ZXIgbGlzdFxuXG4kei1pbmRleC1mYWI6IDIwICFkZWZhdWx0O1xuJHotaW5kZXgtZHJhd2VyOiAxMDAgIWRlZmF1bHQ7XG5cbi8vIEdsb2JhbCBjb25zdGFudHNcbiRwaTogMy4xNDE1OTI2NTtcblxuLy8gUGFkZGluZyBiZXR3ZWVuIGlucHV0IHRvZ2dsZXMgYW5kIHRoZWlyIGxhYmVsc1xuJG1hdC10b2dnbGUtcGFkZGluZzogOHB4ICFkZWZhdWx0O1xuLy8gV2lkdGggYW5kIGhlaWdodCBvZiBpbnB1dCB0b2dnbGVzXG4kbWF0LXRvZ2dsZS1zaXplOiAyMHB4ICFkZWZhdWx0O1xuXG4vLyBFYXNpbmcgQ3VydmVzXG4vLyBUT0RPKGplbGJvdXJuKTogYWxsIG9mIHRoZXNlIG5lZWQgdG8gYmUgcmV2aXNpdGVkXG5cbi8vIFRoZSBkZWZhdWx0IGFuaW1hdGlvbiBjdXJ2ZXMgdXNlZCBieSBtYXRlcmlhbCBkZXNpZ24uXG4kbWF0LWxpbmVhci1vdXQtc2xvdy1pbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLCAwLCAwLjIsIDAuMSkgIWRlZmF1bHQ7XG4kbWF0LWZhc3Qtb3V0LXNsb3ctaW4tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpICFkZWZhdWx0O1xuJG1hdC1mYXN0LW91dC1saW5lYXItaW4tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC40LCAwLCAxLCAxKSAhZGVmYXVsdDtcblxuJGVhc2UtaW4tb3V0LWN1cnZlLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4zNSwgMCwgMC4yNSwgMSkgIWRlZmF1bHQ7XG5cbiRzd2lmdC1lYXNlLW91dC1kdXJhdGlvbjogNDAwbXMgIWRlZmF1bHQ7XG4kc3dpZnQtZWFzZS1vdXQtdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4yNSwgMC44LCAwLjI1LCAxKSAhZGVmYXVsdDtcbiRzd2lmdC1lYXNlLW91dDogYWxsICRzd2lmdC1lYXNlLW91dC1kdXJhdGlvbiAkc3dpZnQtZWFzZS1vdXQtdGltaW5nLWZ1bmN0aW9uICFkZWZhdWx0O1xuXG4kc3dpZnQtZWFzZS1pbi1kdXJhdGlvbjogMzAwbXMgIWRlZmF1bHQ7XG4kc3dpZnQtZWFzZS1pbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjU1LCAwLCAwLjU1LCAwLjIpICFkZWZhdWx0O1xuJHN3aWZ0LWVhc2UtaW46IGFsbCAkc3dpZnQtZWFzZS1pbi1kdXJhdGlvbiAkc3dpZnQtZWFzZS1pbi10aW1pbmctZnVuY3Rpb24gIWRlZmF1bHQ7XG5cbiRzd2lmdC1lYXNlLWluLW91dC1kdXJhdGlvbjogNTAwbXMgIWRlZmF1bHQ7XG4kc3dpZnQtZWFzZS1pbi1vdXQtdGltaW5nLWZ1bmN0aW9uOiAkZWFzZS1pbi1vdXQtY3VydmUtZnVuY3Rpb24gIWRlZmF1bHQ7XG4kc3dpZnQtZWFzZS1pbi1vdXQ6IGFsbCAkc3dpZnQtZWFzZS1pbi1vdXQtZHVyYXRpb24gJHN3aWZ0LWVhc2UtaW4tb3V0LXRpbWluZy1mdW5jdGlvbiAhZGVmYXVsdDtcblxuJHN3aWZ0LWxpbmVhci1kdXJhdGlvbjogODBtcyAhZGVmYXVsdDtcbiRzd2lmdC1saW5lYXItdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXIgIWRlZmF1bHQ7XG4kc3dpZnQtbGluZWFyOiBhbGwgJHN3aWZ0LWxpbmVhci1kdXJhdGlvbiAkc3dpZnQtbGluZWFyLXRpbWluZy1mdW5jdGlvbiAhZGVmYXVsdDtcblxuXG5cbi8vIEEgY29sbGVjdGlvbiBvZiBtaXhpbnMgYW5kIENTUyBjbGFzc2VzIHRoYXQgY2FuIGJlIHVzZWQgdG8gYXBwbHkgZWxldmF0aW9uIHRvIGEgbWF0ZXJpYWxcbi8vIGVsZW1lbnQuXG4vLyBTZWU6IGh0dHBzOi8vbWF0ZXJpYWwuaW8vZGVzaWduL2Vudmlyb25tZW50L2VsZXZhdGlvbi5odG1sXG4vLyBFeGFtcGxlczpcbi8vXG4vL1xuLy8gLm1hdC1mb28ge1xuLy8gICBAaW5jbHVkZSAkbWF0LWVsZXZhdGlvbigyKTtcbi8vXG4vLyAgICY6YWN0aXZlIHtcbi8vICAgICBAaW5jbHVkZSAkbWF0LWVsZXZhdGlvbig4KTtcbi8vICAgfVxuLy8gfVxuLy9cbi8vIDxkaXYgaWQ9XCJleHRlcm5hbC1jYXJkXCIgY2xhc3M9XCJtYXQtZWxldmF0aW9uLXoyXCI+PHA+U29tZSBjb250ZW50PC9wPjwvZGl2PlxuLy9cbi8vIEZvciBhbiBleHBsYW5hdGlvbiBvZiB0aGUgZGVzaWduIGJlaGluZCBob3cgZWxldmF0aW9uIGlzIGltcGxlbWVudGVkLCBzZWUgdGhlIGRlc2lnbiBkb2MgYXRcbi8vIGh0dHBzOi8vZ29vLmdsL0txMGs5Wi5cblxuLy8gQ29sb3JzIGZvciB1bWJyYSwgcGVudW1icmEsIGFuZCBhbWJpZW50IHNoYWRvd3MuIEFzIGRlc2NyaWJlZCBpbiB0aGUgZGVzaWduIGRvYywgZWFjaCBlbGV2YXRpb25cbi8vIGxldmVsIGlzIGNyZWF0ZWQgdXNpbmcgYSBzZXQgb2YgMyBzaGFkb3cgdmFsdWVzLCBvbmUgZm9yIHVtYnJhICh0aGUgc2hhZG93IHJlcHJlc2VudGluZyB0aGVcbi8vIHNwYWNlIGNvbXBsZXRlbHkgb2JzY3VyZWQgYnkgYW4gb2JqZWN0IHJlbGF0aXZlIHRvIGl0cyBsaWdodCBzb3VyY2UpLCBvbmUgZm9yIHBlbnVtYnJhICh0aGVcbi8vIHNwYWNlIHBhcnRpYWxseSBvYnNjdXJlZCBieSBhbiBvYmplY3QpLCBhbmQgb25lIGZvciBhbWJpZW50ICh0aGUgc3BhY2Ugd2hpY2ggY29udGFpbnMgdGhlIG9iamVjdFxuLy8gaXRzZWxmKS4gRm9yIGEgZnVydGhlciBleHBsYW5hdGlvbiBvZiB0aGVzZSB0ZXJtcyBhbmQgdGhlaXIgbWVhbmluZ3MsIHNlZVxuLy8gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVW1icmEsX3BlbnVtYnJhX2FuZF9hbnR1bWJyYS5cblxuLy8gTWFwcyBmb3IgdGhlIGRpZmZlcmVudCBzaGFkb3cgc2V0cyBhbmQgdGhlaXIgdmFsdWVzIHdpdGhpbiBlYWNoIHotc3BhY2UuIFRoZXNlIHZhbHVlcyB3ZXJlXG4vLyBjcmVhdGVkIGJ5IHRha2luZyBhIGZldyByZWZlcmVuY2Ugc2hhZG93IHNldHMgY3JlYXRlZCBieSBHb29nbGUncyBEZXNpZ25lcnMgYW5kIGludGVycG9sYXRpbmdcbi8vIGFsbCBvZiB0aGUgdmFsdWVzIGJldHdlZW4gdGhlbS5cblxuQGZ1bmN0aW9uIF9nZXQtdW1icmEtbWFwKCRjb2xvciwgJG9wYWNpdHkpIHtcbiAgQHJldHVybiAoXG4gICAgMDogJzBweCAwcHggMHB4IDBweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICAxOiAnMHB4IDJweCAxcHggLTFweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICAyOiAnMHB4IDNweCAxcHggLTJweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICAzOiAnMHB4IDNweCAzcHggLTJweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICA0OiAnMHB4IDJweCA0cHggLTFweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICA1OiAnMHB4IDNweCA1cHggLTFweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICA2OiAnMHB4IDNweCA1cHggLTFweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICA3OiAnMHB4IDRweCA1cHggLTJweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICA4OiAnMHB4IDVweCA1cHggLTNweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICA5OiAnMHB4IDVweCA2cHggLTNweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICAxMDogJzBweCA2cHggNnB4IC0zcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjIpfScsXG4gICAgMTE6ICcwcHggNnB4IDdweCAtNHB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDEyOiAnMHB4IDdweCA4cHggLTRweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICAxMzogJzBweCA3cHggOHB4IC00cHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjIpfScsXG4gICAgMTQ6ICcwcHggN3B4IDlweCAtNHB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDE1OiAnMHB4IDhweCA5cHggLTVweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICAxNjogJzBweCA4cHggMTBweCAtNXB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDE3OiAnMHB4IDhweCAxMXB4IC01cHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjIpfScsXG4gICAgMTg6ICcwcHggOXB4IDExcHggLTVweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMil9JyxcbiAgICAxOTogJzBweCA5cHggMTJweCAtNnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDIwOiAnMHB4IDEwcHggMTNweCAtNnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDIxOiAnMHB4IDEwcHggMTNweCAtNnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDIyOiAnMHB4IDEwcHggMTRweCAtNnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDIzOiAnMHB4IDExcHggMTRweCAtN3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nLFxuICAgIDI0OiAnMHB4IDExcHggMTVweCAtN3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4yKX0nXG4gICk7XG59XG5cbkBmdW5jdGlvbiBfZ2V0LXBlbnVtYnJhLW1hcCgkY29sb3IsICRvcGFjaXR5KSB7XG4gIEByZXR1cm4gKFxuICAgIDA6ICcwcHggMHB4IDBweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjE0KX0nLFxuICAgIDE6ICcwcHggMXB4IDFweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjE0KX0nLFxuICAgIDI6ICcwcHggMnB4IDJweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjE0KX0nLFxuICAgIDM6ICcwcHggM3B4IDRweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjE0KX0nLFxuICAgIDQ6ICcwcHggNHB4IDVweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjE0KX0nLFxuICAgIDU6ICcwcHggNXB4IDhweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjE0KX0nLFxuICAgIDY6ICcwcHggNnB4IDEwcHggMHB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICA3OiAnMHB4IDdweCAxMHB4IDFweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTQpfScsXG4gICAgODogJzBweCA4cHggMTBweCAxcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjE0KX0nLFxuICAgIDk6ICcwcHggOXB4IDEycHggMXB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxMDogJzBweCAxMHB4IDE0cHggMXB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxMTogJzBweCAxMXB4IDE1cHggMXB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxMjogJzBweCAxMnB4IDE3cHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxMzogJzBweCAxM3B4IDE5cHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxNDogJzBweCAxNHB4IDIxcHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxNTogJzBweCAxNXB4IDIycHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxNjogJzBweCAxNnB4IDI0cHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxNzogJzBweCAxN3B4IDI2cHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxODogJzBweCAxOHB4IDI4cHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAxOTogJzBweCAxOXB4IDI5cHggMnB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAyMDogJzBweCAyMHB4IDMxcHggM3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAyMTogJzBweCAyMXB4IDMzcHggM3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAyMjogJzBweCAyMnB4IDM1cHggM3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAyMzogJzBweCAyM3B4IDM2cHggM3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9JyxcbiAgICAyNDogJzBweCAyNHB4IDM4cHggM3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xNCl9J1xuICApO1xufVxuXG5AZnVuY3Rpb24gX2dldC1hbWJpZW50LW1hcCgkY29sb3IsICRvcGFjaXR5KSB7XG4gIEByZXR1cm4gKFxuICAgIDA6ICcwcHggMHB4IDBweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDE6ICcwcHggMXB4IDNweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDI6ICcwcHggMXB4IDVweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDM6ICcwcHggMXB4IDhweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDQ6ICcwcHggMXB4IDEwcHggMHB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xMil9JyxcbiAgICA1OiAnMHB4IDFweCAxNHB4IDBweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTIpfScsXG4gICAgNjogJzBweCAxcHggMThweCAwcHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDc6ICcwcHggMnB4IDE2cHggMXB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xMil9JyxcbiAgICA4OiAnMHB4IDNweCAxNHB4IDJweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTIpfScsXG4gICAgOTogJzBweCAzcHggMTZweCAycHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDEwOiAnMHB4IDRweCAxOHB4IDNweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTIpfScsXG4gICAgMTE6ICcwcHggNHB4IDIwcHggM3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xMil9JyxcbiAgICAxMjogJzBweCA1cHggMjJweCA0cHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDEzOiAnMHB4IDVweCAyNHB4IDRweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTIpfScsXG4gICAgMTQ6ICcwcHggNXB4IDI2cHggNHB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xMil9JyxcbiAgICAxNTogJzBweCA2cHggMjhweCA1cHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDE2OiAnMHB4IDZweCAzMHB4IDVweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTIpfScsXG4gICAgMTc6ICcwcHggNnB4IDMycHggNXB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xMil9JyxcbiAgICAxODogJzBweCA3cHggMzRweCA2cHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDE5OiAnMHB4IDdweCAzNnB4IDZweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTIpfScsXG4gICAgMjA6ICcwcHggOHB4IDM4cHggN3B4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xMil9JyxcbiAgICAyMTogJzBweCA4cHggNDBweCA3cHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nLFxuICAgIDIyOiAnMHB4IDhweCA0MnB4IDdweCAje3JnYmEoJGNvbG9yLCAkb3BhY2l0eSAqIDAuMTIpfScsXG4gICAgMjM6ICcwcHggOXB4IDQ0cHggOHB4ICN7cmdiYSgkY29sb3IsICRvcGFjaXR5ICogMC4xMil9JyxcbiAgICAyNDogJzBweCA5cHggNDZweCA4cHggI3tyZ2JhKCRjb2xvciwgJG9wYWNpdHkgKiAwLjEyKX0nXG4gICk7XG59XG5cbi8vIFRoZSBkZWZhdWx0IGR1cmF0aW9uIHZhbHVlIGZvciBlbGV2YXRpb24gdHJhbnNpdGlvbnMuXG4kbWF0LWVsZXZhdGlvbi10cmFuc2l0aW9uLWR1cmF0aW9uOiAyODBtcyAhZGVmYXVsdDtcblxuLy8gVGhlIGRlZmF1bHQgZWFzaW5nIHZhbHVlIGZvciBlbGV2YXRpb24gdHJhbnNpdGlvbnMuXG4kbWF0LWVsZXZhdGlvbi10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJG1hdC1mYXN0LW91dC1zbG93LWluLXRpbWluZy1mdW5jdGlvbjtcblxuLy8gVGhlIGRlZmF1bHQgY29sb3IgZm9yIGVsZXZhdGlvbiBzaGFkb3dzLlxuJG1hdC1lbGV2YXRpb24tY29sb3I6IGJsYWNrICFkZWZhdWx0O1xuXG4vLyBUaGUgZGVmYXVsdCBvcGFjaXR5IHNjYWxpbmcgdmFsdWUgZm9yIGVsZXZhdGlvbiBzaGFkb3dzLlxuJG1hdC1lbGV2YXRpb24tb3BhY2l0eTogMSAhZGVmYXVsdDtcblxuLy8gUHJlZml4IGZvciBlbGV2YXRpb24tcmVsYXRlZCBzZWxlY3RvcnMuXG4kX21hdC1lbGV2YXRpb24tcHJlZml4OiAnbWF0LWVsZXZhdGlvbi16JztcblxuLy8gQXBwbGllcyB0aGUgY29ycmVjdCBjc3MgcnVsZXMgdG8gYW4gZWxlbWVudCB0byBnaXZlIGl0IHRoZSBlbGV2YXRpb24gc3BlY2lmaWVkIGJ5ICR6VmFsdWUuXG4vLyBUaGUgJHpWYWx1ZSBtdXN0IGJlIGJldHdlZW4gMCBhbmQgMjQuXG5AbWl4aW4gbWF0LWVsZXZhdGlvbigkelZhbHVlLCAkY29sb3I6ICRtYXQtZWxldmF0aW9uLWNvbG9yLCAkb3BhY2l0eTogJG1hdC1lbGV2YXRpb24tb3BhY2l0eSkge1xuICBAaWYgdHlwZS1vZigkelZhbHVlKSAhPSBudW1iZXIgb3Igbm90IHVuaXRsZXNzKCR6VmFsdWUpIHtcbiAgICBAZXJyb3IgJyR6VmFsdWUgbXVzdCBiZSBhIHVuaXRsZXNzIG51bWJlcic7XG4gIH1cbiAgQGlmICR6VmFsdWUgPCAwIG9yICR6VmFsdWUgPiAyNCB7XG4gICAgQGVycm9yICckelZhbHVlIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAyNCc7XG4gIH1cblxuICBib3gtc2hhZG93OiAje21hcC1nZXQoX2dldC11bWJyYS1tYXAoJGNvbG9yLCAkb3BhY2l0eSksICR6VmFsdWUpfSxcbiAgICAgICAgICAgICAgI3ttYXAtZ2V0KF9nZXQtcGVudW1icmEtbWFwKCRjb2xvciwgJG9wYWNpdHkpLCAkelZhbHVlKX0sXG4gICAgICAgICAgICAgICN7bWFwLWdldChfZ2V0LWFtYmllbnQtbWFwKCRjb2xvciwgJG9wYWNpdHkpLCAkelZhbHVlKX07XG59XG5cbkBtaXhpbiBfbWF0LXRoZW1lLWVsZXZhdGlvbigkelZhbHVlLCAkdGhlbWUsICRvcGFjaXR5OiAkbWF0LWVsZXZhdGlvbi1vcGFjaXR5KSB7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRlbGV2YXRpb24tY29sb3I6IG1hcC1nZXQoJGZvcmVncm91bmQsIGVsZXZhdGlvbik7XG4gICRlbGV2YXRpb24tY29sb3Itb3ItZGVmYXVsdDogaWYoJGVsZXZhdGlvbi1jb2xvciA9PSBudWxsLCAkbWF0LWVsZXZhdGlvbi1jb2xvciwgJGVsZXZhdGlvbi1jb2xvcik7XG5cbiAgQGluY2x1ZGUgbWF0LWVsZXZhdGlvbigkelZhbHVlLCAkZWxldmF0aW9uLWNvbG9yLW9yLWRlZmF1bHQsICRvcGFjaXR5KTtcbn1cblxuLy8gQXBwbGllcyB0aGUgZWxldmF0aW9uIHRvIGFuIGVsZW1lbnQgaW4gYSBtYW5uZXIgdGhhdCBhbGxvd3Ncbi8vIGNvbnN1bWVycyB0byBvdmVycmlkZSBpdCB2aWEgdGhlIE1hdGVyaWFsIGVsZXZhdGlvbiBjbGFzc2VzLlxuQG1peGluIG1hdC1vdmVycmlkYWJsZS1lbGV2YXRpb24oXG4gICAgJHpWYWx1ZSxcbiAgICAkY29sb3I6ICRtYXQtZWxldmF0aW9uLWNvbG9yLFxuICAgICRvcGFjaXR5OiAkbWF0LWVsZXZhdGlvbi1vcGFjaXR5KSB7XG4gICY6bm90KFtjbGFzcyo9JyN7JF9tYXQtZWxldmF0aW9uLXByZWZpeH0nXSkge1xuICAgIEBpbmNsdWRlIG1hdC1lbGV2YXRpb24oJHpWYWx1ZSwgJGNvbG9yLCAkb3BhY2l0eSk7XG4gIH1cbn1cblxuQG1peGluIF9tYXQtdGhlbWUtb3ZlcnJpZGFibGUtZWxldmF0aW9uKCR6VmFsdWUsICR0aGVtZSwgJG9wYWNpdHk6ICRtYXQtZWxldmF0aW9uLW9wYWNpdHkpIHtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcbiAgJGVsZXZhdGlvbi1jb2xvcjogbWFwLWdldCgkZm9yZWdyb3VuZCwgZWxldmF0aW9uKTtcbiAgJGVsZXZhdGlvbi1jb2xvci1vci1kZWZhdWx0OiBpZigkZWxldmF0aW9uLWNvbG9yID09IG51bGwsICRtYXQtZWxldmF0aW9uLWNvbG9yLCAkZWxldmF0aW9uLWNvbG9yKTtcblxuICBAaW5jbHVkZSBtYXQtb3ZlcnJpZGFibGUtZWxldmF0aW9uKCR6VmFsdWUsICRlbGV2YXRpb24tY29sb3Itb3ItZGVmYXVsdCwgJG9wYWNpdHkpO1xufVxuXG4vLyBSZXR1cm5zIGEgc3RyaW5nIHRoYXQgY2FuIGJlIHVzZWQgYXMgdGhlIHZhbHVlIGZvciBhIHRyYW5zaXRpb24gcHJvcGVydHkgZm9yIGVsZXZhdGlvbi5cbi8vIENhbGxpbmcgdGhpcyBmdW5jdGlvbiBkaXJlY3RseSBpcyB1c2VmdWwgaW4gc2l0dWF0aW9ucyB3aGVyZSBhIGNvbXBvbmVudCBuZWVkcyB0byB0cmFuc2l0aW9uXG4vLyBtb3JlIHRoYW4gb25lIHByb3BlcnR5LlxuLy9cbi8vIC5mb28ge1xuLy8gICB0cmFuc2l0aW9uOiBtYXQtZWxldmF0aW9uLXRyYW5zaXRpb24tcHJvcGVydHktdmFsdWUoKSwgb3BhY2l0eSAxMDBtcyBlYXNlO1xuLy8gfVxuQGZ1bmN0aW9uIG1hdC1lbGV2YXRpb24tdHJhbnNpdGlvbi1wcm9wZXJ0eS12YWx1ZShcbiAgICAkZHVyYXRpb246ICRtYXQtZWxldmF0aW9uLXRyYW5zaXRpb24tZHVyYXRpb24sXG4gICAgJGVhc2luZzogJG1hdC1lbGV2YXRpb24tdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24pIHtcbiAgQHJldHVybiBib3gtc2hhZG93ICN7JGR1cmF0aW9ufSAjeyRlYXNpbmd9O1xufVxuXG4vLyBBcHBsaWVzIHRoZSBjb3JyZWN0IGNzcyBydWxlcyBuZWVkZWQgdG8gaGF2ZSBhbiBlbGVtZW50IHRyYW5zaXRpb24gYmV0d2VlbiBlbGV2YXRpb25zLlxuLy8gVGhpcyBtaXhpbiBzaG91bGQgYmUgYXBwbGllZCB0byBlbGVtZW50cyB3aG9zZSBlbGV2YXRpb24gdmFsdWVzIHdpbGwgY2hhbmdlIGRlcGVuZGluZyBvbiB0aGVpclxuLy8gY29udGV4dCAoZS5nLiB3aGVuIGFjdGl2ZSBvciBkaXNhYmxlZCkuXG4vL1xuLy8gTk9URSh0cmF2aXNrYXVmbWFuKTogQm90aCB0aGlzIG1peGluIGFuZCB0aGUgYWJvdmUgZnVuY3Rpb24gdXNlIGRlZmF1bHQgcGFyYW1ldGVycyBzbyB0aGV5IGNhblxuLy8gYmUgdXNlZCBpbiB0aGUgc2FtZSB3YXkgYnkgY2xpZW50cy5cbkBtaXhpbiBtYXQtZWxldmF0aW9uLXRyYW5zaXRpb24oXG4gICAgJGR1cmF0aW9uOiAkbWF0LWVsZXZhdGlvbi10cmFuc2l0aW9uLWR1cmF0aW9uLFxuICAgICRlYXNpbmc6ICRtYXQtZWxldmF0aW9uLXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKSB7XG4gIHRyYW5zaXRpb246IG1hdC1lbGV2YXRpb24tdHJhbnNpdGlvbi1wcm9wZXJ0eS12YWx1ZSgkZHVyYXRpb24sICRlYXNpbmcpO1xufVxuXG4vLyBDb2xvciBwYWxldHRlcyBmcm9tIHRoZSBNYXRlcmlhbCBEZXNpZ24gc3BlYy5cbi8vIFNlZSBodHRwczovL21hdGVyaWFsLmlvL2Rlc2lnbi9jb2xvci9cbi8vXG4vLyBDb250cmFzdCBjb2xvcnMgYXJlIGhhcmQtY29kZWQgYmVjYXVzZSBpdCBpcyB0b28gZGlmZmljdWx0IChwcm9iYWJseSBpbXBvc3NpYmxlKSB0b1xuLy8gY2FsY3VsYXRlIHRoZW0uIFRoZXNlIGNvbnRyYXN0IGNvbG9ycyBhcmUgcHVsbGVkIGZyb20gdGhlIHB1YmxpYyBNYXRlcmlhbCBEZXNpZ24gc3BlYyBzd2F0Y2hlcy5cbi8vIFdoaWxlIHRoZSBjb250cmFzdCBjb2xvcnMgaW4gdGhlIHNwZWMgYXJlIG5vdCBwcmVzY3JpcHRpdmUsIHdlIHVzZSB0aGVtIGZvciBjb252ZW5pZW5jZS5cblxuXG4vLyBAZGVwcmVjYXRlZCByZW5hbWVkIHRvICRkYXJrLXByaW1hcnktdGV4dC5cbi8vIEBicmVha2luZy1jaGFuZ2UgOC4wLjBcbiRibGFjay04Ny1vcGFjaXR5OiByZ2JhKGJsYWNrLCAwLjg3KTtcbi8vIEBkZXByZWNhdGVkIHJlbmFtZWQgdG8gJGxpZ2h0LXByaW1hcnktdGV4dC5cbi8vIEBicmVha2luZy1jaGFuZ2UgOC4wLjBcbiR3aGl0ZS04Ny1vcGFjaXR5OiByZ2JhKHdoaXRlLCAwLjg3KTtcbi8vIEBkZXByZWNhdGVkIHVzZSAkZGFyay1bc2Vjb25kYXJ5LXRleHQsZGlzYWJsZWQtdGV4dCxkaXZpZGVycyxmb2N1c2VkXSBpbnN0ZWFkLlxuLy8gQGJyZWFraW5nLWNoYW5nZSA4LjAuMFxuJGJsYWNrLTEyLW9wYWNpdHk6IHJnYmEoYmxhY2ssIDAuMTIpO1xuLy8gQGRlcHJlY2F0ZWQgdXNlICRsaWdodC1bc2Vjb25kYXJ5LXRleHQsZGlzYWJsZWQtdGV4dCxkaXZpZGVycyxmb2N1c2VkXSBpbnN0ZWFkLlxuLy8gQGJyZWFraW5nLWNoYW5nZSA4LjAuMFxuJHdoaXRlLTEyLW9wYWNpdHk6IHJnYmEod2hpdGUsIDAuMTIpO1xuLy8gQGRlcHJlY2F0ZWQgdXNlICRkYXJrLVtzZWNvbmRhcnktdGV4dCxkaXNhYmxlZC10ZXh0LGRpdmlkZXJzLGZvY3VzZWRdIGluc3RlYWQuXG4vLyBAYnJlYWtpbmctY2hhbmdlIDguMC4wXG4kYmxhY2stNi1vcGFjaXR5OiByZ2JhKGJsYWNrLCAwLjA2KTtcbi8vIEBkZXByZWNhdGVkIHVzZSAkbGlnaHQtW3NlY29uZGFyeS10ZXh0LGRpc2FibGVkLXRleHQsZGl2aWRlcnMsZm9jdXNlZF0gaW5zdGVhZC5cbi8vIEBicmVha2luZy1jaGFuZ2UgOC4wLjBcbiR3aGl0ZS02LW9wYWNpdHk6IHJnYmEod2hpdGUsIDAuMDYpO1xuXG4kZGFyay1wcmltYXJ5LXRleHQ6IHJnYmEoYmxhY2ssIDAuODcpO1xuJGRhcmstc2Vjb25kYXJ5LXRleHQ6IHJnYmEoYmxhY2ssIDAuNTQpO1xuJGRhcmstZGlzYWJsZWQtdGV4dDogcmdiYShibGFjaywgMC4zOCk7XG4kZGFyay1kaXZpZGVyczogcmdiYShibGFjaywgMC4xMik7XG4kZGFyay1mb2N1c2VkOiByZ2JhKGJsYWNrLCAwLjEyKTtcbiRsaWdodC1wcmltYXJ5LXRleHQ6IHdoaXRlO1xuJGxpZ2h0LXNlY29uZGFyeS10ZXh0OiByZ2JhKHdoaXRlLCAwLjcpO1xuJGxpZ2h0LWRpc2FibGVkLXRleHQ6IHJnYmEod2hpdGUsIDAuNSk7XG4kbGlnaHQtZGl2aWRlcnM6IHJnYmEod2hpdGUsIDAuMTIpO1xuJGxpZ2h0LWZvY3VzZWQ6IHJnYmEod2hpdGUsIDAuMTIpO1xuXG4kbWF0LXJlZDogKFxuICA1MDogI2ZmZWJlZSxcbiAgMTAwOiAjZmZjZGQyLFxuICAyMDA6ICNlZjlhOWEsXG4gIDMwMDogI2U1NzM3MyxcbiAgNDAwOiAjZWY1MzUwLFxuICA1MDA6ICNmNDQzMzYsXG4gIDYwMDogI2U1MzkzNSxcbiAgNzAwOiAjZDMyZjJmLFxuICA4MDA6ICNjNjI4MjgsXG4gIDkwMDogI2I3MWMxYyxcbiAgQTEwMDogI2ZmOGE4MCxcbiAgQTIwMDogI2ZmNTI1MixcbiAgQTQwMDogI2ZmMTc0NCxcbiAgQTcwMDogI2Q1MDAwMCxcbiAgY29udHJhc3Q6IChcbiAgICA1MDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDMwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDUwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA2MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDgwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA5MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEEyMDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICApXG4pO1xuXG4kbWF0LXBpbms6IChcbiAgNTA6ICNmY2U0ZWMsXG4gIDEwMDogI2Y4YmJkMCxcbiAgMjAwOiAjZjQ4ZmIxLFxuICAzMDA6ICNmMDYyOTIsXG4gIDQwMDogI2VjNDA3YSxcbiAgNTAwOiAjZTkxZTYzLFxuICA2MDA6ICNkODFiNjAsXG4gIDcwMDogI2MyMTg1YixcbiAgODAwOiAjYWQxNDU3LFxuICA5MDA6ICM4ODBlNGYsXG4gIEExMDA6ICNmZjgwYWIsXG4gIEEyMDA6ICNmZjQwODEsXG4gIEE0MDA6ICNmNTAwNTcsXG4gIEE3MDA6ICNjNTExNjIsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA1MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA4MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgOTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC1wdXJwbGU6IChcbiAgNTA6ICNmM2U1ZjUsXG4gIDEwMDogI2UxYmVlNyxcbiAgMjAwOiAjY2U5M2Q4LFxuICAzMDA6ICNiYTY4YzgsXG4gIDQwMDogI2FiNDdiYyxcbiAgNTAwOiAjOWMyN2IwLFxuICA2MDA6ICM4ZTI0YWEsXG4gIDcwMDogIzdiMWZhMixcbiAgODAwOiAjNmExYjlhLFxuICA5MDA6ICM0YTE0OGMsXG4gIEExMDA6ICNlYTgwZmMsXG4gIEEyMDA6ICNlMDQwZmIsXG4gIEE0MDA6ICNkNTAwZjksXG4gIEE3MDA6ICNhYTAwZmYsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNDAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDUwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA2MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDgwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA5MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEEyMDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICApXG4pO1xuXG4kbWF0LWRlZXAtcHVycGxlOiAoXG4gIDUwOiAjZWRlN2Y2LFxuICAxMDA6ICNkMWM0ZTksXG4gIDIwMDogI2IzOWRkYixcbiAgMzAwOiAjOTU3NWNkLFxuICA0MDA6ICM3ZTU3YzIsXG4gIDUwMDogIzY3M2FiNyxcbiAgNjAwOiAjNWUzNWIxLFxuICA3MDA6ICM1MTJkYTgsXG4gIDgwMDogIzQ1MjdhMCxcbiAgOTAwOiAjMzExYjkyLFxuICBBMTAwOiAjYjM4OGZmLFxuICBBMjAwOiAjN2M0ZGZmLFxuICBBNDAwOiAjNjUxZmZmLFxuICBBNzAwOiAjNjIwMGVhLFxuICBjb250cmFzdDogKFxuICAgIDUwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDQwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA1MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA4MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgOTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC1pbmRpZ286IChcbiAgNTA6ICNlOGVhZjYsXG4gIDEwMDogI2M1Y2FlOSxcbiAgMjAwOiAjOWZhOGRhLFxuICAzMDA6ICM3OTg2Y2IsXG4gIDQwMDogIzVjNmJjMCxcbiAgNTAwOiAjM2Y1MWI1LFxuICA2MDA6ICMzOTQ5YWIsXG4gIDcwMDogIzMwM2Y5ZixcbiAgODAwOiAjMjgzNTkzLFxuICA5MDA6ICMxYTIzN2UsXG4gIEExMDA6ICM4YzllZmYsXG4gIEEyMDA6ICM1MzZkZmUsXG4gIEE0MDA6ICMzZDVhZmUsXG4gIEE3MDA6ICMzMDRmZmUsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNDAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDUwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA2MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDgwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA5MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEEyMDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICApXG4pO1xuXG4kbWF0LWJsdWU6IChcbiAgNTA6ICNlM2YyZmQsXG4gIDEwMDogI2JiZGVmYixcbiAgMjAwOiAjOTBjYWY5LFxuICAzMDA6ICM2NGI1ZjYsXG4gIDQwMDogIzQyYTVmNSxcbiAgNTAwOiAjMjE5NmYzLFxuICA2MDA6ICMxZTg4ZTUsXG4gIDcwMDogIzE5NzZkMixcbiAgODAwOiAjMTU2NWMwLFxuICA5MDA6ICMwZDQ3YTEsXG4gIEExMDA6ICM4MmIxZmYsXG4gIEEyMDA6ICM0NDhhZmYsXG4gIEE0MDA6ICMyOTc5ZmYsXG4gIEE3MDA6ICMyOTYyZmYsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA1MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA4MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgOTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC1saWdodC1ibHVlOiAoXG4gIDUwOiAjZTFmNWZlLFxuICAxMDA6ICNiM2U1ZmMsXG4gIDIwMDogIzgxZDRmYSxcbiAgMzAwOiAjNGZjM2Y3LFxuICA0MDA6ICMyOWI2ZjYsXG4gIDUwMDogIzAzYTlmNCxcbiAgNjAwOiAjMDM5YmU1LFxuICA3MDA6ICMwMjg4ZDEsXG4gIDgwMDogIzAyNzdiZCxcbiAgOTAwOiAjMDE1NzliLFxuICBBMTAwOiAjODBkOGZmLFxuICBBMjAwOiAjNDBjNGZmLFxuICBBNDAwOiAjMDBiMGZmLFxuICBBNzAwOiAjMDA5MWVhLFxuICBjb250cmFzdDogKFxuICAgIDUwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMzAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgODAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICApXG4pO1xuXG4kbWF0LWN5YW46IChcbiAgNTA6ICNlMGY3ZmEsXG4gIDEwMDogI2IyZWJmMixcbiAgMjAwOiAjODBkZWVhLFxuICAzMDA6ICM0ZGQwZTEsXG4gIDQwMDogIzI2YzZkYSxcbiAgNTAwOiAjMDBiY2Q0LFxuICA2MDA6ICMwMGFjYzEsXG4gIDcwMDogIzAwOTdhNyxcbiAgODAwOiAjMDA4MzhmLFxuICA5MDA6ICMwMDYwNjQsXG4gIEExMDA6ICM4NGZmZmYsXG4gIEEyMDA6ICMxOGZmZmYsXG4gIEE0MDA6ICMwMGU1ZmYsXG4gIEE3MDA6ICMwMGI4ZDQsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA1MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA4MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgOTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE3MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC10ZWFsOiAoXG4gIDUwOiAjZTBmMmYxLFxuICAxMDA6ICNiMmRmZGIsXG4gIDIwMDogIzgwY2JjNCxcbiAgMzAwOiAjNGRiNmFjLFxuICA0MDA6ICMyNmE2OWEsXG4gIDUwMDogIzAwOTY4OCxcbiAgNjAwOiAjMDA4OTdiLFxuICA3MDA6ICMwMDc5NmIsXG4gIDgwMDogIzAwNjk1YyxcbiAgOTAwOiAjMDA0ZDQwLFxuICBBMTAwOiAjYTdmZmViLFxuICBBMjAwOiAjNjRmZmRhLFxuICBBNDAwOiAjMWRlOWI2LFxuICBBNzAwOiAjMDBiZmE1LFxuICBjb250cmFzdDogKFxuICAgIDUwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMzAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgODAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBNzAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gIClcbik7XG5cbiRtYXQtZ3JlZW46IChcbiAgNTA6ICNlOGY1ZTksXG4gIDEwMDogI2M4ZTZjOSxcbiAgMjAwOiAjYTVkNmE3LFxuICAzMDA6ICM4MWM3ODQsXG4gIDQwMDogIzY2YmI2YSxcbiAgNTAwOiAjNGNhZjUwLFxuICA2MDA6ICM0M2EwNDcsXG4gIDcwMDogIzM4OGUzYyxcbiAgODAwOiAjMmU3ZDMyLFxuICA5MDA6ICMxYjVlMjAsXG4gIEExMDA6ICNiOWY2Y2EsXG4gIEEyMDA6ICM2OWYwYWUsXG4gIEE0MDA6ICMwMGU2NzYsXG4gIEE3MDA6ICMwMGM4NTMsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA1MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA2MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDgwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA5MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEEyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICApXG4pO1xuXG4kbWF0LWxpZ2h0LWdyZWVuOiAoXG4gIDUwOiAjZjFmOGU5LFxuICAxMDA6ICNkY2VkYzgsXG4gIDIwMDogI2M1ZTFhNSxcbiAgMzAwOiAjYWVkNTgxLFxuICA0MDA6ICM5Y2NjNjUsXG4gIDUwMDogIzhiYzM0YSxcbiAgNjAwOiAjN2NiMzQyLFxuICA3MDA6ICM2ODlmMzgsXG4gIDgwMDogIzU1OGIyZixcbiAgOTAwOiAjMzM2OTFlLFxuICBBMTAwOiAjY2NmZjkwLFxuICBBMjAwOiAjYjJmZjU5LFxuICBBNDAwOiAjNzZmZjAzLFxuICBBNzAwOiAjNjRkZDE3LFxuICBjb250cmFzdDogKFxuICAgIDUwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMzAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNzAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDgwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA5MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEEyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICApXG4pO1xuXG4kbWF0LWxpbWU6IChcbiAgNTA6ICNmOWZiZTcsXG4gIDEwMDogI2YwZjRjMyxcbiAgMjAwOiAjZTZlZTljLFxuICAzMDA6ICNkY2U3NzUsXG4gIDQwMDogI2Q0ZTE1NyxcbiAgNTAwOiAjY2RkYzM5LFxuICA2MDA6ICNjMGNhMzMsXG4gIDcwMDogI2FmYjQyYixcbiAgODAwOiAjOWU5ZDI0LFxuICA5MDA6ICM4Mjc3MTcsXG4gIEExMDA6ICNmNGZmODEsXG4gIEEyMDA6ICNlZWZmNDEsXG4gIEE0MDA6ICNjNmZmMDAsXG4gIEE3MDA6ICNhZWVhMDAsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA1MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA2MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA4MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA5MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEEyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICApXG4pO1xuXG4kbWF0LXllbGxvdzogKFxuICA1MDogI2ZmZmRlNyxcbiAgMTAwOiAjZmZmOWM0LFxuICAyMDA6ICNmZmY1OWQsXG4gIDMwMDogI2ZmZjE3NixcbiAgNDAwOiAjZmZlZTU4LFxuICA1MDA6ICNmZmViM2IsXG4gIDYwMDogI2ZkZDgzNSxcbiAgNzAwOiAjZmJjMDJkLFxuICA4MDA6ICNmOWE4MjUsXG4gIDkwMDogI2Y1N2YxNyxcbiAgQTEwMDogI2ZmZmY4ZCxcbiAgQTIwMDogI2ZmZmYwMCxcbiAgQTQwMDogI2ZmZWEwMCxcbiAgQTcwMDogI2ZmZDYwMCxcbiAgY29udHJhc3Q6IChcbiAgICA1MDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDMwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDUwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDcwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDgwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE3MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC1hbWJlcjogKFxuICA1MDogI2ZmZjhlMSxcbiAgMTAwOiAjZmZlY2IzLFxuICAyMDA6ICNmZmUwODIsXG4gIDMwMDogI2ZmZDU0ZixcbiAgNDAwOiAjZmZjYTI4LFxuICA1MDA6ICNmZmMxMDcsXG4gIDYwMDogI2ZmYjMwMCxcbiAgNzAwOiAjZmZhMDAwLFxuICA4MDA6ICNmZjhmMDAsXG4gIDkwMDogI2ZmNmYwMCxcbiAgQTEwMDogI2ZmZTU3ZixcbiAgQTIwMDogI2ZmZDc0MCxcbiAgQTQwMDogI2ZmYzQwMCxcbiAgQTcwMDogI2ZmYWIwMCxcbiAgY29udHJhc3Q6IChcbiAgICA1MDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDMwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDUwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDcwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDgwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE3MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC1vcmFuZ2U6IChcbiAgNTA6ICNmZmYzZTAsXG4gIDEwMDogI2ZmZTBiMixcbiAgMjAwOiAjZmZjYzgwLFxuICAzMDA6ICNmZmI3NGQsXG4gIDQwMDogI2ZmYTcyNixcbiAgNTAwOiAjZmY5ODAwLFxuICA2MDA6ICNmYjhjMDAsXG4gIDcwMDogI2Y1N2MwMCxcbiAgODAwOiAjZWY2YzAwLFxuICA5MDA6ICNlNjUxMDAsXG4gIEExMDA6ICNmZmQxODAsXG4gIEEyMDA6ICNmZmFiNDAsXG4gIEE0MDA6ICNmZjkxMDAsXG4gIEE3MDA6ICNmZjZkMDAsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA1MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA2MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA4MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgOTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE3MDA6IGJsYWNrLFxuICApXG4pO1xuXG4kbWF0LWRlZXAtb3JhbmdlOiAoXG4gIDUwOiAjZmJlOWU3LFxuICAxMDA6ICNmZmNjYmMsXG4gIDIwMDogI2ZmYWI5MSxcbiAgMzAwOiAjZmY4YTY1LFxuICA0MDA6ICNmZjcwNDMsXG4gIDUwMDogI2ZmNTcyMixcbiAgNjAwOiAjZjQ1MTFlLFxuICA3MDA6ICNlNjRhMTksXG4gIDgwMDogI2Q4NDMxNSxcbiAgOTAwOiAjYmYzNjBjLFxuICBBMTAwOiAjZmY5ZTgwLFxuICBBMjAwOiAjZmY2ZTQwLFxuICBBNDAwOiAjZmYzZDAwLFxuICBBNzAwOiAjZGQyYzAwLFxuICBjb250cmFzdDogKFxuICAgIDUwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMzAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgODAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC1icm93bjogKFxuICA1MDogI2VmZWJlOSxcbiAgMTAwOiAjZDdjY2M4LFxuICAyMDA6ICNiY2FhYTQsXG4gIDMwMDogI2ExODg3ZixcbiAgNDAwOiAjOGQ2ZTYzLFxuICA1MDA6ICM3OTU1NDgsXG4gIDYwMDogIzZkNGM0MSxcbiAgNzAwOiAjNWQ0MDM3LFxuICA4MDA6ICM0ZTM0MmUsXG4gIDkwMDogIzNlMjcyMyxcbiAgQTEwMDogI2Q3Y2NjOCxcbiAgQTIwMDogI2JjYWFhNCxcbiAgQTQwMDogIzhkNmU2MyxcbiAgQTcwMDogIzVkNDAzNyxcbiAgY29udHJhc3Q6IChcbiAgICA1MDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDEwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIDMwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgODAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuJG1hdC1ncmV5OiAoXG4gIDUwOiAjZmFmYWZhLFxuICAxMDA6ICNmNWY1ZjUsXG4gIDIwMDogI2VlZWVlZSxcbiAgMzAwOiAjZTBlMGUwLFxuICA0MDA6ICNiZGJkYmQsXG4gIDUwMDogIzllOWU5ZSxcbiAgNjAwOiAjNzU3NTc1LFxuICA3MDA6ICM2MTYxNjEsXG4gIDgwMDogIzQyNDI0MixcbiAgOTAwOiAjMjEyMTIxLFxuICBBMTAwOiAjZmZmZmZmLFxuICBBMjAwOiAjZWVlZWVlLFxuICBBNDAwOiAjYmRiZGJkLFxuICBBNzAwOiAjNjE2MTYxLFxuICBjb250cmFzdDogKFxuICAgIDUwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgMzAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNDAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgNjAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA4MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgOTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIEExMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICBBMjAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTQwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE3MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gIClcbik7XG5cbi8vIEFsaWFzIGZvciBhbHRlcm5hdGUgc3BlbGxpbmcuXG4kbWF0LWdyYXk6ICRtYXQtZ3JleTtcblxuJG1hdC1ibHVlLWdyZXk6IChcbiAgNTA6ICNlY2VmZjEsXG4gIDEwMDogI2NmZDhkYyxcbiAgMjAwOiAjYjBiZWM1LFxuICAzMDA6ICM5MGE0YWUsXG4gIDQwMDogIzc4OTA5YyxcbiAgNTAwOiAjNjA3ZDhiLFxuICA2MDA6ICM1NDZlN2EsXG4gIDcwMDogIzQ1NWE2NCxcbiAgODAwOiAjMzc0NzRmLFxuICA5MDA6ICMyNjMyMzgsXG4gIEExMDA6ICNjZmQ4ZGMsXG4gIEEyMDA6ICNiMGJlYzUsXG4gIEE0MDA6ICM3ODkwOWMsXG4gIEE3MDA6ICM0NTVhNjQsXG4gIGNvbnRyYXN0OiAoXG4gICAgNTA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAxMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAyMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICAzMDA6ICRkYXJrLXByaW1hcnktdGV4dCxcbiAgICA0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgNTAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDYwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICA3MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgODAwOiAkbGlnaHQtcHJpbWFyeS10ZXh0LFxuICAgIDkwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgICBBMTAwOiAkZGFyay1wcmltYXJ5LXRleHQsXG4gICAgQTIwMDogJGRhcmstcHJpbWFyeS10ZXh0LFxuICAgIEE0MDA6ICRsaWdodC1wcmltYXJ5LXRleHQsXG4gICAgQTcwMDogJGxpZ2h0LXByaW1hcnktdGV4dCxcbiAgKVxuKTtcblxuLy8gQWxpYXMgZm9yIGFsdGVybmF0ZSBzcGVsbGluZy5cbiRtYXQtYmx1ZS1ncmF5OiAkbWF0LWJsdWUtZ3JleTtcblxuXG4vLyBCYWNrZ3JvdW5kIHBhbGV0dGUgZm9yIGxpZ2h0IHRoZW1lcy5cbiRtYXQtbGlnaHQtdGhlbWUtYmFja2dyb3VuZDogKFxuICBzdGF0dXMtYmFyOiBtYXBfZ2V0KCRtYXQtZ3JleSwgMzAwKSxcbiAgYXBwLWJhcjogICAgbWFwX2dldCgkbWF0LWdyZXksIDEwMCksXG4gIGJhY2tncm91bmQ6IG1hcF9nZXQoJG1hdC1ncmV5LCA1MCksXG4gIGhvdmVyOiAgICAgIHJnYmEoYmxhY2ssIDAuMDQpLCAvLyBUT0RPKGthcmEpOiBjaGVjayBzdHlsZSB3aXRoIE1hdGVyaWFsIERlc2lnbiBVWFxuICBjYXJkOiAgICAgICB3aGl0ZSxcbiAgZGlhbG9nOiAgICAgd2hpdGUsXG4gIGRpc2FibGVkLWJ1dHRvbjogcmdiYShibGFjaywgMC4xMiksXG4gIHJhaXNlZC1idXR0b246IHdoaXRlLFxuICBmb2N1c2VkLWJ1dHRvbjogJGRhcmstZm9jdXNlZCxcbiAgc2VsZWN0ZWQtYnV0dG9uOiBtYXBfZ2V0KCRtYXQtZ3JleSwgMzAwKSxcbiAgc2VsZWN0ZWQtZGlzYWJsZWQtYnV0dG9uOiBtYXBfZ2V0KCRtYXQtZ3JleSwgNDAwKSxcbiAgZGlzYWJsZWQtYnV0dG9uLXRvZ2dsZTogbWFwX2dldCgkbWF0LWdyZXksIDIwMCksXG4gIHVuc2VsZWN0ZWQtY2hpcDogbWFwX2dldCgkbWF0LWdyZXksIDMwMCksXG4gIGRpc2FibGVkLWxpc3Qtb3B0aW9uOiBtYXBfZ2V0KCRtYXQtZ3JleSwgMjAwKSxcbik7XG5cbi8vIEJhY2tncm91bmQgcGFsZXR0ZSBmb3IgZGFyayB0aGVtZXMuXG4kbWF0LWRhcmstdGhlbWUtYmFja2dyb3VuZDogKFxuICBzdGF0dXMtYmFyOiBibGFjayxcbiAgYXBwLWJhcjogICAgbWFwX2dldCgkbWF0LWdyZXksIDkwMCksXG4gIGJhY2tncm91bmQ6ICMzMDMwMzAsXG4gIGhvdmVyOiAgICAgIHJnYmEod2hpdGUsIDAuMDQpLCAvLyBUT0RPKGthcmEpOiBjaGVjayBzdHlsZSB3aXRoIE1hdGVyaWFsIERlc2lnbiBVWFxuICBjYXJkOiAgICAgICBtYXBfZ2V0KCRtYXQtZ3JleSwgODAwKSxcbiAgZGlhbG9nOiAgICAgbWFwX2dldCgkbWF0LWdyZXksIDgwMCksXG4gIGRpc2FibGVkLWJ1dHRvbjogcmdiYSh3aGl0ZSwgMC4xMiksXG4gIHJhaXNlZC1idXR0b246IG1hcC1nZXQoJG1hdC1ncmV5LCA4MDApLFxuICBmb2N1c2VkLWJ1dHRvbjogJGxpZ2h0LWZvY3VzZWQsXG4gIHNlbGVjdGVkLWJ1dHRvbjogbWFwX2dldCgkbWF0LWdyZXksIDkwMCksXG4gIHNlbGVjdGVkLWRpc2FibGVkLWJ1dHRvbjogbWFwX2dldCgkbWF0LWdyZXksIDgwMCksXG4gIGRpc2FibGVkLWJ1dHRvbi10b2dnbGU6IGJsYWNrLFxuICB1bnNlbGVjdGVkLWNoaXA6IG1hcF9nZXQoJG1hdC1ncmV5LCA3MDApLFxuICBkaXNhYmxlZC1saXN0LW9wdGlvbjogYmxhY2ssXG4pO1xuXG4vLyBGb3JlZ3JvdW5kIHBhbGV0dGUgZm9yIGxpZ2h0IHRoZW1lcy5cbiRtYXQtbGlnaHQtdGhlbWUtZm9yZWdyb3VuZDogKFxuICBiYXNlOiAgICAgICAgICAgICAgYmxhY2ssXG4gIGRpdmlkZXI6ICAgICAgICAgICAkZGFyay1kaXZpZGVycyxcbiAgZGl2aWRlcnM6ICAgICAgICAgICRkYXJrLWRpdmlkZXJzLFxuICBkaXNhYmxlZDogICAgICAgICAgJGRhcmstZGlzYWJsZWQtdGV4dCxcbiAgZGlzYWJsZWQtYnV0dG9uOiAgIHJnYmEoYmxhY2ssIDAuMjYpLFxuICBkaXNhYmxlZC10ZXh0OiAgICAgJGRhcmstZGlzYWJsZWQtdGV4dCxcbiAgZWxldmF0aW9uOiAgICAgICAgIGJsYWNrLFxuICBoaW50LXRleHQ6ICAgICAgICAgJGRhcmstZGlzYWJsZWQtdGV4dCxcbiAgc2Vjb25kYXJ5LXRleHQ6ICAgICRkYXJrLXNlY29uZGFyeS10ZXh0LFxuICBpY29uOiAgICAgICAgICAgICAgcmdiYShibGFjaywgMC41NCksXG4gIGljb25zOiAgICAgICAgICAgICByZ2JhKGJsYWNrLCAwLjU0KSxcbiAgdGV4dDogICAgICAgICAgICAgIHJnYmEoYmxhY2ssIDAuODcpLFxuICBzbGlkZXItbWluOiAgICAgICAgcmdiYShibGFjaywgMC44NyksXG4gIHNsaWRlci1vZmY6ICAgICAgICByZ2JhKGJsYWNrLCAwLjI2KSxcbiAgc2xpZGVyLW9mZi1hY3RpdmU6IHJnYmEoYmxhY2ssIDAuMzgpLFxuKTtcblxuLy8gRm9yZWdyb3VuZCBwYWxldHRlIGZvciBkYXJrIHRoZW1lcy5cbiRtYXQtZGFyay10aGVtZS1mb3JlZ3JvdW5kOiAoXG4gIGJhc2U6ICAgICAgICAgICAgICB3aGl0ZSxcbiAgZGl2aWRlcjogICAgICAgICAgICRsaWdodC1kaXZpZGVycyxcbiAgZGl2aWRlcnM6ICAgICAgICAgICRsaWdodC1kaXZpZGVycyxcbiAgZGlzYWJsZWQ6ICAgICAgICAgICRsaWdodC1kaXNhYmxlZC10ZXh0LFxuICBkaXNhYmxlZC1idXR0b246ICAgcmdiYSh3aGl0ZSwgMC4zKSxcbiAgZGlzYWJsZWQtdGV4dDogICAgICRsaWdodC1kaXNhYmxlZC10ZXh0LFxuICBlbGV2YXRpb246ICAgICAgICAgYmxhY2ssXG4gIGhpbnQtdGV4dDogICAgICAgICAkbGlnaHQtZGlzYWJsZWQtdGV4dCxcbiAgc2Vjb25kYXJ5LXRleHQ6ICAgICRsaWdodC1zZWNvbmRhcnktdGV4dCxcbiAgaWNvbjogICAgICAgICAgICAgIHdoaXRlLFxuICBpY29uczogICAgICAgICAgICAgd2hpdGUsXG4gIHRleHQ6ICAgICAgICAgICAgICB3aGl0ZSxcbiAgc2xpZGVyLW1pbjogICAgICAgIHdoaXRlLFxuICBzbGlkZXItb2ZmOiAgICAgICAgcmdiYSh3aGl0ZSwgMC4zKSxcbiAgc2xpZGVyLW9mZi1hY3RpdmU6IHJnYmEod2hpdGUsIDAuMyksXG4pO1xuXG5cblxuLy8gRm9yIGEgZ2l2ZW4gaHVlIGluIGEgcGFsZXR0ZSwgcmV0dXJuIHRoZSBjb250cmFzdCBjb2xvciBmcm9tIHRoZSBtYXAgb2YgY29udHJhc3QgcGFsZXR0ZXMuXG4vLyBAcGFyYW0gJGNvbG9yLW1hcFxuLy8gQHBhcmFtICRodWVcbkBmdW5jdGlvbiBtYXQtY29udHJhc3QoJHBhbGV0dGUsICRodWUpIHtcbiAgQHJldHVybiBtYXAtZ2V0KG1hcC1nZXQoJHBhbGV0dGUsIGNvbnRyYXN0KSwgJGh1ZSk7XG59XG5cblxuLy8gQ3JlYXRlcyBhIG1hcCBvZiBodWVzIHRvIGNvbG9ycyBmb3IgYSB0aGVtZS4gVGhpcyBpcyB1c2VkIHRvIGRlZmluZSBhIHRoZW1lIHBhbGV0dGUgaW4gdGVybXNcbi8vIG9mIHRoZSBNYXRlcmlhbCBEZXNpZ24gaHVlcy5cbi8vIEBwYXJhbSAkY29sb3ItbWFwXG4vLyBAcGFyYW0gJHByaW1hcnlcbi8vIEBwYXJhbSAkbGlnaHRlclxuQGZ1bmN0aW9uIG1hdC1wYWxldHRlKCRiYXNlLXBhbGV0dGUsICRkZWZhdWx0OiA1MDAsICRsaWdodGVyOiAxMDAsICRkYXJrZXI6IDcwMCkge1xuICAkcmVzdWx0OiBtYXBfbWVyZ2UoJGJhc2UtcGFsZXR0ZSwgKFxuICAgIGRlZmF1bHQ6IG1hcC1nZXQoJGJhc2UtcGFsZXR0ZSwgJGRlZmF1bHQpLFxuICAgIGxpZ2h0ZXI6IG1hcC1nZXQoJGJhc2UtcGFsZXR0ZSwgJGxpZ2h0ZXIpLFxuICAgIGRhcmtlcjogbWFwLWdldCgkYmFzZS1wYWxldHRlLCAkZGFya2VyKSxcblxuICAgIGRlZmF1bHQtY29udHJhc3Q6IG1hdC1jb250cmFzdCgkYmFzZS1wYWxldHRlLCAkZGVmYXVsdCksXG4gICAgbGlnaHRlci1jb250cmFzdDogbWF0LWNvbnRyYXN0KCRiYXNlLXBhbGV0dGUsICRsaWdodGVyKSxcbiAgICBkYXJrZXItY29udHJhc3Q6IG1hdC1jb250cmFzdCgkYmFzZS1wYWxldHRlLCAkZGFya2VyKVxuICApKTtcblxuICAvLyBGb3IgZWFjaCBodWUgaW4gdGhlIHBhbGV0dGUsIGFkZCBhIFwiLWNvbnRyYXN0XCIgY29sb3IgdG8gdGhlIG1hcC5cbiAgQGVhY2ggJGh1ZSwgJGNvbG9yIGluICRiYXNlLXBhbGV0dGUge1xuICAgICRyZXN1bHQ6IG1hcF9tZXJnZSgkcmVzdWx0LCAoXG4gICAgICAnI3skaHVlfS1jb250cmFzdCc6IG1hdC1jb250cmFzdCgkYmFzZS1wYWxldHRlLCAkaHVlKVxuICAgICkpO1xuICB9XG5cbiAgQHJldHVybiAkcmVzdWx0O1xufVxuXG5cbi8vIEdldHMgYSBjb2xvciBmcm9tIGEgdGhlbWUgcGFsZXR0ZSAodGhlIG91dHB1dCBvZiBtYXQtcGFsZXR0ZSkuXG4vLyBUaGUgaHVlIGNhbiBiZSBvbmUgb2YgdGhlIHN0YW5kYXJkIHZhbHVlcyAoNTAwLCBBNDAwLCBldGMuKSwgb25lIG9mIHRoZSB0aHJlZSBwcmVjb25maWd1cmVkXG4vLyBodWVzIChkZWZhdWx0LCBsaWdodGVyLCBkYXJrZXIpLCBvciBhbnkgb2YgdGhlIGFmb3JlbWVudGlvbmVkIHByZWZpeGVkIHdpdGggXCItY29udHJhc3RcIi5cbi8vXG4vLyBAcGFyYW0gJGNvbG9yLW1hcCBUaGUgdGhlbWUgcGFsZXR0ZSAob3V0cHV0IG9mIG1hdC1wYWxldHRlKS5cbi8vIEBwYXJhbSAkaHVlIFRoZSBodWUgZnJvbSB0aGUgcGFsZXR0ZSB0byB1c2UuIElmIHRoaXMgaXMgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEsIGl0IHdpbGxcbi8vICAgICBiZSB0cmVhdGVkIGFzIG9wYWNpdHkuXG4vLyBAcGFyYW0gJG9wYWNpdHkgVGhlIGFscGhhIGNoYW5uZWwgdmFsdWUgZm9yIHRoZSBjb2xvci5cbkBmdW5jdGlvbiBtYXQtY29sb3IoJHBhbGV0dGUsICRodWU6IGRlZmF1bHQsICRvcGFjaXR5OiBudWxsKSB7XG4gIC8vIElmIGh1ZUtleSBpcyBhIG51bWJlciBiZXR3ZWVuIHplcm8gYW5kIG9uZSwgdGhlbiBpdCBhY3R1YWxseSBjb250YWlucyBhblxuICAvLyBvcGFjaXR5IHZhbHVlLCBzbyByZWNhbGwgdGhpcyBmdW5jdGlvbiB3aXRoIHRoZSBkZWZhdWx0IGh1ZSBhbmQgdGhhdCBnaXZlbiBvcGFjaXR5LlxuICBAaWYgdHlwZS1vZigkaHVlKSA9PSBudW1iZXIgYW5kICRodWUgPj0gMCBhbmQgJGh1ZSA8PSAxIHtcbiAgICBAcmV0dXJuIG1hdC1jb2xvcigkcGFsZXR0ZSwgZGVmYXVsdCwgJGh1ZSk7XG4gIH1cblxuICAkY29sb3I6IG1hcC1nZXQoJHBhbGV0dGUsICRodWUpO1xuICAkb3BhY2l0eTogaWYoJG9wYWNpdHkgPT0gbnVsbCwgb3BhY2l0eSgkY29sb3IpLCAkb3BhY2l0eSk7XG5cbiAgQHJldHVybiByZ2JhKCRjb2xvciwgJG9wYWNpdHkpO1xufVxuXG5cbi8vIENyZWF0ZXMgYSBjb250YWluZXIgb2JqZWN0IGZvciBhIGxpZ2h0IHRoZW1lIHRvIGJlIGdpdmVuIHRvIGluZGl2aWR1YWwgY29tcG9uZW50IHRoZW1lIG1peGlucy5cbkBmdW5jdGlvbiBtYXQtbGlnaHQtdGhlbWUoJHByaW1hcnksICRhY2NlbnQsICR3YXJuOiBtYXQtcGFsZXR0ZSgkbWF0LXJlZCkpIHtcbiAgQHJldHVybiAoXG4gICAgcHJpbWFyeTogJHByaW1hcnksXG4gICAgYWNjZW50OiAkYWNjZW50LFxuICAgIHdhcm46ICR3YXJuLFxuICAgIGlzLWRhcms6IGZhbHNlLFxuICAgIGZvcmVncm91bmQ6ICRtYXQtbGlnaHQtdGhlbWUtZm9yZWdyb3VuZCxcbiAgICBiYWNrZ3JvdW5kOiAkbWF0LWxpZ2h0LXRoZW1lLWJhY2tncm91bmQsXG4gICk7XG59XG5cblxuLy8gQ3JlYXRlcyBhIGNvbnRhaW5lciBvYmplY3QgZm9yIGEgZGFyayB0aGVtZSB0byBiZSBnaXZlbiB0byBpbmRpdmlkdWFsIGNvbXBvbmVudCB0aGVtZSBtaXhpbnMuXG5AZnVuY3Rpb24gbWF0LWRhcmstdGhlbWUoJHByaW1hcnksICRhY2NlbnQsICR3YXJuOiBtYXQtcGFsZXR0ZSgkbWF0LXJlZCkpIHtcbiAgQHJldHVybiAoXG4gICAgcHJpbWFyeTogJHByaW1hcnksXG4gICAgYWNjZW50OiAkYWNjZW50LFxuICAgIHdhcm46ICR3YXJuLFxuICAgIGlzLWRhcms6IHRydWUsXG4gICAgZm9yZWdyb3VuZDogJG1hdC1kYXJrLXRoZW1lLWZvcmVncm91bmQsXG4gICAgYmFja2dyb3VuZDogJG1hdC1kYXJrLXRoZW1lLWJhY2tncm91bmQsXG4gICk7XG59XG5cblxuXG4kbWF0LXJpcHBsZS1jb2xvci1vcGFjaXR5OiAwLjE7XG5cbkBtaXhpbiBtYXQtcmlwcGxlKCkge1xuXG4gIC8vIFRoZSBob3N0IGVsZW1lbnQgb2YgYW4gbWF0LXJpcHBsZSBkaXJlY3RpdmUgc2hvdWxkIGFsd2F5cyBoYXZlIGEgcG9zaXRpb24gb2YgXCJhYnNvbHV0ZVwiIG9yXG4gIC8vIFwicmVsYXRpdmVcIiBzbyB0aGF0IHRoZSByaXBwbGVzIGluc2lkZSBhcmUgY29ycmVjdGx5IHBvc2l0aW9uZWQgcmVsYXRpdmVseSB0byB0aGUgY29udGFpbmVyLlxuICAubWF0LXJpcHBsZSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC8vIEJ5IGRlZmF1bHQsIGV2ZXJ5IHJpcHBsZSBjb250YWluZXIgc2hvdWxkIGhhdmUgcG9zaXRpb246IHJlbGF0aXZlIGluIGZhdm9yIG9mIGNyZWF0aW5nIGFuXG4gICAgLy8gZWFzeSBBUEkgZm9yIGRldmVsb3BlcnMgdXNpbmcgdGhlIE1hdFJpcHBsZSBkaXJlY3RpdmUuXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgLm1hdC1yaXBwbGUubWF0LXJpcHBsZS11bmJvdW5kZWQge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG5cbiAgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgIHRyYW5zaXRpb246IG9wYWNpdHksIHRyYW5zZm9ybSAwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcblxuICAgIC8vIEluIGhpZ2ggY29udHJhc3QgbW9kZSB0aGUgcmlwcGxlIGlzIG9wYXF1ZSwgY2F1c2luZyBpdCB0byBvYnN0cnVjdCB0aGUgY29udGVudC5cbiAgICBAaW5jbHVkZSBjZGstaGlnaC1jb250cmFzdCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxufVxuXG4vKiBUaGVtZSBmb3IgdGhlIHJpcHBsZSBlbGVtZW50cy4qL1xuQG1peGluIG1hdC1yaXBwbGUtdGhlbWUoJHRoZW1lKSB7XG4gICRmb3JlZ3JvdW5kOiBtYXBfZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRmb3JlZ3JvdW5kLWJhc2U6IG1hcF9nZXQoJGZvcmVncm91bmQsIGJhc2UpO1xuXG4gIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGZvcmVncm91bmQtYmFzZSwgJG1hdC1yaXBwbGUtY29sb3Itb3BhY2l0eSk7XG4gIH1cbn1cblxuXG5cbi8vIFV0aWxpdHkgZm9yIGZldGNoaW5nIGEgbmVzdGVkIHZhbHVlIGZyb20gYSB0eXBvZ3JhcGh5IGNvbmZpZy5cbkBmdW5jdGlvbiBfbWF0LWdldC10eXBlLXZhbHVlKCRjb25maWcsICRsZXZlbCwgJG5hbWUpIHtcbiAgQHJldHVybiBtYXAtZ2V0KG1hcC1nZXQoJGNvbmZpZywgJGxldmVsKSwgJG5hbWUpO1xufVxuXG4vLyBHZXRzIHRoZSBmb250IHNpemUgZm9yIGEgbGV2ZWwgaW5zaWRlIGEgdHlwb2dyYXBoeSBjb25maWcuXG5AZnVuY3Rpb24gbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCAkbGV2ZWwpIHtcbiAgQHJldHVybiBfbWF0LWdldC10eXBlLXZhbHVlKCRjb25maWcsICRsZXZlbCwgZm9udC1zaXplKTtcbn1cblxuLy8gR2V0cyB0aGUgbGluZSBoZWlnaHQgZm9yIGEgbGV2ZWwgaW5zaWRlIGEgdHlwb2dyYXBoeSBjb25maWcuXG5AZnVuY3Rpb24gbWF0LWxpbmUtaGVpZ2h0KCRjb25maWcsICRsZXZlbCkge1xuICBAcmV0dXJuIF9tYXQtZ2V0LXR5cGUtdmFsdWUoJGNvbmZpZywgJGxldmVsLCBsaW5lLWhlaWdodCk7XG59XG5cbi8vIEdldHMgdGhlIGZvbnQgd2VpZ2h0IGZvciBhIGxldmVsIGluc2lkZSBhIHR5cG9ncmFwaHkgY29uZmlnLlxuQGZ1bmN0aW9uIG1hdC1mb250LXdlaWdodCgkY29uZmlnLCAkbGV2ZWwpIHtcbiAgQHJldHVybiBfbWF0LWdldC10eXBlLXZhbHVlKCRjb25maWcsICRsZXZlbCwgZm9udC13ZWlnaHQpO1xufVxuXG4vLyBHZXRzIHRoZSBsZXR0ZXIgc3BhY2luZyBmb3IgYSBsZXZlbCBpbnNpZGUgYSB0eXBvZ3JhcGh5IGNvbmZpZy5cbkBmdW5jdGlvbiBtYXQtbGV0dGVyLXNwYWNpbmcoJGNvbmZpZywgJGxldmVsKSB7XG4gIEByZXR1cm4gX21hdC1nZXQtdHlwZS12YWx1ZSgkY29uZmlnLCAkbGV2ZWwsIGxldHRlci1zcGFjaW5nKTtcbn1cblxuLy8gR2V0cyB0aGUgZm9udC1mYW1pbHkgZnJvbSBhIHR5cG9ncmFwaHkgY29uZmlnIGFuZCByZW1vdmVzIHRoZSBxdW90ZXMgYXJvdW5kIGl0LlxuQGZ1bmN0aW9uIG1hdC1mb250LWZhbWlseSgkY29uZmlnLCAkbGV2ZWw6IG51bGwpIHtcbiAgJGZvbnQtZmFtaWx5OiBtYXAtZ2V0KCRjb25maWcsIGZvbnQtZmFtaWx5KTtcblxuICBAaWYgJGxldmVsICE9IG51bGwge1xuICAgICRmb250LWZhbWlseTogX21hdC1nZXQtdHlwZS12YWx1ZSgkY29uZmlnLCAkbGV2ZWwsIGZvbnQtZmFtaWx5KTtcbiAgfVxuXG4gIC8vIEd1YXJkIGFnYWluc3QgdW5xdW90aW5nIG5vbi1zdHJpbmcgdmFsdWVzLCBiZWNhdXNlIGl0J3MgZGVwcmVjYXRlZC5cbiAgQHJldHVybiBpZih0eXBlLW9mKCRmb250LWZhbWlseSkgPT0gc3RyaW5nLCB1bnF1b3RlKCRmb250LWZhbWlseSksICRmb250LWZhbWlseSk7XG59XG5cbi8vIE91dHB1dHMgdGhlIHNob3J0aGFuZCBgZm9udGAgQ1NTIHByb3BlcnR5LCBiYXNlZCBvbiBhIHNldCBvZiB0eXBvZ3JhcGh5IHZhbHVlcy4gRmFsbHMgYmFjayB0b1xuLy8gdGhlIGluZGl2aWR1YWwgcHJvcGVydGllcyBpZiBhIHZhbHVlIHRoYXQgaXNuJ3QgYWxsb3dlZCBpbiB0aGUgc2hvcnRoYW5kIGlzIHBhc3NlZCBpbi5cbkBtaXhpbiBtYXQtdHlwb2dyYXBoeS1mb250LXNob3J0aGFuZCgkZm9udC1zaXplLCAkZm9udC13ZWlnaHQsICRsaW5lLWhlaWdodCwgJGZvbnQtZmFtaWx5KSB7XG4gIC8vIElmIGFueSBvZiB0aGUgdmFsdWVzIGFyZSBzZXQgdG8gYGluaGVyaXRgLCB3ZSBjYW4ndCB1c2UgdGhlIHNob3J0aGFuZFxuICAvLyBzbyB3ZSBmYWxsIGJhY2sgdG8gcGFzc2luZyBpbiB0aGUgaW5kaXZpZHVhbCBwcm9wZXJ0aWVzLlxuICBAaWYgKCRmb250LXNpemUgPT0gaW5oZXJpdCBvclxuICAgICAgICRmb250LXdlaWdodCA9PSBpbmhlcml0IG9yXG4gICAgICAgJGxpbmUtaGVpZ2h0ID09IGluaGVyaXQgb3JcbiAgICAgICAkZm9udC1mYW1pbHkgPT0gaW5oZXJpdCBvclxuICAgICAgICRmb250LXNpemUgPT0gbnVsbCBvclxuICAgICAgICRmb250LXdlaWdodCA9PSBudWxsIG9yXG4gICAgICAgJGxpbmUtaGVpZ2h0ID09IG51bGwgb3JcbiAgICAgICAkZm9udC1mYW1pbHkgPT0gbnVsbCkge1xuXG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplO1xuICAgIGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQ7XG4gICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodDtcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xuICB9XG4gIEBlbHNlIHtcbiAgICAvLyBPdGhlcndpc2UgdXNlIHRoZSBzaG9ydGhhbmQgYGZvbnRgLCBiZWNhdXNlIGl0J3MgdGhlIGxlYXN0IGFtb3VudCBvZiBieXRlcy4gTm90ZVxuICAgIC8vIHRoYXQgd2UgbmVlZCB0byB1c2UgaW50ZXJwb2xhdGlvbiBmb3IgYGZvbnQtc2l6ZS9saW5lLWhlaWdodGAgaW4gb3JkZXIgdG8gcHJldmVudFxuICAgIC8vIFNhc3MgZnJvbSBkaXZpZGluZyB0aGUgdHdvIHZhbHVlcy5cbiAgICBmb250OiAkZm9udC13ZWlnaHQgI3skZm9udC1zaXplfS8jeyRsaW5lLWhlaWdodH0gJGZvbnQtZmFtaWx5O1xuICB9XG59XG5cbi8vIENvbnZlcnRzIGEgdHlwb2dyYXBoeSBsZXZlbCBpbnRvIENTUyBzdHlsZXMuXG5AbWl4aW4gbWF0LXR5cG9ncmFwaHktbGV2ZWwtdG8tc3R5bGVzKCRjb25maWcsICRsZXZlbCkge1xuICAkZm9udC1zaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsICRsZXZlbCk7XG4gICRmb250LXdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsICRsZXZlbCk7XG4gICRsaW5lLWhlaWdodDogbWF0LWxpbmUtaGVpZ2h0KCRjb25maWcsICRsZXZlbCk7XG4gICRmb250LWZhbWlseTogbWF0LWZvbnQtZmFtaWx5KCRjb25maWcsICRsZXZlbCk7XG5cbiAgQGluY2x1ZGUgbWF0LXR5cG9ncmFwaHktZm9udC1zaG9ydGhhbmQoJGZvbnQtc2l6ZSwgJGZvbnQtd2VpZ2h0LCAkbGluZS1oZWlnaHQsICRmb250LWZhbWlseSk7XG4gIGxldHRlci1zcGFjaW5nOiBtYXQtbGV0dGVyLXNwYWNpbmcoJGNvbmZpZywgJGxldmVsKTtcbn1cblxuXG5AbWl4aW4gbWF0LW9wdGlvbi10aGVtZSgkdGhlbWUpIHtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJHByaW1hcnk6IG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KTtcbiAgJGFjY2VudDogbWFwLWdldCgkdGhlbWUsIGFjY2VudCk7XG4gICR3YXJuOiBtYXAtZ2V0KCR0aGVtZSwgd2Fybik7XG5cbiAgLm1hdC1vcHRpb24ge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuXG4gICAgJjpob3Zlcjpub3QoLm1hdC1vcHRpb24tZGlzYWJsZWQpLFxuICAgICY6Zm9jdXM6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gICAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGhvdmVyKTtcbiAgICB9XG5cbiAgICAvLyBJbiBtdWx0aXBsZSBtb2RlIHRoZXJlIGlzIGEgY2hlY2tib3ggdG8gc2hvdyB0aGF0IHRoZSBvcHRpb24gaXMgc2VsZWN0ZWQuXG4gICAgJi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLW11bHRpcGxlKTpub3QoLm1hdC1vcHRpb24tZGlzYWJsZWQpIHtcbiAgICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgaG92ZXIpO1xuICAgIH1cblxuICAgICYubWF0LWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGhvdmVyKTtcbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuICAgIH1cblxuICAgICYubWF0LW9wdGlvbi1kaXNhYmxlZCB7XG4gICAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBoaW50LXRleHQpO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtcHJpbWFyeSAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkcHJpbWFyeSk7XG4gIH1cblxuICAubWF0LWFjY2VudCAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkYWNjZW50KTtcbiAgfVxuXG4gIC5tYXQtd2FybiAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkd2Fybik7XG4gIH1cbn1cblxuQG1peGluIG1hdC1vcHRpb24tdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtb3B0aW9uIHtcbiAgICBmb250OiB7XG4gICAgICBmYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgICAgIHNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgc3ViaGVhZGluZy0yKTtcbiAgICB9XG4gIH1cbn1cblxuXG5cblxuXG5AbWl4aW4gbWF0LW9wdGdyb3VwLXRoZW1lKCR0aGVtZSkge1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuXG4gIC5tYXQtb3B0Z3JvdXAtbGFiZWwge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNlY29uZGFyeS10ZXh0KTtcbiAgfVxuXG4gIC5tYXQtb3B0Z3JvdXAtZGlzYWJsZWQgLm1hdC1vcHRncm91cC1sYWJlbCB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgaGludC10ZXh0KTtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LW9wdGdyb3VwLXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAubWF0LW9wdGdyb3VwLWxhYmVsIHtcbiAgICBAaW5jbHVkZSBtYXQtdHlwb2dyYXBoeS1sZXZlbC10by1zdHlsZXMoJGNvbmZpZywgYm9keS0yKTtcbiAgfVxufVxuXG5cblxuQG1peGluIG1hdC1wc2V1ZG8tY2hlY2tib3gtdGhlbWUoJHRoZW1lKSB7XG4gICRpcy1kYXJrLXRoZW1lOiBtYXAtZ2V0KCR0aGVtZSwgaXMtZGFyayk7XG4gICRwcmltYXJ5OiBtYXAtZ2V0KCR0aGVtZSwgcHJpbWFyeSk7XG4gICRhY2NlbnQ6IG1hcC1nZXQoJHRoZW1lLCBhY2NlbnQpO1xuICAkd2FybjogbWFwLWdldCgkdGhlbWUsIHdhcm4pO1xuICAkYmFja2dyb3VuZDogbWFwLWdldCgkdGhlbWUsIGJhY2tncm91bmQpO1xuXG4gIC8vIE5PVEUodHJhdmlza2F1Zm1hbik6IFdoaWxlIHRoZSBzcGVjIGNhbGxzIGZvciB0cmFuc2x1Y2VudCBibGFja3Mvd2hpdGVzIGZvciBkaXNhYmxlZCBjb2xvcnMsXG4gIC8vIHRoaXMgZG9lcyBub3Qgd29yayB3ZWxsIHdpdGggZWxlbWVudHMgbGF5ZXJlZCBvbiB0b3Agb2Ygb25lIGFub3RoZXIuIFRvIGdldCBhcm91bmQgdGhpcyB3ZVxuICAvLyBibGVuZCB0aGUgY29sb3JzIHRvZ2V0aGVyIGJhc2VkIG9uIHRoZSBiYXNlIGNvbG9yIGFuZCB0aGUgdGhlbWUgYmFja2dyb3VuZC5cbiAgJHdoaXRlLTMwcGN0LW9wYWNpdHktb24tZGFyazogIzY4Njg2ODtcbiAgJGJsYWNrLTI2cGN0LW9wYWNpdHktb24tbGlnaHQ6ICNiMGIwYjA7XG4gICRkaXNhYmxlZC1jb2xvcjogaWYoJGlzLWRhcmstdGhlbWUsICR3aGl0ZS0zMHBjdC1vcGFjaXR5LW9uLWRhcmssICRibGFjay0yNnBjdC1vcGFjaXR5LW9uLWxpZ2h0KTtcbiAgJGNvbG9yZWQtYm94LXNlbGVjdG9yOiAnLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCwgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSc7XG5cbiAgLm1hdC1wc2V1ZG8tY2hlY2tib3gge1xuICAgIGNvbG9yOiBtYXQtY29sb3IobWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpLCBzZWNvbmRhcnktdGV4dCk7XG5cbiAgICAmOjphZnRlciB7XG4gICAgICBjb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBiYWNrZ3JvdW5kKTtcbiAgICB9XG4gIH1cblxuICAvLyBEZWZhdWx0IHRvIHRoZSBhY2NlbnQgY29sb3IuIE5vdGUgdGhhdCB0aGUgcHNldWRvIGNoZWNrYm94ZXMgYXJlIG1lYW50IHRvIGluaGVyaXQgdGhlXG4gIC8vIHRoZW1lIGZyb20gdGhlaXIgcGFyZW50LCByYXRoZXIgdGhhbiBpbXBsZW1lbnRpbmcgdGhlaXIgb3duIHRoZW1pbmcsIHdoaWNoIGlzIHdoeSB3ZVxuICAvLyBkb24ndCBhdHRhY2ggdG8gdGhlIGBtYXQtKmAgY2xhc3Nlcy5cbiAgLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCxcbiAgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSxcbiAgLm1hdC1hY2NlbnQgLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCxcbiAgLm1hdC1hY2NlbnQgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKG1hcC1nZXQoJHRoZW1lLCBhY2NlbnQpKTtcbiAgfVxuXG4gIC5tYXQtcHJpbWFyeSAubWF0LXBzZXVkby1jaGVja2JveC1jaGVja2VkLFxuICAubWF0LXByaW1hcnkgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSB7XG4gICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KSk7XG4gIH1cblxuICAubWF0LXdhcm4gLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCxcbiAgLm1hdC13YXJuIC5tYXQtcHNldWRvLWNoZWNrYm94LWluZGV0ZXJtaW5hdGUge1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcihtYXAtZ2V0KCR0aGVtZSwgd2FybikpO1xuICB9XG5cbiAgLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCxcbiAgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSB7XG4gICAgJi5tYXQtcHNldWRvLWNoZWNrYm94LWRpc2FibGVkIHtcbiAgICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1jb2xvcjtcbiAgICB9XG4gIH1cbn1cblxuXG5cbi8vIFJlcHJlc2VudHMgYSB0eXBvZ3JhcGh5IGxldmVsIGZyb20gdGhlIE1hdGVyaWFsIGRlc2lnbiBzcGVjLlxuQGZ1bmN0aW9uIG1hdC10eXBvZ3JhcGh5LWxldmVsKFxuICAkZm9udC1zaXplLFxuICAkbGluZS1oZWlnaHQ6ICRmb250LXNpemUsXG4gICRmb250LXdlaWdodDogNDAwLFxuICAkZm9udC1mYW1pbHk6IG51bGwsXG4gICRsZXR0ZXItc3BhY2luZzogbnVsbCkge1xuXG4gIEByZXR1cm4gKFxuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZSxcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LFxuICAgIGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQsXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseSxcbiAgICBsZXR0ZXItc3BhY2luZzogJGxldHRlci1zcGFjaW5nXG4gICk7XG59XG5cbi8vIFJlcHJlc2VudHMgYSBjb2xsZWN0aW9uIG9mIHR5cG9ncmFwaHkgbGV2ZWxzLlxuLy8gRGVmYXVsdHMgY29tZSBmcm9tIGh0dHBzOi8vbWF0ZXJpYWwuaW8vZ3VpZGVsaW5lcy9zdHlsZS90eXBvZ3JhcGh5Lmh0bWxcbkBmdW5jdGlvbiBtYXQtdHlwb2dyYXBoeS1jb25maWcoXG4gICRmb250LWZhbWlseTogICAnUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWYnLFxuICAkZGlzcGxheS00OiAgICAgbWF0LXR5cG9ncmFwaHktbGV2ZWwoMTEycHgsIDExMnB4LCAzMDApLFxuICAkZGlzcGxheS0zOiAgICAgbWF0LXR5cG9ncmFwaHktbGV2ZWwoNTZweCwgNTZweCwgNDAwKSxcbiAgJGRpc3BsYXktMjogICAgIG1hdC10eXBvZ3JhcGh5LWxldmVsKDQ1cHgsIDQ4cHgsIDQwMCksXG4gICRkaXNwbGF5LTE6ICAgICBtYXQtdHlwb2dyYXBoeS1sZXZlbCgzNHB4LCA0MHB4LCA0MDApLFxuICAkaGVhZGxpbmU6ICAgICAgbWF0LXR5cG9ncmFwaHktbGV2ZWwoMjRweCwgMzJweCwgNDAwKSxcbiAgJHRpdGxlOiAgICAgICAgIG1hdC10eXBvZ3JhcGh5LWxldmVsKDIwcHgsIDMycHgsIDUwMCksXG4gICRzdWJoZWFkaW5nLTI6ICBtYXQtdHlwb2dyYXBoeS1sZXZlbCgxNnB4LCAyOHB4LCA0MDApLFxuICAkc3ViaGVhZGluZy0xOiAgbWF0LXR5cG9ncmFwaHktbGV2ZWwoMTVweCwgMjRweCwgNDAwKSxcbiAgJGJvZHktMjogICAgICAgIG1hdC10eXBvZ3JhcGh5LWxldmVsKDE0cHgsIDI0cHgsIDUwMCksXG4gICRib2R5LTE6ICAgICAgICBtYXQtdHlwb2dyYXBoeS1sZXZlbCgxNHB4LCAyMHB4LCA0MDApLFxuICAkY2FwdGlvbjogICAgICAgbWF0LXR5cG9ncmFwaHktbGV2ZWwoMTJweCwgMjBweCwgNDAwKSxcbiAgJGJ1dHRvbjogICAgICAgIG1hdC10eXBvZ3JhcGh5LWxldmVsKDE0cHgsIDE0cHgsIDUwMCksXG4gIC8vIExpbmUtaGVpZ2h0IG11c3QgYmUgdW5pdC1sZXNzIGZyYWN0aW9uIG9mIHRoZSBmb250LXNpemUuXG4gICRpbnB1dDogICAgICAgICBtYXQtdHlwb2dyYXBoeS1sZXZlbChpbmhlcml0LCAxLjEyNSwgNDAwKVxuKSB7XG5cbiAgLy8gRGVjbGFyZSBhbiBpbml0aWFsIG1hcCB3aXRoIGFsbCBvZiB0aGUgbGV2ZWxzLlxuICAkY29uZmlnOiAoXG4gICAgZGlzcGxheS00OiAgICAgICRkaXNwbGF5LTQsXG4gICAgZGlzcGxheS0zOiAgICAgICRkaXNwbGF5LTMsXG4gICAgZGlzcGxheS0yOiAgICAgICRkaXNwbGF5LTIsXG4gICAgZGlzcGxheS0xOiAgICAgICRkaXNwbGF5LTEsXG4gICAgaGVhZGxpbmU6ICAgICAgICRoZWFkbGluZSxcbiAgICB0aXRsZTogICAgICAgICAgJHRpdGxlLFxuICAgIHN1YmhlYWRpbmctMjogICAkc3ViaGVhZGluZy0yLFxuICAgIHN1YmhlYWRpbmctMTogICAkc3ViaGVhZGluZy0xLFxuICAgIGJvZHktMjogICAgICAgICAkYm9keS0yLFxuICAgIGJvZHktMTogICAgICAgICAkYm9keS0xLFxuICAgIGNhcHRpb246ICAgICAgICAkY2FwdGlvbixcbiAgICBidXR0b246ICAgICAgICAgJGJ1dHRvbixcbiAgICBpbnB1dDogICAgICAgICAgJGlucHV0LFxuICApO1xuXG4gIC8vIExvb3AgdGhyb3VnaCB0aGUgbGV2ZWxzIGFuZCBzZXQgdGhlIGBmb250LWZhbWlseWAgb2YgdGhlIG9uZXMgdGhhdCBkb24ndCBoYXZlIG9uZSB0byB0aGUgYmFzZS5cbiAgLy8gTm90ZSB0aGF0IFNhc3MgY2FuJ3QgbW9kaWZ5IG1hcHMgaW4gcGxhY2UsIHdoaWNoIG1lYW5zIHRoYXQgd2UgbmVlZCB0byBtZXJnZSBhbmQgcmUtYXNzaWduLlxuICBAZWFjaCAka2V5LCAkbGV2ZWwgaW4gJGNvbmZpZyB7XG4gICAgQGlmIG1hcC1nZXQoJGxldmVsLCBmb250LWZhbWlseSkgPT0gbnVsbCB7XG4gICAgICAkbmV3LWxldmVsOiBtYXAtbWVyZ2UoJGxldmVsLCAoZm9udC1mYW1pbHk6ICRmb250LWZhbWlseSkpO1xuICAgICAgJGNvbmZpZzogbWFwLW1lcmdlKCRjb25maWcsICgka2V5OiAkbmV3LWxldmVsKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIHRoZSBiYXNlIGZvbnQgZmFtaWx5IHRvIHRoZSBjb25maWcuXG4gIEByZXR1cm4gbWFwLW1lcmdlKCRjb25maWcsIChmb250LWZhbWlseTogJGZvbnQtZmFtaWx5KSk7XG59XG5cbi8vIEFkZHMgdGhlIGJhc2UgdHlwb2dyYXBoeSBzdHlsZXMsIGJhc2VkIG9uIGEgY29uZmlnLlxuQG1peGluIG1hdC1iYXNlLXR5cG9ncmFwaHkoJGNvbmZpZywgJHNlbGVjdG9yOiAnLm1hdC10eXBvZ3JhcGh5Jykge1xuICAubWF0LWgxLCAubWF0LWhlYWRsaW5lLCAjeyRzZWxlY3Rvcn0gaDEge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWxldmVsLXRvLXN0eWxlcygkY29uZmlnLCBoZWFkbGluZSk7XG4gICAgbWFyZ2luOiAwIDAgMTZweDtcbiAgfVxuXG4gIC5tYXQtaDIsIC5tYXQtdGl0bGUsICN7JHNlbGVjdG9yfSBoMiB7XG4gICAgQGluY2x1ZGUgbWF0LXR5cG9ncmFwaHktbGV2ZWwtdG8tc3R5bGVzKCRjb25maWcsIHRpdGxlKTtcbiAgICBtYXJnaW46IDAgMCAxNnB4O1xuICB9XG5cbiAgLm1hdC1oMywgLm1hdC1zdWJoZWFkaW5nLTIsICN7JHNlbGVjdG9yfSBoMyB7XG4gICAgQGluY2x1ZGUgbWF0LXR5cG9ncmFwaHktbGV2ZWwtdG8tc3R5bGVzKCRjb25maWcsIHN1YmhlYWRpbmctMik7XG4gICAgbWFyZ2luOiAwIDAgMTZweDtcbiAgfVxuXG4gIC5tYXQtaDQsIC5tYXQtc3ViaGVhZGluZy0xLCAjeyRzZWxlY3Rvcn0gaDQge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWxldmVsLXRvLXN0eWxlcygkY29uZmlnLCBzdWJoZWFkaW5nLTEpO1xuICAgIG1hcmdpbjogMCAwIDE2cHg7XG4gIH1cblxuICAvLyBOb3RlOiB0aGUgc3BlYyBkb2Vzbid0IGhhdmUgYW55dGhpbmcgdGhhdCB3b3VsZCBjb3JyZXNwb25kIHRvIGg1IGFuZCBoNiwgYnV0IHdlIGFkZCB0aGVzZSBmb3JcbiAgLy8gY29uc2lzdGVuY3kuIFRoZSBmb250IHNpemVzIGNvbWUgZnJvbSB0aGUgQ2hyb21lIHVzZXIgYWdlbnQgc3R5bGVzIHdoaWNoIGhhdmUgaDUgYXQgMC44M2VtXG4gIC8vIGFuZCBoNiBhdCAwLjY3ZW0uXG4gIC5tYXQtaDUsICN7JHNlbGVjdG9yfSBoNSB7XG4gICAgQGluY2x1ZGUgbWF0LXR5cG9ncmFwaHktZm9udC1zaG9ydGhhbmQoXG4gICAgICBtYXQtZm9udC1zaXplKCRjb25maWcsIGJvZHktMSkgKiAwLjgzLFxuICAgICAgbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIGJvZHktMSksXG4gICAgICBtYXQtbGluZS1oZWlnaHQoJGNvbmZpZywgYm9keS0xKSxcbiAgICAgIG1hdC1mb250LWZhbWlseSgkY29uZmlnLCBib2R5LTEpXG4gICAgKTtcblxuICAgIG1hcmdpbjogMCAwIDEycHg7XG4gIH1cblxuICAubWF0LWg2LCAjeyRzZWxlY3Rvcn0gaDYge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWZvbnQtc2hvcnRoYW5kKFxuICAgICAgbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBib2R5LTEpICogMC42NyxcbiAgICAgIG1hdC1mb250LXdlaWdodCgkY29uZmlnLCBib2R5LTEpLFxuICAgICAgbWF0LWxpbmUtaGVpZ2h0KCRjb25maWcsIGJvZHktMSksXG4gICAgICBtYXQtZm9udC1mYW1pbHkoJGNvbmZpZywgYm9keS0xKVxuICAgICk7XG5cbiAgICBtYXJnaW46IDAgMCAxMnB4O1xuICB9XG5cbiAgLm1hdC1ib2R5LXN0cm9uZywgLm1hdC1ib2R5LTIge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWxldmVsLXRvLXN0eWxlcygkY29uZmlnLCBib2R5LTIpO1xuICB9XG5cbiAgLm1hdC1ib2R5LCAubWF0LWJvZHktMSwgI3skc2VsZWN0b3J9IHtcbiAgICBAaW5jbHVkZSBtYXQtdHlwb2dyYXBoeS1sZXZlbC10by1zdHlsZXMoJGNvbmZpZywgYm9keS0xKTtcblxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwIDAgMTJweDtcbiAgICB9XG4gIH1cblxuICAubWF0LXNtYWxsLCAubWF0LWNhcHRpb24ge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWxldmVsLXRvLXN0eWxlcygkY29uZmlnLCBjYXB0aW9uKTtcbiAgfVxuXG4gIC8vIE5vdGU6IFRoZSBzcGVjIGRvZXNuJ3QgbWVudGlvbiBsZXR0ZXIgc3BhY2luZy4gVGhlIHZhbHVlIGNvbWVzIGZyb21cbiAgLy8gZXllYmFsbGluZyBpdCB1bnRpbCBpdCBsb29rZWQgZXhhY3RseSBsaWtlIHRoZSBzcGVjIGV4YW1wbGVzLlxuICAubWF0LWRpc3BsYXktNCwgI3skc2VsZWN0b3J9IC5tYXQtZGlzcGxheS00IHtcbiAgICBAaW5jbHVkZSBtYXQtdHlwb2dyYXBoeS1sZXZlbC10by1zdHlsZXMoJGNvbmZpZywgZGlzcGxheS00KTtcbiAgICBtYXJnaW46IDAgMCA1NnB4O1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wNWVtO1xuICB9XG5cbiAgLm1hdC1kaXNwbGF5LTMsICN7JHNlbGVjdG9yfSAubWF0LWRpc3BsYXktMyB7XG4gICAgQGluY2x1ZGUgbWF0LXR5cG9ncmFwaHktbGV2ZWwtdG8tc3R5bGVzKCRjb25maWcsIGRpc3BsYXktMyk7XG4gICAgbWFyZ2luOiAwIDAgNjRweDtcbiAgICBsZXR0ZXItc3BhY2luZzogLTAuMDJlbTtcbiAgfVxuXG4gIC5tYXQtZGlzcGxheS0yLCAjeyRzZWxlY3Rvcn0gLm1hdC1kaXNwbGF5LTIge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWxldmVsLXRvLXN0eWxlcygkY29uZmlnLCBkaXNwbGF5LTIpO1xuICAgIG1hcmdpbjogMCAwIDY0cHg7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAwNWVtO1xuICB9XG5cbiAgLm1hdC1kaXNwbGF5LTEsICN7JHNlbGVjdG9yfSAubWF0LWRpc3BsYXktMSB7XG4gICAgQGluY2x1ZGUgbWF0LXR5cG9ncmFwaHktbGV2ZWwtdG8tc3R5bGVzKCRjb25maWcsIGRpc3BsYXktMSk7XG4gICAgbWFyZ2luOiAwIDAgNjRweDtcbiAgfVxufVxuXG5cblxuXG5AbWl4aW4gbWF0LWF1dG9jb21wbGV0ZS10aGVtZSgkdGhlbWUpIHtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcblxuICAubWF0LWF1dG9jb21wbGV0ZS1wYW5lbCB7XG4gICAgQGluY2x1ZGUgX21hdC10aGVtZS1vdmVycmlkYWJsZS1lbGV2YXRpb24oNCwgJHRoZW1lKTtcbiAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGNhcmQpO1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuXG4gICAgLy8gU2VsZWN0ZWQgb3B0aW9ucyBpbiBhdXRvY29tcGxldGVzIHNob3VsZCBub3QgYmUgZ3JheSwgYnV0IHdlXG4gICAgLy8gb25seSB3YW50IHRvIG92ZXJyaWRlIHRoZSBiYWNrZ3JvdW5kIGZvciBzZWxlY3RlZCBvcHRpb25zIGlmXG4gICAgLy8gdGhleSBhcmUgKm5vdCogaW4gaG92ZXIgb3IgZm9jdXMgc3RhdGUuIFRoaXMgY2hhbmdlIGhhcyB0byBiZVxuICAgIC8vIG1hZGUgaGVyZSBiZWNhdXNlIGJhc2Ugb3B0aW9uIHN0eWxlcyBhcmUgc2hhcmVkIGJldHdlZW4gdGhlXG4gICAgLy8gYXV0b2NvbXBsZXRlIGFuZCB0aGUgc2VsZWN0LlxuICAgIC5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1hY3RpdmUpOm5vdCg6aG92ZXIpIHtcbiAgICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgY2FyZCk7XG5cbiAgICAgICY6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gICAgICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG59XG5cbkBtaXhpbiBtYXQtYXV0b2NvbXBsZXRlLXR5cG9ncmFwaHkoJGNvbmZpZykgeyB9XG5cbi8vIFRoaXMgY29udGFpbnMgYWxsIG9mIHRoZSBzdHlsZXMgZm9yIHRoZSBiYWRnZVxuLy8gcmF0aGVyIHRoYW4ganVzdCB0aGUgY29sb3IvdGhlbWUgYmVjYXVzZSBvZlxuLy8gbm8gc3R5bGUgc2hlZXQgc3VwcG9ydCBmb3IgZGlyZWN0aXZlcy5cblxuXG5cblxuXG4kbWF0LWJhZGdlLWZvbnQtc2l6ZTogMTJweDtcbiRtYXQtYmFkZ2UtZm9udC13ZWlnaHQ6IDYwMDtcbiRtYXQtYmFkZ2UtZGVmYXVsdC1zaXplOiAyMnB4ICFkZWZhdWx0O1xuJG1hdC1iYWRnZS1zbWFsbC1zaXplOiAkbWF0LWJhZGdlLWRlZmF1bHQtc2l6ZSAtIDY7XG4kbWF0LWJhZGdlLWxhcmdlLXNpemU6ICRtYXQtYmFkZ2UtZGVmYXVsdC1zaXplICsgNjtcblxuLy8gTWl4aW4gZm9yIGJ1aWxkaW5nIG9mZnNldCBnaXZlbiBkaWZmZXJlbnQgc2l6ZXNcbkBtaXhpbiBfbWF0LWJhZGdlLXNpemUoJHNpemUpIHtcbiAgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgICB3aWR0aDogJHNpemU7XG4gICAgaGVpZ2h0OiAkc2l6ZTtcbiAgICBsaW5lLWhlaWdodDogJHNpemU7XG4gIH1cblxuICAmLm1hdC1iYWRnZS1hYm92ZSB7XG4gICAgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgICAgIHRvcDogLSRzaXplIC8gMjtcbiAgICB9XG4gIH1cblxuICAmLm1hdC1iYWRnZS1iZWxvdyB7XG4gICAgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgICAgIGJvdHRvbTogLSRzaXplIC8gMjtcbiAgICB9XG4gIH1cblxuICAmLm1hdC1iYWRnZS1iZWZvcmUge1xuICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICBsZWZ0OiAtJHNpemU7XG4gICAgfVxuICB9XG5cbiAgW2Rpcj0ncnRsJ10gJi5tYXQtYmFkZ2UtYmVmb3JlIHtcbiAgICAubWF0LWJhZGdlLWNvbnRlbnQge1xuICAgICAgbGVmdDogYXV0bztcbiAgICAgIHJpZ2h0OiAtJHNpemU7XG4gICAgfVxuICB9XG5cbiAgJi5tYXQtYmFkZ2UtYWZ0ZXIge1xuICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICByaWdodDogLSRzaXplO1xuICAgIH1cbiAgfVxuXG4gIFtkaXI9J3J0bCddICYubWF0LWJhZGdlLWFmdGVyIHtcbiAgICAubWF0LWJhZGdlLWNvbnRlbnQge1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBsZWZ0OiAtJHNpemU7XG4gICAgfVxuICB9XG5cbiAgJi5tYXQtYmFkZ2Utb3ZlcmxhcCB7XG4gICAgJi5tYXQtYmFkZ2UtYmVmb3JlIHtcbiAgICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICAgIGxlZnQ6IC0kc2l6ZSAvIDI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgW2Rpcj0ncnRsJ10gJi5tYXQtYmFkZ2UtYmVmb3JlIHtcbiAgICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICAgIGxlZnQ6IGF1dG87XG4gICAgICAgIHJpZ2h0OiAtJHNpemUgLyAyO1xuICAgICAgfVxuICAgIH1cblxuICAgICYubWF0LWJhZGdlLWFmdGVyIHtcbiAgICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICAgIHJpZ2h0OiAtJHNpemUgLyAyO1xuICAgICAgfVxuICAgIH1cblxuICAgIFtkaXI9J3J0bCddICYubWF0LWJhZGdlLWFmdGVyIHtcbiAgICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICBsZWZ0OiAtJHNpemUgLyAyO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gbWF0LWJhZGdlLXRoZW1lKCR0aGVtZSkge1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJHByaW1hcnk6IG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAubWF0LWJhZGdlLWNvbnRlbnQge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJHByaW1hcnksIGRlZmF1bHQtY29udHJhc3QpO1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkcHJpbWFyeSk7XG5cbiAgICBAaW5jbHVkZSBjZGstaGlnaC1jb250cmFzdCB7XG4gICAgICBvdXRsaW5lOiBzb2xpZCAxcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtYmFkZ2UtYWNjZW50IHtcbiAgICAubWF0LWJhZGdlLWNvbnRlbnQge1xuICAgICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRhY2NlbnQpO1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkYWNjZW50LCBkZWZhdWx0LWNvbnRyYXN0KTtcbiAgICB9XG4gIH1cblxuICAubWF0LWJhZGdlLXdhcm4ge1xuICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICBjb2xvcjogbWF0LWNvbG9yKCR3YXJuLCBkZWZhdWx0LWNvbnRyYXN0KTtcbiAgICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkd2Fybik7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1iYWRnZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgLm1hdC1iYWRnZS1oaWRkZW4ge1xuICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtYmFkZ2UtZGlzYWJsZWQge1xuICAgIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgICAvLyBUaGUgZGlzYWJsZWQgY29sb3IgdXN1YWxseSBoYXMgc29tZSBraW5kIG9mIG9wYWNpdHksIGJ1dCBiZWNhdXNlIHRoZSBiYWRnZSBpcyBvdmVybGF5ZWRcbiAgICAgIC8vIG9uIHRvcCBvZiBzb21ldGhpbmcgZWxzZSwgaXQgd29uJ3QgbG9vayBnb29kIGlmIGl0J3Mgb3BhcXVlLiBXZSBjb252ZXJ0IGl0IGludG8gYSBzb2xpZFxuICAgICAgLy8gY29sb3IgYnkgdGFraW5nIHRoZSBvcGFjaXR5IGZyb20gdGhlIHJnYmEgdmFsdWUgYW5kIHVzaW5nIHRoZSB2YWx1ZSB0byBkZXRlcm1pbmUgdGhlXG4gICAgICAvLyBwZXJjZW50YWdlIG9mIHRoZSBiYWNrZ3JvdW5kIHRvIHB1dCBpbnRvIGZvcmVncm91bmQgd2hlbiBtaXhpbmcgdGhlIGNvbG9ycyB0b2dldGhlci5cbiAgICAgICRhcHAtYmFja2dyb3VuZDogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCAnYmFja2dyb3VuZCcpO1xuICAgICAgJGJhZGdlLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkLWJ1dHRvbik7XG4gICAgICAkYmFkZ2Utb3BhY2l0eTogb3BhY2l0eSgkYmFkZ2UtY29sb3IpO1xuICAgICAgYmFja2dyb3VuZDogbWl4KCRhcHAtYmFja2dyb3VuZCwgcmdiYSgkYmFkZ2UtY29sb3IsIDEpLCAoMSAtICRiYWRnZS1vcGFjaXR5KSAqIDEwMCUpO1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGlzYWJsZWQtdGV4dCk7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDIwMG1zIGVhc2UtaW4tb3V0O1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC42KTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIH1cblxuICAvLyBUaGUgYWN0aXZlIGNsYXNzIGlzIGFkZGVkIGFmdGVyIHRoZSBlbGVtZW50IGlzIGFkZGVkXG4gIC8vIHNvIGl0IGNhbiBhbmltYXRlIHNjYWxlIHRvIGRlZmF1bHRcbiAgLm1hdC1iYWRnZS1jb250ZW50Lm1hdC1iYWRnZS1hY3RpdmUge1xuICAgIC8vIFNjYWxlIHRvIGBub25lYCBpbnN0ZWFkIG9mIGAxYCB0byBhdm9pZCBibHVycnkgdGV4dCBpbiBzb21lIGJyb3dzZXJzLlxuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxuXG4gIC5tYXQtYmFkZ2Utc21hbGwge1xuICAgIEBpbmNsdWRlIF9tYXQtYmFkZ2Utc2l6ZSgkbWF0LWJhZGdlLXNtYWxsLXNpemUpO1xuICB9XG4gIC5tYXQtYmFkZ2UtbWVkaXVtIHtcbiAgICBAaW5jbHVkZSBfbWF0LWJhZGdlLXNpemUoJG1hdC1iYWRnZS1kZWZhdWx0LXNpemUpO1xuICB9XG4gIC5tYXQtYmFkZ2UtbGFyZ2Uge1xuICAgIEBpbmNsdWRlIF9tYXQtYmFkZ2Utc2l6ZSgkbWF0LWJhZGdlLWxhcmdlLXNpemUpO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtYmFkZ2UtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gICAgZm9udC13ZWlnaHQ6ICRtYXQtYmFkZ2UtZm9udC13ZWlnaHQ7XG4gICAgZm9udC1zaXplOiAkbWF0LWJhZGdlLWZvbnQtc2l6ZTtcbiAgICBmb250LWZhbWlseTogbWF0LWZvbnQtZmFtaWx5KCRjb25maWcpO1xuICB9XG5cbiAgLm1hdC1iYWRnZS1zbWFsbCAubWF0LWJhZGdlLWNvbnRlbnQge1xuICAgIGZvbnQtc2l6ZTogJG1hdC1iYWRnZS1mb250LXNpemUgLyAyO1xuICB9XG5cbiAgLm1hdC1iYWRnZS1sYXJnZSAubWF0LWJhZGdlLWNvbnRlbnQge1xuICAgIGZvbnQtc2l6ZTogJG1hdC1iYWRnZS1mb250LXNpemUgKiAyO1xuICB9XG59XG5cblxuXG5cblxuQG1peGluIG1hdC1ib3R0b20tc2hlZXQtdGhlbWUoJHRoZW1lKSB7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC1ib3R0b20tc2hlZXQtY29udGFpbmVyIHtcbiAgICBAaW5jbHVkZSBfbWF0LXRoZW1lLWVsZXZhdGlvbigxNiwgJHRoZW1lKTtcbiAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGRpYWxvZyk7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gIH1cbn1cblxuQG1peGluIG1hdC1ib3R0b20tc2hlZXQtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtYm90dG9tLXNoZWV0LWNvbnRhaW5lciB7XG4gICAgQGluY2x1ZGUgbWF0LXR5cG9ncmFwaHktbGV2ZWwtdG8tc3R5bGVzKCRjb25maWcsIGJvZHktMSk7XG4gIH1cbn1cblxuXG5cblxuXG4kX21hdC1idXR0b24tcmlwcGxlLW9wYWNpdHk6IDAuMTtcblxuLy8gQXBwbGllcyBhIGZvY3VzIHN0eWxlIHRvIGFuIG1hdC1idXR0b24gZWxlbWVudCBmb3IgZWFjaCBvZiB0aGUgc3VwcG9ydGVkIHBhbGV0dGVzLlxuQG1peGluIF9tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXktY29sb3IoJHRoZW1lKSB7XG4gICRwcmltYXJ5OiBtYXAtZ2V0KCR0aGVtZSwgcHJpbWFyeSk7XG4gICRhY2NlbnQ6IG1hcC1nZXQoJHRoZW1lLCBhY2NlbnQpO1xuICAkd2FybjogbWFwLWdldCgkdGhlbWUsIHdhcm4pO1xuXG4gICYubWF0LXByaW1hcnkgLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRwcmltYXJ5KTtcbiAgfVxuXG4gICYubWF0LWFjY2VudCAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJGFjY2VudCk7XG4gIH1cblxuICAmLm1hdC13YXJuIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkd2Fybik7XG4gIH1cblxuICAmW2Rpc2FibGVkXSAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxufVxuXG5AbWl4aW4gX21hdC1idXR0b24tcmlwcGxlLWNvbG9yKCR0aGVtZSwgJGh1ZSwgJG9wYWNpdHk6ICRfbWF0LWJ1dHRvbi1yaXBwbGUtb3BhY2l0eSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcblxuICAmLm1hdC1wcmltYXJ5IC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkcHJpbWFyeSwgJGh1ZSwgJG9wYWNpdHkpO1xuICB9XG5cbiAgJi5tYXQtYWNjZW50IC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYWNjZW50LCAkaHVlLCAkb3BhY2l0eSk7XG4gIH1cblxuICAmLm1hdC13YXJuIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkd2FybiwgJGh1ZSwgJG9wYWNpdHkpO1xuICB9XG59XG5cbi8vIEFwcGxpZXMgYSBwcm9wZXJ0eSB0byBhbiBtYXQtYnV0dG9uIGVsZW1lbnQgZm9yIGVhY2ggb2YgdGhlIHN1cHBvcnRlZCBwYWxldHRlcy5cbkBtaXhpbiBfbWF0LWJ1dHRvbi10aGVtZS1wcm9wZXJ0eSgkdGhlbWUsICRwcm9wZXJ0eSwgJGh1ZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAmLm1hdC1wcmltYXJ5IHtcbiAgICAjeyRwcm9wZXJ0eX06IG1hdC1jb2xvcigkcHJpbWFyeSwgJGh1ZSk7XG4gIH1cbiAgJi5tYXQtYWNjZW50IHtcbiAgICAjeyRwcm9wZXJ0eX06IG1hdC1jb2xvcigkYWNjZW50LCAkaHVlKTtcbiAgfVxuICAmLm1hdC13YXJuIHtcbiAgICAjeyRwcm9wZXJ0eX06IG1hdC1jb2xvcigkd2FybiwgJGh1ZSk7XG4gIH1cblxuICAmLm1hdC1wcmltYXJ5LCAmLm1hdC1hY2NlbnQsICYubWF0LXdhcm4sICZbZGlzYWJsZWRdIHtcbiAgICAmW2Rpc2FibGVkXSB7XG4gICAgICAkcGFsZXR0ZTogaWYoJHByb3BlcnR5ID09ICdjb2xvcicsICRmb3JlZ3JvdW5kLCAkYmFja2dyb3VuZCk7XG4gICAgICAjeyRwcm9wZXJ0eX06IG1hdC1jb2xvcigkcGFsZXR0ZSwgZGlzYWJsZWQtYnV0dG9uKTtcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIG1hdC1idXR0b24tdGhlbWUoJHRoZW1lKSB7XG4gICRwcmltYXJ5OiBtYXAtZ2V0KCR0aGVtZSwgcHJpbWFyeSk7XG4gICRhY2NlbnQ6IG1hcC1nZXQoJHRoZW1lLCBhY2NlbnQpO1xuICAkd2FybjogbWFwLWdldCgkdGhlbWUsIHdhcm4pO1xuICAkYmFja2dyb3VuZDogbWFwLWdldCgkdGhlbWUsIGJhY2tncm91bmQpO1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuXG4gIC5tYXQtYnV0dG9uLCAubWF0LWljb24tYnV0dG9uLCAubWF0LXN0cm9rZWQtYnV0dG9uIHtcbiAgICAvLyBCdXR0b25zIHdpdGhvdXQgYSBiYWNrZ3JvdW5kIGNvbG9yIHNob3VsZCBpbmhlcml0IHRoZSBmb250IGNvbG9yLiBUaGlzIGlzIG5lY2Vzc2FyeSB0b1xuICAgIC8vIGVuc3VyZSB0aGF0IHRoZSBidXR0b24gaXMgcmVhZGFibGUgb24gY3VzdG9tIGJhY2tncm91bmQgY29sb3JzLiBJdCdzIHdyb25nIHRvIGFsd2F5cyBhc3N1bWVcbiAgICAvLyB0aGF0IHRob3NlIGJ1dHRvbnMgYXJlIGFsd2F5cyBwbGFjZWQgaW5zaWRlIG9mIGNvbnRhaW5lcnMgd2l0aCB0aGUgZGVmYXVsdCBiYWNrZ3JvdW5kXG4gICAgLy8gY29sb3Igb2YgdGhlIHRoZW1lIChlLmcuIHRoZW1lZCB0b29sYmFycykuXG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cbiAgICBAaW5jbHVkZSBfbWF0LWJ1dHRvbi10aGVtZS1wcm9wZXJ0eSgkdGhlbWUsICdjb2xvcicsIGRlZmF1bHQpO1xuICAgIEBpbmNsdWRlIF9tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXktY29sb3IoJHRoZW1lKTtcblxuICAgIC8vIFNldHVwIHRoZSByaXBwbGUgY29sb3IgdG8gYmUgYmFzZWQgb24gdGhlIHRleHQgY29sb3IuIFRoaXMgZW5zdXJlcyB0aGF0IHRoZSByaXBwbGVzXG4gICAgLy8gYXJlIG1hdGNoaW5nIHdpdGggdGhlIGN1cnJlbnQgdGhlbWUgcGFsZXR0ZSBhbmQgYXJlIGluIGNvbnRyYXN0IHRvIHRoZSBiYWNrZ3JvdW5kIGNvbG9yXG4gICAgLy8gKGUuZyBpbiB0aGVtZWQgdG9vbGJhcnMpLlxuICAgIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgICAgb3BhY2l0eTogJF9tYXQtYnV0dG9uLXJpcHBsZS1vcGFjaXR5O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xuICAgIGJhY2tncm91bmQ6IG1hcF9nZXQoJGZvcmVncm91bmQsIGJhc2UpO1xuICB9XG5cbiAgLy8gTm90ZTogdGhpcyBuZWVkcyBhIGJpdCBleHRyYSBzcGVjaWZpY2l0eSwgYmVjYXVzZSB3ZSdyZSBub3QgZ3VhcmFudGVlZCB0aGUgaW5jbHVzaW9uXG4gIC8vIG9yZGVyIG9mIHRoZSB0aGVtZSBzdHlsZXMgYW5kIHRoZSBidXR0b24gcmVzZXQgbWF5IGVuZCB1cCByZXNldHRpbmcgdGhpcyBhcyB3ZWxsLlxuICAubWF0LXN0cm9rZWQtYnV0dG9uOm5vdChbZGlzYWJsZWRdKSB7XG4gICAgYm9yZGVyLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpdmlkZXIpO1xuICB9XG5cbiAgLm1hdC1mbGF0LWJ1dHRvbiwgLm1hdC1yYWlzZWQtYnV0dG9uLCAubWF0LWZhYiwgLm1hdC1taW5pLWZhYiB7XG4gICAgLy8gRGVmYXVsdCBmb250IGFuZCBiYWNrZ3JvdW5kIGNvbG9yIHdoZW4gbm90IHVzaW5nIGFueSBjb2xvciBwYWxldHRlLlxuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgcmFpc2VkLWJ1dHRvbik7XG5cbiAgICBAaW5jbHVkZSBfbWF0LWJ1dHRvbi10aGVtZS1wcm9wZXJ0eSgkdGhlbWUsICdjb2xvcicsIGRlZmF1bHQtY29udHJhc3QpO1xuICAgIEBpbmNsdWRlIF9tYXQtYnV0dG9uLXRoZW1lLXByb3BlcnR5KCR0aGVtZSwgJ2JhY2tncm91bmQtY29sb3InLCBkZWZhdWx0KTtcbiAgICBAaW5jbHVkZSBfbWF0LWJ1dHRvbi1yaXBwbGUtY29sb3IoJHRoZW1lLCBkZWZhdWx0LWNvbnRyYXN0KTtcbiAgfVxuXG4gIC5tYXQtc3Ryb2tlZC1idXR0b24sIC5tYXQtZmxhdC1idXR0b24ge1xuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtb3ZlcnJpZGFibGUtZWxldmF0aW9uKDAsICR0aGVtZSk7XG4gIH1cblxuICAubWF0LXJhaXNlZC1idXR0b24ge1xuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtb3ZlcnJpZGFibGUtZWxldmF0aW9uKDIsICR0aGVtZSk7XG5cbiAgICAmOm5vdChbZGlzYWJsZWRdKTphY3RpdmUge1xuICAgICAgQGluY2x1ZGUgX21hdC10aGVtZS1vdmVycmlkYWJsZS1lbGV2YXRpb24oOCwgJHRoZW1lKTtcbiAgICB9XG5cbiAgICAmW2Rpc2FibGVkXSB7XG4gICAgICBAaW5jbHVkZSBfbWF0LXRoZW1lLW92ZXJyaWRhYmxlLWVsZXZhdGlvbigwLCAkdGhlbWUpO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtZmFiLCAubWF0LW1pbmktZmFiIHtcbiAgICBAaW5jbHVkZSBfbWF0LXRoZW1lLW92ZXJyaWRhYmxlLWVsZXZhdGlvbig2LCAkdGhlbWUpO1xuXG4gICAgJjpub3QoW2Rpc2FibGVkXSk6YWN0aXZlIHtcbiAgICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtb3ZlcnJpZGFibGUtZWxldmF0aW9uKDEyLCAkdGhlbWUpO1xuICAgIH1cblxuICAgICZbZGlzYWJsZWRdIHtcbiAgICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtb3ZlcnJpZGFibGUtZWxldmF0aW9uKDAsICR0aGVtZSk7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBtYXQtYnV0dG9uLXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAubWF0LWJ1dHRvbiwgLm1hdC1yYWlzZWQtYnV0dG9uLCAubWF0LWljb24tYnV0dG9uLCAubWF0LXN0cm9rZWQtYnV0dG9uLFxuICAubWF0LWZsYXQtYnV0dG9uLCAubWF0LWZhYiwgLm1hdC1taW5pLWZhYiB7XG4gICAgZm9udDoge1xuICAgICAgZmFtaWx5OiBtYXQtZm9udC1mYW1pbHkoJGNvbmZpZywgYnV0dG9uKTtcbiAgICAgIHNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgYnV0dG9uKTtcbiAgICAgIHdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIGJ1dHRvbik7XG4gICAgfVxuICB9XG59XG5cblxuXG5cblxuXG5AbWl4aW4gbWF0LWJ1dHRvbi10b2dnbGUtdGhlbWUoJHRoZW1lKSB7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRkaXZpZGVyLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpdmlkZXIpO1xuXG4gIC5tYXQtYnV0dG9uLXRvZ2dsZS1zdGFuZGFsb25lLFxuICAubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAge1xuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtZWxldmF0aW9uKDIsICR0aGVtZSk7XG4gIH1cblxuICAubWF0LWJ1dHRvbi10b2dnbGUtc3RhbmRhbG9uZS5tYXQtYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLXN0YW5kYXJkLFxuICAubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAtYXBwZWFyYW5jZS1zdGFuZGFyZCB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgfVxuXG4gIC5tYXQtYnV0dG9uLXRvZ2dsZSB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgaGludC10ZXh0KTtcblxuICAgIC5tYXQtYnV0dG9uLXRvZ2dsZS1mb2N1cy1vdmVybGF5IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgZm9jdXNlZC1idXR0b24pO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLXN0YW5kYXJkIHtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCB0ZXh0KTtcbiAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGNhcmQpO1xuXG4gICAgLm1hdC1idXR0b24tdG9nZ2xlLWZvY3VzLW92ZXJsYXkge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBmb2N1c2VkLWJ1dHRvbiwgMSk7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1idXR0b24tdG9nZ2xlLWdyb3VwLWFwcGVhcmFuY2Utc3RhbmRhcmQgLm1hdC1idXR0b24tdG9nZ2xlICsgLm1hdC1idXR0b24tdG9nZ2xlIHtcbiAgICBib3JkZXItbGVmdDogc29saWQgMXB4ICRkaXZpZGVyLWNvbG9yO1xuICB9XG5cbiAgW2Rpcj0ncnRsJ10gLm1hdC1idXR0b24tdG9nZ2xlLWdyb3VwLWFwcGVhcmFuY2Utc3RhbmRhcmQgLm1hdC1idXR0b24tdG9nZ2xlICsgLm1hdC1idXR0b24tdG9nZ2xlIHtcbiAgICBib3JkZXItbGVmdDogbm9uZTtcbiAgICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCAkZGl2aWRlci1jb2xvcjtcbiAgfVxuXG4gIC5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cC1hcHBlYXJhbmNlLXN0YW5kYXJkLm1hdC1idXR0b24tdG9nZ2xlLXZlcnRpY2FsIHtcbiAgICAubWF0LWJ1dHRvbi10b2dnbGUgKyAubWF0LWJ1dHRvbi10b2dnbGUge1xuICAgICAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgICBib3JkZXItdG9wOiBzb2xpZCAxcHggJGRpdmlkZXItY29sb3I7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1idXR0b24tdG9nZ2xlLWNoZWNrZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgc2VsZWN0ZWQtYnV0dG9uKTtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBzZWNvbmRhcnktdGV4dCk7XG5cbiAgICAmLm1hdC1idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2Utc3RhbmRhcmQge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1idXR0b24tdG9nZ2xlLWRpc2FibGVkIHtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXNhYmxlZC1idXR0b24pO1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgZGlzYWJsZWQtYnV0dG9uLXRvZ2dsZSk7XG5cbiAgICAmLm1hdC1idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2Utc3RhbmRhcmQge1xuICAgICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBjYXJkKTtcbiAgICB9XG5cbiAgICAmLm1hdC1idXR0b24tdG9nZ2xlLWNoZWNrZWQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBzZWxlY3RlZC1kaXNhYmxlZC1idXR0b24pO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtYnV0dG9uLXRvZ2dsZS1zdGFuZGFsb25lLm1hdC1idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2Utc3RhbmRhcmQsXG4gIC5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cC1hcHBlYXJhbmNlLXN0YW5kYXJkIHtcbiAgICBib3JkZXI6IHNvbGlkIDFweCAkZGl2aWRlci1jb2xvcjtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LWJ1dHRvbi10b2dnbGUtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtYnV0dG9uLXRvZ2dsZSB7XG4gICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgfVxufVxuXG5cblxuXG5cblxuXG5AbWl4aW4gbWF0LWNhcmQtdGhlbWUoJHRoZW1lKSB7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC1jYXJkIHtcbiAgICBAaW5jbHVkZSBfbWF0LXRoZW1lLW92ZXJyaWRhYmxlLWVsZXZhdGlvbigxLCAkdGhlbWUpO1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgY2FyZCk7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG5cbiAgICAvLyBOZWVkcyBleHRyYSBzcGVjaWZpY2l0eSB0byBiZSBhYmxlIHRvIG92ZXJyaWRlIHRoZSBlbGV2YXRpb24gc2VsZWN0b3JzLlxuICAgICYubWF0LWNhcmQtZmxhdCB7XG4gICAgICBAaW5jbHVkZSBfbWF0LXRoZW1lLW92ZXJyaWRhYmxlLWVsZXZhdGlvbigwLCAkdGhlbWUpO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtY2FyZC1zdWJ0aXRsZSB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQpO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtY2FyZC10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1jYXJkIHtcbiAgICBmb250LWZhbWlseTogbWF0LWZvbnQtZmFtaWx5KCRjb25maWcpO1xuICB9XG5cbiAgLm1hdC1jYXJkLXRpdGxlIHtcbiAgICBmb250OiB7XG4gICAgICBzaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIGhlYWRsaW5lKTtcbiAgICAgIHdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIHRpdGxlKTtcbiAgICB9XG4gIH1cblxuICAubWF0LWNhcmQtaGVhZGVyIC5tYXQtY2FyZC10aXRsZSB7XG4gICAgZm9udC1zaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIHRpdGxlKTtcbiAgfVxuXG4gIC5tYXQtY2FyZC1zdWJ0aXRsZSxcbiAgLm1hdC1jYXJkLWNvbnRlbnQge1xuICAgIGZvbnQtc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBib2R5LTEpO1xuICB9XG59XG5cblxuXG5cblxuXG5AbWl4aW4gbWF0LWNoZWNrYm94LXRoZW1lKCR0aGVtZSkge1xuICAkaXMtZGFyay10aGVtZTogbWFwLWdldCgkdGhlbWUsIGlzLWRhcmspO1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuXG4gIC8vIFRoZSBjb2xvciBvZiB0aGUgY2hlY2tib3gncyBjaGVja21hcmsgLyBtaXhlZG1hcmsuXG4gICRjaGVja2JveC1tYXJrLWNvbG9yOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGJhY2tncm91bmQpO1xuXG4gIC8vIE5PVEUodHJhdmlza2F1Zm1hbik6IFdoaWxlIHRoZSBzcGVjIGNhbGxzIGZvciB0cmFuc2x1Y2VudCBibGFja3Mvd2hpdGVzIGZvciBkaXNhYmxlZCBjb2xvcnMsXG4gIC8vIHRoaXMgZG9lcyBub3Qgd29yayB3ZWxsIHdpdGggZWxlbWVudHMgbGF5ZXJlZCBvbiB0b3Agb2Ygb25lIGFub3RoZXIuIFRvIGdldCBhcm91bmQgdGhpcyB3ZVxuICAvLyBibGVuZCB0aGUgY29sb3JzIHRvZ2V0aGVyIGJhc2VkIG9uIHRoZSBiYXNlIGNvbG9yIGFuZCB0aGUgdGhlbWUgYmFja2dyb3VuZC5cbiAgJHdoaXRlLTMwcGN0LW9wYWNpdHktb24tZGFyazogIzY4Njg2ODtcbiAgJGJsYWNrLTI2cGN0LW9wYWNpdHktb24tbGlnaHQ6ICNiMGIwYjA7XG4gICRkaXNhYmxlZC1jb2xvcjogaWYoJGlzLWRhcmstdGhlbWUsICR3aGl0ZS0zMHBjdC1vcGFjaXR5LW9uLWRhcmssICRibGFjay0yNnBjdC1vcGFjaXR5LW9uLWxpZ2h0KTtcblxuICAubWF0LWNoZWNrYm94LWZyYW1lIHtcbiAgICBib3JkZXItY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQpO1xuICB9XG5cbiAgLm1hdC1jaGVja2JveC1jaGVja21hcmsge1xuICAgIGZpbGw6ICRjaGVja2JveC1tYXJrLWNvbG9yO1xuICB9XG5cbiAgLm1hdC1jaGVja2JveC1jaGVja21hcmstcGF0aCB7XG4gICAgLy8gIWltcG9ydGFudCBpcyBuZWVkZWQgaGVyZSBiZWNhdXNlIGEgc3Ryb2tlIG11c3QgYmUgc2V0IGFzIGFuXG4gICAgLy8gYXR0cmlidXRlIG9uIHRoZSBTVkcgaW4gb3JkZXIgZm9yIGxpbmUgYW5pbWF0aW9uIHRvIHdvcmsgcHJvcGVybHkuXG4gICAgc3Ryb2tlOiAkY2hlY2tib3gtbWFyay1jb2xvciAhaW1wb3J0YW50O1xuXG4gICAgQGluY2x1ZGUgY2RrLWhpZ2gtY29udHJhc3QoYmxhY2stb24td2hpdGUpIHtcbiAgICAgIC8vIEhhdmluZyB0aGUgb25lIGFib3ZlIGJlICFpbXBvcnRhbnQgZW5kcyB1cCBvdmVycmlkaW5nIHRoZSBicm93c2VyJ3MgYXV0b21hdGljXG4gICAgICAvLyBjb2xvciBpbnZlcnNpb24gc28gd2UgbmVlZCB0byByZS1pbnZlcnQgaXQgb3Vyc2VsdmVzIGZvciBibGFjay1vbi13aGl0ZS5cbiAgICAgIHN0cm9rZTogIzAwMCAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtY2hlY2tib3gtbWl4ZWRtYXJrIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2hlY2tib3gtbWFyay1jb2xvcjtcbiAgfVxuXG4gIC5tYXQtY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSwgLm1hdC1jaGVja2JveC1jaGVja2VkIHtcbiAgICAmLm1hdC1wcmltYXJ5IC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJHByaW1hcnkpO1xuICAgIH1cblxuICAgICYubWF0LWFjY2VudCAubWF0LWNoZWNrYm94LWJhY2tncm91bmQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRhY2NlbnQpO1xuICAgIH1cblxuICAgICYubWF0LXdhcm4gLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5kIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkd2Fybik7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1jaGVja2JveC1kaXNhYmxlZCB7XG4gICAgJi5tYXQtY2hlY2tib3gtY2hlY2tlZCxcbiAgICAmLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlIHtcbiAgICAgIC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkaXNhYmxlZC1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmOm5vdCgubWF0LWNoZWNrYm94LWNoZWNrZWQpIHtcbiAgICAgIC5tYXQtY2hlY2tib3gtZnJhbWUge1xuICAgICAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAubWF0LWNoZWNrYm94LWxhYmVsIHtcbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNlY29uZGFyeS10ZXh0KTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBjZGstaGlnaC1jb250cmFzdCB7XG4gICAgICBvcGFjaXR5OiAwLjU7XG4gICAgfVxuICB9XG5cbiAgLy8gVGhpcyBvbmUgaXMgbW92ZWQgZG93biBoZXJlIHNvIGl0IGNhbiB0YXJnZXQgYm90aFxuICAvLyB0aGUgdGhlbWUgY29sb3JzIGFuZCB0aGUgZGlzYWJsZWQgc3RhdGUuXG4gIEBpbmNsdWRlIGNkay1oaWdoLWNvbnRyYXN0IHtcbiAgICAubWF0LWNoZWNrYm94LWJhY2tncm91bmQge1xuICAgICAgLy8gTmVlZHMgdG8gYmUgcmVtb3ZlZCBiZWNhdXNlIGl0IGhpZGVzIHRoZSBjaGVja2JveCBvdXRsaW5lLlxuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICB9XG4gIH1cblxuICAubWF0LWNoZWNrYm94Om5vdCgubWF0LWNoZWNrYm94LWRpc2FibGVkKSB7XG4gICAgJi5tYXQtcHJpbWFyeSAubWF0LWNoZWNrYm94LXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkcHJpbWFyeSk7XG4gICAgfVxuXG4gICAgJi5tYXQtYWNjZW50IC5tYXQtY2hlY2tib3gtcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRhY2NlbnQpO1xuICAgIH1cblxuICAgICYubWF0LXdhcm4gLm1hdC1jaGVja2JveC1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJHdhcm4pO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gbWF0LWNoZWNrYm94LXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAubWF0LWNoZWNrYm94IHtcbiAgICBmb250LWZhbWlseTogbWF0LWZvbnQtZmFtaWx5KCRjb25maWcpO1xuICB9XG5cbiAgLy8gVE9ETyhrYXJhKTogUmVtb3ZlIHRoaXMgc3R5bGUgd2hlbiBmaXhpbmcgdmVydGljYWwgYmFzZWxpbmVcbiAgLm1hdC1jaGVja2JveC1sYXlvdXQgLm1hdC1jaGVja2JveC1sYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IG1hdC1saW5lLWhlaWdodCgkY29uZmlnLCBib2R5LTIpO1xuICB9XG59XG5cblxuXG5cblxuXG4kbWF0LWNoaXAtcmVtb3ZlLWZvbnQtc2l6ZTogMThweDtcblxuQG1peGluIG1hdC1jaGlwcy1jb2xvcigkZm9yZWdyb3VuZCwgJGJhY2tncm91bmQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmQ7XG4gIGNvbG9yOiAkZm9yZWdyb3VuZDtcblxuICAubWF0LWNoaXAtcmVtb3ZlIHtcbiAgICBjb2xvcjogJGZvcmVncm91bmQ7XG4gICAgb3BhY2l0eTogMC40O1xuICB9XG59XG5cbkBtaXhpbiBtYXQtY2hpcHMtdGhlbWUtY29sb3IoJHBhbGV0dGUpIHtcbiAgQGluY2x1ZGUgbWF0LWNoaXBzLWNvbG9yKG1hdC1jb2xvcigkcGFsZXR0ZSwgZGVmYXVsdC1jb250cmFzdCksIG1hdC1jb2xvcigkcGFsZXR0ZSkpO1xuXG4gIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkcGFsZXR0ZSwgZGVmYXVsdC1jb250cmFzdCwgMC4xKTtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LWNoaXBzLXRoZW1lKCR0aGVtZSkge1xuICAkaXMtZGFyay10aGVtZTogbWFwLWdldCgkdGhlbWUsIGlzLWRhcmspO1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAkdW5zZWxlY3RlZC1iYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIHVuc2VsZWN0ZWQtY2hpcCk7XG4gICR1bnNlbGVjdGVkLWZvcmVncm91bmQ6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG5cbiAgLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwIHtcbiAgICBAaW5jbHVkZSBtYXQtY2hpcHMtY29sb3IoJHVuc2VsZWN0ZWQtZm9yZWdyb3VuZCwgJHVuc2VsZWN0ZWQtYmFja2dyb3VuZCk7XG5cbiAgICAmOm5vdCgubWF0LWNoaXAtZGlzYWJsZWQpIHtcbiAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgQGluY2x1ZGUgX21hdC10aGVtZS1lbGV2YXRpb24oMywgJHRoZW1lKTtcbiAgICAgIH1cblxuICAgICAgLm1hdC1jaGlwLXJlbW92ZTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDAuNTQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5tYXQtY2hpcC1kaXNhYmxlZCB7XG4gICAgICBvcGFjaXR5OiAwLjQ7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogbWFwX2dldCgkZm9yZWdyb3VuZCwgYmFzZSk7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkIHtcbiAgICAmLm1hdC1wcmltYXJ5IHtcbiAgICAgIEBpbmNsdWRlIG1hdC1jaGlwcy10aGVtZS1jb2xvcigkcHJpbWFyeSk7XG4gICAgfVxuXG4gICAgJi5tYXQtd2FybiB7XG4gICAgICBAaW5jbHVkZSBtYXQtY2hpcHMtdGhlbWUtY29sb3IoJHdhcm4pO1xuICAgIH1cblxuICAgICYubWF0LWFjY2VudCB7XG4gICAgICBAaW5jbHVkZSBtYXQtY2hpcHMtdGhlbWUtY29sb3IoJGFjY2VudCk7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBtYXQtY2hpcHMtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtY2hpcCB7XG4gICAgZm9udC1zaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIGJvZHktMik7XG4gICAgZm9udC13ZWlnaHQ6IG1hdC1mb250LXdlaWdodCgkY29uZmlnLCBib2R5LTIpO1xuXG4gICAgLm1hdC1jaGlwLXRyYWlsaW5nLWljb24ubWF0LWljb24sXG4gICAgLm1hdC1jaGlwLXJlbW92ZS5tYXQtaWNvbiB7XG4gICAgICBmb250LXNpemU6ICRtYXQtY2hpcC1yZW1vdmUtZm9udC1zaXplO1xuICAgIH1cbiAgfVxufVxuXG5cblxuXG5cbkBtaXhpbiBtYXQtdGFibGUtdGhlbWUoJHRoZW1lKSB7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC10YWJsZSB7XG4gICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCAnY2FyZCcpO1xuICB9XG5cbiAgLm1hdC10YWJsZSB0aGVhZCwgLm1hdC10YWJsZSB0Ym9keSwgLm1hdC10YWJsZSB0Zm9vdCxcbiAgbWF0LWhlYWRlci1yb3csIG1hdC1yb3csIG1hdC1mb290ZXItcm93LFxuICBbbWF0LWhlYWRlci1yb3ddLCBbbWF0LXJvd10sIFttYXQtZm9vdGVyLXJvd10sXG4gIC5tYXQtdGFibGUtc3RpY2t5IHtcbiAgICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xuICB9XG5cbiAgbWF0LXJvdywgbWF0LWhlYWRlci1yb3csIG1hdC1mb290ZXItcm93LFxuICB0aC5tYXQtaGVhZGVyLWNlbGwsIHRkLm1hdC1jZWxsLCB0ZC5tYXQtZm9vdGVyLWNlbGwge1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGl2aWRlcik7XG4gIH1cblxuICAubWF0LWhlYWRlci1jZWxsIHtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBzZWNvbmRhcnktdGV4dCk7XG4gIH1cblxuICAubWF0LWNlbGwsIC5tYXQtZm9vdGVyLWNlbGwge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtdGFibGUtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtdGFibGUge1xuICAgIGZvbnQtZmFtaWx5OiBtYXQtZm9udC1mYW1pbHkoJGNvbmZpZyk7XG4gIH1cblxuICAubWF0LWhlYWRlci1jZWxsIHtcbiAgICBmb250LXNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgY2FwdGlvbik7XG4gICAgZm9udC13ZWlnaHQ6IG1hdC1mb250LXdlaWdodCgkY29uZmlnLCBib2R5LTIpO1xuICB9XG5cbiAgLm1hdC1jZWxsLCAubWF0LWZvb3Rlci1jZWxsIHtcbiAgICBmb250LXNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgYm9keS0xKTtcbiAgfVxufVxuXG5cblxuXG5cblxuXG4kbWF0LWRhdGVwaWNrZXItc2VsZWN0ZWQtdG9kYXktYm94LXNoYWRvdy13aWR0aDogMXB4O1xuJG1hdC1kYXRlcGlja2VyLXNlbGVjdGVkLWZhZGUtYW1vdW50OiAwLjY7XG4kbWF0LWRhdGVwaWNrZXItdG9kYXktZmFkZS1hbW91bnQ6IDAuMjtcbiRtYXQtY2FsZW5kYXItYm9keS1mb250LXNpemU6IDEzcHggIWRlZmF1bHQ7XG4kbWF0LWNhbGVuZGFyLXdlZWtkYXktdGFibGUtZm9udC1zaXplOiAxMXB4ICFkZWZhdWx0O1xuXG5AbWl4aW4gX21hdC1kYXRlcGlja2VyLWNvbG9yKCRwYWxldHRlKSB7XG4gIC5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRwYWxldHRlKTtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRwYWxldHRlLCBkZWZhdWx0LWNvbnRyYXN0KTtcbiAgfVxuXG4gIC5tYXQtY2FsZW5kYXItYm9keS1kaXNhYmxlZCA+IC5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZmFkZS1vdXQobWF0LWNvbG9yKCRwYWxldHRlKSwgJG1hdC1kYXRlcGlja2VyLXNlbGVjdGVkLWZhZGUtYW1vdW50KTtcbiAgfVxuXG4gIC5tYXQtY2FsZW5kYXItYm9keS10b2RheS5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCB7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgJG1hdC1kYXRlcGlja2VyLXNlbGVjdGVkLXRvZGF5LWJveC1zaGFkb3ctd2lkdGhcbiAgICAgICAgICAgICAgICBtYXQtY29sb3IoJHBhbGV0dGUsIGRlZmF1bHQtY29udHJhc3QpO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtZGF0ZXBpY2tlci10aGVtZSgkdGhlbWUpIHtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcblxuICAubWF0LWNhbGVuZGFyLWFycm93IHtcbiAgICBib3JkZXItdG9wLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGljb24pO1xuICB9XG5cbiAgLy8gVGhlIHByZXYvbmV4dCBidXR0b25zIG5lZWQgYSBiaXQgbW9yZSBzcGVjaWZpY2l0eSB0b1xuICAvLyBhdm9pZCBiZWluZyBvdmVyd3JpdHRlbiBieSB0aGUgLm1hdC1pY29uLWJ1dHRvbi5cbiAgLm1hdC1kYXRlcGlja2VyLXRvZ2dsZSxcbiAgLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQgLm1hdC1jYWxlbmRhci1uZXh0LWJ1dHRvbixcbiAgLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQgLm1hdC1jYWxlbmRhci1wcmV2aW91cy1idXR0b24ge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGljb24pO1xuICB9XG5cbiAgLm1hdC1jYWxlbmRhci10YWJsZS1oZWFkZXIge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGhpbnQtdGV4dCk7XG4gIH1cblxuICAubWF0LWNhbGVuZGFyLXRhYmxlLWhlYWRlci1kaXZpZGVyOjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXZpZGVyKTtcbiAgfVxuXG4gIC5tYXQtY2FsZW5kYXItYm9keS1sYWJlbCB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQpO1xuICB9XG5cbiAgLm1hdC1jYWxlbmRhci1ib2R5LWNlbGwtY29udGVudCB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC5tYXQtY2FsZW5kYXItYm9keS1kaXNhYmxlZCA+IC5tYXQtY2FsZW5kYXItYm9keS1jZWxsLWNvbnRlbnQ6bm90KC5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCkge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkLXRleHQpO1xuICB9XG5cbiAgLm1hdC1jYWxlbmRhci1ib2R5LWNlbGw6bm90KC5tYXQtY2FsZW5kYXItYm9keS1kaXNhYmxlZCk6aG92ZXIsXG4gIC5jZGsta2V5Ym9hcmQtZm9jdXNlZCAubWF0LWNhbGVuZGFyLWJvZHktYWN0aXZlLFxuICAuY2RrLXByb2dyYW0tZm9jdXNlZCAubWF0LWNhbGVuZGFyLWJvZHktYWN0aXZlIHtcbiAgICAmID4gLm1hdC1jYWxlbmRhci1ib2R5LWNlbGwtY29udGVudDpub3QoLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGhvdmVyKTtcbiAgICB9XG4gIH1cblxuICAubWF0LWNhbGVuZGFyLWJvZHktdG9kYXk6bm90KC5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCkge1xuICAgIC8vIE5vdGU6IHRob3VnaCBpdCdzIG5vdCB0ZXh0LCB0aGUgYm9yZGVyIGlzIGEgaGludCBhYm91dCB0aGUgZmFjdCB0aGF0IHRoaXMgaXMgdG9kYXkncyBkYXRlLFxuICAgIC8vIHNvIHdlIHVzZSB0aGUgaGludCBjb2xvci5cbiAgICBib3JkZXItY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgaGludC10ZXh0KTtcbiAgfVxuXG4gIC5tYXQtY2FsZW5kYXItYm9keS1kaXNhYmxlZCA+IC5tYXQtY2FsZW5kYXItYm9keS10b2RheTpub3QoLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkKSB7XG4gICAgYm9yZGVyLWNvbG9yOiBmYWRlLW91dChtYXQtY29sb3IoJGZvcmVncm91bmQsIGhpbnQtdGV4dCksICRtYXQtZGF0ZXBpY2tlci10b2RheS1mYWRlLWFtb3VudCk7XG4gIH1cblxuICBAaW5jbHVkZSBfbWF0LWRhdGVwaWNrZXItY29sb3IobWFwLWdldCgkdGhlbWUsIHByaW1hcnkpKTtcblxuICAubWF0LWRhdGVwaWNrZXItY29udGVudCB7XG4gICAgQGluY2x1ZGUgX21hdC10aGVtZS1lbGV2YXRpb24oNCwgJHRoZW1lKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGNhcmQpO1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuXG4gICAgJi5tYXQtYWNjZW50IHtcbiAgICAgIEBpbmNsdWRlIF9tYXQtZGF0ZXBpY2tlci1jb2xvcihtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KSk7XG4gICAgfVxuXG4gICAgJi5tYXQtd2FybiB7XG4gICAgICBAaW5jbHVkZSBfbWF0LWRhdGVwaWNrZXItY29sb3IobWFwLWdldCgkdGhlbWUsIHdhcm4pKTtcbiAgICB9XG4gIH1cblxuICAubWF0LWRhdGVwaWNrZXItY29udGVudC10b3VjaCB7XG4gICAgQGluY2x1ZGUgX21hdC10aGVtZS1lbGV2YXRpb24oMCwgJHRoZW1lKTtcbiAgfVxuXG4gIC5tYXQtZGF0ZXBpY2tlci10b2dnbGUtYWN0aXZlIHtcbiAgICBjb2xvcjogbWF0LWNvbG9yKG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KSk7XG5cbiAgICAmLm1hdC1hY2NlbnQge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcihtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KSk7XG4gICAgfVxuXG4gICAgJi5tYXQtd2FybiB7XG4gICAgICBjb2xvcjogbWF0LWNvbG9yKG1hcC1nZXQoJHRoZW1lLCB3YXJuKSk7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBtYXQtZGF0ZXBpY2tlci10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1jYWxlbmRhciB7XG4gICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgfVxuXG4gIC5tYXQtY2FsZW5kYXItYm9keSB7XG4gICAgZm9udC1zaXplOiAkbWF0LWNhbGVuZGFyLWJvZHktZm9udC1zaXplO1xuICB9XG5cbiAgLm1hdC1jYWxlbmRhci1ib2R5LWxhYmVsLFxuICAubWF0LWNhbGVuZGFyLXBlcmlvZC1idXR0b24ge1xuICAgIGZvbnQ6IHtcbiAgICAgIHNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgYnV0dG9uKTtcbiAgICAgIHdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIGJ1dHRvbik7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1jYWxlbmRhci10YWJsZS1oZWFkZXIgdGgge1xuICAgIGZvbnQ6IHtcbiAgICAgIHNpemU6ICRtYXQtY2FsZW5kYXItd2Vla2RheS10YWJsZS1mb250LXNpemU7XG4gICAgICB3ZWlnaHQ6IG1hdC1mb250LXdlaWdodCgkY29uZmlnLCBib2R5LTEpO1xuICAgIH1cbiAgfVxufVxuXG5cblxuXG5cblxuXG5AbWl4aW4gbWF0LWRpYWxvZy10aGVtZSgkdGhlbWUpIHtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAubWF0LWRpYWxvZy1jb250YWluZXIge1xuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtZWxldmF0aW9uKDI0LCAkdGhlbWUpO1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgZGlhbG9nKTtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCB0ZXh0KTtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LWRpYWxvZy10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1kaWFsb2ctdGl0bGUge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWxldmVsLXRvLXN0eWxlcygkY29uZmlnLCB0aXRsZSk7XG4gIH1cbn1cblxuXG5cblxuXG5cbkBtaXhpbiBtYXQtZXhwYW5zaW9uLXBhbmVsLXRoZW1lKCR0aGVtZSkge1xuICAkYmFja2dyb3VuZDogbWFwLWdldCgkdGhlbWUsIGJhY2tncm91bmQpO1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuXG4gIC5tYXQtZXhwYW5zaW9uLXBhbmVsIHtcbiAgICBAaW5jbHVkZSBfbWF0LXRoZW1lLW92ZXJyaWRhYmxlLWVsZXZhdGlvbigyLCAkdGhlbWUpO1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgY2FyZCk7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gIH1cblxuICAubWF0LWFjdGlvbi1yb3cge1xuICAgIGJvcmRlci10b3AtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGl2aWRlcik7XG4gIH1cblxuICAubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCkgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcbiAgICAmOm5vdChbYXJpYS1kaXNhYmxlZD0ndHJ1ZSddKSB7XG4gICAgICAmLmNkay1rZXlib2FyZC1mb2N1c2VkLFxuICAgICAgJi5jZGstcHJvZ3JhbS1mb2N1c2VkLFxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgaG92ZXIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIERpc2FibGUgdGhlIGhvdmVyIG9uIHRvdWNoIGRldmljZXMgc2luY2UgaXQgY2FuIGFwcGVhciBsaWtlIGl0IGlzIHN0dWNrLiBXZSBjYW4ndCB1c2VcbiAgLy8gYEBtZWRpYSAoaG92ZXIpYCBhYm92ZSwgYmVjYXVzZSB0aGUgZGVza3RvcCBzdXBwb3J0IGJyb3dzZXIgc3VwcG9ydCBpc24ndCBncmVhdC5cbiAgQG1lZGlhIChob3Zlcjogbm9uZSkge1xuICAgIC5tYXQtZXhwYW5zaW9uLXBhbmVsOm5vdCgubWF0LWV4cGFuZGVkKTpub3QoW2FyaWEtZGlzYWJsZWQ9J3RydWUnXSlcbiAgICAgIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGNhcmQpO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZSB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gIH1cblxuICAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24sXG4gIC5tYXQtZXhwYW5zaW9uLWluZGljYXRvcjo6YWZ0ZXIge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNlY29uZGFyeS10ZXh0KTtcbiAgfVxuXG4gIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlclthcmlhLWRpc2FibGVkPSd0cnVlJ10ge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkLWJ1dHRvbik7XG5cbiAgICAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUsXG4gICAgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uIHtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gbWF0LWV4cGFuc2lvbi1wYW5lbC10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcbiAgICBmb250OiB7XG4gICAgICBmYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnLCBzdWJoZWFkaW5nLTEpO1xuICAgICAgc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBzdWJoZWFkaW5nLTEpO1xuICAgICAgd2VpZ2h0OiBtYXQtZm9udC13ZWlnaHQoJGNvbmZpZywgc3ViaGVhZGluZy0xKTtcbiAgICB9XG4gIH1cblxuICAubWF0LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50IHtcbiAgICBAaW5jbHVkZSBtYXQtdHlwb2dyYXBoeS1sZXZlbC10by1zdHlsZXMoJGNvbmZpZywgYm9keS0xKTtcbiAgfVxufVxuXG5cblxuXG4vLyBUaGlzIG1peGluIHdpbGwgZW5zdXJlIHRoYXQgbGluZXMgdGhhdCBvdmVyZmxvdyB0aGUgY29udGFpbmVyIHdpbGwgaGlkZSB0aGUgb3ZlcmZsb3cgYW5kXG4vLyB0cnVuY2F0ZSBuZWF0bHkgd2l0aCBhbiBlbGxpcHNpcy5cbkBtaXhpbiBtYXQtdHJ1bmNhdGUtbGluZSgpIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG5cbi8vIE1peGluIHRvIHByb3ZpZGUgYWxsIG1hdC1saW5lIHN0eWxlcywgY2hhbmdpbmcgc2Vjb25kYXJ5IGZvbnQgc2l6ZSBiYXNlZCBvbiB3aGV0aGVyIHRoZSBsaXN0XG4vLyBpcyBpbiBkZW5zZSBtb2RlLlxuQG1peGluIG1hdC1saW5lLWJhc2UoJHNlY29uZGFyeS1mb250LXNpemUpIHtcbiAgLm1hdC1saW5lIHtcbiAgICBAaW5jbHVkZSBtYXQtdHJ1bmNhdGUtbGluZSgpO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAvLyBhbGwgbGluZXMgYnV0IHRoZSB0b3AgbGluZSBzaG91bGQgaGF2ZSBzbWFsbGVyIHRleHRcbiAgICAmOm50aC1jaGlsZChuKzIpIHtcbiAgICAgIGZvbnQtc2l6ZTogJHNlY29uZGFyeS1mb250LXNpemU7XG4gICAgfVxuICB9XG59XG5cbi8vIFRoaXMgbWl4aW4gbm9ybWFsaXplcyBkZWZhdWx0IGVsZW1lbnQgc3R5bGVzLCBlLmcuIGZvbnQgd2VpZ2h0IGZvciBoZWFkaW5nIHRleHQuXG5AbWl4aW4gbWF0LW5vcm1hbGl6ZS10ZXh0KCkge1xuICAmID4gKiB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gIH1cbn1cblxuLy8gVGhpcyBtaXhpbiBwcm92aWRlcyBiYXNlIHN0eWxlcyBmb3IgdGhlIHdyYXBwZXIgYXJvdW5kIG1hdC1saW5lIGVsZW1lbnRzIGluIGEgbGlzdC5cbkBtaXhpbiBtYXQtbGluZS13cmFwcGVyLWJhc2UoKSB7XG4gIEBpbmNsdWRlIG1hdC1ub3JtYWxpemUtdGV4dCgpO1xuXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAxMDAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIC8vIE11c3QgcmVtb3ZlIHdyYXBwZXIgd2hlbiBsaW5lcyBhcmUgZW1wdHkgb3IgaXQgdGFrZXMgdXAgaG9yaXpvbnRhbFxuICAvLyBzcGFjZSBhbmQgcHVzaGVzIG90aGVyIGVsZW1lbnRzIHRvIHRoZSByaWdodC5cbiAgJjplbXB0eSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5cblxuLy8gSW5jbHVkZSB0aGlzIGVtcHR5IG1peGluIGZvciBjb25zaXN0ZW5jeSB3aXRoIHRoZSBvdGhlciBjb21wb25lbnRzLlxuQG1peGluIG1hdC1ncmlkLWxpc3QtdGhlbWUoJHRoZW1lKSB7IH1cblxuQG1peGluIG1hdC1ncmlkLWxpc3QtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtZ3JpZC10aWxlLWhlYWRlcixcbiAgLm1hdC1ncmlkLXRpbGUtZm9vdGVyIHtcbiAgICBAaW5jbHVkZSBtYXQtbGluZS1iYXNlKG1hdC1mb250LXNpemUoJGNvbmZpZywgY2FwdGlvbikpO1xuICAgIGZvbnQtc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBib2R5LTEpO1xuICB9XG59XG5cblxuXG5cbi8vIEluY2x1ZGUgdGhpcyBlbXB0eSBtaXhpbiBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgb3RoZXIgY29tcG9uZW50cy5cbkBtaXhpbiBtYXQtaWNvbi10aGVtZSgkdGhlbWUpIHtcbiAgJHByaW1hcnk6IG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KTtcbiAgJGFjY2VudDogbWFwLWdldCgkdGhlbWUsIGFjY2VudCk7XG4gICR3YXJuOiBtYXAtZ2V0KCR0aGVtZSwgd2Fybik7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC1pY29uIHtcbiAgICAmLm1hdC1wcmltYXJ5IHtcbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJHByaW1hcnkpO1xuICAgIH1cblxuICAgICYubWF0LWFjY2VudCB7XG4gICAgICBjb2xvcjogbWF0LWNvbG9yKCRhY2NlbnQpO1xuICAgIH1cblxuICAgICYubWF0LXdhcm4ge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkd2Fybik7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBtYXQtaWNvbi10eXBvZ3JhcGh5KCRjb25maWcpIHsgfVxuXG5cblxuXG5cbi8vIFJlbmRlcnMgYSBncmFkaWVudCBmb3Igc2hvd2luZyB0aGUgZGFzaGVkIGxpbmUgd2hlbiB0aGUgaW5wdXQgaXMgZGlzYWJsZWQuXG4vLyBVbmxpa2UgdXNpbmcgYSBib3JkZXIsIGEgZ3JhZGllbnQgYWxsb3dzIHVzIHRvIGFkanVzdCB0aGUgc3BhY2luZyBvZiB0aGUgZG90dGVkIGxpbmVcbi8vIHRvIG1hdGNoIHRoZSBNYXRlcmlhbCBEZXNpZ24gc3BlYy5cbkBtaXhpbiBtYXQtY29udHJvbC1kaXNhYmxlZC11bmRlcmxpbmUoJGNvbG9yKSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgJGNvbG9yIDAlLCAkY29sb3IgMzMlLCB0cmFuc3BhcmVudCAwJSk7XG4gIGJhY2tncm91bmQtc2l6ZTogNHB4IDEwMCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbn1cblxuLy8gRmlndXJlcyBvdXQgdGhlIGNvbG9yIG9mIHRoZSBwbGFjZWhvbGRlciBmb3IgYSBmb3JtIGNvbnRyb2wuXG4vLyBVc2VkIHByaW1hcmlseSB0byBwcmV2ZW50IHRoZSB2YXJpb3VzIGZvcm0gY29udHJvbHMgZnJvbVxuLy8gYmVjb21pbmcgb3V0IG9mIHN5bmMgc2luY2UgdGhlc2UgY29sb3JzIGFyZW4ndCBpbiBhIHBhbGV0dGUuXG5AZnVuY3Rpb24gX21hdC1jb250cm9sLXBsYWNlaG9sZGVyLWNvbG9yKCR0aGVtZSkge1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuICAkaXMtZGFyay10aGVtZTogbWFwLWdldCgkdGhlbWUsIGlzLWRhcmspO1xuICBAcmV0dXJuIG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQsIGlmKCRpcy1kYXJrLXRoZW1lLCAwLjUsIDAuNDIpKTtcbn1cblxuXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBtYXRlcmlhbC9uby1wcmVmaXhlcyAqL1xuQG1peGluIHVzZXItc2VsZWN0KCR2YWx1ZSkge1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiAkdmFsdWU7XG4gIC1tb3otdXNlci1zZWxlY3Q6ICR2YWx1ZTtcbiAgLW1zLXVzZXItc2VsZWN0OiAkdmFsdWU7XG4gIHVzZXItc2VsZWN0OiAkdmFsdWU7XG59XG5cbkBtaXhpbiBpbnB1dC1wbGFjZWhvbGRlciB7XG4gICY6OnBsYWNlaG9sZGVyIHtcbiAgICBAY29udGVudDtcbiAgfVxuXG4gICY6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgIEBjb250ZW50O1xuICB9XG5cbiAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cblxuICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGN1cnNvci1ncmFiIHtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gIGN1cnNvcjogZ3JhYjtcbn1cblxuQG1peGluIGN1cnNvci1ncmFiYmluZyB7XG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcbiAgY3Vyc29yOiBncmFiYmluZztcbn1cblxuQG1peGluIGJhY2tmYWNlLXZpc2liaWxpdHkoJHZhbHVlKSB7XG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogJHZhbHVlO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiAkdmFsdWU7XG59XG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG5cblxuXG5AbWl4aW4gbWF0LWlucHV0LXRoZW1lKCR0aGVtZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdCAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVyIHtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBzZWNvbmRhcnktdGV4dCk7XG4gIH1cblxuICAubWF0LWlucHV0LWVsZW1lbnQ6ZGlzYWJsZWQsXG4gIC5tYXQtZm9ybS1maWVsZC10eXBlLW1hdC1uYXRpdmUtc2VsZWN0Lm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC1pbmZpeDo6YWZ0ZXIge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkLXRleHQpO1xuICB9XG5cbiAgLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgICBjYXJldC1jb2xvcjogbWF0LWNvbG9yKCRwcmltYXJ5KTtcblxuICAgIEBpbmNsdWRlIGlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiBfbWF0LWNvbnRyb2wtcGxhY2Vob2xkZXItY29sb3IoJHRoZW1lKTtcbiAgICB9XG5cbiAgICAvLyBPbiBkYXJrIHRoZW1lcyB3ZSBzZXQgdGhlIG5hdGl2ZSBgc2VsZWN0YCBjb2xvciB0byBzb21lIHNoYWRlIG9mIHdoaXRlLFxuICAgIC8vIGhvd2V2ZXIgdGhlIGNvbG9yIHByb3BhZ2F0ZXMgdG8gYWxsIG9mIHRoZSBgb3B0aW9uYCBlbGVtZW50cywgd2hpY2ggYXJlXG4gICAgLy8gYWx3YXlzIG9uIGEgd2hpdGUgYmFja2dyb3VuZCBpbnNpZGUgdGhlIGRyb3Bkb3duLCBjYXVzaW5nIHRoZW0gdG8gYmxlbmQgaW4uXG4gICAgLy8gU2luY2Ugd2UgY2FuJ3QgY2hhbmdlIGJhY2tncm91bmQgb2YgdGhlIGRyb3Bkb3duLCB3ZSBuZWVkIHRvIGV4cGxpY2l0bHlcbiAgICAvLyByZXNldCB0aGUgY29sb3Igb2YgdGhlIG9wdGlvbnMgdG8gc29tZXRoaW5nIGRhcmsuXG4gICAgQGlmIChtYXAtZ2V0KCR0aGVtZSwgaXMtZGFyaykpIHtcbiAgICAgIG9wdGlvbiB7XG4gICAgICAgIGNvbG9yOiAkZGFyay1wcmltYXJ5LXRleHQ7XG4gICAgICB9XG5cbiAgICAgIG9wdGlvbjpkaXNhYmxlZCB7XG4gICAgICAgIGNvbG9yOiAkZGFyay1kaXNhYmxlZC10ZXh0O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tYXQtYWNjZW50IC5tYXQtaW5wdXQtZWxlbWVudCB7XG4gICAgY2FyZXQtY29sb3I6IG1hdC1jb2xvcigkYWNjZW50KTtcbiAgfVxuXG4gIC5tYXQtd2FybiAubWF0LWlucHV0LWVsZW1lbnQsXG4gIC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtaW5wdXQtZWxlbWVudCB7XG4gICAgY2FyZXQtY29sb3I6IG1hdC1jb2xvcigkd2Fybik7XG4gIH1cblxuICAubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1pbmZpeDo6YWZ0ZXIge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJHdhcm4pO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtaW5wdXQtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC8vIFRoZSB1bml0LWxlc3MgbGluZS1oZWlnaHQgZnJvbSB0aGUgZm9udCBjb25maWcuXG4gICRsaW5lLWhlaWdodDogbWF0LWxpbmUtaGVpZ2h0KCRjb25maWcsIGlucHV0KTtcblxuICAvLyBUaGUgYW1vdW50IG9mIHNwYWNlIGJldHdlZW4gdGhlIHRvcCBvZiB0aGUgbGluZSBhbmQgdGhlIHRvcCBvZiB0aGUgYWN0dWFsIHRleHRcbiAgLy8gKGFzIGEgZnJhY3Rpb24gb2YgdGhlIGZvbnQtc2l6ZSkuXG4gICRsaW5lLXNwYWNpbmc6ICgkbGluZS1oZWlnaHQgLSAxKSAvIDI7XG5cbiAgLy8gPGlucHV0PiBlbGVtZW50cyBzZWVtIHRvIGhhdmUgdGhlaXIgaGVpZ2h0IHNldCBzbGlnaHRseSB0b28gbGFyZ2Ugb24gU2FmYXJpIGNhdXNpbmcgdGhlIHRleHQgdG9cbiAgLy8gYmUgbWlzYWxpZ25lZCB3LnIudC4gdGhlIHBsYWNlaG9sZGVyLiBBZGRpbmcgdGhpcyBtYXJnaW4gY29ycmVjdHMgaXQuXG4gIGlucHV0Lm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgICBtYXJnaW4tdG9wOiAtJGxpbmUtc3BhY2luZyAqIDFlbTtcbiAgfVxufVxuXG5cblxuXG5cblxuXG5AbWl4aW4gbWF0LWxpc3QtdGhlbWUoJHRoZW1lKSB7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC1saXN0LWJhc2Uge1xuICAgIC5tYXQtbGlzdC1pdGVtIHtcbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuICAgIH1cblxuICAgIC5tYXQtbGlzdC1vcHRpb24ge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gICAgfVxuXG4gICAgLm1hdC1zdWJoZWFkZXIge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQpO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtbGlzdC1pdGVtLWRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGRpc2FibGVkLWxpc3Qtb3B0aW9uKTtcbiAgfVxuXG4gIC5tYXQtbGlzdC1vcHRpb24sXG4gIC5tYXQtbmF2LWxpc3QgLm1hdC1saXN0LWl0ZW0ge1xuICAgICY6aG92ZXIsICY6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCAnaG92ZXInKTtcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIG1hdC1saXN0LXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAkZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcblxuICAubWF0LWxpc3QtaXRlbSB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcbiAgfVxuXG4gIC5tYXQtbGlzdC1vcHRpb24ge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHk7XG4gIH1cblxuICAvLyBEZWZhdWx0IGxpc3RcbiAgLm1hdC1saXN0LWJhc2Uge1xuICAgIC5tYXQtbGlzdC1pdGVtIHtcbiAgICAgIGZvbnQtc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBzdWJoZWFkaW5nLTIpO1xuICAgICAgQGluY2x1ZGUgbWF0LWxpbmUtYmFzZShtYXQtZm9udC1zaXplKCRjb25maWcsIGJvZHktMSkpO1xuICAgIH1cblxuICAgIC5tYXQtbGlzdC1vcHRpb24ge1xuICAgICAgZm9udC1zaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIHN1YmhlYWRpbmctMik7XG4gICAgICBAaW5jbHVkZSBtYXQtbGluZS1iYXNlKG1hdC1mb250LXNpemUoJGNvbmZpZywgYm9keS0xKSk7XG4gICAgfVxuXG4gICAgLm1hdC1zdWJoZWFkZXIge1xuICAgICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnLCBib2R5LTIpO1xuICAgICAgZm9udC1zaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIGJvZHktMik7XG4gICAgICBmb250LXdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIGJvZHktMik7XG4gICAgfVxuICB9XG5cbiAgLy8gRGVuc2UgbGlzdFxuICAubWF0LWxpc3QtYmFzZVtkZW5zZV0ge1xuICAgIC5tYXQtbGlzdC1pdGVtIHtcbiAgICAgIGZvbnQtc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBjYXB0aW9uKTtcbiAgICAgIEBpbmNsdWRlIG1hdC1saW5lLWJhc2UobWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBjYXB0aW9uKSk7XG4gICAgfVxuXG4gICAgLm1hdC1saXN0LW9wdGlvbiB7XG4gICAgICBmb250LXNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgY2FwdGlvbik7XG4gICAgICBAaW5jbHVkZSBtYXQtbGluZS1iYXNlKG1hdC1mb250LXNpemUoJGNvbmZpZywgY2FwdGlvbikpO1xuICAgIH1cblxuICAgIC5tYXQtc3ViaGVhZGVyIHtcbiAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHk7XG4gICAgICBmb250LXNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgY2FwdGlvbik7XG4gICAgICBmb250LXdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIGJvZHktMik7XG4gICAgfVxuICB9XG59XG5cblxuXG5cblxuXG5cbkBtaXhpbiBtYXQtbWVudS10aGVtZSgkdGhlbWUpIHtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAubWF0LW1lbnUtcGFuZWwge1xuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtb3ZlcnJpZGFibGUtZWxldmF0aW9uKDQsICR0aGVtZSk7XG4gICAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCAnY2FyZCcpO1xuICB9XG5cbiAgLm1hdC1tZW51LWl0ZW0ge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsICd0ZXh0Jyk7XG5cbiAgICAmW2Rpc2FibGVkXSB7XG4gICAgICAmLCAmOjphZnRlciB7XG4gICAgICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsICdkaXNhYmxlZCcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tYXQtbWVudS1pdGVtIC5tYXQtaWNvbi1uby1jb2xvcixcbiAgLm1hdC1tZW51LWl0ZW0tc3VibWVudS10cmlnZ2VyOjphZnRlciB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgJ2ljb24nKTtcbiAgfVxuXG4gIC5tYXQtbWVudS1pdGVtOmhvdmVyLFxuICAubWF0LW1lbnUtaXRlbS5jZGstcHJvZ3JhbS1mb2N1c2VkLFxuICAubWF0LW1lbnUtaXRlbS5jZGsta2V5Ym9hcmQtZm9jdXNlZCxcbiAgLm1hdC1tZW51LWl0ZW0taGlnaGxpZ2h0ZWQge1xuICAgICY6bm90KFtkaXNhYmxlZF0pIHtcbiAgICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgJ2hvdmVyJyk7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBtYXQtbWVudS10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1tZW51LWl0ZW0ge1xuICAgIGZvbnQ6IHtcbiAgICAgIGZhbWlseTogbWF0LWZvbnQtZmFtaWx5KCRjb25maWcsIGJvZHktMSk7XG4gICAgICBzaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIGJvZHktMSk7XG4gICAgICB3ZWlnaHQ6IG1hdC1mb250LXdlaWdodCgkY29uZmlnLCBib2R5LTEpO1xuICAgIH1cbiAgfVxufVxuXG5cblxuXG5cblxuQG1peGluIG1hdC1wYWdpbmF0b3ItdGhlbWUoJHRoZW1lKSB7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG5cbiAgLm1hdC1wYWdpbmF0b3Ige1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgJ2NhcmQnKTtcbiAgfVxuXG4gIC5tYXQtcGFnaW5hdG9yLFxuICAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQpO1xuICB9XG5cbiAgLm1hdC1wYWdpbmF0b3ItZGVjcmVtZW50LFxuICAubWF0LXBhZ2luYXRvci1pbmNyZW1lbnQge1xuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBtYXQtY29sb3IoJGZvcmVncm91bmQsICdpY29uJyk7XG4gICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCAnaWNvbicpO1xuICB9XG5cbiAgLm1hdC1wYWdpbmF0b3ItZmlyc3QsXG4gIC5tYXQtcGFnaW5hdG9yLWxhc3Qge1xuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBtYXQtY29sb3IoJGZvcmVncm91bmQsICdpY29uJyk7XG4gIH1cblxuICAubWF0LWljb24tYnV0dG9uW2Rpc2FibGVkXSB7XG4gICAgLm1hdC1wYWdpbmF0b3ItZGVjcmVtZW50LFxuICAgIC5tYXQtcGFnaW5hdG9yLWluY3JlbWVudCxcbiAgICAubWF0LXBhZ2luYXRvci1maXJzdCxcbiAgICAubWF0LXBhZ2luYXRvci1sYXN0IHtcbiAgICAgIGJvcmRlci1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCAnZGlzYWJsZWQnKTtcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIG1hdC1wYWdpbmF0b3ItdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtcGFnaW5hdG9yLFxuICAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gICAgZm9udDoge1xuICAgICAgZmFtaWx5OiBtYXQtZm9udC1mYW1pbHkoJGNvbmZpZywgY2FwdGlvbik7XG4gICAgICBzaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIGNhcHRpb24pO1xuICAgIH1cbiAgfVxufVxuXG5cblxuXG5cbkBtaXhpbiBtYXQtcHJvZ3Jlc3MtYmFyLXRoZW1lKCR0aGVtZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcblxuICAubWF0LXByb2dyZXNzLWJhci1iYWNrZ3JvdW5kIHtcbiAgICBmaWxsOiBtYXQtY29sb3IoJHByaW1hcnksIGxpZ2h0ZXIpO1xuICB9XG5cbiAgLm1hdC1wcm9ncmVzcy1iYXItYnVmZmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJHByaW1hcnksIGxpZ2h0ZXIpO1xuICB9XG5cbiAgLm1hdC1wcm9ncmVzcy1iYXItZmlsbDo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkcHJpbWFyeSk7XG4gIH1cblxuICAubWF0LXByb2dyZXNzLWJhci5tYXQtYWNjZW50IHtcbiAgICAubWF0LXByb2dyZXNzLWJhci1iYWNrZ3JvdW5kIHtcbiAgICAgIGZpbGw6IG1hdC1jb2xvcigkYWNjZW50LCBsaWdodGVyKTtcbiAgICB9XG5cbiAgICAubWF0LXByb2dyZXNzLWJhci1idWZmZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRhY2NlbnQsIGxpZ2h0ZXIpO1xuICAgIH1cblxuICAgIC5tYXQtcHJvZ3Jlc3MtYmFyLWZpbGw6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYWNjZW50KTtcbiAgICB9XG4gIH1cblxuICAubWF0LXByb2dyZXNzLWJhci5tYXQtd2FybiB7XG4gICAgLm1hdC1wcm9ncmVzcy1iYXItYmFja2dyb3VuZCB7XG4gICAgICBmaWxsOiBtYXQtY29sb3IoJHdhcm4sIGxpZ2h0ZXIpO1xuICAgIH1cblxuICAgIC5tYXQtcHJvZ3Jlc3MtYmFyLWJ1ZmZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJHdhcm4sIGxpZ2h0ZXIpO1xuICAgIH1cblxuICAgIC5tYXQtcHJvZ3Jlc3MtYmFyLWZpbGw6OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkd2Fybik7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBtYXQtcHJvZ3Jlc3MtYmFyLXR5cG9ncmFwaHkoJGNvbmZpZykgeyB9XG5cblxuXG5cblxuXG5AbWl4aW4gbWF0LXByb2dyZXNzLXNwaW5uZXItdGhlbWUoJHRoZW1lKSB7XG4gICRwcmltYXJ5OiBtYXAtZ2V0KCR0aGVtZSwgcHJpbWFyeSk7XG4gICRhY2NlbnQ6IG1hcC1nZXQoJHRoZW1lLCBhY2NlbnQpO1xuICAkd2FybjogbWFwLWdldCgkdGhlbWUsIHdhcm4pO1xuXG4gIC5tYXQtcHJvZ3Jlc3Mtc3Bpbm5lciwgLm1hdC1zcGlubmVyIHtcbiAgICBjaXJjbGUge1xuICAgICAgc3Ryb2tlOiBtYXQtY29sb3IoJHByaW1hcnkpO1xuICAgIH1cblxuICAgICYubWF0LWFjY2VudCBjaXJjbGUge1xuICAgICAgc3Ryb2tlOiBtYXQtY29sb3IoJGFjY2VudCk7XG4gICAgfVxuXG4gICAgJi5tYXQtd2FybiBjaXJjbGUge1xuICAgICAgc3Ryb2tlOiBtYXQtY29sb3IoJHdhcm4pO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gbWF0LXByb2dyZXNzLXNwaW5uZXItdHlwb2dyYXBoeSgkY29uZmlnKSB7IH1cblxuXG5cblxuXG5AbWl4aW4gX21hdC1yYWRpby1jb2xvcigkcGFsZXR0ZSkge1xuICAmLm1hdC1yYWRpby1jaGVja2VkIC5tYXQtcmFkaW8tb3V0ZXItY2lyY2xlIHtcbiAgICBib3JkZXItY29sb3I6IG1hdC1jb2xvcigkcGFsZXR0ZSk7XG4gIH1cblxuICAubWF0LXJhZGlvLWlubmVyLWNpcmNsZSxcbiAgLm1hdC1yYWRpby1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudDpub3QoLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSksXG4gICYubWF0LXJhZGlvLWNoZWNrZWQgLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSxcbiAgJjphY3RpdmUgLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRwYWxldHRlKTtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LXJhZGlvLXRoZW1lKCR0aGVtZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAubWF0LXJhZGlvLW91dGVyLWNpcmNsZSB7XG4gICAgYm9yZGVyLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNlY29uZGFyeS10ZXh0KTtcbiAgfVxuXG4gIC5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgICAmLm1hdC1wcmltYXJ5IHtcbiAgICAgIEBpbmNsdWRlIF9tYXQtcmFkaW8tY29sb3IoJHByaW1hcnkpO1xuICAgIH1cblxuICAgICYubWF0LWFjY2VudCB7XG4gICAgICBAaW5jbHVkZSBfbWF0LXJhZGlvLWNvbG9yKCRhY2NlbnQpO1xuICAgIH1cblxuICAgICYubWF0LXdhcm4ge1xuICAgICAgQGluY2x1ZGUgX21hdC1yYWRpby1jb2xvcigkd2Fybik7XG4gICAgfVxuXG4gICAgLy8gVGhpcyBuZWVkcyBleHRyYSBzcGVjaWZpY2l0eSwgYmVjYXVzZSB0aGUgY2xhc3NlcyBhYm92ZSBhcmUgY29tYmluZWRcbiAgICAvLyAoZS5nLiBgLm1hdC1yYWRpby1idXR0b24ubWF0LWFjY2VudGApIHdoaWNoIGluY3JlYXNlcyB0aGVpciBzcGVjaWZpY2l0eSBhIGxvdC5cbiAgICAvLyBUT0RPOiBjb25zaWRlciBtYWtpbmcgdGhlIHNlbGVjdG9ycyBpbnRvIGRlc2NlbmRhbnRzIChgLm1hdC1wcmltYXJ5IC5tYXQtcmFkaW8tYnV0dG9uYCkuXG4gICAgJi5tYXQtcmFkaW8tZGlzYWJsZWQge1xuICAgICAgJi5tYXQtcmFkaW8tY2hlY2tlZCAubWF0LXJhZGlvLW91dGVyLWNpcmNsZSxcbiAgICAgIC5tYXQtcmFkaW8tb3V0ZXItY2lyY2xlIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkKTtcbiAgICAgIH1cblxuICAgICAgLm1hdC1yYWRpby1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudCxcbiAgICAgIC5tYXQtcmFkaW8taW5uZXItY2lyY2xlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXNhYmxlZCk7XG4gICAgICB9XG5cbiAgICAgIC5tYXQtcmFkaW8tbGFiZWwtY29udGVudCB7XG4gICAgICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTd2l0Y2ggdGhpcyB0byBhIHNvbGlkIGNvbG9yIHNpbmNlIHdlJ3JlIHVzaW5nIGBvcGFjaXR5YFxuICAgIC8vIHRvIGNvbnRyb2wgaG93IG9wYXF1ZSB0aGUgcmlwcGxlIHNob3VsZCBiZS5cbiAgICAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hcF9nZXQoJGZvcmVncm91bmQsIGJhc2UpO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gbWF0LXJhZGlvLXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAubWF0LXJhZGlvLWJ1dHRvbiB7XG4gICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgfVxufVxuXG5cblxuXG5cblxuXG5cbkBtaXhpbiBtYXQtc2VsZWN0LXRoZW1lKCR0aGVtZSkge1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuICAkYmFja2dyb3VuZDogbWFwLWdldCgkdGhlbWUsIGJhY2tncm91bmQpO1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcblxuICAubWF0LXNlbGVjdC12YWx1ZSB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gIH1cblxuICAubWF0LXNlbGVjdC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IF9tYXQtY29udHJvbC1wbGFjZWhvbGRlci1jb2xvcigkdGhlbWUpO1xuICB9XG5cbiAgLm1hdC1zZWxlY3QtZGlzYWJsZWQgLm1hdC1zZWxlY3QtdmFsdWUge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkLXRleHQpO1xuICB9XG5cbiAgLm1hdC1zZWxlY3QtYXJyb3cge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNlY29uZGFyeS10ZXh0KTtcbiAgfVxuXG4gIC5tYXQtc2VsZWN0LXBhbmVsIHtcbiAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGNhcmQpO1xuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtb3ZlcnJpZGFibGUtZWxldmF0aW9uKDQsICR0aGVtZSk7XG5cbiAgICAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLW11bHRpcGxlKSB7XG4gICAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGhvdmVyLCAwLjEyKTtcbiAgICB9XG4gIH1cblxuICAubWF0LWZvcm0tZmllbGQge1xuICAgICYubWF0LWZvY3VzZWQge1xuICAgICAgJi5tYXQtcHJpbWFyeSAubWF0LXNlbGVjdC1hcnJvdyB7XG4gICAgICAgIGNvbG9yOiBtYXQtY29sb3IoJHByaW1hcnkpO1xuICAgICAgfVxuXG4gICAgICAmLm1hdC1hY2NlbnQgLm1hdC1zZWxlY3QtYXJyb3cge1xuICAgICAgICBjb2xvcjogbWF0LWNvbG9yKCRhY2NlbnQpO1xuICAgICAgfVxuXG4gICAgICAmLm1hdC13YXJuIC5tYXQtc2VsZWN0LWFycm93IHtcbiAgICAgICAgY29sb3I6IG1hdC1jb2xvcigkd2Fybik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm1hdC1zZWxlY3QubWF0LXNlbGVjdC1pbnZhbGlkIC5tYXQtc2VsZWN0LWFycm93IHtcbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJHdhcm4pO1xuICAgIH1cblxuICAgIC5tYXQtc2VsZWN0Lm1hdC1zZWxlY3QtZGlzYWJsZWQgLm1hdC1zZWxlY3QtYXJyb3cge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGlzYWJsZWQtdGV4dCk7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBtYXQtc2VsZWN0LXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAvLyBUaGUgdW5pdC1sZXNzIGxpbmUtaGVpZ2h0IGZyb20gdGhlIGZvbnQgY29uZmlnLlxuICAkbGluZS1oZWlnaHQ6IG1hdC1saW5lLWhlaWdodCgkY29uZmlnLCBpbnB1dCk7XG5cbiAgLm1hdC1zZWxlY3Qge1xuICAgIGZvbnQtZmFtaWx5OiBtYXQtZm9udC1mYW1pbHkoJGNvbmZpZyk7XG4gIH1cblxuICAubWF0LXNlbGVjdC10cmlnZ2VyIHtcbiAgICBoZWlnaHQ6ICRsaW5lLWhlaWdodCAqIDFlbTtcbiAgfVxufVxuXG5cblxuXG5cblxuQG1peGluIG1hdC1zaWRlbmF2LXRoZW1lKCR0aGVtZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAvLyBXZSB1c2UgaW52ZXJ0KCkgaGVyZSB0byBoYXZlIHRoZSBkYXJrZW4gdGhlIGJhY2tncm91bmQgY29sb3IgZXhwZWN0ZWQgdG8gYmUgdXNlZC4gSWYgdGhlXG4gIC8vIGJhY2tncm91bmQgaXMgbGlnaHQsIHdlIHVzZSBhIGRhcmsgYmFja2Ryb3AuIElmIHRoZSBiYWNrZ3JvdW5kIGlzIGRhcmssXG4gIC8vIHdlIHVzZSBhIGxpZ2h0IGJhY2tkcm9wLlxuICAkZHJhd2VyLWJhY2tkcm9wLWNvbG9yOiBpbnZlcnQobWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBjYXJkLCAwLjYpKTtcbiAgJGRyYXdlci1iYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJGJhY2tncm91bmQsIGRpYWxvZyk7XG4gICRkcmF3ZXItY29udGFpbmVyLWJhY2tncm91bmQtY29sb3I6ICBtYXQtY29sb3IoJGJhY2tncm91bmQsIGJhY2tncm91bmQpO1xuICAkZHJhd2VyLXB1c2gtYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBkaWFsb2cpO1xuICAkZHJhd2VyLXNpZGUtYm9yZGVyOiBzb2xpZCAxcHggbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXZpZGVyKTtcblxuICAubWF0LWRyYXdlci1jb250YWluZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRkcmF3ZXItY29udGFpbmVyLWJhY2tncm91bmQtY29sb3I7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gIH1cblxuICAubWF0LWRyYXdlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGRyYXdlci1iYWNrZ3JvdW5kLWNvbG9yO1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuXG4gICAgJi5tYXQtZHJhd2VyLXB1c2gge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRyYXdlci1wdXNoLWJhY2tncm91bmQtY29sb3I7XG4gICAgfVxuXG4gICAgJjpub3QoLm1hdC1kcmF3ZXItc2lkZSkge1xuICAgICAgLy8gVGhlIGVsZXZhdGlvbiBvZiB6LTE2IGlzIG5vdGVkIGluIHRoZSBkZXNpZ24gc3BlY2lmaWNhdGlvbnMuXG4gICAgICAvLyBTZWUgaHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24vY29tcG9uZW50cy9uYXZpZ2F0aW9uLWRyYXdlci5odG1sXG4gICAgICBAaW5jbHVkZSBfbWF0LXRoZW1lLWVsZXZhdGlvbigxNiwgJHRoZW1lKTtcbiAgICB9XG4gIH1cblxuICAubWF0LWRyYXdlci1zaWRlIHtcbiAgICBib3JkZXItcmlnaHQ6ICRkcmF3ZXItc2lkZS1ib3JkZXI7XG5cbiAgICAmLm1hdC1kcmF3ZXItZW5kIHtcbiAgICAgIGJvcmRlci1sZWZ0OiAkZHJhd2VyLXNpZGUtYm9yZGVyO1xuICAgICAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIFtkaXI9J3J0bCddIC5tYXQtZHJhd2VyLXNpZGUge1xuICAgIGJvcmRlci1sZWZ0OiAkZHJhd2VyLXNpZGUtYm9yZGVyO1xuICAgIGJvcmRlci1yaWdodDogbm9uZTtcblxuICAgICYubWF0LWRyYXdlci1lbmQge1xuICAgICAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gICAgICBib3JkZXItcmlnaHQ6ICRkcmF3ZXItc2lkZS1ib3JkZXI7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1kcmF3ZXItYmFja2Ryb3AubWF0LWRyYXdlci1zaG93biB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGRyYXdlci1iYWNrZHJvcC1jb2xvcjtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LXNpZGVuYXYtdHlwb2dyYXBoeSgkY29uZmlnKSB7IH1cblxuXG5cblxuXG5cbkBtaXhpbiBfbWF0LXNsaWRlLXRvZ2dsZS1jaGVja2VkKCRwYWxldHRlLCAkdGh1bWItY2hlY2tlZC1odWUpIHtcbiAgJi5tYXQtY2hlY2tlZCB7XG4gICAgLm1hdC1zbGlkZS10b2dnbGUtdGh1bWIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRwYWxldHRlLCAkdGh1bWItY2hlY2tlZC1odWUpO1xuICAgIH1cblxuICAgIC5tYXQtc2xpZGUtdG9nZ2xlLWJhciB7XG4gICAgICAvLyBPcGFjaXR5IGlzIGRldGVybWluZWQgZnJvbSB0aGUgc3BlY3MgZm9yIHRoZSBzZWxlY3Rpb24gY29udHJvbHMuXG4gICAgICAvLyBTZWU6IGh0dHBzOi8vbWF0ZXJpYWwuaW8vZGVzaWduL2NvbXBvbmVudHMvc2VsZWN0aW9uLWNvbnRyb2xzLmh0bWwjc3BlY3NcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkcGFsZXR0ZSwgJHRodW1iLWNoZWNrZWQtaHVlLCAwLjU0KTtcbiAgICB9XG5cbiAgICAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgICAgIC8vIFNldCBubyBvcGFjaXR5IGZvciB0aGUgcmlwcGxlcyBiZWNhdXNlIHRoZSByaXBwbGUgb3BhY2l0eSB3aWxsIGJlIGFkanVzdGVkIGR5bmFtaWNhbGx5XG4gICAgICAvLyBiYXNlZCBvbiB0aGUgdHlwZSBvZiBpbnRlcmFjdGlvbiB3aXRoIHRoZSBzbGlkZS10b2dnbGUgKGUuZy4gZm9yIGhvdmVyLCBmb2N1cylcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkcGFsZXR0ZSwgJHRodW1iLWNoZWNrZWQtaHVlKTtcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIG1hdC1zbGlkZS10b2dnbGUtdGhlbWUoJHRoZW1lKSB7XG4gICRpcy1kYXJrOiBtYXBfZ2V0KCR0aGVtZSwgaXMtZGFyayk7XG4gICRwcmltYXJ5OiBtYXAtZ2V0KCR0aGVtZSwgcHJpbWFyeSk7XG4gICRhY2NlbnQ6IG1hcC1nZXQoJHRoZW1lLCBhY2NlbnQpO1xuICAkd2FybjogbWFwLWdldCgkdGhlbWUsIHdhcm4pO1xuICAkYmFja2dyb3VuZDogbWFwLWdldCgkdGhlbWUsIGJhY2tncm91bmQpO1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuXG4gIC8vIENvbG9yIGh1ZXMgYXJlIGJhc2VkIG9uIHRoZSBzcGVjcyB3aGljaCBicmllZmx5IHNob3cgdGhlIGh1ZXMgdGhhdCBhcmUgYXBwbGllZCB0byBhIHN3aXRjaC5cbiAgLy8gVGhlIDIwMTggc3BlY3Mgbm8gbG9uZ2VyIGRlc2NyaWJlIGhvdyBkYXJrIHN3aXRjaGVzIHNob3VsZCBsb29rIGxpa2UuIER1ZSB0byB0aGUgbGFjayBvZlxuICAvLyBpbmZvcm1hdGlvbiBmb3IgZGFyayB0aGVtZWQgc3dpdGNoZXMsIHdlIGtlZXAgdGhlIG9sZCBiZWhhdmlvciB0aGF0IGlzIGJhc2VkIG9uIHRoZSBwcmV2aW91c1xuICAvLyBzcGVjaWZpY2F0aW9ucy4gU2VlOiBodHRwczovL21hdGVyaWFsLmlvL2Rlc2lnbi9jb21wb25lbnRzL3NlbGVjdGlvbi1jb250cm9scy5odG1sI3NwZWNzXG4gICR0aHVtYi11bmNoZWNrZWQtaHVlOiBpZigkaXMtZGFyaywgNDAwLCA1MCk7XG4gICR0aHVtYi1jaGVja2VkLWh1ZTogaWYoJGlzLWRhcmssIDIwMCwgZGVmYXVsdCk7XG5cbiAgJGJhci11bmNoZWNrZWQtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGlzYWJsZWQpO1xuICAkcmlwcGxlLXVuY2hlY2tlZC1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBiYXNlKTtcblxuICAubWF0LXNsaWRlLXRvZ2dsZSB7XG4gICAgQGluY2x1ZGUgX21hdC1zbGlkZS10b2dnbGUtY2hlY2tlZCgkYWNjZW50LCAkdGh1bWItY2hlY2tlZC1odWUpO1xuXG4gICAgJi5tYXQtcHJpbWFyeSB7XG4gICAgICBAaW5jbHVkZSBfbWF0LXNsaWRlLXRvZ2dsZS1jaGVja2VkKCRwcmltYXJ5LCAkdGh1bWItY2hlY2tlZC1odWUpO1xuICAgIH1cblxuICAgICYubWF0LXdhcm4ge1xuICAgICAgQGluY2x1ZGUgX21hdC1zbGlkZS10b2dnbGUtY2hlY2tlZCgkd2FybiwgJHRodW1iLWNoZWNrZWQtaHVlKTtcbiAgICB9XG5cbiAgICAmOm5vdCgubWF0LWNoZWNrZWQpIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgICAgLy8gU2V0IG5vIG9wYWNpdHkgZm9yIHRoZSByaXBwbGVzIGJlY2F1c2UgdGhlIHJpcHBsZSBvcGFjaXR5IHdpbGwgYmUgYWRqdXN0ZWQgZHluYW1pY2FsbHlcbiAgICAgIC8vIGJhc2VkIG9uIHRoZSB0eXBlIG9mIGludGVyYWN0aW9uIHdpdGggdGhlIHNsaWRlLXRvZ2dsZSAoZS5nLiBmb3IgaG92ZXIsIGZvY3VzKVxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJpcHBsZS11bmNoZWNrZWQtY29sb3I7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1zbGlkZS10b2dnbGUtdGh1bWIge1xuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtZWxldmF0aW9uKDEsICR0aGVtZSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRtYXQtZ3JleSwgJHRodW1iLXVuY2hlY2tlZC1odWUpO1xuICB9XG5cbiAgLm1hdC1zbGlkZS10b2dnbGUtYmFyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFyLXVuY2hlY2tlZC1jb2xvcjtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LXNsaWRlLXRvZ2dsZS10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1zbGlkZS10b2dnbGUtY29udGVudCB7XG4gICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgfVxufVxuXG5cblxuXG5cbkBtaXhpbiBfbWF0LXNsaWRlci1pbm5lci1jb250ZW50LXRoZW1lKCRwYWxldHRlKSB7XG4gIC5tYXQtc2xpZGVyLXRyYWNrLWZpbGwsXG4gIC5tYXQtc2xpZGVyLXRodW1iLFxuICAubWF0LXNsaWRlci10aHVtYi1sYWJlbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRwYWxldHRlKTtcbiAgfVxuXG4gIC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXRleHQge1xuICAgIGNvbG9yOiBtYXQtY29sb3IoJHBhbGV0dGUsIGRlZmF1bHQtY29udHJhc3QpO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtc2xpZGVyLXRoZW1lKCR0aGVtZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAkbWF0LXNsaWRlci1vZmYtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2xpZGVyLW9mZik7XG4gICRtYXQtc2xpZGVyLW9mZi1mb2N1c2VkLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNsaWRlci1vZmYtYWN0aXZlKTtcbiAgJG1hdC1zbGlkZXItZGlzYWJsZWQtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2xpZGVyLW9mZik7XG4gICRtYXQtc2xpZGVyLWxhYmVsZWQtbWluLXZhbHVlLXRodW1iLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNsaWRlci1taW4pO1xuICAkbWF0LXNsaWRlci1sYWJlbGVkLW1pbi12YWx1ZS10aHVtYi1sYWJlbC1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBzbGlkZXItb2ZmKTtcbiAgJG1hdC1zbGlkZXItZm9jdXMtcmluZy1jb2xvcjogbWF0LWNvbG9yKCRhY2NlbnQsIGRlZmF1bHQsIDAuMik7XG4gICRtYXQtc2xpZGVyLWZvY3VzLXJpbmctbWluLXZhbHVlLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGJhc2UsIDAuMTIpO1xuICAkbWF0LXNsaWRlci10aWNrLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGJhc2UsIDAuNyk7XG4gICRtYXQtc2xpZGVyLXRpY2stc2l6ZTogMnB4O1xuXG4gIC5tYXQtc2xpZGVyLXRyYWNrLWJhY2tncm91bmQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtYXQtc2xpZGVyLW9mZi1jb2xvcjtcbiAgfVxuXG4gIC5tYXQtcHJpbWFyeSB7XG4gICAgQGluY2x1ZGUgX21hdC1zbGlkZXItaW5uZXItY29udGVudC10aGVtZSgkcHJpbWFyeSk7XG4gIH1cblxuICAubWF0LWFjY2VudCB7XG4gICAgQGluY2x1ZGUgX21hdC1zbGlkZXItaW5uZXItY29udGVudC10aGVtZSgkYWNjZW50KTtcbiAgfVxuXG4gIC5tYXQtd2FybiB7XG4gICAgQGluY2x1ZGUgX21hdC1zbGlkZXItaW5uZXItY29udGVudC10aGVtZSgkd2Fybik7XG4gIH1cblxuICAubWF0LXNsaWRlci1mb2N1cy1yaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWF0LXNsaWRlci1mb2N1cy1yaW5nLWNvbG9yO1xuICB9XG5cbiAgLm1hdC1zbGlkZXI6aG92ZXIsXG4gIC5jZGstZm9jdXNlZCB7XG4gICAgLm1hdC1zbGlkZXItdHJhY2stYmFja2dyb3VuZCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWF0LXNsaWRlci1vZmYtZm9jdXNlZC1jb2xvcjtcbiAgICB9XG4gIH1cblxuICAubWF0LXNsaWRlci1kaXNhYmxlZCB7XG4gICAgLm1hdC1zbGlkZXItdHJhY2stYmFja2dyb3VuZCxcbiAgICAubWF0LXNsaWRlci10cmFjay1maWxsLFxuICAgIC5tYXQtc2xpZGVyLXRodW1iIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYXQtc2xpZGVyLWRpc2FibGVkLWNvbG9yO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgLm1hdC1zbGlkZXItdHJhY2stYmFja2dyb3VuZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYXQtc2xpZGVyLWRpc2FibGVkLWNvbG9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tYXQtc2xpZGVyLW1pbi12YWx1ZSB7XG4gICAgLm1hdC1zbGlkZXItZm9jdXMtcmluZyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWF0LXNsaWRlci1mb2N1cy1yaW5nLW1pbi12YWx1ZS1jb2xvcjtcbiAgICB9XG5cbiAgICAmLm1hdC1zbGlkZXItdGh1bWItbGFiZWwtc2hvd2luZyB7XG4gICAgICAubWF0LXNsaWRlci10aHVtYixcbiAgICAgIC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1hdC1zbGlkZXItbGFiZWxlZC1taW4tdmFsdWUtdGh1bWItY29sb3I7XG4gICAgICB9XG5cbiAgICAgICYuY2RrLWZvY3VzZWQge1xuICAgICAgICAubWF0LXNsaWRlci10aHVtYixcbiAgICAgICAgLm1hdC1zbGlkZXItdGh1bWItbGFiZWwge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYXQtc2xpZGVyLWxhYmVsZWQtbWluLXZhbHVlLXRodW1iLWxhYmVsLWNvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJjpub3QoLm1hdC1zbGlkZXItdGh1bWItbGFiZWwtc2hvd2luZykge1xuICAgICAgLm1hdC1zbGlkZXItdGh1bWIge1xuICAgICAgICBib3JkZXItY29sb3I6ICRtYXQtc2xpZGVyLW9mZi1jb2xvcjtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIsXG4gICAgICAmLmNkay1mb2N1c2VkIHtcbiAgICAgICAgLm1hdC1zbGlkZXItdGh1bWIge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogJG1hdC1zbGlkZXItb2ZmLWZvY3VzZWQtY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICAmLm1hdC1zbGlkZXItZGlzYWJsZWQgLm1hdC1zbGlkZXItdGh1bWIge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogJG1hdC1zbGlkZXItZGlzYWJsZWQtY29sb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAubWF0LXNsaWRlci1oYXMtdGlja3MgLm1hdC1zbGlkZXItd3JhcHBlcjo6YWZ0ZXIge1xuICAgIGJvcmRlci1jb2xvcjogJG1hdC1zbGlkZXItdGljay1jb2xvcjtcbiAgfVxuXG4gIC5tYXQtc2xpZGVyLWhvcml6b250YWwgLm1hdC1zbGlkZXItdGlja3Mge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRtYXQtc2xpZGVyLXRpY2stY29sb3IsXG4gICAgICAgICRtYXQtc2xpZGVyLXRpY2stY29sb3IgJG1hdC1zbGlkZXItdGljay1zaXplLCB0cmFuc3BhcmVudCAwLCB0cmFuc3BhcmVudCk7XG4gICAgLy8gRmlyZWZveCBkb2Vzbid0IGRyYXcgdGhlIGdyYWRpZW50IGNvcnJlY3RseSB3aXRoICd0byByaWdodCdcbiAgICAvLyAoc2VlIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTEzMTQzMTkpLlxuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgwLjAwMDFkZWcsICRtYXQtc2xpZGVyLXRpY2stY29sb3IsXG4gICAgICAgICRtYXQtc2xpZGVyLXRpY2stY29sb3IgJG1hdC1zbGlkZXItdGljay1zaXplLCB0cmFuc3BhcmVudCAwLCB0cmFuc3BhcmVudCk7XG4gIH1cblxuICAubWF0LXNsaWRlci12ZXJ0aWNhbCAubWF0LXNsaWRlci10aWNrcyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICRtYXQtc2xpZGVyLXRpY2stY29sb3IsXG4gICAgICAgICRtYXQtc2xpZGVyLXRpY2stY29sb3IgJG1hdC1zbGlkZXItdGljay1zaXplLCB0cmFuc3BhcmVudCAwLCB0cmFuc3BhcmVudCk7XG4gIH1cbn1cblxuQG1peGluIG1hdC1zbGlkZXItdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXRleHQge1xuICAgIGZvbnQ6IHtcbiAgICAgIGZhbWlseTogbWF0LWZvbnQtZmFtaWx5KCRjb25maWcpO1xuICAgICAgc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBjYXB0aW9uKTtcbiAgICAgIHdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIGJvZHktMik7XG4gICAgfVxuICB9XG59XG5cblxuXG5cblxuQG1peGluIG1hdC1zdGVwcGVyLXRoZW1lKCR0aGVtZSkge1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuICAkYmFja2dyb3VuZDogbWFwLWdldCgkdGhlbWUsIGJhY2tncm91bmQpO1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkd2FybjogbWFwLWdldCgkdGhlbWUsIHdhcm4pO1xuXG4gIC5tYXQtc3RlcC1oZWFkZXIge1xuICAgICYuY2RrLWtleWJvYXJkLWZvY3VzZWQsXG4gICAgJi5jZGstcHJvZ3JhbS1mb2N1c2VkLFxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBob3Zlcik7XG4gICAgfVxuXG4gICAgLy8gT24gdG91Y2ggZGV2aWNlcyB0aGUgOmhvdmVyIHN0YXRlIHdpbGwgbGluZ2VyIG9uIHRoZSBlbGVtZW50IGFmdGVyIGEgdGFwLlxuICAgIC8vIFJlc2V0IGl0IHZpYSBgQG1lZGlhYCBhZnRlciB0aGUgZGVjbGFyYXRpb24sIGJlY2F1c2UgdGhlIG1lZGlhIHF1ZXJ5IGlzbid0XG4gICAgLy8gc3VwcG9ydGVkIGJ5IGFsbCBicm93c2VycyB5ZXQuXG4gICAgQG1lZGlhIChob3Zlcjogbm9uZSkge1xuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm1hdC1zdGVwLWxhYmVsLFxuICAgIC5tYXQtc3RlcC1vcHRpb25hbCB7XG4gICAgICAvLyBUT0RPKGpvc2VwaHBlcnJvdHQpOiBVcGRhdGUgdG8gdXNpbmcgYSBjb3JyZWN0ZWQgZGlzYWJsZWQtdGV4dCBjb250cmFzdFxuICAgICAgLy8gaW5zdGVhZCBvZiBzZWNvbmRhcnktdGV4dC5cbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNlY29uZGFyeS10ZXh0KTtcbiAgICB9XG5cbiAgICAubWF0LXN0ZXAtaWNvbiB7XG4gICAgICAvLyBUT0RPKGpvc2VwaHBlcnJvdHQpOiBVcGRhdGUgdG8gdXNpbmcgYSBjb3JyZWN0ZWQgZGlzYWJsZWQtdGV4dCBjb250cmFzdFxuICAgICAgLy8gaW5zdGVhZCBvZiBzZWNvbmRhcnktdGV4dC5cbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQpO1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkcHJpbWFyeSwgZGVmYXVsdC1jb250cmFzdCk7XG4gICAgfVxuXG4gICAgLm1hdC1zdGVwLWljb24tc2VsZWN0ZWQsXG4gICAgLm1hdC1zdGVwLWljb24tc3RhdGUtZG9uZSxcbiAgICAubWF0LXN0ZXAtaWNvbi1zdGF0ZS1lZGl0IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkcHJpbWFyeSk7XG4gICAgICBjb2xvcjogbWF0LWNvbG9yKCRwcmltYXJ5LCBkZWZhdWx0LWNvbnRyYXN0KTtcbiAgICB9XG5cbiAgICAubWF0LXN0ZXAtaWNvbi1zdGF0ZS1lcnJvciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJHdhcm4pO1xuICAgIH1cblxuICAgIC5tYXQtc3RlcC1sYWJlbC5tYXQtc3RlcC1sYWJlbC1hY3RpdmUge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG4gICAgfVxuXG4gICAgLm1hdC1zdGVwLWxhYmVsLm1hdC1zdGVwLWxhYmVsLWVycm9yIHtcbiAgICAgIGNvbG9yOiBtYXQtY29sb3IoJHdhcm4pO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtc3RlcHBlci1ob3Jpem9udGFsLCAubWF0LXN0ZXBwZXItdmVydGljYWwge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgY2FyZCk7XG4gIH1cblxuICAubWF0LXN0ZXBwZXItdmVydGljYWwtbGluZTo6YmVmb3JlIHtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXZpZGVyKTtcbiAgfVxuXG4gIC5tYXQtaG9yaXpvbnRhbC1zdGVwcGVyLWhlYWRlcjo6YmVmb3JlLFxuICAubWF0LWhvcml6b250YWwtc3RlcHBlci1oZWFkZXI6OmFmdGVyLFxuICAubWF0LXN0ZXBwZXItaG9yaXpvbnRhbC1saW5lIHtcbiAgICBib3JkZXItdG9wLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpdmlkZXIpO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtc3RlcHBlci10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1zdGVwcGVyLXZlcnRpY2FsLCAubWF0LXN0ZXBwZXItaG9yaXpvbnRhbCB7XG4gICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgfVxuXG4gIC5tYXQtc3RlcC1sYWJlbCB7XG4gICAgZm9udDoge1xuICAgICAgc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBib2R5LTEpO1xuICAgICAgd2VpZ2h0OiBtYXQtZm9udC13ZWlnaHQoJGNvbmZpZywgYm9keS0xKTtcbiAgICB9O1xuICB9XG5cbiAgLm1hdC1zdGVwLXN1Yi1sYWJlbC1lcnJvciB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgfVxuXG4gIC5tYXQtc3RlcC1sYWJlbC1lcnJvciB7XG4gICAgZm9udC1zaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIGJvZHktMik7XG4gIH1cblxuICAubWF0LXN0ZXAtbGFiZWwtc2VsZWN0ZWQge1xuICAgIGZvbnQ6IHtcbiAgICAgIHNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgYm9keS0yKTtcbiAgICAgIHdlaWdodDogbWF0LWZvbnQtd2VpZ2h0KCRjb25maWcsIGJvZHktMik7XG4gICAgfTtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LXNvcnQtdGhlbWUoJHRoZW1lKSB7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC1zb3J0LWhlYWRlci1hcnJvdyB7XG4gICAgLy8gQmVjYXVzZSB0aGUgYXJyb3cgaXMgbWFkZSB1cCBvZiBtdWx0aXBsZSBlbGVtZW50cyB0aGF0IGFyZSBzdGFja2VkIG9uIHRvcCBvZiBlYWNoIG90aGVyLFxuICAgIC8vIHdlIGNhbid0IHVzZSB0aGUgc2VtaS10cmFzcGFyZW50IGNvbG9yIGZyb20gdGhlIHRoZW1lIGRpcmVjdGx5LiBXZSBjb252ZXJ0IGl0IGludG8gYSBzb2xpZFxuICAgIC8vIGNvbG9yIGJ5IHRha2luZyB0aGUgb3BhY2l0eSBmcm9tIHRoZSByZ2JhIHZhbHVlIGFuZCB1c2luZyB0aGUgdmFsdWUgdG8gZGV0ZXJtaW5lIHRoZVxuICAgIC8vIHBlcmNlbnRhZ2Ugb2YgdGhlIGJhY2tncm91bmQgdG8gcHV0IGludG8gZm9yZWdyb3VuZCB3aGVuIG1peGluZyB0aGUgY29sb3JzIHRvZ2V0aGVyLlxuICAgICR0YWJsZS1iYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsICdjYXJkJyk7XG4gICAgJHRleHQtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQpO1xuICAgICR0ZXh0LW9wYWNpdHk6IG9wYWNpdHkoJHRleHQtY29sb3IpO1xuICAgIGNvbG9yOiBtaXgoJHRhYmxlLWJhY2tncm91bmQsIHJnYmEoJHRleHQtY29sb3IsIDEpLCAoMSAtICR0ZXh0LW9wYWNpdHkpICogMTAwJSk7XG4gIH1cbn1cblxuQG1peGluIG1hdC1zb3J0LXR5cG9ncmFwaHkoJGNvbmZpZykgeyB9XG5cblxuXG5cblxuQG1peGluIG1hdC10YWJzLXRoZW1lKCR0aGVtZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcbiAgJGhlYWRlci1ib3JkZXI6IDFweCBzb2xpZCBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpdmlkZXIpO1xuXG4gIC5tYXQtdGFiLW5hdi1iYXIsXG4gIC5tYXQtdGFiLWhlYWRlciB7XG4gICAgYm9yZGVyLWJvdHRvbTogJGhlYWRlci1ib3JkZXI7XG4gIH1cblxuICAubWF0LXRhYi1ncm91cC1pbnZlcnRlZC1oZWFkZXIge1xuICAgIC5tYXQtdGFiLW5hdi1iYXIsXG4gICAgLm1hdC10YWItaGVhZGVyIHtcbiAgICAgIGJvcmRlci10b3A6ICRoZWFkZXItYm9yZGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAubWF0LXRhYi1sYWJlbCwgLm1hdC10YWItbGluayB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG5cbiAgICAmLm1hdC10YWItZGlzYWJsZWQge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGlzYWJsZWQtdGV4dCk7XG4gICAgfVxuICB9XG5cbiAgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiB7XG4gICAgYm9yZGVyLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHRleHQpO1xuICB9XG5cbiAgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tZGlzYWJsZWQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiB7XG4gICAgYm9yZGVyLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkLXRleHQpO1xuICB9XG5cbiAgLy8gUmVtb3ZlIGhlYWRlciBib3JkZXIgd2hlbiB0aGVyZSBpcyBhIGJhY2tncm91bmQgY29sb3JcbiAgLm1hdC10YWItZ3JvdXBbY2xhc3MqPSdtYXQtYmFja2dyb3VuZC0nXSAubWF0LXRhYi1oZWFkZXIsXG4gIC5tYXQtdGFiLW5hdi1iYXJbY2xhc3MqPSdtYXQtYmFja2dyb3VuZC0nXSB7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICBib3JkZXItdG9wOiBub25lO1xuICB9XG5cbiAgLm1hdC10YWItZ3JvdXAsIC5tYXQtdGFiLW5hdi1iYXIge1xuICAgICR0aGVtZS1jb2xvcnM6IChcbiAgICAgIHByaW1hcnk6ICRwcmltYXJ5LFxuICAgICAgYWNjZW50OiAkYWNjZW50LFxuICAgICAgd2FybjogJHdhcm5cbiAgICApO1xuXG4gICAgQGVhY2ggJG5hbWUsICRjb2xvciBpbiAkdGhlbWUtY29sb3JzIHtcbiAgICAgIC8vIFNldCB0aGUgZm9yZWdyb3VuZCBjb2xvciBvZiB0aGUgdGFic1xuICAgICAgJi5tYXQtI3skbmFtZX0ge1xuICAgICAgICBAaW5jbHVkZSBfbWF0LXRhYi1sYWJlbC1mb2N1cygkY29sb3IpO1xuICAgICAgICBAaW5jbHVkZSBfbWF0LWluay1iYXIoJGNvbG9yKTtcblxuICAgICAgICAvLyBPdmVycmlkZSBpbmsgYmFyIHdoZW4gYmFja2dyb3VuZCBjb2xvciBpcyB0aGUgc2FtZVxuICAgICAgICAmLm1hdC1iYWNrZ3JvdW5kLSN7JG5hbWV9IHtcbiAgICAgICAgICBAaW5jbHVkZSBfbWF0LWluay1iYXIoJGNvbG9yLCBkZWZhdWx0LWNvbnRyYXN0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIEBlYWNoICRuYW1lLCAkY29sb3IgaW4gJHRoZW1lLWNvbG9ycyB7XG4gICAgICAvLyBTZXQgYmFja2dyb3VuZCBjb2xvciBvZiB0aGUgdGFicyBhbmQgb3ZlcnJpZGUgZm9jdXMgY29sb3JcbiAgICAgICYubWF0LWJhY2tncm91bmQtI3skbmFtZX0ge1xuICAgICAgICBAaW5jbHVkZSBfbWF0LXRhYi1sYWJlbC1mb2N1cygkY29sb3IpO1xuICAgICAgICBAaW5jbHVkZSBfbWF0LXRhYnMtYmFja2dyb3VuZCgkY29sb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gX21hdC1pbmstYmFyKCRjb2xvciwgJGh1ZTogZGVmYXVsdCkge1xuICAubWF0LWluay1iYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkY29sb3IsICRodWUpO1xuICB9XG59XG5cbkBtaXhpbiBfbWF0LXRhYi1sYWJlbC1mb2N1cygkdGFiLWZvY3VzLWNvbG9yKSB7XG4gIC5tYXQtdGFiLWxhYmVsLFxuICAubWF0LXRhYi1saW5rIHtcbiAgICAmLmNkay1rZXlib2FyZC1mb2N1c2VkLFxuICAgICYuY2RrLXByb2dyYW0tZm9jdXNlZCB7XG4gICAgICAmOm5vdCgubWF0LXRhYi1kaXNhYmxlZCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXQtY29sb3IoJHRhYi1mb2N1cy1jb2xvciwgbGlnaHRlciwgMC4zKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1peGluIF9tYXQtdGFicy1iYWNrZ3JvdW5kKCRiYWNrZ3JvdW5kLWNvbG9yKSB7XG4gIC8vIFNldCBiYWNrZ3JvdW5kIGNvbG9yIGZvciB0aGUgdGFiIGdyb3VwXG4gIC5tYXQtdGFiLWhlYWRlciwgLm1hdC10YWItbGlua3Mge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZC1jb2xvcik7XG4gIH1cblxuICAvLyBTZXQgbGFiZWxzIHRvIGNvbnRyYXN0IGFnYWluc3QgYmFja2dyb3VuZFxuICAubWF0LXRhYi1sYWJlbCwgLm1hdC10YWItbGluayB7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZC1jb2xvciwgZGVmYXVsdC1jb250cmFzdCk7XG5cbiAgICAmLm1hdC10YWItZGlzYWJsZWQge1xuICAgICAgY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZC1jb2xvciwgZGVmYXVsdC1jb250cmFzdCwgMC40KTtcbiAgICB9XG4gIH1cblxuICAvLyBTZXQgcGFnaW5hdGlvbiBjaGV2cm9ucyB0byBjb250cmFzdCBiYWNrZ3JvdW5kXG4gIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24ge1xuICAgIGJvcmRlci1jb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLWNvbG9yLCBkZWZhdWx0LWNvbnRyYXN0KTtcbiAgfVxuXG4gIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWRpc2FibGVkIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24ge1xuICAgIGJvcmRlci1jb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLWNvbG9yLCBkZWZhdWx0LWNvbnRyYXN0LCAwLjQpO1xuICB9XG5cbiAgLy8gU2V0IHJpcHBsZXMgY29sb3IgdG8gYmUgdGhlIGNvbnRyYXN0IGNvbG9yIG9mIHRoZSBuZXcgYmFja2dyb3VuZC4gT3RoZXJ3aXNlIHRoZSByaXBwbGVcbiAgLy8gY29sb3Igd2lsbCBiZSBiYXNlZCBvbiB0aGUgYXBwIGJhY2tncm91bmQgY29sb3IuXG4gIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkYmFja2dyb3VuZC1jb2xvciwgZGVmYXVsdC1jb250cmFzdCwgMC4xMik7XG4gIH1cbn1cblxuQG1peGluIG1hdC10YWJzLXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAubWF0LXRhYi1ncm91cCB7XG4gICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgfVxuXG4gIC5tYXQtdGFiLWxhYmVsLCAubWF0LXRhYi1saW5rIHtcbiAgICBmb250OiB7XG4gICAgICBmYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnLCBidXR0b24pO1xuICAgICAgc2l6ZTogbWF0LWZvbnQtc2l6ZSgkY29uZmlnLCBidXR0b24pO1xuICAgICAgd2VpZ2h0OiBtYXQtZm9udC13ZWlnaHQoJGNvbmZpZywgYnV0dG9uKTtcbiAgICB9XG4gIH1cbn1cblxuXG5cblxuXG5cbkBtaXhpbiBfbWF0LXRvb2xiYXItY29sb3IoJHBhbGV0dGUpIHtcbiAgYmFja2dyb3VuZDogbWF0LWNvbG9yKCRwYWxldHRlKTtcbiAgY29sb3I6IG1hdC1jb2xvcigkcGFsZXR0ZSwgZGVmYXVsdC1jb250cmFzdCk7XG59XG5cbkBtaXhpbiBfbWF0LXRvb2xiYXItZm9ybS1maWVsZC1vdmVycmlkZXMge1xuICAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lLFxuICAubWF0LWZvcm0tZmllbGQtcmlwcGxlLFxuICAubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLFxuICAubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLFxuICAubWF0LXNlbGVjdC12YWx1ZSxcbiAgLm1hdC1zZWxlY3QtYXJyb3csXG4gIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LXNlbGVjdC1hcnJvdyB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gIH1cblxuICAubWF0LWlucHV0LWVsZW1lbnQge1xuICAgIGNhcmV0LWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIH1cbn1cblxuQG1peGluIG1hdC10b29sYmFyLXRoZW1lKCR0aGVtZSkge1xuICAkcHJpbWFyeTogbWFwLWdldCgkdGhlbWUsIHByaW1hcnkpO1xuICAkYWNjZW50OiBtYXAtZ2V0KCR0aGVtZSwgYWNjZW50KTtcbiAgJHdhcm46IG1hcC1nZXQoJHRoZW1lLCB3YXJuKTtcbiAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgJGZvcmVncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBmb3JlZ3JvdW5kKTtcblxuICAubWF0LXRvb2xiYXIge1xuICAgIGJhY2tncm91bmQ6IG1hdC1jb2xvcigkYmFja2dyb3VuZCwgYXBwLWJhcik7XG4gICAgY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgdGV4dCk7XG5cbiAgICAmLm1hdC1wcmltYXJ5IHtcbiAgICAgIEBpbmNsdWRlIF9tYXQtdG9vbGJhci1jb2xvcigkcHJpbWFyeSk7XG4gICAgfVxuXG4gICAgJi5tYXQtYWNjZW50IHtcbiAgICAgIEBpbmNsdWRlIF9tYXQtdG9vbGJhci1jb2xvcigkYWNjZW50KTtcbiAgICB9XG5cbiAgICAmLm1hdC13YXJuIHtcbiAgICAgIEBpbmNsdWRlIF9tYXQtdG9vbGJhci1jb2xvcigkd2Fybik7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgX21hdC10b29sYmFyLWZvcm0tZmllbGQtb3ZlcnJpZGVzO1xuICB9XG59XG5cbkBtaXhpbiBtYXQtdG9vbGJhci10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC10b29sYmFyLFxuICAubWF0LXRvb2xiYXIgaDEsXG4gIC5tYXQtdG9vbGJhciBoMixcbiAgLm1hdC10b29sYmFyIGgzLFxuICAubWF0LXRvb2xiYXIgaDQsXG4gIC5tYXQtdG9vbGJhciBoNSxcbiAgLm1hdC10b29sYmFyIGg2IHtcbiAgICBAaW5jbHVkZSBtYXQtdHlwb2dyYXBoeS1sZXZlbC10by1zdHlsZXMoJGNvbmZpZywgdGl0bGUpO1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuXG5cblxuXG5cbiRtYXQtdG9vbHRpcC10YXJnZXQtaGVpZ2h0OiAyMnB4O1xuJG1hdC10b29sdGlwLWZvbnQtc2l6ZTogMTBweDtcbiRtYXQtdG9vbHRpcC12ZXJ0aWNhbC1wYWRkaW5nOiAoJG1hdC10b29sdGlwLXRhcmdldC1oZWlnaHQgLSAkbWF0LXRvb2x0aXAtZm9udC1zaXplKSAvIDI7XG5cbiRtYXQtdG9vbHRpcC1oYW5kc2V0LXRhcmdldC1oZWlnaHQ6IDMwcHg7XG4kbWF0LXRvb2x0aXAtaGFuZHNldC1mb250LXNpemU6IDE0cHg7XG4kbWF0LXRvb2x0aXAtaGFuZHNldC12ZXJ0aWNhbC1wYWRkaW5nOlxuICAgICgkbWF0LXRvb2x0aXAtaGFuZHNldC10YXJnZXQtaGVpZ2h0IC0gJG1hdC10b29sdGlwLWhhbmRzZXQtZm9udC1zaXplKSAvIDI7XG5cbkBtaXhpbiBtYXQtdG9vbHRpcC10aGVtZSgkdGhlbWUpIHtcbiAgLm1hdC10b29sdGlwIHtcbiAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJG1hdC1ncmV5LCA3MDAsIDAuOSk7XG4gIH1cbn1cblxuQG1peGluIG1hdC10b29sdGlwLXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAubWF0LXRvb2x0aXAge1xuICAgIGZvbnQtZmFtaWx5OiBtYXQtZm9udC1mYW1pbHkoJGNvbmZpZyk7XG4gICAgZm9udC1zaXplOiAkbWF0LXRvb2x0aXAtZm9udC1zaXplO1xuICAgIHBhZGRpbmctdG9wOiAkbWF0LXRvb2x0aXAtdmVydGljYWwtcGFkZGluZztcbiAgICBwYWRkaW5nLWJvdHRvbTogJG1hdC10b29sdGlwLXZlcnRpY2FsLXBhZGRpbmc7XG4gIH1cblxuICAubWF0LXRvb2x0aXAtaGFuZHNldCB7XG4gICAgZm9udC1zaXplOiAkbWF0LXRvb2x0aXAtaGFuZHNldC1mb250LXNpemU7XG4gICAgcGFkZGluZy10b3A6ICRtYXQtdG9vbHRpcC1oYW5kc2V0LXZlcnRpY2FsLXBhZGRpbmc7XG4gICAgcGFkZGluZy1ib3R0b206ICRtYXQtdG9vbHRpcC1oYW5kc2V0LXZlcnRpY2FsLXBhZGRpbmc7XG4gIH1cbn1cblxuXG5cblxuXG5AbWl4aW4gbWF0LXNuYWNrLWJhci10aGVtZSgkdGhlbWUpIHtcbiAgJGlzLWRhcmstdGhlbWU6IG1hcC1nZXQoJHRoZW1lLCBpcy1kYXJrKTtcbiAgJGFjY2VudDogbWFwLWdldCgkdGhlbWUsIGFjY2VudCk7XG5cbiAgLm1hdC1zbmFjay1iYXItY29udGFpbmVyIHtcbiAgICAvLyBVc2UgdGhlIHByaW1hcnkgdGV4dCBvbiB0aGUgZGFyayB0aGVtZSwgZXZlbiB0aG91Z2ggdGhlIGxpZ2h0ZXIgb25lIHVzZXNcbiAgICAvLyBhIHNlY29uZGFyeSwgYmVjYXVzZSB0aGUgY29udHJhc3Qgb24gdGhlIGxpZ2h0IHByaW1hcnkgdGV4dCBpcyBwb29yLlxuICAgIGNvbG9yOiBpZigkaXMtZGFyay10aGVtZSwgJGRhcmstcHJpbWFyeS10ZXh0LCAkbGlnaHQtc2Vjb25kYXJ5LXRleHQpO1xuICAgIGJhY2tncm91bmQ6IGlmKCRpcy1kYXJrLXRoZW1lLCBtYXAtZ2V0KCRtYXQtZ3JleSwgNTApLCAjMzIzMjMyKTtcblxuICAgIEBpbmNsdWRlIF9tYXQtdGhlbWUtZWxldmF0aW9uKDYsICR0aGVtZSk7XG4gIH1cblxuICAubWF0LXNpbXBsZS1zbmFja2Jhci1hY3Rpb24ge1xuICAgIGNvbG9yOiBpZigkaXMtZGFyay10aGVtZSwgaW5oZXJpdCwgbWF0LWNvbG9yKCRhY2NlbnQpKTtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LXNuYWNrLWJhci10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLm1hdC1zaW1wbGUtc25hY2tiYXIge1xuICAgIGZvbnQ6IHtcbiAgICAgIGZhbWlseTogbWF0LWZvbnQtZmFtaWx5KCRjb25maWcsIGJvZHktMSk7XG4gICAgICBzaXplOiBtYXQtZm9udC1zaXplKCRjb25maWcsIGJvZHktMSk7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1zaW1wbGUtc25hY2tiYXItYWN0aW9uIHtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBmb250OiB7XG4gICAgICBmYW1pbHk6IGluaGVyaXQ7XG4gICAgICBzaXplOiBpbmhlcml0O1xuICAgICAgd2VpZ2h0OiBtYXQtZm9udC13ZWlnaHQoJGNvbmZpZywgYnV0dG9uKTtcbiAgICB9XG4gIH1cbn1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBUaGVtZSBzdHlsZXMgdGhhdCBvbmx5IGFwcGx5IHRvIHRoZSBmaWxsIGFwcGVhcmFuY2Ugb2YgdGhlIGZvcm0tZmllbGQuXG5cbkBtaXhpbiBtYXQtZm9ybS1maWVsZC1maWxsLXRoZW1lKCR0aGVtZSkge1xuICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuICAkaXMtZGFyay10aGVtZTogbWFwLWdldCgkdGhlbWUsIGlzLWRhcmspO1xuXG4gICRmaWxsLWJhY2tncm91bmQ6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgYmFzZSwgaWYoJGlzLWRhcmstdGhlbWUsIDAuMSwgMC4wNCkpO1xuICAkZmlsbC1kaXNhYmxlZC1iYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGJhc2UsIGlmKCRpcy1kYXJrLXRoZW1lLCAwLjA1LCAwLjAyKSk7XG4gICR1bmRlcmxpbmUtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGl2aWRlciwgaWYoJGlzLWRhcmstdGhlbWUsIDAuNSwgMC40MikpO1xuICAkbGFiZWwtZGlzYWJsZWQtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGlzYWJsZWQtdGV4dCk7XG5cbiAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbCB7XG4gICAgLm1hdC1mb3JtLWZpZWxkLWZsZXgge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGZpbGwtYmFja2dyb3VuZDtcbiAgICB9XG5cbiAgICAmLm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC1mbGV4IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRmaWxsLWRpc2FibGVkLWJhY2tncm91bmQ7XG4gICAgfVxuXG4gICAgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZTo6YmVmb3JlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR1bmRlcmxpbmUtY29sb3I7XG4gICAgfVxuXG4gICAgJi5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCB7XG4gICAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgICBjb2xvcjogJGxhYmVsLWRpc2FibGVkLWNvbG9yO1xuICAgICAgfVxuXG4gICAgICAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lOjpiZWZvcmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gVXNlZCB0byBtYWtlIGluc3RhbmNlcyBvZiB0aGUgX21hdC1mb3JtLWZpZWxkLWxhYmVsLWZsb2F0aW5nIG1peGluIG5lZ2xpZ2libHkgZGlmZmVyZW50LFxuLy8gYW5kIHByZXZlbnQgR29vZ2xlJ3MgQ1NTIE9wdGltaXplciBmcm9tIGNvbGxhcHNpbmcgdGhlIGRlY2xhcmF0aW9ucy4gVGhpcyBpcyBuZWVkZWQgYmVjYXVzZSBzb21lXG4vLyBvZiB0aGUgc2VsZWN0b3JzIGNvbnRhaW4gcHNldWRvLWNsYXNzZXMgbm90IHJlY29nbml6ZWQgaW4gYWxsIGJyb3dzZXJzLiBJZiBhIGJyb3dzZXIgZW5jb3VudGVyc1xuLy8gYW4gdW5rbm93biBwc2V1ZG8tY2xhc3MgaXQgd2lsbCBkaXNjYXJkIHRoZSBlbnRpcmUgcnVsZSBzZXQuXG4kbWF0LWZvcm0tZmllbGQtZmlsbC1kZWR1cGU6IDA7XG5cbi8vIEFwcGxpZXMgYSBmbG9hdGluZyBsYWJlbCBhYm92ZSB0aGUgZm9ybSBmaWVsZCBjb250cm9sIGl0c2VsZi5cbkBtaXhpbiBfbWF0LWZvcm0tZmllbGQtZmlsbC1sYWJlbC1mbG9hdGluZygkZm9udC1zY2FsZSwgJGluZml4LXBhZGRpbmcsICRpbmZpeC1tYXJnaW4tdG9wKSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJGluZml4LW1hcmdpbi10b3AgLSAkaW5maXgtcGFkZGluZyArICRtYXQtZm9ybS1maWVsZC1maWxsLWRlZHVwZSlcbiAgICAgICAgICAgICBzY2FsZSgkZm9udC1zY2FsZSk7XG4gIHdpZHRoOiAxMDAlIC8gJGZvbnQtc2NhbGUgKyAkbWF0LWZvcm0tZmllbGQtZmlsbC1kZWR1cGU7XG5cbiAgJG1hdC1mb3JtLWZpZWxkLWZpbGwtZGVkdXBlOiAkbWF0LWZvcm0tZmllbGQtZmlsbC1kZWR1cGUgKyAwLjAwMDAxICFnbG9iYWw7XG59XG5cbkBtaXhpbiBtYXQtZm9ybS1maWVsZC1maWxsLXR5cG9ncmFwaHkoJGNvbmZpZykge1xuICAvLyBUaGUgdW5pdC1sZXNzIGxpbmUtaGVpZ2h0IGZyb20gdGhlIGZvbnQgY29uZmlnLlxuICAkbGluZS1oZWlnaHQ6IG1hdC1saW5lLWhlaWdodCgkY29uZmlnLCBpbnB1dCk7XG4gIC8vIFRoZSBhbW91bnQgdG8gc2NhbGUgdGhlIGZvbnQgZm9yIHRoZSBmbG9hdGluZyBsYWJlbCBhbmQgc3Vic2NyaXB0LlxuICAkc3Vic2NyaXB0LWZvbnQtc2NhbGU6IDAuNzU7XG4gIC8vIFRoZSBwYWRkaW5nIG9uIHRvcCBvZiB0aGUgaW5maXguXG4gICRpbmZpeC1wYWRkaW5nLXRvcDogMC4yNWVtO1xuICAvLyBUaGUgcGFkZGluZyBiZWxvdyB0aGUgaW5maXguXG4gICRpbmZpeC1wYWRkaW5nLWJvdHRvbTogMC43NWVtO1xuICAvLyBUaGUgbWFyZ2luIGFwcGxpZWQgdG8gdGhlIGZvcm0tZmllbGQtaW5maXggdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgdGhlIGZsb2F0aW5nIGxhYmVsLlxuICAkaW5maXgtbWFyZ2luLXRvcDogMWVtICogJGxpbmUtaGVpZ2h0ICogJHN1YnNjcmlwdC1mb250LXNjYWxlO1xuICAvLyBUaGUgYW1vdW50IHdlIG9mZnNldCB0aGUgbGFiZWwgZnJvbSB0aGUgaW5wdXQgdGV4dCBpbiB0aGUgZmlsbCBhcHBlYXJhbmNlLlxuICAkZmlsbC1hcHBlYXJhbmNlLWxhYmVsLW9mZnNldDogLTAuNWVtO1xuXG4gIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWZpbGwge1xuICAgIC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XG4gICAgICBwYWRkaW5nOiAkaW5maXgtcGFkZGluZy10b3AgMCAkaW5maXgtcGFkZGluZy1ib3R0b20gMDtcbiAgICB9XG5cbiAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgdG9wOiAkaW5maXgtbWFyZ2luLXRvcCArICRpbmZpeC1wYWRkaW5nLXRvcDtcbiAgICAgIG1hcmdpbi10b3A6ICRmaWxsLWFwcGVhcmFuY2UtbGFiZWwtb2Zmc2V0O1xuICAgIH1cblxuICAgICYubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IHtcbiAgICAgICYubWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1sYWJlbCxcbiAgICAgIC5tYXQtaW5wdXQtc2VydmVyOmZvY3VzICsgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgICAgICAgQGluY2x1ZGUgX21hdC1mb3JtLWZpZWxkLWZpbGwtbGFiZWwtZmxvYXRpbmcoXG4gICAgICAgICAgICAgICAgJHN1YnNjcmlwdC1mb250LXNjYWxlLCAkaW5maXgtcGFkZGluZy10b3AgKyAkZmlsbC1hcHBlYXJhbmNlLWxhYmVsLW9mZnNldCxcbiAgICAgICAgICAgICAgICAkaW5maXgtbWFyZ2luLXRvcCk7XG4gICAgICB9XG5cbiAgICAgIC8vIFNlcnZlci1zaWRlIHJlbmRlcmVkIG1hdElucHV0IHdpdGggYSBsYWJlbCBhdHRyaWJ1dGUgYnV0IGxhYmVsIG5vdCBzaG93blxuICAgICAgLy8gKHVzZWQgYXMgYSBwdXJlIENTUyBzdGFuZC1pbiBmb3IgbWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0KS5cbiAgICAgIC5tYXQtaW5wdXQtc2VydmVyW2xhYmVsXTpub3QoOmxhYmVsLXNob3duKSArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyXG4gICAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgICBAaW5jbHVkZSBfbWF0LWZvcm0tZmllbGQtZmlsbC1sYWJlbC1mbG9hdGluZyhcbiAgICAgICAgICAgICAgICAkc3Vic2NyaXB0LWZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLXRvcCArICRmaWxsLWFwcGVhcmFuY2UtbGFiZWwtb2Zmc2V0LFxuICAgICAgICAgICAgICAgICRpbmZpeC1tYXJnaW4tdG9wKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG5cblxuXG5cblxuLy8gVGhlbWUgc3R5bGVzIHRoYXQgb25seSBhcHBseSB0byB0aGUgbGVnYWN5IGFwcGVhcmFuY2Ugb2YgdGhlIGZvcm0tZmllbGQuXG5cbkBtaXhpbiBtYXQtZm9ybS1maWVsZC1sZWdhY3ktdGhlbWUoJHRoZW1lKSB7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRpcy1kYXJrLXRoZW1lOiBtYXAtZ2V0KCR0aGVtZSwgaXMtZGFyayk7XG5cbiAgJGxhYmVsLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIHNlY29uZGFyeS10ZXh0KTtcbiAgJHVuZGVybGluZS1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXZpZGVyLCBpZigkaXMtZGFyay10aGVtZSwgMC43LCAwLjQyKSk7XG5cbiAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IHtcbiAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgY29sb3I6ICRsYWJlbC1jb2xvcjtcbiAgICB9XG5cbiAgICAubWF0LWhpbnQge1xuICAgICAgY29sb3I6ICRsYWJlbC1jb2xvcjtcbiAgICB9XG5cbiAgICAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR1bmRlcmxpbmUtY29sb3I7XG4gICAgfVxuXG4gICAgJi5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgICAgIEBpbmNsdWRlIG1hdC1jb250cm9sLWRpc2FibGVkLXVuZGVybGluZSgkdW5kZXJsaW5lLWNvbG9yKTtcbiAgICB9XG4gIH1cbn1cblxuLy8gVXNlZCB0byBtYWtlIGluc3RhbmNlcyBvZiB0aGUgX21hdC1mb3JtLWZpZWxkLWxhYmVsLWZsb2F0aW5nIG1peGluIG5lZ2xpZ2libHkgZGlmZmVyZW50LFxuLy8gYW5kIHByZXZlbnQgR29vZ2xlJ3MgQ1NTIE9wdGltaXplciBmcm9tIGNvbGxhcHNpbmcgdGhlIGRlY2xhcmF0aW9ucy4gVGhpcyBpcyBuZWVkZWQgYmVjYXVzZSBzb21lXG4vLyBvZiB0aGUgc2VsZWN0b3JzIGNvbnRhaW4gcHNldWRvLWNsYXNzZXMgbm90IHJlY29nbml6ZWQgaW4gYWxsIGJyb3dzZXJzLiBJZiBhIGJyb3dzZXIgZW5jb3VudGVyc1xuLy8gYW4gdW5rbm93biBwc2V1ZG8tY2xhc3MgaXQgd2lsbCBkaXNjYXJkIHRoZSBlbnRpcmUgcnVsZSBzZXQuXG4kbWF0LWZvcm0tZmllbGQtbGVnYWN5LWRlZHVwZTogMDtcblxuLy8gQXBwbGllcyBhIGZsb2F0aW5nIGxhYmVsIGFib3ZlIHRoZSBmb3JtIGZpZWxkIGNvbnRyb2wgaXRzZWxmLlxuQG1peGluIF9tYXQtZm9ybS1maWVsZC1sZWdhY3ktbGFiZWwtZmxvYXRpbmcoJGZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLCAkaW5maXgtbWFyZ2luLXRvcCkge1xuICAvLyBXZSB1c2UgcGVyc3BlY3RpdmUgdG8gZml4IHRoZSB0ZXh0IGJsdXJyaW5lc3MgYXMgZGVzY3JpYmVkIGhlcmU6XG4gIC8vIGh0dHA6Ly93d3cudXNlcmFnZW50bWFuLmNvbS9ibG9nLzIwMTQvMDUvMDQvZml4aW5nLXR5cG9ncmFwaHktaW5zaWRlLW9mLTItZC1jc3MtdHJhbnNmb3Jtcy9cbiAgLy8gVGhpcyByZXN1bHRzIGluIGEgc21hbGwgaml0dGVyIGFmdGVyIHRoZSBsYWJlbCBmbG9hdHMgb24gRmlyZWZveCwgd2hpY2ggdGhlXG4gIC8vIHRyYW5zbGF0ZVogZml4ZXMuXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJGluZml4LW1hcmdpbi10b3AgLSAkaW5maXgtcGFkZGluZykgc2NhbGUoJGZvbnQtc2NhbGUpIHBlcnNwZWN0aXZlKDEwMHB4KVxuICB0cmFuc2xhdGVaKDAuMDAxcHggKyAkbWF0LWZvcm0tZmllbGQtbGVnYWN5LWRlZHVwZSk7XG4gIC8vIFRoZSB0cmlja3MgYWJvdmUgdXNlZCB0byBzbW9vdGggb3V0IHRoZSBhbmltYXRpb24gb24gY2hyb21lIGFuZCBmaXJlZm94IGFjdHVhbGx5IG1ha2UgdGhpbmdzXG4gIC8vIHdvcnNlIG9uIElFLCBzbyB3ZSBkb24ndCBpbmNsdWRlIHRoZW0gaW4gdGhlIElFIHZlcnNpb24uXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLSRpbmZpeC1tYXJnaW4tdG9wIC0gJGluZml4LXBhZGRpbmcgKyAkbWF0LWZvcm0tZmllbGQtbGVnYWN5LWRlZHVwZSlcbiAgICAgICAgICAgICAgICAgIHNjYWxlKCRmb250LXNjYWxlKTtcblxuICB3aWR0aDogMTAwJSAvICRmb250LXNjYWxlICsgJG1hdC1mb3JtLWZpZWxkLWxlZ2FjeS1kZWR1cGU7XG5cbiAgJG1hdC1mb3JtLWZpZWxkLWxlZ2FjeS1kZWR1cGU6ICRtYXQtZm9ybS1maWVsZC1sZWdhY3ktZGVkdXBlICsgMC4wMDAwMSAhZ2xvYmFsO1xufVxuXG4vLyBTYW1lIGFzIG1peGluIGFib3ZlLCBidXQgb21pdHMgdGhlIHRyYW5zbGF0ZVogZm9yIHByaW50aW5nIHB1cnBvc2VzLlxuQG1peGluIF9tYXQtZm9ybS1maWVsZC1sZWdhY3ktbGFiZWwtZmxvYXRpbmctcHJpbnQoJGZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLCAkaW5maXgtbWFyZ2luLXRvcCkge1xuICAvLyBUaGlzIHJlc3VsdHMgaW4gYSBzbWFsbCBqaXR0ZXIgYWZ0ZXIgdGhlIGxhYmVsIGZsb2F0cyBvbiBGaXJlZm94LCB3aGljaCB0aGVcbiAgLy8gdHJhbnNsYXRlWiBmaXhlcy5cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0kaW5maXgtbWFyZ2luLXRvcCAtICRpbmZpeC1wYWRkaW5nICsgJG1hdC1mb3JtLWZpZWxkLWxlZ2FjeS1kZWR1cGUpXG4gICAgICAgICAgICAgICAgICBzY2FsZSgkZm9udC1zY2FsZSk7XG4gIC8vIFRoZSB0cmlja3MgYWJvdmUgdXNlZCB0byBzbW9vdGggb3V0IHRoZSBhbmltYXRpb24gb24gY2hyb21lIGFuZCBmaXJlZm94IGFjdHVhbGx5IG1ha2UgdGhpbmdzXG4gIC8vIHdvcnNlIG9uIElFLCBzbyB3ZSBkb24ndCBpbmNsdWRlIHRoZW0gaW4gdGhlIElFIHZlcnNpb24uXG4gICRtYXQtZm9ybS1maWVsZC1sZWdhY3ktZGVkdXBlOiAkbWF0LWZvcm0tZmllbGQtbGVnYWN5LWRlZHVwZSArIDAuMDAwMDEgIWdsb2JhbDtcbn1cblxuQG1peGluIG1hdC1mb3JtLWZpZWxkLWxlZ2FjeS10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLy8gVGhlIHVuaXQtbGVzcyBsaW5lLWhlaWdodCBmcm9tIHRoZSBmb250IGNvbmZpZy5cbiAgJGxpbmUtaGVpZ2h0OiBtYXQtbGluZS1oZWlnaHQoJGNvbmZpZywgaW5wdXQpO1xuICAvLyBUaGUgYW1vdW50IHRvIHNjYWxlIHRoZSBmb250IGZvciB0aGUgZmxvYXRpbmcgbGFiZWwgYW5kIHN1YnNjcmlwdC5cbiAgJHN1YnNjcmlwdC1mb250LXNjYWxlOiAwLjc1O1xuICAvLyBUaGUgYW1vdW50IG9mIHNwYWNlIGJldHdlZW4gdGhlIHRvcCBvZiB0aGUgbGluZSBhbmQgdGhlIHRvcCBvZiB0aGUgYWN0dWFsIHRleHRcbiAgLy8gKGFzIGEgZnJhY3Rpb24gb2YgdGhlIGZvbnQtc2l6ZSkuXG4gICRsaW5lLXNwYWNpbmc6ICgkbGluZS1oZWlnaHQgLSAxKSAvIDI7XG4gIC8vIFRoZSBwYWRkaW5nIG9uIHRoZSBpbmZpeC4gTW9ja3Mgc2hvdyBoYWxmIG9mIHRoZSB0ZXh0IHNpemUsIGJ1dCBzZWVtIHRvIG1lYXN1cmUgZnJvbSB0aGUgZWRnZVxuICAvLyBvZiB0aGUgdGV4dCBpdHNlbGYsIG5vdCB0aGUgZWRnZSBvZiB0aGUgbGluZTsgdGhlcmVmb3JlIHdlIHN1YnRyYWN0IG9mZiB0aGUgbGluZSBzcGFjaW5nLlxuICAkaW5maXgtcGFkZGluZzogMC41ZW0gLSAkbGluZS1zcGFjaW5nO1xuICAvLyBUaGUgbWFyZ2luIGFwcGxpZWQgdG8gdGhlIGZvcm0tZmllbGQtaW5maXggdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgdGhlIGZsb2F0aW5nIGxhYmVsLlxuICAkaW5maXgtbWFyZ2luLXRvcDogMWVtICogJGxpbmUtaGVpZ2h0ICogJHN1YnNjcmlwdC1mb250LXNjYWxlO1xuICAvLyBUaGUgc3BhY2UgYmV0d2VlbiB0aGUgYm90dG9tIG9mIHRoZSAubWF0LWZvcm0tZmllbGQtZmxleCBhcmVhIGFuZCB0aGUgc3Vic2NyaXB0IHdyYXBwZXIuXG4gIC8vIE1vY2tzIHNob3cgaGFsZiBvZiB0aGUgdGV4dCBzaXplLCBidXQgdGhpcyBtYXJnaW4gaXMgYXBwbGllZCB0byBhbiBlbGVtZW50IHdpdGggdGhlIHN1YnNjcmlwdFxuICAvLyB0ZXh0IGZvbnQgc2l6ZSwgc28gd2UgbmVlZCB0byBkaXZpZGUgYnkgdGhlIHNjYWxlIGZhY3RvciB0byBtYWtlIGl0IGhhbGYgb2YgdGhlIG9yaWdpbmFsIHRleHRcbiAgLy8gc2l6ZS4gV2UgYWdhaW4gbmVlZCB0byBzdWJ0cmFjdCBvZmYgdGhlIGxpbmUgc3BhY2luZyBzaW5jZSB0aGUgbW9ja3MgbWVhc3VyZSB0byB0aGUgZWRnZSBvZiB0aGVcbiAgLy8gdGV4dCwgbm90IHRoZSAgZWRnZSBvZiB0aGUgbGluZS5cbiAgJHN1YnNjcmlwdC1tYXJnaW4tdG9wOiAwLjVlbSAvICRzdWJzY3JpcHQtZm9udC1zY2FsZSAtICgkbGluZS1zcGFjaW5nICogMik7XG4gIC8vIFRoZSBwYWRkaW5nIGFwcGxpZWQgdG8gdGhlIGZvcm0tZmllbGQtd3JhcHBlciB0byByZXNlcnZlIHNwYWNlIGZvciB0aGUgc3Vic2NyaXB0LCBzaW5jZSBpdCdzXG4gIC8vIGFic29sdXRlbHkgcG9zaXRpb25lZC4gVGhpcyBpcyBhIGNvbWJpbmF0aW9uIG9mIHRoZSBzdWJzY3JpcHQncyBtYXJnaW4gYW5kIGxpbmUtaGVpZ2h0LCBidXQgd2VcbiAgLy8gbmVlZCB0byBtdWx0aXBseSBieSB0aGUgc3Vic2NyaXB0IGZvbnQgc2NhbGUgZmFjdG9yIHNpbmNlIHRoZSB3cmFwcGVyIGhhcyBhIGxhcmdlciBmb250IHNpemUuXG4gICR3cmFwcGVyLXBhZGRpbmctYm90dG9tOiAoJHN1YnNjcmlwdC1tYXJnaW4tdG9wICsgJGxpbmUtaGVpZ2h0KSAqICRzdWJzY3JpcHQtZm9udC1zY2FsZTtcblxuICAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kge1xuICAgIC5tYXQtZm9ybS1maWVsZC13cmFwcGVyIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAkd3JhcHBlci1wYWRkaW5nLWJvdHRvbTtcbiAgICB9XG5cbiAgICAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICAgICAgcGFkZGluZzogJGluZml4LXBhZGRpbmcgMDtcbiAgICB9XG5cbiAgICAmLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCB7XG4gICAgICAmLm1hdC1mb3JtLWZpZWxkLXNob3VsZC1mbG9hdCAubWF0LWZvcm0tZmllbGQtbGFiZWwsXG4gICAgICAubWF0LWlucHV0LXNlcnZlcjpmb2N1cyArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgICAgIEBpbmNsdWRlIF9tYXQtZm9ybS1maWVsZC1sZWdhY3ktbGFiZWwtZmxvYXRpbmcoXG4gICAgICAgICAgICAgICAgJHN1YnNjcmlwdC1mb250LXNjYWxlLCAkaW5maXgtcGFkZGluZywgJGluZml4LW1hcmdpbi10b3ApO1xuICAgICAgfVxuXG4gICAgICAvLyBAYnJlYWtpbmctY2hhbmdlIDguMC4wIHdpbGwgcmVseSBvbiBBdXRvZmlsbE1vbml0b3IgaW5zdGVhZC5cbiAgICAgIC5tYXQtZm9ybS1maWVsZC1hdXRvZmlsbC1jb250cm9sOi13ZWJraXQtYXV0b2ZpbGwgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlclxuICAgICAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgICAgICAgQGluY2x1ZGUgX21hdC1mb3JtLWZpZWxkLWxlZ2FjeS1sYWJlbC1mbG9hdGluZyhcbiAgICAgICAgICAgICAgICAkc3Vic2NyaXB0LWZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLCAkaW5maXgtbWFyZ2luLXRvcCk7XG4gICAgICB9XG5cbiAgICAgIC8vIFNlcnZlci1zaWRlIHJlbmRlcmVkIG1hdElucHV0IHdpdGggYSBsYWJlbCBhdHRyaWJ1dGUgYnV0IGxhYmVsIG5vdCBzaG93blxuICAgICAgLy8gKHVzZWQgYXMgYSBwdXJlIENTUyBzdGFuZC1pbiBmb3IgbWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0KS5cbiAgICAgIC5tYXQtaW5wdXQtc2VydmVyW2xhYmVsXTpub3QoOmxhYmVsLXNob3duKSArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyXG4gICAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgICBAaW5jbHVkZSBfbWF0LWZvcm0tZmllbGQtbGVnYWN5LWxhYmVsLWZsb2F0aW5nKFxuICAgICAgICAgICAgICAgICRzdWJzY3JpcHQtZm9udC1zY2FsZSwgJGluZml4LXBhZGRpbmcsICRpbmZpeC1tYXJnaW4tdG9wKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgdG9wOiAkaW5maXgtbWFyZ2luLXRvcCArICRpbmZpeC1wYWRkaW5nO1xuICAgIH1cblxuICAgIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xuICAgICAgLy8gV2Ugd2FudCB0aGUgdW5kZXJsaW5lIHRvIHN0YXJ0IGF0IHRoZSBlbmQgb2YgdGhlIGNvbnRlbnQgYm94LCBub3QgdGhlIHBhZGRpbmcgYm94LFxuICAgICAgLy8gc28gd2UgbW92ZSBpdCB1cCBieSB0aGUgcGFkZGluZyBhbW91bnQuXG4gICAgICBib3R0b206ICR3cmFwcGVyLXBhZGRpbmctYm90dG9tO1xuICAgIH1cblxuICAgIC5tYXQtZm9ybS1maWVsZC1zdWJzY3JpcHQtd3JhcHBlciB7XG4gICAgICBtYXJnaW4tdG9wOiAkc3Vic2NyaXB0LW1hcmdpbi10b3A7XG5cbiAgICAgIC8vIFdlIHdhbnQgdGhlIHN1YnNjcmlwdCB0byBzdGFydCBhdCB0aGUgZW5kIG9mIHRoZSBjb250ZW50IGJveCwgbm90IHRoZSBwYWRkaW5nIGJveCxcbiAgICAgIC8vIHNvIHdlIG1vdmUgaXQgdXAgYnkgdGhlIHBhZGRpbmcgYW1vdW50IChhZGp1c3RlZCBmb3IgdGhlIHNtYWxsZXIgZm9udCBzaXplKTtcbiAgICAgIHRvcDogY2FsYygxMDAlIC0gI3skd3JhcHBlci1wYWRkaW5nLWJvdHRvbSAvICRzdWJzY3JpcHQtZm9udC1zY2FsZX0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIHRyYW5zbGF0ZVogY2F1c2VzIHRoZSBsYWJlbCB0byBub3QgYXBwZWFyIHdoaWxlIHByaW50aW5nLCBzbyB3ZSBvdmVycmlkZSBpdCB0byBub3RcbiAgLy8gYXBwbHkgdHJhbnNsYXRlWiB3aGlsZSBwcmludGluZ1xuICBAbWVkaWEgcHJpbnQge1xuICAgIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeSB7XG4gICAgICAmLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCB7XG4gICAgICAgICYubWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1sYWJlbCxcbiAgICAgICAgLm1hdC1pbnB1dC1zZXJ2ZXI6Zm9jdXMgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgICAgIEBpbmNsdWRlIF9tYXQtZm9ybS1maWVsZC1sZWdhY3ktbGFiZWwtZmxvYXRpbmctcHJpbnQoXG4gICAgICAgICAgICAgICAgICAkc3Vic2NyaXB0LWZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLCAkaW5maXgtbWFyZ2luLXRvcCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBAYnJlYWtpbmctY2hhbmdlIDguMC4wIHdpbGwgcmVseSBvbiBBdXRvZmlsbE1vbml0b3IgaW5zdGVhZC5cbiAgICAgICAgLm1hdC1mb3JtLWZpZWxkLWF1dG9maWxsLWNvbnRyb2w6LXdlYmtpdC1hdXRvZmlsbCArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyXG4gICAgICAgIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgICAgICAgQGluY2x1ZGUgX21hdC1mb3JtLWZpZWxkLWxlZ2FjeS1sYWJlbC1mbG9hdGluZy1wcmludChcbiAgICAgICAgICAgICAgICAgICRzdWJzY3JpcHQtZm9udC1zY2FsZSwgJGluZml4LXBhZGRpbmcsICRpbmZpeC1tYXJnaW4tdG9wKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFNlcnZlci1zaWRlIHJlbmRlcmVkIG1hdElucHV0IHdpdGggYSBsYWJlbCBhdHRyaWJ1dGUgYnV0IGxhYmVsIG5vdCBzaG93blxuICAgICAgICAvLyAodXNlZCBhcyBhIHB1cmUgQ1NTIHN0YW5kLWluIGZvciBtYXQtZm9ybS1maWVsZC1zaG91bGQtZmxvYXQpLlxuICAgICAgICAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlclxuICAgICAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgICAgIEBpbmNsdWRlIF9tYXQtZm9ybS1maWVsZC1sZWdhY3ktbGFiZWwtZmxvYXRpbmctcHJpbnQoXG4gICAgICAgICAgICAgICAgICAkc3Vic2NyaXB0LWZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLCAkaW5maXgtbWFyZ2luLXRvcCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG5cblxuXG5cblxuLy8gVGhlbWUgc3R5bGVzIHRoYXQgb25seSBhcHBseSB0byB0aGUgb3V0bGluZSBhcHBlYXJhbmNlIG9mIHRoZSBmb3JtLWZpZWxkLlxuXG5AbWl4aW4gbWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGVtZSgkdGhlbWUpIHtcbiAgJHByaW1hcnk6IG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KTtcbiAgJGFjY2VudDogbWFwLWdldCgkdGhlbWUsIGFjY2VudCk7XG4gICR3YXJuOiBtYXAtZ2V0KCR0aGVtZSwgd2Fybik7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRpcy1kYXJrLXRoZW1lOiBtYXAtZ2V0KCR0aGVtZSwgaXMtZGFyayk7XG5cbiAgJGxhYmVsLWRpc2FibGVkLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpc2FibGVkLXRleHQpO1xuICAkb3V0bGluZS1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXZpZGVyLCBpZigkaXMtZGFyay10aGVtZSwgMC4zLCAwLjEyKSk7XG4gICRvdXRsaW5lLWNvbG9yLWhvdmVyOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpdmlkZXIsIGlmKCRpcy1kYXJrLXRoZW1lLCAxLCAwLjg3KSk7XG4gICRvdXRsaW5lLWNvbG9yLXByaW1hcnk6IG1hdC1jb2xvcigkcHJpbWFyeSk7XG4gICRvdXRsaW5lLWNvbG9yLWFjY2VudDogbWF0LWNvbG9yKCRhY2NlbnQpO1xuICAkb3V0bGluZS1jb2xvci13YXJuOiBtYXQtY29sb3IoJHdhcm4pO1xuICAkb3V0bGluZS1jb2xvci1kaXNhYmxlZDogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXZpZGVyLCBpZigkaXMtZGFyay10aGVtZSwgMC4xNSwgMC4wNikpO1xuXG4gIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUge1xuICAgIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lIHtcbiAgICAgIGNvbG9yOiAkb3V0bGluZS1jb2xvcjtcbiAgICB9XG5cbiAgICAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4gICAgICBjb2xvcjogJG91dGxpbmUtY29sb3ItaG92ZXI7XG4gICAgfVxuXG4gICAgJi5tYXQtZm9jdXNlZCB7XG4gICAgICAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4gICAgICAgIGNvbG9yOiAkb3V0bGluZS1jb2xvci1wcmltYXJ5O1xuICAgICAgfVxuXG4gICAgICAmLm1hdC1hY2NlbnQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2sge1xuICAgICAgICBjb2xvcjogJG91dGxpbmUtY29sb3ItYWNjZW50O1xuICAgICAgfVxuXG4gICAgICAmLm1hdC13YXJuIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lLXRoaWNrIHtcbiAgICAgICAgY29sb3I6ICRvdXRsaW5lLWNvbG9yLXdhcm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ2xhc3MgcmVwZWF0ZWQgc28gdGhhdCBydWxlIGlzIHNwZWNpZmljIGVub3VnaCB0byBvdmVycmlkZSBmb2N1c2VkIGFjY2VudCBjb2xvciBjYXNlLlxuICAgICYubWF0LWZvcm0tZmllbGQtaW52YWxpZC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIHtcbiAgICAgIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lLXRoaWNrIHtcbiAgICAgICAgY29sb3I6ICRvdXRsaW5lLWNvbG9yLXdhcm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCB7XG4gICAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgICBjb2xvcjogJGxhYmVsLWRpc2FibGVkLWNvbG9yO1xuICAgICAgfVxuXG4gICAgICAubWF0LWZvcm0tZmllbGQtb3V0bGluZSB7XG4gICAgICAgIGNvbG9yOiAkb3V0bGluZS1jb2xvci1kaXNhYmxlZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gVXNlZCB0byBtYWtlIGluc3RhbmNlcyBvZiB0aGUgX21hdC1mb3JtLWZpZWxkLWxhYmVsLWZsb2F0aW5nIG1peGluIG5lZ2xpZ2libHkgZGlmZmVyZW50LFxuLy8gYW5kIHByZXZlbnQgR29vZ2xlJ3MgQ1NTIE9wdGltaXplciBmcm9tIGNvbGxhcHNpbmcgdGhlIGRlY2xhcmF0aW9ucy4gVGhpcyBpcyBuZWVkZWQgYmVjYXVzZSBzb21lXG4vLyBvZiB0aGUgc2VsZWN0b3JzIGNvbnRhaW4gcHNldWRvLWNsYXNzZXMgbm90IHJlY29nbml6ZWQgaW4gYWxsIGJyb3dzZXJzLiBJZiBhIGJyb3dzZXIgZW5jb3VudGVyc1xuLy8gYW4gdW5rbm93biBwc2V1ZG8tY2xhc3MgaXQgd2lsbCBkaXNjYXJkIHRoZSBlbnRpcmUgcnVsZSBzZXQuXG4kbWF0LWZvcm0tZmllbGQtb3V0bGluZS1kZWR1cGU6IDA7XG5cbi8vIEFwcGxpZXMgYSBmbG9hdGluZyBsYWJlbCBhYm92ZSB0aGUgZm9ybSBmaWVsZCBjb250cm9sIGl0c2VsZi5cbkBtaXhpbiBfbWF0LWZvcm0tZmllbGQtb3V0bGluZS1sYWJlbC1mbG9hdGluZygkZm9udC1zY2FsZSwgJGluZml4LXBhZGRpbmcsICRpbmZpeC1tYXJnaW4tdG9wKSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJGluZml4LW1hcmdpbi10b3AgLSAkaW5maXgtcGFkZGluZyArICRtYXQtZm9ybS1maWVsZC1vdXRsaW5lLWRlZHVwZSlcbiAgc2NhbGUoJGZvbnQtc2NhbGUpO1xuICB3aWR0aDogMTAwJSAvICRmb250LXNjYWxlICsgJG1hdC1mb3JtLWZpZWxkLW91dGxpbmUtZGVkdXBlO1xuXG4gICRtYXQtZm9ybS1maWVsZC1vdXRsaW5lLWRlZHVwZTogJG1hdC1mb3JtLWZpZWxkLW91dGxpbmUtZGVkdXBlICsgMC4wMDAwMSAhZ2xvYmFsO1xufVxuXG5AbWl4aW4gbWF0LWZvcm0tZmllbGQtb3V0bGluZS10eXBvZ3JhcGh5KCRjb25maWcpIHtcbiAgLy8gVGhlIHVuaXQtbGVzcyBsaW5lLWhlaWdodCBmcm9tIHRoZSBmb250IGNvbmZpZy5cbiAgJGxpbmUtaGVpZ2h0OiBtYXQtbGluZS1oZWlnaHQoJGNvbmZpZywgaW5wdXQpO1xuICAvLyBUaGUgYW1vdW50IHRvIHNjYWxlIHRoZSBmb250IGZvciB0aGUgZmxvYXRpbmcgbGFiZWwgYW5kIHN1YnNjcmlwdC5cbiAgJHN1YnNjcmlwdC1mb250LXNjYWxlOiAwLjc1O1xuICAvLyBUaGUgcGFkZGluZyBhYm92ZSBhbmQgYmVsb3cgdGhlIGluZml4LlxuICAkaW5maXgtcGFkZGluZzogMWVtO1xuICAvLyBUaGUgbWFyZ2luIGFwcGxpZWQgdG8gdGhlIGZvcm0tZmllbGQtaW5maXggdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgdGhlIGZsb2F0aW5nIGxhYmVsLlxuICAkaW5maXgtbWFyZ2luLXRvcDogMWVtICogJGxpbmUtaGVpZ2h0ICogJHN1YnNjcmlwdC1mb250LXNjYWxlO1xuICAvLyBUaGUgc3BhY2UgYmV0d2VlbiB0aGUgYm90dG9tIG9mIHRoZSAubWF0LWZvcm0tZmllbGQtZmxleCBhcmVhIGFuZCB0aGUgc3Vic2NyaXB0IHdyYXBwZXIuXG4gIC8vIE1vY2tzIHNob3cgaGFsZiBvZiB0aGUgdGV4dCBzaXplLCBidXQgdGhpcyBtYXJnaW4gaXMgYXBwbGllZCB0byBhbiBlbGVtZW50IHdpdGggdGhlIHN1YnNjcmlwdFxuICAvLyB0ZXh0IGZvbnQgc2l6ZSwgc28gd2UgbmVlZCB0byBkaXZpZGUgYnkgdGhlIHNjYWxlIGZhY3RvciB0byBtYWtlIGl0IGhhbGYgb2YgdGhlIG9yaWdpbmFsIHRleHRcbiAgLy8gc2l6ZS5cbiAgJHN1YnNjcmlwdC1tYXJnaW4tdG9wOiAwLjVlbSAvICRzdWJzY3JpcHQtZm9udC1zY2FsZTtcbiAgLy8gVGhlIHBhZGRpbmcgYXBwbGllZCB0byB0aGUgZm9ybS1maWVsZC13cmFwcGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIHRoZSBzdWJzY3JpcHQsIHNpbmNlIGl0J3NcbiAgLy8gYWJzb2x1dGVseSBwb3NpdGlvbmVkLiBUaGlzIGlzIGEgY29tYmluYXRpb24gb2YgdGhlIHN1YnNjcmlwdCdzIG1hcmdpbiBhbmQgbGluZS1oZWlnaHQsIGJ1dCB3ZVxuICAvLyBuZWVkIHRvIG11bHRpcGx5IGJ5IHRoZSBzdWJzY3JpcHQgZm9udCBzY2FsZSBmYWN0b3Igc2luY2UgdGhlIHdyYXBwZXIgaGFzIGEgbGFyZ2VyIGZvbnQgc2l6ZS5cbiAgJHdyYXBwZXItcGFkZGluZy1ib3R0b206ICgkc3Vic2NyaXB0LW1hcmdpbi10b3AgKyAkbGluZS1oZWlnaHQpICogJHN1YnNjcmlwdC1mb250LXNjYWxlO1xuICAvLyBUaGUgYW1vdW50IHdlIG9mZnNldCB0aGUgbGFiZWwgZnJvbSB0aGUgaW5wdXQgdGV4dCBpbiB0aGUgb3V0bGluZSBhcHBlYXJhbmNlLlxuICAkb3V0bGluZS1hcHBlYXJhbmNlLWxhYmVsLW9mZnNldDogLTAuMjVlbTtcblxuICAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIHtcbiAgICAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICAgICAgcGFkZGluZzogJGluZml4LXBhZGRpbmcgMCAkaW5maXgtcGFkZGluZyAwO1xuICAgIH1cblxuICAgIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgICB0b3A6ICRpbmZpeC1tYXJnaW4tdG9wICsgJGluZml4LXBhZGRpbmc7XG4gICAgICBtYXJnaW4tdG9wOiAkb3V0bGluZS1hcHBlYXJhbmNlLWxhYmVsLW9mZnNldDtcbiAgICB9XG5cbiAgICAmLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCB7XG4gICAgICAmLm1hdC1mb3JtLWZpZWxkLXNob3VsZC1mbG9hdCAubWF0LWZvcm0tZmllbGQtbGFiZWwsXG4gICAgICAubWF0LWlucHV0LXNlcnZlcjpmb2N1cyArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgICAgIEBpbmNsdWRlIF9tYXQtZm9ybS1maWVsZC1vdXRsaW5lLWxhYmVsLWZsb2F0aW5nKFxuICAgICAgICAgICAgICAgICRzdWJzY3JpcHQtZm9udC1zY2FsZSwgJGluZml4LXBhZGRpbmcgKyAkb3V0bGluZS1hcHBlYXJhbmNlLWxhYmVsLW9mZnNldCxcbiAgICAgICAgICAgICAgICAkaW5maXgtbWFyZ2luLXRvcCk7XG4gICAgICB9XG5cbiAgICAgIC8vIFNlcnZlci1zaWRlIHJlbmRlcmVkIG1hdElucHV0IHdpdGggYSBsYWJlbCBhdHRyaWJ1dGUgYnV0IGxhYmVsIG5vdCBzaG93blxuICAgICAgLy8gKHVzZWQgYXMgYSBwdXJlIENTUyBzdGFuZC1pbiBmb3IgbWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0KS5cbiAgICAgIC5tYXQtaW5wdXQtc2VydmVyW2xhYmVsXTpub3QoOmxhYmVsLXNob3duKSArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyXG4gICAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgICBAaW5jbHVkZSBfbWF0LWZvcm0tZmllbGQtb3V0bGluZS1sYWJlbC1mbG9hdGluZyhcbiAgICAgICAgICAgICAgICAkc3Vic2NyaXB0LWZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nICsgJG91dGxpbmUtYXBwZWFyYW5jZS1sYWJlbC1vZmZzZXQsXG4gICAgICAgICAgICAgICAgJGluZml4LW1hcmdpbi10b3ApO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5cblxuXG5cblxuXG4vLyBUaGVtZSBzdHlsZXMgdGhhdCBvbmx5IGFwcGx5IHRvIHRoZSBzdGFuZGFyZCBhcHBlYXJhbmNlIG9mIHRoZSBmb3JtLWZpZWxkLlxuXG5AbWl4aW4gbWF0LWZvcm0tZmllbGQtc3RhbmRhcmQtdGhlbWUoJHRoZW1lKSB7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRpcy1kYXJrLXRoZW1lOiBtYXAtZ2V0KCR0aGVtZSwgaXMtZGFyayk7XG5cbiAgJHVuZGVybGluZS1jb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCBkaXZpZGVyLCBpZigkaXMtZGFyay10aGVtZSwgMC43LCAwLjQyKSk7XG5cbiAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utc3RhbmRhcmQge1xuICAgIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHVuZGVybGluZS1jb2xvcjtcbiAgICB9XG5cbiAgICAmLm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xuICAgICAgQGluY2x1ZGUgbWF0LWNvbnRyb2wtZGlzYWJsZWQtdW5kZXJsaW5lKCR1bmRlcmxpbmUtY29sb3IpO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gbWF0LWZvcm0tZmllbGQtc3RhbmRhcmQtdHlwb2dyYXBoeSgkY29uZmlnKSB7fVxuXG5cbi8vIFRoZW1lIHN0eWxlcyB0aGF0IGFwcGx5IHRvIGFsbCBhcHBlYXJhbmNlcyBvZiB0aGUgZm9ybS1maWVsZC5cbkBtaXhpbiBtYXQtZm9ybS1maWVsZC10aGVtZSgkdGhlbWUpIHtcbiAgJHByaW1hcnk6IG1hcC1nZXQoJHRoZW1lLCBwcmltYXJ5KTtcbiAgJGFjY2VudDogbWFwLWdldCgkdGhlbWUsIGFjY2VudCk7XG4gICR3YXJuOiBtYXAtZ2V0KCR0aGVtZSwgd2Fybik7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG4gICRpcy1kYXJrLXRoZW1lOiBtYXAtZ2V0KCR0aGVtZSwgaXMtZGFyayk7XG5cbiAgLy8gTGFiZWwgY29sb3JzLiBSZXF1aXJlZCBpcyB1c2VkIGZvciB0aGUgYCpgIHN0YXIgc2hvd24gaW4gdGhlIGxhYmVsLlxuICAkbGFiZWwtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgc2Vjb25kYXJ5LXRleHQsIGlmKCRpcy1kYXJrLXRoZW1lLCAwLjcsIDAuNikpO1xuICAkZm9jdXNlZC1sYWJlbC1jb2xvcjogbWF0LWNvbG9yKCRwcmltYXJ5KTtcbiAgJHJlcXVpcmVkLWxhYmVsLWNvbG9yOiBtYXQtY29sb3IoJGFjY2VudCk7XG5cbiAgLy8gVW5kZXJsaW5lIGNvbG9ycy5cbiAgJHVuZGVybGluZS1jb2xvci1iYXNlOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpdmlkZXIsIGlmKCRpcy1kYXJrLXRoZW1lLCAxLCAwLjg3KSk7XG4gICR1bmRlcmxpbmUtY29sb3ItYWNjZW50OiBtYXQtY29sb3IoJGFjY2VudCk7XG4gICR1bmRlcmxpbmUtY29sb3Itd2FybjogbWF0LWNvbG9yKCR3YXJuKTtcbiAgJHVuZGVybGluZS1mb2N1c2VkLWNvbG9yOiBtYXQtY29sb3IoJHByaW1hcnkpO1xuXG4gIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgY29sb3I6ICRsYWJlbC1jb2xvcjtcbiAgfVxuXG4gIC5tYXQtaGludCB7XG4gICAgY29sb3I6ICRsYWJlbC1jb2xvcjtcbiAgfVxuXG4gIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgIGNvbG9yOiAkZm9jdXNlZC1sYWJlbC1jb2xvcjtcblxuICAgICYubWF0LWFjY2VudCB7XG4gICAgICBjb2xvcjogJHVuZGVybGluZS1jb2xvci1hY2NlbnQ7XG4gICAgfVxuXG4gICAgJi5tYXQtd2FybiB7XG4gICAgICBjb2xvcjogJHVuZGVybGluZS1jb2xvci13YXJuO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcbiAgICBjb2xvcjogJHJlcXVpcmVkLWxhYmVsLWNvbG9yO1xuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHVuZGVybGluZS1jb2xvci1iYXNlO1xuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIHtcbiAgICAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR1bmRlcmxpbmUtZm9jdXNlZC1jb2xvcjtcblxuICAgICAgJi5tYXQtYWNjZW50IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHVuZGVybGluZS1jb2xvci1hY2NlbnQ7XG4gICAgICB9XG5cbiAgICAgICYubWF0LXdhcm4ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdW5kZXJsaW5lLWNvbG9yLXdhcm47XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLXR5cGUtbWF0LW5hdGl2ZS1zZWxlY3QubWF0LWZvY3VzZWQ6bm90KC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkKSB7XG4gICAgLm1hdC1mb3JtLWZpZWxkLWluZml4OjphZnRlciB7XG4gICAgICBjb2xvcjogJHVuZGVybGluZS1mb2N1c2VkLWNvbG9yO1xuICAgIH1cblxuICAgICYubWF0LWFjY2VudCAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVyIHtcbiAgICAgIGNvbG9yOiAkdW5kZXJsaW5lLWNvbG9yLWFjY2VudDtcbiAgICB9XG5cbiAgICAmLm1hdC13YXJuIC5tYXQtZm9ybS1maWVsZC1pbmZpeDo6YWZ0ZXIge1xuICAgICAgY29sb3I6ICR1bmRlcmxpbmUtY29sb3Itd2FybjtcbiAgICB9XG4gIH1cblxuICAvLyBTdHlsaW5nIGZvciB0aGUgZXJyb3Igc3RhdGUgb2YgdGhlIGZvcm0gZmllbGQuIE5vdGUgdGhhdCB3aGlsZSB0aGUgc2FtZSBjYW4gYmVcbiAgLy8gYWNoaWV2ZWQgd2l0aCB0aGUgbmctKiBjbGFzc2VzLCB3ZSB1c2UgdGhpcyBhcHByb2FjaCBpbiBvcmRlciB0byBlbnN1cmUgdGhhdCB0aGUgc2FtZVxuICAvLyBsb2dpYyBpcyB1c2VkIHRvIHN0eWxlIHRoZSBlcnJvciBzdGF0ZSBhbmQgdG8gc2hvdyB0aGUgZXJyb3IgbWVzc2FnZXMuXG4gIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIHtcbiAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgY29sb3I6ICR1bmRlcmxpbmUtY29sb3Itd2FybjtcblxuICAgICAgJi5tYXQtYWNjZW50LFxuICAgICAgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gICAgICAgIGNvbG9yOiAkdW5kZXJsaW5lLWNvbG9yLXdhcm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSxcbiAgICAubWF0LWZvcm0tZmllbGQtcmlwcGxlLm1hdC1hY2NlbnQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHVuZGVybGluZS1jb2xvci13YXJuO1xuICAgIH1cbiAgfVxuXG4gIC5tYXQtZXJyb3Ige1xuICAgIGNvbG9yOiAkdW5kZXJsaW5lLWNvbG9yLXdhcm47XG4gIH1cblxuICBAaW5jbHVkZSBtYXQtZm9ybS1maWVsZC1sZWdhY3ktdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LWZvcm0tZmllbGQtc3RhbmRhcmQtdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LWZvcm0tZmllbGQtZmlsbC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtZm9ybS1maWVsZC1vdXRsaW5lLXRoZW1lKCR0aGVtZSk7XG59XG5cbi8vIFVzZWQgdG8gbWFrZSBpbnN0YW5jZXMgb2YgdGhlIF9tYXQtZm9ybS1maWVsZC1sYWJlbC1mbG9hdGluZyBtaXhpbiBuZWdsaWdpYmx5IGRpZmZlcmVudCxcbi8vIGFuZCBwcmV2ZW50IEdvb2dsZSdzIENTUyBPcHRpbWl6ZXIgZnJvbSBjb2xsYXBzaW5nIHRoZSBkZWNsYXJhdGlvbnMuIFRoaXMgaXMgbmVlZGVkIGJlY2F1c2Ugc29tZVxuLy8gb2YgdGhlIHNlbGVjdG9ycyBjb250YWluIHBzZXVkby1jbGFzc2VzIG5vdCByZWNvZ25pemVkIGluIGFsbCBicm93c2Vycy4gSWYgYSBicm93c2VyIGVuY291bnRlcnNcbi8vIGFuIHVua25vd24gcHNldWRvLWNsYXNzIGl0IHdpbGwgZGlzY2FyZCB0aGUgZW50aXJlIHJ1bGUgc2V0LlxuJG1hdC1mb3JtLWZpZWxkLWRlZHVwZTogMDtcblxuLy8gQXBwbGllcyBhIGZsb2F0aW5nIGxhYmVsIGFib3ZlIHRoZSBmb3JtIGZpZWxkIGNvbnRyb2wgaXRzZWxmLlxuQG1peGluIF9tYXQtZm9ybS1maWVsZC1sYWJlbC1mbG9hdGluZygkZm9udC1zY2FsZSwgJGluZml4LXBhZGRpbmcsICRpbmZpeC1tYXJnaW4tdG9wKSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtJGluZml4LW1hcmdpbi10b3AgLSAkaW5maXgtcGFkZGluZyArICRtYXQtZm9ybS1maWVsZC1kZWR1cGUpXG4gICAgICAgICAgICAgc2NhbGUoJGZvbnQtc2NhbGUpO1xuICB3aWR0aDogMTAwJSAvICRmb250LXNjYWxlICsgJG1hdC1mb3JtLWZpZWxkLWRlZHVwZTtcblxuICAkbWF0LWZvcm0tZmllbGQtZGVkdXBlOiAkbWF0LWZvcm0tZmllbGQtZGVkdXBlICsgMC4wMDAwMSAhZ2xvYmFsO1xufVxuXG5AbWl4aW4gbWF0LWZvcm0tZmllbGQtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC8vIFRoZSB1bml0LWxlc3MgbGluZS1oZWlnaHQgZnJvbSB0aGUgZm9udCBjb25maWcuXG4gICRsaW5lLWhlaWdodDogbWF0LWxpbmUtaGVpZ2h0KCRjb25maWcsIGlucHV0KTtcblxuICAvLyBUaGUgYW1vdW50IHRvIHNjYWxlIHRoZSBmb250IGZvciB0aGUgZmxvYXRpbmcgbGFiZWwgYW5kIHN1YnNjcmlwdC5cbiAgJHN1YnNjcmlwdC1mb250LXNjYWxlOiAwLjc1O1xuICAvLyBUaGUgYW1vdW50IHRvIHNjYWxlIHRoZSBmb250IGZvciB0aGUgcHJlZml4IGFuZCBzdWZmaXggaWNvbnMuXG4gICRwcmVmaXgtc3VmZml4LWljb24tZm9udC1zY2FsZTogMS41O1xuXG4gIC8vIFRoZSBwYWRkaW5nIG9uIHRoZSBpbmZpeC4gTW9ja3Mgc2hvdyBoYWxmIG9mIHRoZSB0ZXh0IHNpemUuXG4gICRpbmZpeC1wYWRkaW5nOiAwLjVlbTtcbiAgLy8gVGhlIG1hcmdpbiBhcHBsaWVkIHRvIHRoZSBmb3JtLWZpZWxkLWluZml4IHRvIHJlc2VydmUgc3BhY2UgZm9yIHRoZSBmbG9hdGluZyBsYWJlbC5cbiAgJGluZml4LW1hcmdpbi10b3A6IDFlbSAqICRsaW5lLWhlaWdodCAqICRzdWJzY3JpcHQtZm9udC1zY2FsZTtcbiAgLy8gRm9udCBzaXplIHRvIHVzZSBmb3IgdGhlIGxhYmVsIGFuZCBzdWJzY3JpcHQgdGV4dC5cbiAgJHN1YnNjcmlwdC1mb250LXNpemU6ICRzdWJzY3JpcHQtZm9udC1zY2FsZSAqIDEwMCU7XG4gIC8vIEZvbnQgc2l6ZSB0byB1c2UgZm9yIHRoZSBmb3IgdGhlIHByZWZpeCBhbmQgc3VmZml4IGljb25zLlxuICAkcHJlZml4LXN1ZmZpeC1pY29uLWZvbnQtc2l6ZTogJHByZWZpeC1zdWZmaXgtaWNvbi1mb250LXNjYWxlICogMTAwJTtcbiAgLy8gVGhlIHNwYWNlIGJldHdlZW4gdGhlIGJvdHRvbSBvZiB0aGUgLm1hdC1mb3JtLWZpZWxkLWZsZXggYXJlYSBhbmQgdGhlIHN1YnNjcmlwdCB3cmFwcGVyLlxuICAvLyBNb2NrcyBzaG93IGhhbGYgb2YgdGhlIHRleHQgc2l6ZSwgYnV0IHRoaXMgbWFyZ2luIGlzIGFwcGxpZWQgdG8gYW4gZWxlbWVudCB3aXRoIHRoZSBzdWJzY3JpcHRcbiAgLy8gdGV4dCBmb250IHNpemUsIHNvIHdlIG5lZWQgdG8gZGl2aWRlIGJ5IHRoZSBzY2FsZSBmYWN0b3IgdG8gbWFrZSBpdCBoYWxmIG9mIHRoZSBvcmlnaW5hbCB0ZXh0XG4gIC8vIHNpemUuXG4gICRzdWJzY3JpcHQtbWFyZ2luLXRvcDogMC41ZW0gLyAkc3Vic2NyaXB0LWZvbnQtc2NhbGU7XG4gIC8vIFRoZSBwYWRkaW5nIGFwcGxpZWQgdG8gdGhlIGZvcm0tZmllbGQtd3JhcHBlciB0byByZXNlcnZlIHNwYWNlIGZvciB0aGUgc3Vic2NyaXB0LCBzaW5jZSBpdCdzXG4gIC8vIGFic29sdXRlbHkgcG9zaXRpb25lZC4gVGhpcyBpcyBhIGNvbWJpbmF0aW9uIG9mIHRoZSBzdWJzY3JpcHQncyBtYXJnaW4gYW5kIGxpbmUtaGVpZ2h0LCBidXQgd2VcbiAgLy8gbmVlZCB0byBtdWx0aXBseSBieSB0aGUgc3Vic2NyaXB0IGZvbnQgc2NhbGUgZmFjdG9yIHNpbmNlIHRoZSB3cmFwcGVyIGhhcyBhIGxhcmdlciBmb250IHNpemUuXG4gICR3cmFwcGVyLXBhZGRpbmctYm90dG9tOiAoJHN1YnNjcmlwdC1tYXJnaW4tdG9wICsgJGxpbmUtaGVpZ2h0KSAqICRzdWJzY3JpcHQtZm9udC1zY2FsZTtcblxuICAubWF0LWZvcm0tZmllbGQge1xuICAgIEBpbmNsdWRlIG1hdC10eXBvZ3JhcGh5LWxldmVsLXRvLXN0eWxlcygkY29uZmlnLCBpbnB1dCk7XG4gIH1cblxuICAubWF0LWZvcm0tZmllbGQtd3JhcHBlciB7XG4gICAgcGFkZGluZy1ib3R0b206ICR3cmFwcGVyLXBhZGRpbmctYm90dG9tO1xuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLXByZWZpeCxcbiAgLm1hdC1mb3JtLWZpZWxkLXN1ZmZpeCB7XG4gICAgLy8gQWxsb3cgaWNvbnMgaW4gYSBwcmVmaXggb3Igc3VmZml4IHRvIGFkYXB0IHRvIHRoZSBjb3JyZWN0IHNpemUuXG4gICAgLm1hdC1pY29uIHtcbiAgICAgIGZvbnQtc2l6ZTogJHByZWZpeC1zdWZmaXgtaWNvbi1mb250LXNpemU7XG4gICAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0O1xuICAgIH1cblxuICAgIC8vIEFsbG93IGljb24gYnV0dG9ucyBpbiBhIHByZWZpeCBvciBzdWZmaXggdG8gYWRhcHQgdG8gdGhlIGNvcnJlY3Qgc2l6ZS5cbiAgICAubWF0LWljb24tYnV0dG9uIHtcbiAgICAgIGhlaWdodDogJHByZWZpeC1zdWZmaXgtaWNvbi1mb250LXNjYWxlICogMWVtO1xuICAgICAgd2lkdGg6ICRwcmVmaXgtc3VmZml4LWljb24tZm9udC1zY2FsZSAqIDFlbTtcblxuICAgICAgLm1hdC1pY29uIHtcbiAgICAgICAgaGVpZ2h0OiAkbGluZS1oZWlnaHQgKiAxZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcbiAgICBwYWRkaW5nOiAkaW5maXgtcGFkZGluZyAwO1xuICAgIC8vIFRocm93cyBvZmYgdGhlIGJhc2VsaW5lIGlmIHdlIGRvIGl0IGFzIGEgcmVhbCBtYXJnaW4sIHNvIHdlIGRvIGl0IGFzIGEgYm9yZGVyIGluc3RlYWQuXG4gICAgYm9yZGVyLXRvcDogJGluZml4LW1hcmdpbi10b3Agc29saWQgdHJhbnNwYXJlbnQ7XG4gIH1cblxuICAubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IHtcbiAgICAmLm1hdC1mb3JtLWZpZWxkLXNob3VsZC1mbG9hdCAubWF0LWZvcm0tZmllbGQtbGFiZWwsXG4gICAgLm1hdC1pbnB1dC1zZXJ2ZXI6Zm9jdXMgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgQGluY2x1ZGUgX21hdC1mb3JtLWZpZWxkLWxhYmVsLWZsb2F0aW5nKFxuICAgICAgICAgICAgICAkc3Vic2NyaXB0LWZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLCAkaW5maXgtbWFyZ2luLXRvcCk7XG4gICAgfVxuXG4gICAgLy8gU2VydmVyLXNpZGUgcmVuZGVyZWQgbWF0SW5wdXQgd2l0aCBhIGxhYmVsIGF0dHJpYnV0ZSBidXQgbGFiZWwgbm90IHNob3duXG4gICAgLy8gKHVzZWQgYXMgYSBwdXJlIENTUyBzdGFuZC1pbiBmb3IgbWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0KS5cbiAgICAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlclxuICAgICAgICAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgICAgQGluY2x1ZGUgX21hdC1mb3JtLWZpZWxkLWxhYmVsLWZsb2F0aW5nKFxuICAgICAgICAgICAgICAkc3Vic2NyaXB0LWZvbnQtc2NhbGUsICRpbmZpeC1wYWRkaW5nLCAkaW5maXgtbWFyZ2luLXRvcCk7XG4gICAgfVxuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIge1xuICAgIHRvcDogLSRpbmZpeC1tYXJnaW4tdG9wO1xuICAgIHBhZGRpbmctdG9wOiAkaW5maXgtbWFyZ2luLXRvcDtcbiAgfVxuXG4gIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgdG9wOiAkaW5maXgtbWFyZ2luLXRvcCArICRpbmZpeC1wYWRkaW5nO1xuICB9XG5cbiAgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZSB7XG4gICAgLy8gV2Ugd2FudCB0aGUgdW5kZXJsaW5lIHRvIHN0YXJ0IGF0IHRoZSBlbmQgb2YgdGhlIGNvbnRlbnQgYm94LCBub3QgdGhlIHBhZGRpbmcgYm94LFxuICAgIC8vIHNvIHdlIG1vdmUgaXQgdXAgYnkgdGhlIHBhZGRpbmcgYW1vdW50LlxuICAgIGJvdHRvbTogJHdyYXBwZXItcGFkZGluZy1ib3R0b207XG4gIH1cblxuICAubWF0LWZvcm0tZmllbGQtc3Vic2NyaXB0LXdyYXBwZXIge1xuICAgIGZvbnQtc2l6ZTogJHN1YnNjcmlwdC1mb250LXNpemU7XG4gICAgbWFyZ2luLXRvcDogJHN1YnNjcmlwdC1tYXJnaW4tdG9wO1xuXG4gICAgLy8gV2Ugd2FudCB0aGUgc3Vic2NyaXB0IHRvIHN0YXJ0IGF0IHRoZSBlbmQgb2YgdGhlIGNvbnRlbnQgYm94LCBub3QgdGhlIHBhZGRpbmcgYm94LFxuICAgIC8vIHNvIHdlIG1vdmUgaXQgdXAgYnkgdGhlIHBhZGRpbmcgYW1vdW50IChhZGp1c3RlZCBmb3IgdGhlIHNtYWxsZXIgZm9udCBzaXplKTtcbiAgICB0b3A6IGNhbGMoMTAwJSAtICN7JHdyYXBwZXItcGFkZGluZy1ib3R0b20gLyAkc3Vic2NyaXB0LWZvbnQtc2NhbGV9KTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1hdC1mb3JtLWZpZWxkLWxlZ2FjeS10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtZm9ybS1maWVsZC1zdGFuZGFyZC10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtZm9ybS1maWVsZC1maWxsLXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdHlwb2dyYXBoeSgkY29uZmlnKTtcbn1cblxuXG5cblxuXG5AbWl4aW4gbWF0LXRyZWUtdGhlbWUoJHRoZW1lKSB7XG4gICRiYWNrZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgYmFja2dyb3VuZCk7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC10cmVlIHtcbiAgICBiYWNrZ3JvdW5kOiBtYXQtY29sb3IoJGJhY2tncm91bmQsICdjYXJkJyk7XG4gIH1cblxuICAubWF0LXRyZWUtbm9kZSxcbiAgLm1hdC1uZXN0ZWQtdHJlZS1ub2RlIHtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCB0ZXh0KTtcbiAgfVxufVxuXG5AbWl4aW4gbWF0LXRyZWUtdHlwb2dyYXBoeSgkY29uZmlnKSB7XG4gIC5tYXQtdHJlZSB7XG4gICAgZm9udC1mYW1pbHk6IG1hdC1mb250LWZhbWlseSgkY29uZmlnKTtcbiAgfVxuXG4gIC5tYXQtdHJlZS1ub2RlLFxuICAubWF0LW5lc3RlZC10cmVlLW5vZGUge1xuICAgIGZvbnQtd2VpZ2h0OiBtYXQtZm9udC13ZWlnaHQoJGNvbmZpZywgYm9keS0xKTtcbiAgICBmb250LXNpemU6IG1hdC1mb250LXNpemUoJGNvbmZpZywgYm9keS0xKTtcbiAgfVxufVxuXG5cblxuLy8gSW5jbHVkZXMgYWxsIG9mIHRoZSB0eXBvZ3JhcGhpYyBzdHlsZXMuXG5AbWl4aW4gYW5ndWxhci1tYXRlcmlhbC10eXBvZ3JhcGh5KCRjb25maWc6IG51bGwpIHtcbiAgQGlmICRjb25maWcgPT0gbnVsbCB7XG4gICAgJGNvbmZpZzogbWF0LXR5cG9ncmFwaHktY29uZmlnKCk7XG4gIH1cblxuICBAaW5jbHVkZSBtYXQtYmFkZ2UtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWJhc2UtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWF1dG9jb21wbGV0ZS10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtYm90dG9tLXNoZWV0LXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1idXR0b24tdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWJ1dHRvbi10b2dnbGUtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWNhcmQtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWNoZWNrYm94LXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1jaGlwcy10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtdGFibGUtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWRhdGVwaWNrZXItdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWRpYWxvZy10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtZXhwYW5zaW9uLXBhbmVsLXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1mb3JtLWZpZWxkLXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1ncmlkLWxpc3QtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWljb24tdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWlucHV0LXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1tZW51LXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1wYWdpbmF0b3ItdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXByb2dyZXNzLWJhci10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtcHJvZ3Jlc3Mtc3Bpbm5lci10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtcmFkaW8tdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXNlbGVjdC10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtc2lkZW5hdi10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtc2xpZGUtdG9nZ2xlLXR5cG9ncmFwaHkoJGNvbmZpZyk7XG4gIEBpbmNsdWRlIG1hdC1zbGlkZXItdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXN0ZXBwZXItdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXNvcnQtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXRhYnMtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXRvb2xiYXItdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXRvb2x0aXAtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LWxpc3QtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LW9wdGlvbi10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtb3B0Z3JvdXAtdHlwb2dyYXBoeSgkY29uZmlnKTtcbiAgQGluY2x1ZGUgbWF0LXNuYWNrLWJhci10eXBvZ3JhcGh5KCRjb25maWcpO1xuICBAaW5jbHVkZSBtYXQtdHJlZS10eXBvZ3JhcGh5KCRjb25maWcpO1xufVxuXG5cbi8vIE1peGluIHRoYXQgcmVuZGVycyBhbGwgb2YgdGhlIGNvcmUgc3R5bGVzIHRoYXQgYXJlIG5vdCB0aGVtZS1kZXBlbmRlbnQuXG5AbWl4aW4gbWF0LWNvcmUoJHR5cG9ncmFwaHktY29uZmlnOiBudWxsKSB7XG4gIEBpbmNsdWRlIGFuZ3VsYXItbWF0ZXJpYWwtdHlwb2dyYXBoeSgkdHlwb2dyYXBoeS1jb25maWcpO1xuICBAaW5jbHVkZSBtYXQtcmlwcGxlKCk7XG4gIEBpbmNsdWRlIGNkay1hMTF5KCk7XG4gIEBpbmNsdWRlIGNkay1vdmVybGF5KCk7XG4gIEBpbmNsdWRlIGNkay10ZXh0LWZpZWxkKCk7XG59XG5cbi8vIE1peGluIHRoYXQgcmVuZGVycyBhbGwgb2YgdGhlIGNvcmUgc3R5bGVzIHRoYXQgZGVwZW5kIG9uIHRoZSB0aGVtZS5cbkBtaXhpbiBtYXQtY29yZS10aGVtZSgkdGhlbWUpIHtcbiAgQGluY2x1ZGUgbWF0LXJpcHBsZS10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtb3B0aW9uLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1vcHRncm91cC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtcHNldWRvLWNoZWNrYm94LXRoZW1lKCR0aGVtZSk7XG5cbiAgLy8gUHJvdmlkZXMgZXh0ZXJuYWwgQ1NTIGNsYXNzZXMgZm9yIGVhY2ggZWxldmF0aW9uIHZhbHVlLiBFYWNoIENTUyBjbGFzcyBpcyBmb3JtYXR0ZWQgYXNcbiAgLy8gYG1hdC1lbGV2YXRpb24teiR6VmFsdWVgIHdoZXJlIGAkelZhbHVlYCBjb3JyZXNwb25kcyB0byB0aGUgei1zcGFjZSB0byB3aGljaCB0aGUgZWxlbWVudCBpc1xuICAvLyBlbGV2YXRlZC5cbiAgQGZvciAkelZhbHVlIGZyb20gMCB0aHJvdWdoIDI0IHtcbiAgICAuI3skX21hdC1lbGV2YXRpb24tcHJlZml4fSN7JHpWYWx1ZX0ge1xuICAgICAgQGluY2x1ZGUgX21hdC10aGVtZS1lbGV2YXRpb24oJHpWYWx1ZSwgJHRoZW1lKTtcbiAgICB9XG4gIH1cblxuICAvLyBXcmFwcGVyIGVsZW1lbnQgdGhhdCBwcm92aWRlcyB0aGUgdGhlbWUgYmFja2dyb3VuZCB3aGVuIHRoZSB1c2VyJ3MgY29udGVudCBpc24ndFxuICAvLyBpbnNpZGUgb2YgYSBgbWF0LXNpZGVuYXYtY29udGFpbmVyYC4gTm90ZSB0aGF0IHdlIG5lZWQgdG8gZXhjbHVkZSB0aGUgYW1wZXJzYW5kXG4gIC8vIHNlbGVjdG9yIGluIGNhc2UgdGhlIG1peGluIGlzIGluY2x1ZGVkIGF0IHRoZSB0b3AgbGV2ZWwuXG4gIC5tYXQtYXBwLWJhY2tncm91bmQje2lmKCYsICcsICYubWF0LWFwcC1iYWNrZ3JvdW5kJywgJycpfSB7XG4gICAgJGJhY2tncm91bmQ6IG1hcC1nZXQoJHRoZW1lLCBiYWNrZ3JvdW5kKTtcbiAgICAkZm9yZWdyb3VuZDogbWFwLWdldCgkdGhlbWUsIGZvcmVncm91bmQpO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRiYWNrZ3JvdW5kLCBiYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogbWF0LWNvbG9yKCRmb3JlZ3JvdW5kLCB0ZXh0KTtcbiAgfVxuXG4gIC8vIE1hcmtlciB0aGF0IGlzIHVzZWQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIGFkZGVkIGEgdGhlbWUgdG8gdGhlaXIgcGFnZS5cbiAgQGF0LXJvb3Qge1xuICAgIC5tYXQtdGhlbWUtbG9hZGVkLW1hcmtlciB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5AbWl4aW4gbWF0LWRpdmlkZXItdGhlbWUoJHRoZW1lKSB7XG4gICRmb3JlZ3JvdW5kOiBtYXAtZ2V0KCR0aGVtZSwgZm9yZWdyb3VuZCk7XG5cbiAgLm1hdC1kaXZpZGVyIHtcbiAgICBib3JkZXItdG9wLWNvbG9yOiBtYXQtY29sb3IoJGZvcmVncm91bmQsIGRpdmlkZXIpO1xuICB9XG5cbiAgLm1hdC1kaXZpZGVyLXZlcnRpY2FsIHtcbiAgICBib3JkZXItcmlnaHQtY29sb3I6IG1hdC1jb2xvcigkZm9yZWdyb3VuZCwgZGl2aWRlcik7XG4gIH1cbn1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuLy8gQ3JlYXRlIGEgdGhlbWUuXG5AbWl4aW4gYW5ndWxhci1tYXRlcmlhbC10aGVtZSgkdGhlbWUpIHtcbiAgQGluY2x1ZGUgbWF0LWNvcmUtdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LWF1dG9jb21wbGV0ZS10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtYmFkZ2UtdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LWJvdHRvbS1zaGVldC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtYnV0dG9uLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1idXR0b24tdG9nZ2xlLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1jYXJkLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1jaGVja2JveC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtY2hpcHMtdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LXRhYmxlLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1kYXRlcGlja2VyLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1kaWFsb2ctdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LWRpdmlkZXItdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LWV4cGFuc2lvbi1wYW5lbC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtZm9ybS1maWVsZC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtZ3JpZC1saXN0LXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1pY29uLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1pbnB1dC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtbGlzdC10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtbWVudS10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtcGFnaW5hdG9yLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1wcm9ncmVzcy1iYXItdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LXByb2dyZXNzLXNwaW5uZXItdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LXJhZGlvLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1zZWxlY3QtdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LXNpZGVuYXYtdGhlbWUoJHRoZW1lKTtcbiAgQGluY2x1ZGUgbWF0LXNsaWRlLXRvZ2dsZS10aGVtZSgkdGhlbWUpO1xuICBAaW5jbHVkZSBtYXQtc2xpZGVyLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1zdGVwcGVyLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1zb3J0LXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC10YWJzLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC10b29sYmFyLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC10b29sdGlwLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC10cmVlLXRoZW1lKCR0aGVtZSk7XG4gIEBpbmNsdWRlIG1hdC1zbmFjay1iYXItdGhlbWUoJHRoZW1lKTtcbn1cbiIsIi8qIFlvdSBjYW4gYWRkIGdsb2JhbCBzdHlsZXMgdG8gdGhpcyBmaWxlLCBhbmQgYWxzbyBpbXBvcnQgb3RoZXIgc3R5bGUgZmlsZXMgKi9cclxuXHJcbi8vXHJcbi8vIFN0YW5kYXJkIFRoZW1lXHJcbi8vXHJcblxyXG5AaW1wb3J0ICd+QGFuZ3VsYXIvbWF0ZXJpYWwvdGhlbWluZyc7XHJcbi8vIFBsdXMgaW1wb3J0cyBmb3Igb3RoZXIgY29tcG9uZW50cyBpbiB5b3VyIGFwcC5cclxuXHJcbkBpbXBvcnQgJ35AYW5ndWxhci9tYXRlcmlhbC9wcmVidWlsdC10aGVtZXMvaW5kaWdvLXBpbmsuY3NzJztcclxuXHJcbi8vIEluY2x1ZGUgdGhlIGJhc2Ugc3R5bGVzIGZvciBBbmd1bGFyIE1hdGVyaWFsIGNvcmUuIFdlIGluY2x1ZGUgdGhpcyBoZXJlIHNvIHRoYXQgeW91IG9ubHlcclxuLy8gaGF2ZSB0byBsb2FkIGEgc2luZ2xlIGNzcyBmaWxlIGZvciBBbmd1bGFyIE1hdGVyaWFsIGluIHlvdXIgYXBwLlxyXG5AaW5jbHVkZSBtYXQtY29yZSgpO1xyXG5cclxuLy8gRGVmaW5lIHRoZSBwYWxldHRlcyBmb3IgeW91ciB0aGVtZSB1c2luZyB0aGUgTWF0ZXJpYWwgRGVzaWduIHBhbGV0dGVzIGF2YWlsYWJsZSBpbiBwYWxldHRlLnNjc3NcclxuLy8gKGltcG9ydGVkIGFib3ZlKS4gRm9yIGVhY2ggcGFsZXR0ZSwgeW91IGNhbiBvcHRpb25hbGx5IHNwZWNpZnkgYSBkZWZhdWx0LCBsaWdodGVyLCBhbmQgZGFya2VyXHJcbi8vIGh1ZS5cclxuJGRpdC1hcHAtcHJpbWFyeTogbWF0LXBhbGV0dGUoJG1hdC1yZWQpO1xyXG4kZGl0LWFwcC1hY2NlbnQ6ICBtYXQtcGFsZXR0ZSgkbWF0LWdyZWVuLCBBMjAwLCBBMTAwLCBBNDAwKTtcclxuXHJcbi8vIFRoZSB3YXJuIHBhbGV0dGUgaXMgb3B0aW9uYWwgKGRlZmF1bHRzIHRvIHJlZCkuXHJcbiRkaXQtYXBwLXdhcm46ICAgIG1hdC1wYWxldHRlKCRtYXQtcmVkKTtcclxuXHJcbi8vIENyZWF0ZSB0aGUgdGhlbWUgb2JqZWN0IChhIFNhc3MgbWFwIGNvbnRhaW5pbmcgYWxsIG9mIHRoZSBwYWxldHRlcykuXHJcbiRkaXQtYXBwLXRoZW1lOiBtYXQtbGlnaHQtdGhlbWUoJGRpdC1hcHAtcHJpbWFyeSwgJGRpdC1hcHAtYWNjZW50LCAkZGl0LWFwcC13YXJuKTtcclxuXHJcbi8vIEluY2x1ZGUgdGhlbWUgc3R5bGVzIGZvciBjb3JlIGFuZCBlYWNoIGNvbXBvbmVudCB1c2VkIGluIHlvdXIgYXBwLlxyXG4vLyBBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIGltcG9ydCBhbmQgQGluY2x1ZGUgdGhlIHRoZW1lIG1peGlucyBmb3IgZWFjaCBjb21wb25lbnRcclxuLy8gdGhhdCB5b3UgYXJlIHVzaW5nLlxyXG5AaW5jbHVkZSBhbmd1bGFyLW1hdGVyaWFsLXRoZW1lKCRkaXQtYXBwLXRoZW1lKTtcclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxuICBmb250LWZhbWlseTogUm9ib3RvO1xyXG59XHJcblxyXG4ud2FybiB7XHJcbiAgY29sb3I6IG1hdC1jb2xvcigkZGl0LWFwcC13YXJuLCAyMDApO1xyXG59XHJcblxyXG4uZXJyb3Ige1xyXG4gIGNvbG9yOiBtYXQtY29sb3IoJGRpdC1hcHAtd2FybiwgQTQwMCk7XHJcbn1cclxuIiwiLm1hdC1iYWRnZS1jb250ZW50e2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MTJweDtmb250LWZhbWlseTpSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWZ9Lm1hdC1iYWRnZS1zbWFsbCAubWF0LWJhZGdlLWNvbnRlbnR7Zm9udC1zaXplOjZweH0ubWF0LWJhZGdlLWxhcmdlIC5tYXQtYmFkZ2UtY29udGVudHtmb250LXNpemU6MjRweH0ubWF0LWgxLC5tYXQtaGVhZGxpbmUsLm1hdC10eXBvZ3JhcGh5IGgxe2ZvbnQ6NDAwIDI0cHgvMzJweCBSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWY7bWFyZ2luOjAgMCAxNnB4fS5tYXQtaDIsLm1hdC10aXRsZSwubWF0LXR5cG9ncmFwaHkgaDJ7Zm9udDo1MDAgMjBweC8zMnB4IFJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjttYXJnaW46MCAwIDE2cHh9Lm1hdC1oMywubWF0LXN1YmhlYWRpbmctMiwubWF0LXR5cG9ncmFwaHkgaDN7Zm9udDo0MDAgMTZweC8yOHB4IFJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjttYXJnaW46MCAwIDE2cHh9Lm1hdC1oNCwubWF0LXN1YmhlYWRpbmctMSwubWF0LXR5cG9ncmFwaHkgaDR7Zm9udDo0MDAgMTVweC8yNHB4IFJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjttYXJnaW46MCAwIDE2cHh9Lm1hdC1oNSwubWF0LXR5cG9ncmFwaHkgaDV7Zm9udDo0MDAgMTEuNjJweC8yMHB4IFJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjttYXJnaW46MCAwIDEycHh9Lm1hdC1oNiwubWF0LXR5cG9ncmFwaHkgaDZ7Zm9udDo0MDAgOS4zOHB4LzIwcHggUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO21hcmdpbjowIDAgMTJweH0ubWF0LWJvZHktMiwubWF0LWJvZHktc3Ryb25ne2ZvbnQ6NTAwIDE0cHgvMjRweCBSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWZ9Lm1hdC1ib2R5LC5tYXQtYm9keS0xLC5tYXQtdHlwb2dyYXBoeXtmb250OjQwMCAxNHB4LzIwcHggUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtYm9keSBwLC5tYXQtYm9keS0xIHAsLm1hdC10eXBvZ3JhcGh5IHB7bWFyZ2luOjAgMCAxMnB4fS5tYXQtY2FwdGlvbiwubWF0LXNtYWxse2ZvbnQ6NDAwIDEycHgvMjBweCBSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWZ9Lm1hdC1kaXNwbGF5LTQsLm1hdC10eXBvZ3JhcGh5IC5tYXQtZGlzcGxheS00e2ZvbnQ6MzAwIDExMnB4LzExMnB4IFJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjttYXJnaW46MCAwIDU2cHg7bGV0dGVyLXNwYWNpbmc6LS4wNWVtfS5tYXQtZGlzcGxheS0zLC5tYXQtdHlwb2dyYXBoeSAubWF0LWRpc3BsYXktM3tmb250OjQwMCA1NnB4LzU2cHggUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO21hcmdpbjowIDAgNjRweDtsZXR0ZXItc3BhY2luZzotLjAyZW19Lm1hdC1kaXNwbGF5LTIsLm1hdC10eXBvZ3JhcGh5IC5tYXQtZGlzcGxheS0ye2ZvbnQ6NDAwIDQ1cHgvNDhweCBSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWY7bWFyZ2luOjAgMCA2NHB4O2xldHRlci1zcGFjaW5nOi0uMDA1ZW19Lm1hdC1kaXNwbGF5LTEsLm1hdC10eXBvZ3JhcGh5IC5tYXQtZGlzcGxheS0xe2ZvbnQ6NDAwIDM0cHgvNDBweCBSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWY7bWFyZ2luOjAgMCA2NHB4fS5tYXQtYm90dG9tLXNoZWV0LWNvbnRhaW5lcntmb250OjQwMCAxNHB4LzIwcHggUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtYnV0dG9uLC5tYXQtZmFiLC5tYXQtZmxhdC1idXR0b24sLm1hdC1pY29uLWJ1dHRvbiwubWF0LW1pbmktZmFiLC5tYXQtcmFpc2VkLWJ1dHRvbiwubWF0LXN0cm9rZWQtYnV0dG9ue2ZvbnQtZmFtaWx5OlJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo1MDB9Lm1hdC1idXR0b24tdG9nZ2xle2ZvbnQtZmFtaWx5OlJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZn0ubWF0LWNhcmR7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtY2FyZC10aXRsZXtmb250LXNpemU6MjRweDtmb250LXdlaWdodDo1MDB9Lm1hdC1jYXJkLWhlYWRlciAubWF0LWNhcmQtdGl0bGV7Zm9udC1zaXplOjIwcHh9Lm1hdC1jYXJkLWNvbnRlbnQsLm1hdC1jYXJkLXN1YnRpdGxle2ZvbnQtc2l6ZToxNHB4fS5tYXQtY2hlY2tib3h7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtY2hlY2tib3gtbGF5b3V0IC5tYXQtY2hlY2tib3gtbGFiZWx7bGluZS1oZWlnaHQ6MjRweH0ubWF0LWNoaXB7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NTAwfS5tYXQtY2hpcCAubWF0LWNoaXAtcmVtb3ZlLm1hdC1pY29uLC5tYXQtY2hpcCAubWF0LWNoaXAtdHJhaWxpbmctaWNvbi5tYXQtaWNvbntmb250LXNpemU6MThweH0ubWF0LXRhYmxle2ZvbnQtZmFtaWx5OlJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZn0ubWF0LWhlYWRlci1jZWxse2ZvbnQtc2l6ZToxMnB4O2ZvbnQtd2VpZ2h0OjUwMH0ubWF0LWNlbGwsLm1hdC1mb290ZXItY2VsbHtmb250LXNpemU6MTRweH0ubWF0LWNhbGVuZGFye2ZvbnQtZmFtaWx5OlJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZn0ubWF0LWNhbGVuZGFyLWJvZHl7Zm9udC1zaXplOjEzcHh9Lm1hdC1jYWxlbmRhci1ib2R5LWxhYmVsLC5tYXQtY2FsZW5kYXItcGVyaW9kLWJ1dHRvbntmb250LXNpemU6MTRweDtmb250LXdlaWdodDo1MDB9Lm1hdC1jYWxlbmRhci10YWJsZS1oZWFkZXIgdGh7Zm9udC1zaXplOjExcHg7Zm9udC13ZWlnaHQ6NDAwfS5tYXQtZGlhbG9nLXRpdGxle2ZvbnQ6NTAwIDIwcHgvMzJweCBSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWZ9Lm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVye2ZvbnQtZmFtaWx5OlJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjtmb250LXNpemU6MTVweDtmb250LXdlaWdodDo0MDB9Lm1hdC1leHBhbnNpb24tcGFuZWwtY29udGVudHtmb250OjQwMCAxNHB4LzIwcHggUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtZm9ybS1maWVsZHtmb250LXNpemU6aW5oZXJpdDtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MS4xMjU7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtZm9ybS1maWVsZC13cmFwcGVye3BhZGRpbmctYm90dG9tOjEuMzQzNzVlbX0ubWF0LWZvcm0tZmllbGQtcHJlZml4IC5tYXQtaWNvbiwubWF0LWZvcm0tZmllbGQtc3VmZml4IC5tYXQtaWNvbntmb250LXNpemU6MTUwJTtsaW5lLWhlaWdodDoxLjEyNX0ubWF0LWZvcm0tZmllbGQtcHJlZml4IC5tYXQtaWNvbi1idXR0b24sLm1hdC1mb3JtLWZpZWxkLXN1ZmZpeCAubWF0LWljb24tYnV0dG9ue2hlaWdodDoxLjVlbTt3aWR0aDoxLjVlbX0ubWF0LWZvcm0tZmllbGQtcHJlZml4IC5tYXQtaWNvbi1idXR0b24gLm1hdC1pY29uLC5tYXQtZm9ybS1maWVsZC1zdWZmaXggLm1hdC1pY29uLWJ1dHRvbiAubWF0LWljb257aGVpZ2h0OjEuMTI1ZW07bGluZS1oZWlnaHQ6MS4xMjV9Lm1hdC1mb3JtLWZpZWxkLWluZml4e3BhZGRpbmc6LjVlbSAwO2JvcmRlci10b3A6Ljg0Mzc1ZW0gc29saWQgdHJhbnNwYXJlbnR9Lm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcjpmb2N1cysubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciAubWF0LWZvcm0tZmllbGQtbGFiZWwsLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdC5tYXQtZm9ybS1maWVsZC1zaG91bGQtZmxvYXQgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjM0Mzc1ZW0pIHNjYWxlKC43NSk7d2lkdGg6MTMzLjMzMzMzJX0ubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyW2xhYmVsXTpub3QoOmxhYmVsLXNob3duKSsubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciAubWF0LWZvcm0tZmllbGQtbGFiZWx7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTEuMzQzNzRlbSkgc2NhbGUoLjc1KTt3aWR0aDoxMzMuMzMzMzQlfS5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVye3RvcDotLjg0Mzc1ZW07cGFkZGluZy10b3A6Ljg0Mzc1ZW19Lm1hdC1mb3JtLWZpZWxkLWxhYmVse3RvcDoxLjM0Mzc1ZW19Lm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZXtib3R0b206MS4zNDM3NWVtfS5tYXQtZm9ybS1maWVsZC1zdWJzY3JpcHQtd3JhcHBlcntmb250LXNpemU6NzUlO21hcmdpbi10b3A6LjY2NjY3ZW07dG9wOmNhbGMoMTAwJSAtIDEuNzkxNjdlbSl9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IC5tYXQtZm9ybS1maWVsZC13cmFwcGVye3BhZGRpbmctYm90dG9tOjEuMjVlbX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kgLm1hdC1mb3JtLWZpZWxkLWluZml4e3BhZGRpbmc6LjQzNzVlbSAwfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeS5tYXQtZm9ybS1maWVsZC1jYW4tZmxvYXQgLm1hdC1pbnB1dC1zZXJ2ZXI6Zm9jdXMrLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeS5tYXQtZm9ybS1maWVsZC1jYW4tZmxvYXQubWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1sYWJlbHt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtMS4yODEyNWVtKSBzY2FsZSguNzUpIHBlcnNwZWN0aXZlKDEwMHB4KSB0cmFuc2xhdGVaKC4wMDFweCk7LW1zLXRyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjI4MTI1ZW0pIHNjYWxlKC43NSk7d2lkdGg6MTMzLjMzMzMzJX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1hdXRvZmlsbC1jb250cm9sOi13ZWJraXQtYXV0b2ZpbGwrLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjI4MTI1ZW0pIHNjYWxlKC43NSkgcGVyc3BlY3RpdmUoMTAwcHgpIHRyYW5zbGF0ZVooLjAwMTAxcHgpOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlWSgtMS4yODEyNGVtKSBzY2FsZSguNzUpO3dpZHRoOjEzMy4zMzMzNCV9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5Lm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikrLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjI4MTI1ZW0pIHNjYWxlKC43NSkgcGVyc3BlY3RpdmUoMTAwcHgpIHRyYW5zbGF0ZVooLjAwMTAycHgpOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlWSgtMS4yODEyM2VtKSBzY2FsZSguNzUpO3dpZHRoOjEzMy4zMzMzNSV9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IC5tYXQtZm9ybS1maWVsZC1sYWJlbHt0b3A6MS4yODEyNWVtfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeSAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5le2JvdHRvbToxLjI1ZW19Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IC5tYXQtZm9ybS1maWVsZC1zdWJzY3JpcHQtd3JhcHBlcnttYXJnaW4tdG9wOi41NDE2N2VtO3RvcDpjYWxjKDEwMCUgLSAxLjY2NjY3ZW0pfUBtZWRpYSBwcmludHsubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyOmZvY3VzKy5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCwubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0Lm1hdC1mb3JtLWZpZWxkLXNob3VsZC1mbG9hdCAubWF0LWZvcm0tZmllbGQtbGFiZWx7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTEuMjgxMjJlbSkgc2NhbGUoLjc1KX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1hdXRvZmlsbC1jb250cm9sOi13ZWJraXQtYXV0b2ZpbGwrLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjI4MTIxZW0pIHNjYWxlKC43NSl9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5Lm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikrLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjI4MTJlbSkgc2NhbGUoLjc1KX19Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbCAubWF0LWZvcm0tZmllbGQtaW5maXh7cGFkZGluZzouMjVlbSAwIC43NWVtIDB9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbCAubWF0LWZvcm0tZmllbGQtbGFiZWx7dG9wOjEuMDkzNzVlbTttYXJnaW4tdG9wOi0uNWVtfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWZpbGwubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyOmZvY3VzKy5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCwubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1maWxsLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdC5tYXQtZm9ybS1maWVsZC1zaG91bGQtZmxvYXQgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0uNTkzNzVlbSkgc2NhbGUoLjc1KTt3aWR0aDoxMzMuMzMzMzMlfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWZpbGwubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyW2xhYmVsXTpub3QoOmxhYmVsLXNob3duKSsubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciAubWF0LWZvcm0tZmllbGQtbGFiZWx7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLS41OTM3NGVtKSBzY2FsZSguNzUpO3dpZHRoOjEzMy4zMzMzNCV9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtaW5maXh7cGFkZGluZzoxZW0gMCAxZW0gMH0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1sYWJlbHt0b3A6MS44NDM3NWVtO21hcmdpbi10b3A6LS4yNWVtfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyOmZvY3VzKy5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCwubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdC5tYXQtZm9ybS1maWVsZC1zaG91bGQtZmxvYXQgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjU5Mzc1ZW0pIHNjYWxlKC43NSk7d2lkdGg6MTMzLjMzMzMzJX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikrLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVse3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0xLjU5Mzc0ZW0pIHNjYWxlKC43NSk7d2lkdGg6MTMzLjMzMzM0JX0ubWF0LWdyaWQtdGlsZS1mb290ZXIsLm1hdC1ncmlkLXRpbGUtaGVhZGVye2ZvbnQtc2l6ZToxNHB4fS5tYXQtZ3JpZC10aWxlLWZvb3RlciAubWF0LWxpbmUsLm1hdC1ncmlkLXRpbGUtaGVhZGVyIC5tYXQtbGluZXt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3h9Lm1hdC1ncmlkLXRpbGUtZm9vdGVyIC5tYXQtbGluZTpudGgtY2hpbGQobisyKSwubWF0LWdyaWQtdGlsZS1oZWFkZXIgLm1hdC1saW5lOm50aC1jaGlsZChuKzIpe2ZvbnQtc2l6ZToxMnB4fWlucHV0Lm1hdC1pbnB1dC1lbGVtZW50e21hcmdpbi10b3A6LS4wNjI1ZW19Lm1hdC1tZW51LWl0ZW17Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjQwMH0ubWF0LXBhZ2luYXRvciwubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlcntmb250LWZhbWlseTpSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWY7Zm9udC1zaXplOjEycHh9Lm1hdC1yYWRpby1idXR0b257Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtc2VsZWN0e2ZvbnQtZmFtaWx5OlJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZn0ubWF0LXNlbGVjdC10cmlnZ2Vye2hlaWdodDoxLjEyNWVtfS5tYXQtc2xpZGUtdG9nZ2xlLWNvbnRlbnR7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXRleHR7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxMnB4O2ZvbnQtd2VpZ2h0OjUwMH0ubWF0LXN0ZXBwZXItaG9yaXpvbnRhbCwubWF0LXN0ZXBwZXItdmVydGljYWx7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtc3RlcC1sYWJlbHtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo0MDB9Lm1hdC1zdGVwLXN1Yi1sYWJlbC1lcnJvcntmb250LXdlaWdodDo0MDB9Lm1hdC1zdGVwLWxhYmVsLWVycm9ye2ZvbnQtc2l6ZToxNHB4fS5tYXQtc3RlcC1sYWJlbC1zZWxlY3RlZHtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo1MDB9Lm1hdC10YWItZ3JvdXB7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtdGFiLWxhYmVsLC5tYXQtdGFiLWxpbmt7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH0ubWF0LXRvb2xiYXIsLm1hdC10b29sYmFyIGgxLC5tYXQtdG9vbGJhciBoMiwubWF0LXRvb2xiYXIgaDMsLm1hdC10b29sYmFyIGg0LC5tYXQtdG9vbGJhciBoNSwubWF0LXRvb2xiYXIgaDZ7Zm9udDo1MDAgMjBweC8zMnB4IFJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjttYXJnaW46MH0ubWF0LXRvb2x0aXB7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxMHB4O3BhZGRpbmctdG9wOjZweDtwYWRkaW5nLWJvdHRvbTo2cHh9Lm1hdC10b29sdGlwLWhhbmRzZXR7Zm9udC1zaXplOjE0cHg7cGFkZGluZy10b3A6OHB4O3BhZGRpbmctYm90dG9tOjhweH0ubWF0LWxpc3QtaXRlbXtmb250LWZhbWlseTpSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWZ9Lm1hdC1saXN0LW9wdGlvbntmb250LWZhbWlseTpSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWZ9Lm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW17Zm9udC1zaXplOjE2cHh9Lm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0gLm1hdC1saW5le3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpcztkaXNwbGF5OmJsb2NrO2JveC1zaXppbmc6Ym9yZGVyLWJveH0ubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSAubWF0LWxpbmU6bnRoLWNoaWxkKG4rMil7Zm9udC1zaXplOjE0cHh9Lm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbntmb250LXNpemU6MTZweH0ubWF0LWxpc3QtYmFzZSAubWF0LWxpc3Qtb3B0aW9uIC5tYXQtbGluZXt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3h9Lm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbiAubWF0LWxpbmU6bnRoLWNoaWxkKG4rMil7Zm9udC1zaXplOjE0cHh9Lm1hdC1saXN0LWJhc2UgLm1hdC1zdWJoZWFkZXJ7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtd2VpZ2h0OjUwMH0ubWF0LWxpc3QtYmFzZVtkZW5zZV0gLm1hdC1saXN0LWl0ZW17Zm9udC1zaXplOjEycHh9Lm1hdC1saXN0LWJhc2VbZGVuc2VdIC5tYXQtbGlzdC1pdGVtIC5tYXQtbGluZXt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3h9Lm1hdC1saXN0LWJhc2VbZGVuc2VdIC5tYXQtbGlzdC1pdGVtIC5tYXQtbGluZTpudGgtY2hpbGQobisyKXtmb250LXNpemU6MTJweH0ubWF0LWxpc3QtYmFzZVtkZW5zZV0gLm1hdC1saXN0LW9wdGlvbntmb250LXNpemU6MTJweH0ubWF0LWxpc3QtYmFzZVtkZW5zZV0gLm1hdC1saXN0LW9wdGlvbiAubWF0LWxpbmV7d2hpdGUtc3BhY2U6bm93cmFwO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94fS5tYXQtbGlzdC1iYXNlW2RlbnNlXSAubWF0LWxpc3Qtb3B0aW9uIC5tYXQtbGluZTpudGgtY2hpbGQobisyKXtmb250LXNpemU6MTJweH0ubWF0LWxpc3QtYmFzZVtkZW5zZV0gLm1hdC1zdWJoZWFkZXJ7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxMnB4O2ZvbnQtd2VpZ2h0OjUwMH0ubWF0LW9wdGlvbntmb250LWZhbWlseTpSb2JvdG8sXCJIZWx2ZXRpY2EgTmV1ZVwiLHNhbnMtc2VyaWY7Zm9udC1zaXplOjE2cHh9Lm1hdC1vcHRncm91cC1sYWJlbHtmb250OjUwMCAxNHB4LzI0cHggUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtc2ltcGxlLXNuYWNrYmFye2ZvbnQtZmFtaWx5OlJvYm90byxcIkhlbHZldGljYSBOZXVlXCIsc2Fucy1zZXJpZjtmb250LXNpemU6MTRweH0ubWF0LXNpbXBsZS1zbmFja2Jhci1hY3Rpb257bGluZS1oZWlnaHQ6MTtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtd2VpZ2h0OjUwMH0ubWF0LXRyZWV7Zm9udC1mYW1pbHk6Um9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmfS5tYXQtbmVzdGVkLXRyZWUtbm9kZSwubWF0LXRyZWUtbm9kZXtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE0cHh9Lm1hdC1yaXBwbGV7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOnJlbGF0aXZlfS5tYXQtcmlwcGxlLm1hdC1yaXBwbGUtdW5ib3VuZGVke292ZXJmbG93OnZpc2libGV9Lm1hdC1yaXBwbGUtZWxlbWVudHtwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXItcmFkaXVzOjUwJTtwb2ludGVyLWV2ZW50czpub25lO3RyYW5zaXRpb246b3BhY2l0eSx0cmFuc2Zvcm0gMHMgY3ViaWMtYmV6aWVyKDAsMCwuMiwxKTt0cmFuc2Zvcm06c2NhbGUoMCl9QG1lZGlhICgtbXMtaGlnaC1jb250cmFzdDphY3RpdmUpey5tYXQtcmlwcGxlLWVsZW1lbnR7ZGlzcGxheTpub25lfX0uY2RrLXZpc3VhbGx5LWhpZGRlbntib3JkZXI6MDtjbGlwOnJlY3QoMCAwIDAgMCk7aGVpZ2h0OjFweDttYXJnaW46LTFweDtvdmVyZmxvdzpoaWRkZW47cGFkZGluZzowO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjFweDtvdXRsaW5lOjA7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmV9LmNkay1nbG9iYWwtb3ZlcmxheS13cmFwcGVyLC5jZGstb3ZlcmxheS1jb250YWluZXJ7cG9pbnRlci1ldmVudHM6bm9uZTt0b3A6MDtsZWZ0OjA7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJX0uY2RrLW92ZXJsYXktY29udGFpbmVye3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6MTAwMH0uY2RrLW92ZXJsYXktY29udGFpbmVyOmVtcHR5e2Rpc3BsYXk6bm9uZX0uY2RrLWdsb2JhbC1vdmVybGF5LXdyYXBwZXJ7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTAwMH0uY2RrLW92ZXJsYXktcGFuZXtwb3NpdGlvbjphYnNvbHV0ZTtwb2ludGVyLWV2ZW50czphdXRvO2JveC1zaXppbmc6Ym9yZGVyLWJveDt6LWluZGV4OjEwMDA7ZGlzcGxheTpmbGV4O21heC13aWR0aDoxMDAlO21heC1oZWlnaHQ6MTAwJX0uY2RrLW92ZXJsYXktYmFja2Ryb3B7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7bGVmdDowO3JpZ2h0OjA7ei1pbmRleDoxMDAwO3BvaW50ZXItZXZlbnRzOmF1dG87LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOnRyYW5zcGFyZW50O3RyYW5zaXRpb246b3BhY2l0eSAuNHMgY3ViaWMtYmV6aWVyKC4yNSwuOCwuMjUsMSk7b3BhY2l0eTowfS5jZGstb3ZlcmxheS1iYWNrZHJvcC5jZGstb3ZlcmxheS1iYWNrZHJvcC1zaG93aW5ne29wYWNpdHk6MX1AbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6YWN0aXZlKXsuY2RrLW92ZXJsYXktYmFja2Ryb3AuY2RrLW92ZXJsYXktYmFja2Ryb3Atc2hvd2luZ3tvcGFjaXR5Oi42fX0uY2RrLW92ZXJsYXktZGFyay1iYWNrZHJvcHtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjMyKX0uY2RrLW92ZXJsYXktdHJhbnNwYXJlbnQtYmFja2Ryb3AsLmNkay1vdmVybGF5LXRyYW5zcGFyZW50LWJhY2tkcm9wLmNkay1vdmVybGF5LWJhY2tkcm9wLXNob3dpbmd7b3BhY2l0eTowfS5jZGstb3ZlcmxheS1jb25uZWN0ZWQtcG9zaXRpb24tYm91bmRpbmctYm94e3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTAwMDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO21pbi13aWR0aDoxcHg7bWluLWhlaWdodDoxcHh9LmNkay1nbG9iYWwtc2Nyb2xsYmxvY2t7cG9zaXRpb246Zml4ZWQ7d2lkdGg6MTAwJTtvdmVyZmxvdy15OnNjcm9sbH1Aa2V5ZnJhbWVzIGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLXN0YXJ0ey8qISovfUBrZXlmcmFtZXMgY2RrLXRleHQtZmllbGQtYXV0b2ZpbGwtZW5key8qISovfS5jZGstdGV4dC1maWVsZC1hdXRvZmlsbC1tb25pdG9yZWQ6LXdlYmtpdC1hdXRvZmlsbHthbmltYXRpb24tbmFtZTpjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1zdGFydH0uY2RrLXRleHQtZmllbGQtYXV0b2ZpbGwtbW9uaXRvcmVkOm5vdCg6LXdlYmtpdC1hdXRvZmlsbCl7YW5pbWF0aW9uLW5hbWU6Y2RrLXRleHQtZmllbGQtYXV0b2ZpbGwtZW5kfXRleHRhcmVhLmNkay10ZXh0YXJlYS1hdXRvc2l6ZXtyZXNpemU6bm9uZX10ZXh0YXJlYS5jZGstdGV4dGFyZWEtYXV0b3NpemUtbWVhc3VyaW5ne2hlaWdodDphdXRvIWltcG9ydGFudDtvdmVyZmxvdzpoaWRkZW4haW1wb3J0YW50O3BhZGRpbmc6MnB4IDAhaW1wb3J0YW50O2JveC1zaXppbmc6Y29udGVudC1ib3ghaW1wb3J0YW50fS5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4xKX0ubWF0LW9wdGlvbntjb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC1vcHRpb246Zm9jdXM6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSwubWF0LW9wdGlvbjpob3Zlcjpub3QoLm1hdC1vcHRpb24tZGlzYWJsZWQpe2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMDQpfS5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1vcHRpb24tbXVsdGlwbGUpOm5vdCgubWF0LW9wdGlvbi1kaXNhYmxlZCl7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC4wNCl9Lm1hdC1vcHRpb24ubWF0LWFjdGl2ZXtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjA0KTtjb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC1vcHRpb24ubWF0LW9wdGlvbi1kaXNhYmxlZHtjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1wcmltYXJ5IC5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1vcHRpb24tZGlzYWJsZWQpe2NvbG9yOiMzZjUxYjV9Lm1hdC1hY2NlbnQgLm1hdC1vcHRpb24ubWF0LXNlbGVjdGVkOm5vdCgubWF0LW9wdGlvbi1kaXNhYmxlZCl7Y29sb3I6I2ZmNDA4MX0ubWF0LXdhcm4gLm1hdC1vcHRpb24ubWF0LXNlbGVjdGVkOm5vdCgubWF0LW9wdGlvbi1kaXNhYmxlZCl7Y29sb3I6I2Y0NDMzNn0ubWF0LW9wdGdyb3VwLWxhYmVse2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LW9wdGdyb3VwLWRpc2FibGVkIC5tYXQtb3B0Z3JvdXAtbGFiZWx7Y29sb3I6cmdiYSgwLDAsMCwuMzgpfS5tYXQtcHNldWRvLWNoZWNrYm94e2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LXBzZXVkby1jaGVja2JveDo6YWZ0ZXJ7Y29sb3I6I2ZhZmFmYX0ubWF0LWFjY2VudCAubWF0LXBzZXVkby1jaGVja2JveC1jaGVja2VkLC5tYXQtYWNjZW50IC5tYXQtcHNldWRvLWNoZWNrYm94LWluZGV0ZXJtaW5hdGUsLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCwubWF0LXBzZXVkby1jaGVja2JveC1pbmRldGVybWluYXRle2JhY2tncm91bmQ6I2ZmNDA4MX0ubWF0LXByaW1hcnkgLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCwubWF0LXByaW1hcnkgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZXtiYWNrZ3JvdW5kOiMzZjUxYjV9Lm1hdC13YXJuIC5tYXQtcHNldWRvLWNoZWNrYm94LWNoZWNrZWQsLm1hdC13YXJuIC5tYXQtcHNldWRvLWNoZWNrYm94LWluZGV0ZXJtaW5hdGV7YmFja2dyb3VuZDojZjQ0MzM2fS5tYXQtcHNldWRvLWNoZWNrYm94LWNoZWNrZWQubWF0LXBzZXVkby1jaGVja2JveC1kaXNhYmxlZCwubWF0LXBzZXVkby1jaGVja2JveC1pbmRldGVybWluYXRlLm1hdC1wc2V1ZG8tY2hlY2tib3gtZGlzYWJsZWR7YmFja2dyb3VuZDojYjBiMGIwfS5tYXQtZWxldmF0aW9uLXowe2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLC4yKSwwIDAgMCAwIHJnYmEoMCwwLDAsLjE0KSwwIDAgMCAwIHJnYmEoMCwwLDAsLjEyKX0ubWF0LWVsZXZhdGlvbi16MXtib3gtc2hhZG93OjAgMnB4IDFweCAtMXB4IHJnYmEoMCwwLDAsLjIpLDAgMXB4IDFweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCAzcHggMCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejJ7Ym94LXNoYWRvdzowIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLC4yKSwwIDJweCAycHggMCByZ2JhKDAsMCwwLC4xNCksMCAxcHggNXB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtZWxldmF0aW9uLXoze2JveC1zaGFkb3c6MCAzcHggM3B4IC0ycHggcmdiYSgwLDAsMCwuMiksMCAzcHggNHB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgMXB4IDhweCAwIHJnYmEoMCwwLDAsLjEyKX0ubWF0LWVsZXZhdGlvbi16NHtib3gtc2hhZG93OjAgMnB4IDRweCAtMXB4IHJnYmEoMCwwLDAsLjIpLDAgNHB4IDVweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtZWxldmF0aW9uLXo1e2JveC1zaGFkb3c6MCAzcHggNXB4IC0xcHggcmdiYSgwLDAsMCwuMiksMCA1cHggOHB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgMXB4IDE0cHggMCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejZ7Ym94LXNoYWRvdzowIDNweCA1cHggLTFweCByZ2JhKDAsMCwwLC4yKSwwIDZweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgMXB4IDE4cHggMCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejd7Ym94LXNoYWRvdzowIDRweCA1cHggLTJweCByZ2JhKDAsMCwwLC4yKSwwIDdweCAxMHB4IDFweCByZ2JhKDAsMCwwLC4xNCksMCAycHggMTZweCAxcHggcmdiYSgwLDAsMCwuMTIpfS5tYXQtZWxldmF0aW9uLXo4e2JveC1zaGFkb3c6MCA1cHggNXB4IC0zcHggcmdiYSgwLDAsMCwuMiksMCA4cHggMTBweCAxcHggcmdiYSgwLDAsMCwuMTQpLDAgM3B4IDE0cHggMnB4IHJnYmEoMCwwLDAsLjEyKX0ubWF0LWVsZXZhdGlvbi16OXtib3gtc2hhZG93OjAgNXB4IDZweCAtM3B4IHJnYmEoMCwwLDAsLjIpLDAgOXB4IDEycHggMXB4IHJnYmEoMCwwLDAsLjE0KSwwIDNweCAxNnB4IDJweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejEwe2JveC1zaGFkb3c6MCA2cHggNnB4IC0zcHggcmdiYSgwLDAsMCwuMiksMCAxMHB4IDE0cHggMXB4IHJnYmEoMCwwLDAsLjE0KSwwIDRweCAxOHB4IDNweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejExe2JveC1zaGFkb3c6MCA2cHggN3B4IC00cHggcmdiYSgwLDAsMCwuMiksMCAxMXB4IDE1cHggMXB4IHJnYmEoMCwwLDAsLjE0KSwwIDRweCAyMHB4IDNweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejEye2JveC1zaGFkb3c6MCA3cHggOHB4IC00cHggcmdiYSgwLDAsMCwuMiksMCAxMnB4IDE3cHggMnB4IHJnYmEoMCwwLDAsLjE0KSwwIDVweCAyMnB4IDRweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejEze2JveC1zaGFkb3c6MCA3cHggOHB4IC00cHggcmdiYSgwLDAsMCwuMiksMCAxM3B4IDE5cHggMnB4IHJnYmEoMCwwLDAsLjE0KSwwIDVweCAyNHB4IDRweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejE0e2JveC1zaGFkb3c6MCA3cHggOXB4IC00cHggcmdiYSgwLDAsMCwuMiksMCAxNHB4IDIxcHggMnB4IHJnYmEoMCwwLDAsLjE0KSwwIDVweCAyNnB4IDRweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejE1e2JveC1zaGFkb3c6MCA4cHggOXB4IC01cHggcmdiYSgwLDAsMCwuMiksMCAxNXB4IDIycHggMnB4IHJnYmEoMCwwLDAsLjE0KSwwIDZweCAyOHB4IDVweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejE2e2JveC1zaGFkb3c6MCA4cHggMTBweCAtNXB4IHJnYmEoMCwwLDAsLjIpLDAgMTZweCAyNHB4IDJweCByZ2JhKDAsMCwwLC4xNCksMCA2cHggMzBweCA1cHggcmdiYSgwLDAsMCwuMTIpfS5tYXQtZWxldmF0aW9uLXoxN3tib3gtc2hhZG93OjAgOHB4IDExcHggLTVweCByZ2JhKDAsMCwwLC4yKSwwIDE3cHggMjZweCAycHggcmdiYSgwLDAsMCwuMTQpLDAgNnB4IDMycHggNXB4IHJnYmEoMCwwLDAsLjEyKX0ubWF0LWVsZXZhdGlvbi16MTh7Ym94LXNoYWRvdzowIDlweCAxMXB4IC01cHggcmdiYSgwLDAsMCwuMiksMCAxOHB4IDI4cHggMnB4IHJnYmEoMCwwLDAsLjE0KSwwIDdweCAzNHB4IDZweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejE5e2JveC1zaGFkb3c6MCA5cHggMTJweCAtNnB4IHJnYmEoMCwwLDAsLjIpLDAgMTlweCAyOXB4IDJweCByZ2JhKDAsMCwwLC4xNCksMCA3cHggMzZweCA2cHggcmdiYSgwLDAsMCwuMTIpfS5tYXQtZWxldmF0aW9uLXoyMHtib3gtc2hhZG93OjAgMTBweCAxM3B4IC02cHggcmdiYSgwLDAsMCwuMiksMCAyMHB4IDMxcHggM3B4IHJnYmEoMCwwLDAsLjE0KSwwIDhweCAzOHB4IDdweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejIxe2JveC1zaGFkb3c6MCAxMHB4IDEzcHggLTZweCByZ2JhKDAsMCwwLC4yKSwwIDIxcHggMzNweCAzcHggcmdiYSgwLDAsMCwuMTQpLDAgOHB4IDQwcHggN3B4IHJnYmEoMCwwLDAsLjEyKX0ubWF0LWVsZXZhdGlvbi16MjJ7Ym94LXNoYWRvdzowIDEwcHggMTRweCAtNnB4IHJnYmEoMCwwLDAsLjIpLDAgMjJweCAzNXB4IDNweCByZ2JhKDAsMCwwLC4xNCksMCA4cHggNDJweCA3cHggcmdiYSgwLDAsMCwuMTIpfS5tYXQtZWxldmF0aW9uLXoyM3tib3gtc2hhZG93OjAgMTFweCAxNHB4IC03cHggcmdiYSgwLDAsMCwuMiksMCAyM3B4IDM2cHggM3B4IHJnYmEoMCwwLDAsLjE0KSwwIDlweCA0NHB4IDhweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1lbGV2YXRpb24tejI0e2JveC1zaGFkb3c6MCAxMXB4IDE1cHggLTdweCByZ2JhKDAsMCwwLC4yKSwwIDI0cHggMzhweCAzcHggcmdiYSgwLDAsMCwuMTQpLDAgOXB4IDQ2cHggOHB4IHJnYmEoMCwwLDAsLjEyKX0ubWF0LWFwcC1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6I2ZhZmFmYTtjb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC10aGVtZS1sb2FkZWQtbWFya2Vye2Rpc3BsYXk6bm9uZX0ubWF0LWF1dG9jb21wbGV0ZS1wYW5lbHtiYWNrZ3JvdW5kOiNmZmY7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtYXV0b2NvbXBsZXRlLXBhbmVsOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCAycHggNHB4IC0xcHggcmdiYSgwLDAsMCwuMiksMCA0cHggNXB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgMXB4IDEwcHggMCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1hdXRvY29tcGxldGUtcGFuZWwgLm1hdC1vcHRpb24ubWF0LXNlbGVjdGVkOm5vdCgubWF0LWFjdGl2ZSk6bm90KDpob3Zlcil7YmFja2dyb3VuZDojZmZmfS5tYXQtYXV0b2NvbXBsZXRlLXBhbmVsIC5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1hY3RpdmUpOm5vdCg6aG92ZXIpOm5vdCgubWF0LW9wdGlvbi1kaXNhYmxlZCl7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtYmFkZ2UtY29udGVudHtjb2xvcjojZmZmO2JhY2tncm91bmQ6IzNmNTFiNX1AbWVkaWEgKC1tcy1oaWdoLWNvbnRyYXN0OmFjdGl2ZSl7Lm1hdC1iYWRnZS1jb250ZW50e291dGxpbmU6c29saWQgMXB4O2JvcmRlci1yYWRpdXM6MH19Lm1hdC1iYWRnZS1hY2NlbnQgLm1hdC1iYWRnZS1jb250ZW50e2JhY2tncm91bmQ6I2ZmNDA4MTtjb2xvcjojZmZmfS5tYXQtYmFkZ2Utd2FybiAubWF0LWJhZGdlLWNvbnRlbnR7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiNmNDQzMzZ9Lm1hdC1iYWRnZXtwb3NpdGlvbjpyZWxhdGl2ZX0ubWF0LWJhZGdlLWhpZGRlbiAubWF0LWJhZGdlLWNvbnRlbnR7ZGlzcGxheTpub25lfS5tYXQtYmFkZ2UtZGlzYWJsZWQgLm1hdC1iYWRnZS1jb250ZW50e2JhY2tncm91bmQ6I2I5YjliOTtjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1iYWRnZS1jb250ZW50e3Bvc2l0aW9uOmFic29sdXRlO3RleHQtYWxpZ246Y2VudGVyO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1yYWRpdXM6NTAlO3RyYW5zaXRpb246dHJhbnNmb3JtIC4ycyBlYXNlLWluLW91dDt0cmFuc2Zvcm06c2NhbGUoLjYpO292ZXJmbG93OmhpZGRlbjt3aGl0ZS1zcGFjZTpub3dyYXA7dGV4dC1vdmVyZmxvdzplbGxpcHNpcztwb2ludGVyLWV2ZW50czpub25lfS5tYXQtYmFkZ2UtY29udGVudC5tYXQtYmFkZ2UtYWN0aXZle3RyYW5zZm9ybTpub25lfS5tYXQtYmFkZ2Utc21hbGwgLm1hdC1iYWRnZS1jb250ZW50e3dpZHRoOjE2cHg7aGVpZ2h0OjE2cHg7bGluZS1oZWlnaHQ6MTZweH0ubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1hYm92ZSAubWF0LWJhZGdlLWNvbnRlbnR7dG9wOi04cHh9Lm1hdC1iYWRnZS1zbWFsbC5tYXQtYmFkZ2UtYmVsb3cgLm1hdC1iYWRnZS1jb250ZW50e2JvdHRvbTotOHB4fS5tYXQtYmFkZ2Utc21hbGwubWF0LWJhZGdlLWJlZm9yZSAubWF0LWJhZGdlLWNvbnRlbnR7bGVmdDotMTZweH1bZGlyPXJ0bF0gLm1hdC1iYWRnZS1zbWFsbC5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudHtsZWZ0OmF1dG87cmlnaHQ6LTE2cHh9Lm1hdC1iYWRnZS1zbWFsbC5tYXQtYmFkZ2UtYWZ0ZXIgLm1hdC1iYWRnZS1jb250ZW50e3JpZ2h0Oi0xNnB4fVtkaXI9cnRsXSAubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnR7cmlnaHQ6YXV0bztsZWZ0Oi0xNnB4fS5tYXQtYmFkZ2Utc21hbGwubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWJlZm9yZSAubWF0LWJhZGdlLWNvbnRlbnR7bGVmdDotOHB4fVtkaXI9cnRsXSAubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50e2xlZnQ6YXV0bztyaWdodDotOHB4fS5tYXQtYmFkZ2Utc21hbGwubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudHtyaWdodDotOHB4fVtkaXI9cnRsXSAubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnR7cmlnaHQ6YXV0bztsZWZ0Oi04cHh9Lm1hdC1iYWRnZS1tZWRpdW0gLm1hdC1iYWRnZS1jb250ZW50e3dpZHRoOjIycHg7aGVpZ2h0OjIycHg7bGluZS1oZWlnaHQ6MjJweH0ubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2UtYWJvdmUgLm1hdC1iYWRnZS1jb250ZW50e3RvcDotMTFweH0ubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2UtYmVsb3cgLm1hdC1iYWRnZS1jb250ZW50e2JvdHRvbTotMTFweH0ubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudHtsZWZ0Oi0yMnB4fVtkaXI9cnRsXSAubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudHtsZWZ0OmF1dG87cmlnaHQ6LTIycHh9Lm1hdC1iYWRnZS1tZWRpdW0ubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudHtyaWdodDotMjJweH1bZGlyPXJ0bF0gLm1hdC1iYWRnZS1tZWRpdW0ubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudHtyaWdodDphdXRvO2xlZnQ6LTIycHh9Lm1hdC1iYWRnZS1tZWRpdW0ubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWJlZm9yZSAubWF0LWJhZGdlLWNvbnRlbnR7bGVmdDotMTFweH1bZGlyPXJ0bF0gLm1hdC1iYWRnZS1tZWRpdW0ubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWJlZm9yZSAubWF0LWJhZGdlLWNvbnRlbnR7bGVmdDphdXRvO3JpZ2h0Oi0xMXB4fS5tYXQtYmFkZ2UtbWVkaXVtLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnR7cmlnaHQ6LTExcHh9W2Rpcj1ydGxdIC5tYXQtYmFkZ2UtbWVkaXVtLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnR7cmlnaHQ6YXV0bztsZWZ0Oi0xMXB4fS5tYXQtYmFkZ2UtbGFyZ2UgLm1hdC1iYWRnZS1jb250ZW50e3dpZHRoOjI4cHg7aGVpZ2h0OjI4cHg7bGluZS1oZWlnaHQ6MjhweH0ubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1hYm92ZSAubWF0LWJhZGdlLWNvbnRlbnR7dG9wOi0xNHB4fS5tYXQtYmFkZ2UtbGFyZ2UubWF0LWJhZGdlLWJlbG93IC5tYXQtYmFkZ2UtY29udGVudHtib3R0b206LTE0cHh9Lm1hdC1iYWRnZS1sYXJnZS5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudHtsZWZ0Oi0yOHB4fVtkaXI9cnRsXSAubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50e2xlZnQ6YXV0bztyaWdodDotMjhweH0ubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnR7cmlnaHQ6LTI4cHh9W2Rpcj1ydGxdIC5tYXQtYmFkZ2UtbGFyZ2UubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudHtyaWdodDphdXRvO2xlZnQ6LTI4cHh9Lm1hdC1iYWRnZS1sYXJnZS5tYXQtYmFkZ2Utb3ZlcmxhcC5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudHtsZWZ0Oi0xNHB4fVtkaXI9cnRsXSAubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50e2xlZnQ6YXV0bztyaWdodDotMTRweH0ubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnR7cmlnaHQ6LTE0cHh9W2Rpcj1ydGxdIC5tYXQtYmFkZ2UtbGFyZ2UubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudHtyaWdodDphdXRvO2xlZnQ6LTE0cHh9Lm1hdC1ib3R0b20tc2hlZXQtY29udGFpbmVye2JveC1zaGFkb3c6MCA4cHggMTBweCAtNXB4IHJnYmEoMCwwLDAsLjIpLDAgMTZweCAyNHB4IDJweCByZ2JhKDAsMCwwLC4xNCksMCA2cHggMzBweCA1cHggcmdiYSgwLDAsMCwuMTIpO2JhY2tncm91bmQ6I2ZmZjtjb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC1idXR0b24sLm1hdC1pY29uLWJ1dHRvbiwubWF0LXN0cm9rZWQtYnV0dG9ue2NvbG9yOmluaGVyaXQ7YmFja2dyb3VuZDowIDB9Lm1hdC1idXR0b24ubWF0LXByaW1hcnksLm1hdC1pY29uLWJ1dHRvbi5tYXQtcHJpbWFyeSwubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC1wcmltYXJ5e2NvbG9yOiMzZjUxYjV9Lm1hdC1idXR0b24ubWF0LWFjY2VudCwubWF0LWljb24tYnV0dG9uLm1hdC1hY2NlbnQsLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtYWNjZW50e2NvbG9yOiNmZjQwODF9Lm1hdC1idXR0b24ubWF0LXdhcm4sLm1hdC1pY29uLWJ1dHRvbi5tYXQtd2FybiwubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC13YXJue2NvbG9yOiNmNDQzMzZ9Lm1hdC1idXR0b24ubWF0LWFjY2VudFtkaXNhYmxlZF0sLm1hdC1idXR0b24ubWF0LXByaW1hcnlbZGlzYWJsZWRdLC5tYXQtYnV0dG9uLm1hdC13YXJuW2Rpc2FibGVkXSwubWF0LWJ1dHRvbltkaXNhYmxlZF1bZGlzYWJsZWRdLC5tYXQtaWNvbi1idXR0b24ubWF0LWFjY2VudFtkaXNhYmxlZF0sLm1hdC1pY29uLWJ1dHRvbi5tYXQtcHJpbWFyeVtkaXNhYmxlZF0sLm1hdC1pY29uLWJ1dHRvbi5tYXQtd2FybltkaXNhYmxlZF0sLm1hdC1pY29uLWJ1dHRvbltkaXNhYmxlZF1bZGlzYWJsZWRdLC5tYXQtc3Ryb2tlZC1idXR0b24ubWF0LWFjY2VudFtkaXNhYmxlZF0sLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtcHJpbWFyeVtkaXNhYmxlZF0sLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtd2FybltkaXNhYmxlZF0sLm1hdC1zdHJva2VkLWJ1dHRvbltkaXNhYmxlZF1bZGlzYWJsZWRde2NvbG9yOnJnYmEoMCwwLDAsLjI2KX0ubWF0LWJ1dHRvbi5tYXQtcHJpbWFyeSAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5LC5tYXQtaWNvbi1idXR0b24ubWF0LXByaW1hcnkgLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC1wcmltYXJ5IC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXl7YmFja2dyb3VuZC1jb2xvcjojM2Y1MWI1fS5tYXQtYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwubWF0LWljb24tYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheXtiYWNrZ3JvdW5kLWNvbG9yOiNmZjQwODF9Lm1hdC1idXR0b24ubWF0LXdhcm4gLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwubWF0LWljb24tYnV0dG9uLm1hdC13YXJuIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXksLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtd2FybiAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5e2JhY2tncm91bmQtY29sb3I6I2Y0NDMzNn0ubWF0LWJ1dHRvbltkaXNhYmxlZF0gLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwubWF0LWljb24tYnV0dG9uW2Rpc2FibGVkXSAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5LC5tYXQtc3Ryb2tlZC1idXR0b25bZGlzYWJsZWRdIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXl7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0ubWF0LWJ1dHRvbiAubWF0LXJpcHBsZS1lbGVtZW50LC5tYXQtaWNvbi1idXR0b24gLm1hdC1yaXBwbGUtZWxlbWVudCwubWF0LXN0cm9rZWQtYnV0dG9uIC5tYXQtcmlwcGxlLWVsZW1lbnR7b3BhY2l0eTouMTtiYWNrZ3JvdW5kLWNvbG9yOmN1cnJlbnRDb2xvcn0ubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5e2JhY2tncm91bmQ6IzAwMH0ubWF0LXN0cm9rZWQtYnV0dG9uOm5vdChbZGlzYWJsZWRdKXtib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtZmFiLC5tYXQtZmxhdC1idXR0b24sLm1hdC1taW5pLWZhYiwubWF0LXJhaXNlZC1idXR0b257Y29sb3I6cmdiYSgwLDAsMCwuODcpO2JhY2tncm91bmQtY29sb3I6I2ZmZn0ubWF0LWZhYi5tYXQtcHJpbWFyeSwubWF0LWZsYXQtYnV0dG9uLm1hdC1wcmltYXJ5LC5tYXQtbWluaS1mYWIubWF0LXByaW1hcnksLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5e2NvbG9yOiNmZmZ9Lm1hdC1mYWIubWF0LWFjY2VudCwubWF0LWZsYXQtYnV0dG9uLm1hdC1hY2NlbnQsLm1hdC1taW5pLWZhYi5tYXQtYWNjZW50LC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtYWNjZW50e2NvbG9yOiNmZmZ9Lm1hdC1mYWIubWF0LXdhcm4sLm1hdC1mbGF0LWJ1dHRvbi5tYXQtd2FybiwubWF0LW1pbmktZmFiLm1hdC13YXJuLC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtd2Fybntjb2xvcjojZmZmfS5tYXQtZmFiLm1hdC1hY2NlbnRbZGlzYWJsZWRdLC5tYXQtZmFiLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwubWF0LWZhYi5tYXQtd2FybltkaXNhYmxlZF0sLm1hdC1mYWJbZGlzYWJsZWRdW2Rpc2FibGVkXSwubWF0LWZsYXQtYnV0dG9uLm1hdC1hY2NlbnRbZGlzYWJsZWRdLC5tYXQtZmxhdC1idXR0b24ubWF0LXByaW1hcnlbZGlzYWJsZWRdLC5tYXQtZmxhdC1idXR0b24ubWF0LXdhcm5bZGlzYWJsZWRdLC5tYXQtZmxhdC1idXR0b25bZGlzYWJsZWRdW2Rpc2FibGVkXSwubWF0LW1pbmktZmFiLm1hdC1hY2NlbnRbZGlzYWJsZWRdLC5tYXQtbWluaS1mYWIubWF0LXByaW1hcnlbZGlzYWJsZWRdLC5tYXQtbWluaS1mYWIubWF0LXdhcm5bZGlzYWJsZWRdLC5tYXQtbWluaS1mYWJbZGlzYWJsZWRdW2Rpc2FibGVkXSwubWF0LXJhaXNlZC1idXR0b24ubWF0LWFjY2VudFtkaXNhYmxlZF0sLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwubWF0LXJhaXNlZC1idXR0b24ubWF0LXdhcm5bZGlzYWJsZWRdLC5tYXQtcmFpc2VkLWJ1dHRvbltkaXNhYmxlZF1bZGlzYWJsZWRde2NvbG9yOnJnYmEoMCwwLDAsLjI2KX0ubWF0LWZhYi5tYXQtcHJpbWFyeSwubWF0LWZsYXQtYnV0dG9uLm1hdC1wcmltYXJ5LC5tYXQtbWluaS1mYWIubWF0LXByaW1hcnksLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5e2JhY2tncm91bmQtY29sb3I6IzNmNTFiNX0ubWF0LWZhYi5tYXQtYWNjZW50LC5tYXQtZmxhdC1idXR0b24ubWF0LWFjY2VudCwubWF0LW1pbmktZmFiLm1hdC1hY2NlbnQsLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1hY2NlbnR7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxfS5tYXQtZmFiLm1hdC13YXJuLC5tYXQtZmxhdC1idXR0b24ubWF0LXdhcm4sLm1hdC1taW5pLWZhYi5tYXQtd2FybiwubWF0LXJhaXNlZC1idXR0b24ubWF0LXdhcm57YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtZmFiLm1hdC1hY2NlbnRbZGlzYWJsZWRdLC5tYXQtZmFiLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwubWF0LWZhYi5tYXQtd2FybltkaXNhYmxlZF0sLm1hdC1mYWJbZGlzYWJsZWRdW2Rpc2FibGVkXSwubWF0LWZsYXQtYnV0dG9uLm1hdC1hY2NlbnRbZGlzYWJsZWRdLC5tYXQtZmxhdC1idXR0b24ubWF0LXByaW1hcnlbZGlzYWJsZWRdLC5tYXQtZmxhdC1idXR0b24ubWF0LXdhcm5bZGlzYWJsZWRdLC5tYXQtZmxhdC1idXR0b25bZGlzYWJsZWRdW2Rpc2FibGVkXSwubWF0LW1pbmktZmFiLm1hdC1hY2NlbnRbZGlzYWJsZWRdLC5tYXQtbWluaS1mYWIubWF0LXByaW1hcnlbZGlzYWJsZWRdLC5tYXQtbWluaS1mYWIubWF0LXdhcm5bZGlzYWJsZWRdLC5tYXQtbWluaS1mYWJbZGlzYWJsZWRdW2Rpc2FibGVkXSwubWF0LXJhaXNlZC1idXR0b24ubWF0LWFjY2VudFtkaXNhYmxlZF0sLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwubWF0LXJhaXNlZC1idXR0b24ubWF0LXdhcm5bZGlzYWJsZWRdLC5tYXQtcmFpc2VkLWJ1dHRvbltkaXNhYmxlZF1bZGlzYWJsZWRde2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtZmFiLm1hdC1wcmltYXJ5IC5tYXQtcmlwcGxlLWVsZW1lbnQsLm1hdC1mbGF0LWJ1dHRvbi5tYXQtcHJpbWFyeSAubWF0LXJpcHBsZS1lbGVtZW50LC5tYXQtbWluaS1mYWIubWF0LXByaW1hcnkgLm1hdC1yaXBwbGUtZWxlbWVudCwubWF0LXJhaXNlZC1idXR0b24ubWF0LXByaW1hcnkgLm1hdC1yaXBwbGUtZWxlbWVudHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjEpfS5tYXQtZmFiLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudCwubWF0LWZsYXQtYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudCwubWF0LW1pbmktZmFiLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudCwubWF0LXJhaXNlZC1idXR0b24ubWF0LWFjY2VudCAubWF0LXJpcHBsZS1lbGVtZW50e2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuMSl9Lm1hdC1mYWIubWF0LXdhcm4gLm1hdC1yaXBwbGUtZWxlbWVudCwubWF0LWZsYXQtYnV0dG9uLm1hdC13YXJuIC5tYXQtcmlwcGxlLWVsZW1lbnQsLm1hdC1taW5pLWZhYi5tYXQtd2FybiAubWF0LXJpcHBsZS1lbGVtZW50LC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtd2FybiAubWF0LXJpcHBsZS1lbGVtZW50e2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuMSl9Lm1hdC1mbGF0LWJ1dHRvbjpub3QoW2NsYXNzKj1tYXQtZWxldmF0aW9uLXpdKSwubWF0LXN0cm9rZWQtYnV0dG9uOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLC4yKSwwIDAgMCAwIHJnYmEoMCwwLDAsLjE0KSwwIDAgMCAwIHJnYmEoMCwwLDAsLjEyKX0ubWF0LXJhaXNlZC1idXR0b246bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSl7Ym94LXNoYWRvdzowIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLC4yKSwwIDJweCAycHggMCByZ2JhKDAsMCwwLC4xNCksMCAxcHggNXB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtcmFpc2VkLWJ1dHRvbjpub3QoW2Rpc2FibGVkXSk6YWN0aXZlOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCA1cHggNXB4IC0zcHggcmdiYSgwLDAsMCwuMiksMCA4cHggMTBweCAxcHggcmdiYSgwLDAsMCwuMTQpLDAgM3B4IDE0cHggMnB4IHJnYmEoMCwwLDAsLjEyKX0ubWF0LXJhaXNlZC1idXR0b25bZGlzYWJsZWRdOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLC4yKSwwIDAgMCAwIHJnYmEoMCwwLDAsLjE0KSwwIDAgMCAwIHJnYmEoMCwwLDAsLjEyKX0ubWF0LWZhYjpub3QoW2NsYXNzKj1tYXQtZWxldmF0aW9uLXpdKSwubWF0LW1pbmktZmFiOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCAzcHggNXB4IC0xcHggcmdiYSgwLDAsMCwuMiksMCA2cHggMTBweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCAxOHB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtZmFiOm5vdChbZGlzYWJsZWRdKTphY3RpdmU6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSksLm1hdC1taW5pLWZhYjpub3QoW2Rpc2FibGVkXSk6YWN0aXZlOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCA3cHggOHB4IC00cHggcmdiYSgwLDAsMCwuMiksMCAxMnB4IDE3cHggMnB4IHJnYmEoMCwwLDAsLjE0KSwwIDVweCAyMnB4IDRweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1mYWJbZGlzYWJsZWRdOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pLC5tYXQtbWluaS1mYWJbZGlzYWJsZWRdOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLC4yKSwwIDAgMCAwIHJnYmEoMCwwLDAsLjE0KSwwIDAgMCAwIHJnYmEoMCwwLDAsLjEyKX0ubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAsLm1hdC1idXR0b24tdG9nZ2xlLXN0YW5kYWxvbmV7Ym94LXNoYWRvdzowIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLC4yKSwwIDJweCAycHggMCByZ2JhKDAsMCwwLC4xNCksMCAxcHggNXB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cC1hcHBlYXJhbmNlLXN0YW5kYXJkLC5tYXQtYnV0dG9uLXRvZ2dsZS1zdGFuZGFsb25lLm1hdC1idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2Utc3RhbmRhcmR7Ym94LXNoYWRvdzpub25lfS5tYXQtYnV0dG9uLXRvZ2dsZXtjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1idXR0b24tdG9nZ2xlIC5tYXQtYnV0dG9uLXRvZ2dsZS1mb2N1cy1vdmVybGF5e2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLXN0YW5kYXJke2NvbG9yOnJnYmEoMCwwLDAsLjg3KTtiYWNrZ3JvdW5kOiNmZmZ9Lm1hdC1idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2Utc3RhbmRhcmQgLm1hdC1idXR0b24tdG9nZ2xlLWZvY3VzLW92ZXJsYXl7YmFja2dyb3VuZC1jb2xvcjojMDAwfS5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cC1hcHBlYXJhbmNlLXN0YW5kYXJkIC5tYXQtYnV0dG9uLXRvZ2dsZSsubWF0LWJ1dHRvbi10b2dnbGV7Ym9yZGVyLWxlZnQ6c29saWQgMXB4IHJnYmEoMCwwLDAsLjEyKX1bZGlyPXJ0bF0gLm1hdC1idXR0b24tdG9nZ2xlLWdyb3VwLWFwcGVhcmFuY2Utc3RhbmRhcmQgLm1hdC1idXR0b24tdG9nZ2xlKy5tYXQtYnV0dG9uLXRvZ2dsZXtib3JkZXItbGVmdDpub25lO2JvcmRlci1yaWdodDpzb2xpZCAxcHggcmdiYSgwLDAsMCwuMTIpfS5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cC1hcHBlYXJhbmNlLXN0YW5kYXJkLm1hdC1idXR0b24tdG9nZ2xlLXZlcnRpY2FsIC5tYXQtYnV0dG9uLXRvZ2dsZSsubWF0LWJ1dHRvbi10b2dnbGV7Ym9yZGVyLWxlZnQ6bm9uZTtib3JkZXItcmlnaHQ6bm9uZTtib3JkZXItdG9wOnNvbGlkIDFweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1idXR0b24tdG9nZ2xlLWNoZWNrZWR7YmFja2dyb3VuZC1jb2xvcjojZTBlMGUwO2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LWJ1dHRvbi10b2dnbGUtY2hlY2tlZC5tYXQtYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLXN0YW5kYXJke2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LWJ1dHRvbi10b2dnbGUtZGlzYWJsZWR7Y29sb3I6cmdiYSgwLDAsMCwuMjYpO2JhY2tncm91bmQtY29sb3I6I2VlZX0ubWF0LWJ1dHRvbi10b2dnbGUtZGlzYWJsZWQubWF0LWJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZS1zdGFuZGFyZHtiYWNrZ3JvdW5kOiNmZmZ9Lm1hdC1idXR0b24tdG9nZ2xlLWRpc2FibGVkLm1hdC1idXR0b24tdG9nZ2xlLWNoZWNrZWR7YmFja2dyb3VuZC1jb2xvcjojYmRiZGJkfS5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cC1hcHBlYXJhbmNlLXN0YW5kYXJkLC5tYXQtYnV0dG9uLXRvZ2dsZS1zdGFuZGFsb25lLm1hdC1idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2Utc3RhbmRhcmR7Ym9yZGVyOnNvbGlkIDFweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1jYXJke2JhY2tncm91bmQ6I2ZmZjtjb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC1jYXJkOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pe2JveC1zaGFkb3c6MCAycHggMXB4IC0xcHggcmdiYSgwLDAsMCwuMiksMCAxcHggMXB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgMXB4IDNweCAwIHJnYmEoMCwwLDAsLjEyKX0ubWF0LWNhcmQubWF0LWNhcmQtZmxhdDpub3QoW2NsYXNzKj1tYXQtZWxldmF0aW9uLXpdKXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgwLDAsMCwuMiksMCAwIDAgMCByZ2JhKDAsMCwwLC4xNCksMCAwIDAgMCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1jYXJkLXN1YnRpdGxle2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LWNoZWNrYm94LWZyYW1le2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLC41NCl9Lm1hdC1jaGVja2JveC1jaGVja21hcmt7ZmlsbDojZmFmYWZhfS5tYXQtY2hlY2tib3gtY2hlY2ttYXJrLXBhdGh7c3Ryb2tlOiNmYWZhZmEhaW1wb3J0YW50fUBtZWRpYSAoLW1zLWhpZ2gtY29udHJhc3Q6YmxhY2stb24td2hpdGUpey5tYXQtY2hlY2tib3gtY2hlY2ttYXJrLXBhdGh7c3Ryb2tlOiMwMDAhaW1wb3J0YW50fX0ubWF0LWNoZWNrYm94LW1peGVkbWFya3tiYWNrZ3JvdW5kLWNvbG9yOiNmYWZhZmF9Lm1hdC1jaGVja2JveC1jaGVja2VkLm1hdC1wcmltYXJ5IC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCwubWF0LWNoZWNrYm94LWluZGV0ZXJtaW5hdGUubWF0LXByaW1hcnkgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6IzNmNTFiNX0ubWF0LWNoZWNrYm94LWNoZWNrZWQubWF0LWFjY2VudCAubWF0LWNoZWNrYm94LWJhY2tncm91bmQsLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlLm1hdC1hY2NlbnQgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6I2ZmNDA4MX0ubWF0LWNoZWNrYm94LWNoZWNrZWQubWF0LXdhcm4gLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5kLC5tYXQtY2hlY2tib3gtaW5kZXRlcm1pbmF0ZS5tYXQtd2FybiAubWF0LWNoZWNrYm94LWJhY2tncm91bmR7YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtY2hlY2tib3gtZGlzYWJsZWQubWF0LWNoZWNrYm94LWNoZWNrZWQgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5kLC5tYXQtY2hlY2tib3gtZGlzYWJsZWQubWF0LWNoZWNrYm94LWluZGV0ZXJtaW5hdGUgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6I2IwYjBiMH0ubWF0LWNoZWNrYm94LWRpc2FibGVkOm5vdCgubWF0LWNoZWNrYm94LWNoZWNrZWQpIC5tYXQtY2hlY2tib3gtZnJhbWV7Ym9yZGVyLWNvbG9yOiNiMGIwYjB9Lm1hdC1jaGVja2JveC1kaXNhYmxlZCAubWF0LWNoZWNrYm94LWxhYmVse2NvbG9yOnJnYmEoMCwwLDAsLjU0KX1AbWVkaWEgKC1tcy1oaWdoLWNvbnRyYXN0OmFjdGl2ZSl7Lm1hdC1jaGVja2JveC1kaXNhYmxlZHtvcGFjaXR5Oi41fX1AbWVkaWEgKC1tcy1oaWdoLWNvbnRyYXN0OmFjdGl2ZSl7Lm1hdC1jaGVja2JveC1iYWNrZ3JvdW5ke2JhY2tncm91bmQ6MCAwfX0ubWF0LWNoZWNrYm94Om5vdCgubWF0LWNoZWNrYm94LWRpc2FibGVkKS5tYXQtcHJpbWFyeSAubWF0LWNoZWNrYm94LXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50e2JhY2tncm91bmQtY29sb3I6IzNmNTFiNX0ubWF0LWNoZWNrYm94Om5vdCgubWF0LWNoZWNrYm94LWRpc2FibGVkKS5tYXQtYWNjZW50IC5tYXQtY2hlY2tib3gtcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxfS5tYXQtY2hlY2tib3g6bm90KC5tYXQtY2hlY2tib3gtZGlzYWJsZWQpLm1hdC13YXJuIC5tYXQtY2hlY2tib3gtcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcHtiYWNrZ3JvdW5kLWNvbG9yOiNlMGUwZTA7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcCAubWF0LWNoaXAtcmVtb3Zle2NvbG9yOnJnYmEoMCwwLDAsLjg3KTtvcGFjaXR5Oi40fS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcDpub3QoLm1hdC1jaGlwLWRpc2FibGVkKTphY3RpdmV7Ym94LXNoYWRvdzowIDNweCAzcHggLTJweCByZ2JhKDAsMCwwLC4yKSwwIDNweCA0cHggMCByZ2JhKDAsMCwwLC4xNCksMCAxcHggOHB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcDpub3QoLm1hdC1jaGlwLWRpc2FibGVkKSAubWF0LWNoaXAtcmVtb3ZlOmhvdmVye29wYWNpdHk6LjU0fS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcC5tYXQtY2hpcC1kaXNhYmxlZHtvcGFjaXR5Oi40fS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcDo6YWZ0ZXJ7YmFja2dyb3VuZDojMDAwfS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcC5tYXQtY2hpcC1zZWxlY3RlZC5tYXQtcHJpbWFyeXtiYWNrZ3JvdW5kLWNvbG9yOiMzZjUxYjU7Y29sb3I6I2ZmZn0ubWF0LWNoaXAubWF0LXN0YW5kYXJkLWNoaXAubWF0LWNoaXAtc2VsZWN0ZWQubWF0LXByaW1hcnkgLm1hdC1jaGlwLXJlbW92ZXtjb2xvcjojZmZmO29wYWNpdHk6LjR9Lm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC1wcmltYXJ5IC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LC4xKX0ubWF0LWNoaXAubWF0LXN0YW5kYXJkLWNoaXAubWF0LWNoaXAtc2VsZWN0ZWQubWF0LXdhcm57YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2O2NvbG9yOiNmZmZ9Lm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC13YXJuIC5tYXQtY2hpcC1yZW1vdmV7Y29sb3I6I2ZmZjtvcGFjaXR5Oi40fS5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcC5tYXQtY2hpcC1zZWxlY3RlZC5tYXQtd2FybiAubWF0LXJpcHBsZS1lbGVtZW50e2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuMSl9Lm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC1hY2NlbnR7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxO2NvbG9yOiNmZmZ9Lm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC1hY2NlbnQgLm1hdC1jaGlwLXJlbW92ZXtjb2xvcjojZmZmO29wYWNpdHk6LjR9Lm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudHtiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsLjEpfS5tYXQtdGFibGV7YmFja2dyb3VuZDojZmZmfS5tYXQtdGFibGUgdGJvZHksLm1hdC10YWJsZSB0Zm9vdCwubWF0LXRhYmxlIHRoZWFkLC5tYXQtdGFibGUtc3RpY2t5LFttYXQtZm9vdGVyLXJvd10sW21hdC1oZWFkZXItcm93XSxbbWF0LXJvd10sbWF0LWZvb3Rlci1yb3csbWF0LWhlYWRlci1yb3csbWF0LXJvd3tiYWNrZ3JvdW5kOmluaGVyaXR9bWF0LWZvb3Rlci1yb3csbWF0LWhlYWRlci1yb3csbWF0LXJvdyx0ZC5tYXQtY2VsbCx0ZC5tYXQtZm9vdGVyLWNlbGwsdGgubWF0LWhlYWRlci1jZWxse2JvcmRlci1ib3R0b20tY29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtaGVhZGVyLWNlbGx7Y29sb3I6cmdiYSgwLDAsMCwuNTQpfS5tYXQtY2VsbCwubWF0LWZvb3Rlci1jZWxse2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LWNhbGVuZGFyLWFycm93e2JvcmRlci10b3AtY29sb3I6cmdiYSgwLDAsMCwuNTQpfS5tYXQtZGF0ZXBpY2tlci1jb250ZW50IC5tYXQtY2FsZW5kYXItbmV4dC1idXR0b24sLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQgLm1hdC1jYWxlbmRhci1wcmV2aW91cy1idXR0b24sLm1hdC1kYXRlcGlja2VyLXRvZ2dsZXtjb2xvcjpyZ2JhKDAsMCwwLC41NCl9Lm1hdC1jYWxlbmRhci10YWJsZS1oZWFkZXJ7Y29sb3I6cmdiYSgwLDAsMCwuMzgpfS5tYXQtY2FsZW5kYXItdGFibGUtaGVhZGVyLWRpdmlkZXI6OmFmdGVye2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMTIpfS5tYXQtY2FsZW5kYXItYm9keS1sYWJlbHtjb2xvcjpyZ2JhKDAsMCwwLC41NCl9Lm1hdC1jYWxlbmRhci1ib2R5LWNlbGwtY29udGVudHtjb2xvcjpyZ2JhKDAsMCwwLC44Nyk7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50fS5tYXQtY2FsZW5kYXItYm9keS1kaXNhYmxlZD4ubWF0LWNhbGVuZGFyLWJvZHktY2VsbC1jb250ZW50Om5vdCgubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQpe2NvbG9yOnJnYmEoMCwwLDAsLjM4KX0uY2RrLWtleWJvYXJkLWZvY3VzZWQgLm1hdC1jYWxlbmRhci1ib2R5LWFjdGl2ZT4ubWF0LWNhbGVuZGFyLWJvZHktY2VsbC1jb250ZW50Om5vdCgubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQpLC5jZGstcHJvZ3JhbS1mb2N1c2VkIC5tYXQtY2FsZW5kYXItYm9keS1hY3RpdmU+Lm1hdC1jYWxlbmRhci1ib2R5LWNlbGwtY29udGVudDpub3QoLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkKSwubWF0LWNhbGVuZGFyLWJvZHktY2VsbDpub3QoLm1hdC1jYWxlbmRhci1ib2R5LWRpc2FibGVkKTpob3Zlcj4ubWF0LWNhbGVuZGFyLWJvZHktY2VsbC1jb250ZW50Om5vdCgubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQpe2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDQpfS5tYXQtY2FsZW5kYXItYm9keS10b2RheTpub3QoLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkKXtib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMzgpfS5tYXQtY2FsZW5kYXItYm9keS1kaXNhYmxlZD4ubWF0LWNhbGVuZGFyLWJvZHktdG9kYXk6bm90KC5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCl7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjE4KX0ubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWR7YmFja2dyb3VuZC1jb2xvcjojM2Y1MWI1O2NvbG9yOiNmZmZ9Lm1hdC1jYWxlbmRhci1ib2R5LWRpc2FibGVkPi5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNjMsODEsMTgxLC40KX0ubWF0LWNhbGVuZGFyLWJvZHktdG9kYXkubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWR7Ym94LXNoYWRvdzppbnNldCAwIDAgMCAxcHggI2ZmZn0ubWF0LWRhdGVwaWNrZXItY29udGVudHtib3gtc2hhZG93OjAgMnB4IDRweCAtMXB4IHJnYmEoMCwwLDAsLjIpLDAgNHB4IDVweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTIpO2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC1kYXRlcGlja2VyLWNvbnRlbnQubWF0LWFjY2VudCAubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWR7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxO2NvbG9yOiNmZmZ9Lm1hdC1kYXRlcGlja2VyLWNvbnRlbnQubWF0LWFjY2VudCAubWF0LWNhbGVuZGFyLWJvZHktZGlzYWJsZWQ+Lm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVke2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsNjQsMTI5LC40KX0ubWF0LWRhdGVwaWNrZXItY29udGVudC5tYXQtYWNjZW50IC5tYXQtY2FsZW5kYXItYm9keS10b2RheS5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZHtib3gtc2hhZG93Omluc2V0IDAgMCAwIDFweCAjZmZmfS5tYXQtZGF0ZXBpY2tlci1jb250ZW50Lm1hdC13YXJuIC5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmNDQzMzY7Y29sb3I6I2ZmZn0ubWF0LWRhdGVwaWNrZXItY29udGVudC5tYXQtd2FybiAubWF0LWNhbGVuZGFyLWJvZHktZGlzYWJsZWQ+Lm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVke2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDQsNjcsNTQsLjQpfS5tYXQtZGF0ZXBpY2tlci1jb250ZW50Lm1hdC13YXJuIC5tYXQtY2FsZW5kYXItYm9keS10b2RheS5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZHtib3gtc2hhZG93Omluc2V0IDAgMCAwIDFweCAjZmZmfS5tYXQtZGF0ZXBpY2tlci1jb250ZW50LXRvdWNoe2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLC4yKSwwIDAgMCAwIHJnYmEoMCwwLDAsLjE0KSwwIDAgMCAwIHJnYmEoMCwwLDAsLjEyKX0ubWF0LWRhdGVwaWNrZXItdG9nZ2xlLWFjdGl2ZXtjb2xvcjojM2Y1MWI1fS5tYXQtZGF0ZXBpY2tlci10b2dnbGUtYWN0aXZlLm1hdC1hY2NlbnR7Y29sb3I6I2ZmNDA4MX0ubWF0LWRhdGVwaWNrZXItdG9nZ2xlLWFjdGl2ZS5tYXQtd2Fybntjb2xvcjojZjQ0MzM2fS5tYXQtZGlhbG9nLWNvbnRhaW5lcntib3gtc2hhZG93OjAgMTFweCAxNXB4IC03cHggcmdiYSgwLDAsMCwuMiksMCAyNHB4IDM4cHggM3B4IHJnYmEoMCwwLDAsLjE0KSwwIDlweCA0NnB4IDhweCByZ2JhKDAsMCwwLC4xMik7YmFja2dyb3VuZDojZmZmO2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LWRpdmlkZXJ7Ym9yZGVyLXRvcC1jb2xvcjpyZ2JhKDAsMCwwLC4xMil9Lm1hdC1kaXZpZGVyLXZlcnRpY2Fse2JvcmRlci1yaWdodC1jb2xvcjpyZ2JhKDAsMCwwLC4xMil9Lm1hdC1leHBhbnNpb24tcGFuZWx7YmFja2dyb3VuZDojZmZmO2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoW2NsYXNzKj1tYXQtZWxldmF0aW9uLXpdKXtib3gtc2hhZG93OjAgM3B4IDFweCAtMnB4IHJnYmEoMCwwLDAsLjIpLDAgMnB4IDJweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCA1cHggMCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1hY3Rpb24tcm93e2JvcmRlci10b3AtY29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtZXhwYW5zaW9uLXBhbmVsOm5vdCgubWF0LWV4cGFuZGVkKSAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKS5jZGsta2V5Ym9hcmQtZm9jdXNlZCwubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCkgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyOm5vdChbYXJpYS1kaXNhYmxlZD10cnVlXSkuY2RrLXByb2dyYW0tZm9jdXNlZCwubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCkgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyOm5vdChbYXJpYS1kaXNhYmxlZD10cnVlXSk6aG92ZXJ7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC4wNCl9QG1lZGlhIChob3Zlcjpub25lKXsubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCk6bm90KFthcmlhLWRpc2FibGVkPXRydWVdKSAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI6aG92ZXJ7YmFja2dyb3VuZDojZmZmfX0ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGV7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtZXhwYW5zaW9uLWluZGljYXRvcjo6YWZ0ZXIsLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9ue2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXJbYXJpYS1kaXNhYmxlZD10cnVlXXtjb2xvcjpyZ2JhKDAsMCwwLC4yNil9Lm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0gLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uLC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlclthcmlhLWRpc2FibGVkPXRydWVdIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZXtjb2xvcjppbmhlcml0fS5tYXQtZm9ybS1maWVsZC1sYWJlbHtjb2xvcjpyZ2JhKDAsMCwwLC42KX0ubWF0LWhpbnR7Y29sb3I6cmdiYSgwLDAsMCwuNil9Lm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1sYWJlbHtjb2xvcjojM2Y1MWI1fS5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtbGFiZWwubWF0LWFjY2VudHtjb2xvcjojZmY0MDgxfS5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtbGFiZWwubWF0LXdhcm57Y29sb3I6I2Y0NDMzNn0ubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlcntjb2xvcjojZmY0MDgxfS5tYXQtZm9ybS1maWVsZC1yaXBwbGV7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1yaXBwbGV7YmFja2dyb3VuZC1jb2xvcjojM2Y1MWI1fS5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlLm1hdC1hY2NlbnR7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxfS5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlLm1hdC13YXJue2JhY2tncm91bmQtY29sb3I6I2Y0NDMzNn0ubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdC5tYXQtZm9jdXNlZDpub3QoLm1hdC1mb3JtLWZpZWxkLWludmFsaWQpIC5tYXQtZm9ybS1maWVsZC1pbmZpeDo6YWZ0ZXJ7Y29sb3I6IzNmNTFiNX0ubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdC5tYXQtZm9jdXNlZDpub3QoLm1hdC1mb3JtLWZpZWxkLWludmFsaWQpLm1hdC1hY2NlbnQgLm1hdC1mb3JtLWZpZWxkLWluZml4OjphZnRlcntjb2xvcjojZmY0MDgxfS5tYXQtZm9ybS1maWVsZC10eXBlLW1hdC1uYXRpdmUtc2VsZWN0Lm1hdC1mb2N1c2VkOm5vdCgubWF0LWZvcm0tZmllbGQtaW52YWxpZCkubWF0LXdhcm4gLm1hdC1mb3JtLWZpZWxkLWluZml4OjphZnRlcntjb2xvcjojZjQ0MzM2fS5tYXQtZm9ybS1maWVsZC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1sYWJlbHtjb2xvcjojZjQ0MzM2fS5tYXQtZm9ybS1maWVsZC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1sYWJlbCAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyLC5tYXQtZm9ybS1maWVsZC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1sYWJlbC5tYXQtYWNjZW50e2NvbG9yOiNmNDQzMzZ9Lm1hdC1mb3JtLWZpZWxkLm1hdC1mb3JtLWZpZWxkLWludmFsaWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSwubWF0LWZvcm0tZmllbGQubWF0LWZvcm0tZmllbGQtaW52YWxpZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlLm1hdC1hY2NlbnR7YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtZXJyb3J7Y29sb3I6I2Y0NDMzNn0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kgLm1hdC1mb3JtLWZpZWxkLWxhYmVse2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kgLm1hdC1oaW50e2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZXtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjQyKX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kubWF0LWZvcm0tZmllbGQtZGlzYWJsZWQgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZXtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byByaWdodCxyZ2JhKDAsMCwwLC40MikgMCxyZ2JhKDAsMCwwLC40MikgMzMlLHRyYW5zcGFyZW50IDApO2JhY2tncm91bmQtc2l6ZTo0cHggMTAwJTtiYWNrZ3JvdW5kLXJlcGVhdDpyZXBlYXQteH0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1zdGFuZGFyZCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5le2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNDIpfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLXN0YW5kYXJkLm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmV7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQscmdiYSgwLDAsMCwuNDIpIDAscmdiYSgwLDAsMCwuNDIpIDMzJSx0cmFuc3BhcmVudCAwKTtiYWNrZ3JvdW5kLXNpemU6NHB4IDEwMCU7YmFja2dyb3VuZC1yZXBlYXQ6cmVwZWF0LXh9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbCAubWF0LWZvcm0tZmllbGQtZmxleHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjA0KX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1maWxsLm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC1mbGV4e2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDIpfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWZpbGwgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZTo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNDIpfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWZpbGwubWF0LWZvcm0tZmllbGQtZGlzYWJsZWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVse2NvbG9yOnJnYmEoMCwwLDAsLjM4KX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1maWxsLm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmU6OmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmV7Y29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2t7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2t7Y29sb3I6IzNmNTFiNX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb2N1c2VkLm1hdC1hY2NlbnQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2t7Y29sb3I6I2ZmNDA4MX0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb2N1c2VkLm1hdC13YXJuIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lLXRoaWNre2NvbG9yOiNmNDQzMzZ9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9ybS1maWVsZC1pbnZhbGlkLm1hdC1mb3JtLWZpZWxkLWludmFsaWQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2t7Y29sb3I6I2Y0NDMzNn0ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC1sYWJlbHtjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCAubWF0LWZvcm0tZmllbGQtb3V0bGluZXtjb2xvcjpyZ2JhKDAsMCwwLC4wNil9Lm1hdC1pY29uLm1hdC1wcmltYXJ5e2NvbG9yOiMzZjUxYjV9Lm1hdC1pY29uLm1hdC1hY2NlbnR7Y29sb3I6I2ZmNDA4MX0ubWF0LWljb24ubWF0LXdhcm57Y29sb3I6I2Y0NDMzNn0ubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdCAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVye2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdC5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVyLC5tYXQtaW5wdXQtZWxlbWVudDpkaXNhYmxlZHtjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1pbnB1dC1lbGVtZW50e2NhcmV0LWNvbG9yOiMzZjUxYjV9Lm1hdC1pbnB1dC1lbGVtZW50OjpwbGFjZWhvbGRlcntjb2xvcjpyZ2JhKDAsMCwwLC40Mil9Lm1hdC1pbnB1dC1lbGVtZW50OjotbW96LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoMCwwLDAsLjQyKX0ubWF0LWlucHV0LWVsZW1lbnQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6cmdiYSgwLDAsMCwuNDIpfS5tYXQtaW5wdXQtZWxlbWVudDotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6cmdiYSgwLDAsMCwuNDIpfS5tYXQtYWNjZW50IC5tYXQtaW5wdXQtZWxlbWVudHtjYXJldC1jb2xvcjojZmY0MDgxfS5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtaW5wdXQtZWxlbWVudCwubWF0LXdhcm4gLm1hdC1pbnB1dC1lbGVtZW50e2NhcmV0LWNvbG9yOiNmNDQzMzZ9Lm1hdC1mb3JtLWZpZWxkLXR5cGUtbWF0LW5hdGl2ZS1zZWxlY3QubWF0LWZvcm0tZmllbGQtaW52YWxpZCAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVye2NvbG9yOiNmNDQzMzZ9Lm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW17Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1vcHRpb257Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtbGlzdC1iYXNlIC5tYXQtc3ViaGVhZGVye2NvbG9yOnJnYmEoMCwwLDAsLjU0KX0ubWF0LWxpc3QtaXRlbS1kaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOiNlZWV9Lm1hdC1saXN0LW9wdGlvbjpmb2N1cywubWF0LWxpc3Qtb3B0aW9uOmhvdmVyLC5tYXQtbmF2LWxpc3QgLm1hdC1saXN0LWl0ZW06Zm9jdXMsLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbTpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjA0KX0ubWF0LW1lbnUtcGFuZWx7YmFja2dyb3VuZDojZmZmfS5tYXQtbWVudS1wYW5lbDpub3QoW2NsYXNzKj1tYXQtZWxldmF0aW9uLXpdKXtib3gtc2hhZG93OjAgMnB4IDRweCAtMXB4IHJnYmEoMCwwLDAsLjIpLDAgNHB4IDVweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtbWVudS1pdGVte2JhY2tncm91bmQ6MCAwO2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LW1lbnUtaXRlbVtkaXNhYmxlZF0sLm1hdC1tZW51LWl0ZW1bZGlzYWJsZWRdOjphZnRlcntjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1tZW51LWl0ZW0gLm1hdC1pY29uLW5vLWNvbG9yLC5tYXQtbWVudS1pdGVtLXN1Ym1lbnUtdHJpZ2dlcjo6YWZ0ZXJ7Y29sb3I6cmdiYSgwLDAsMCwuNTQpfS5tYXQtbWVudS1pdGVtLWhpZ2hsaWdodGVkOm5vdChbZGlzYWJsZWRdKSwubWF0LW1lbnUtaXRlbS5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoW2Rpc2FibGVkXSksLm1hdC1tZW51LWl0ZW0uY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoW2Rpc2FibGVkXSksLm1hdC1tZW51LWl0ZW06aG92ZXI6bm90KFtkaXNhYmxlZF0pe2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMDQpfS5tYXQtcGFnaW5hdG9ye2JhY2tncm91bmQ6I2ZmZn0ubWF0LXBhZ2luYXRvciwubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlcntjb2xvcjpyZ2JhKDAsMCwwLC41NCl9Lm1hdC1wYWdpbmF0b3ItZGVjcmVtZW50LC5tYXQtcGFnaW5hdG9yLWluY3JlbWVudHtib3JkZXItdG9wOjJweCBzb2xpZCByZ2JhKDAsMCwwLC41NCk7Ym9yZGVyLXJpZ2h0OjJweCBzb2xpZCByZ2JhKDAsMCwwLC41NCl9Lm1hdC1wYWdpbmF0b3ItZmlyc3QsLm1hdC1wYWdpbmF0b3ItbGFzdHtib3JkZXItdG9wOjJweCBzb2xpZCByZ2JhKDAsMCwwLC41NCl9Lm1hdC1pY29uLWJ1dHRvbltkaXNhYmxlZF0gLm1hdC1wYWdpbmF0b3ItZGVjcmVtZW50LC5tYXQtaWNvbi1idXR0b25bZGlzYWJsZWRdIC5tYXQtcGFnaW5hdG9yLWZpcnN0LC5tYXQtaWNvbi1idXR0b25bZGlzYWJsZWRdIC5tYXQtcGFnaW5hdG9yLWluY3JlbWVudCwubWF0LWljb24tYnV0dG9uW2Rpc2FibGVkXSAubWF0LXBhZ2luYXRvci1sYXN0e2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1wcm9ncmVzcy1iYXItYmFja2dyb3VuZHtmaWxsOiNjNWNhZTl9Lm1hdC1wcm9ncmVzcy1iYXItYnVmZmVye2JhY2tncm91bmQtY29sb3I6I2M1Y2FlOX0ubWF0LXByb2dyZXNzLWJhci1maWxsOjphZnRlcntiYWNrZ3JvdW5kLWNvbG9yOiMzZjUxYjV9Lm1hdC1wcm9ncmVzcy1iYXIubWF0LWFjY2VudCAubWF0LXByb2dyZXNzLWJhci1iYWNrZ3JvdW5ke2ZpbGw6I2ZmODBhYn0ubWF0LXByb2dyZXNzLWJhci5tYXQtYWNjZW50IC5tYXQtcHJvZ3Jlc3MtYmFyLWJ1ZmZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZjgwYWJ9Lm1hdC1wcm9ncmVzcy1iYXIubWF0LWFjY2VudCAubWF0LXByb2dyZXNzLWJhci1maWxsOjphZnRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZjQwODF9Lm1hdC1wcm9ncmVzcy1iYXIubWF0LXdhcm4gLm1hdC1wcm9ncmVzcy1iYXItYmFja2dyb3VuZHtmaWxsOiNmZmNkZDJ9Lm1hdC1wcm9ncmVzcy1iYXIubWF0LXdhcm4gLm1hdC1wcm9ncmVzcy1iYXItYnVmZmVye2JhY2tncm91bmQtY29sb3I6I2ZmY2RkMn0ubWF0LXByb2dyZXNzLWJhci5tYXQtd2FybiAubWF0LXByb2dyZXNzLWJhci1maWxsOjphZnRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNDQzMzZ9Lm1hdC1wcm9ncmVzcy1zcGlubmVyIGNpcmNsZSwubWF0LXNwaW5uZXIgY2lyY2xle3N0cm9rZTojM2Y1MWI1fS5tYXQtcHJvZ3Jlc3Mtc3Bpbm5lci5tYXQtYWNjZW50IGNpcmNsZSwubWF0LXNwaW5uZXIubWF0LWFjY2VudCBjaXJjbGV7c3Ryb2tlOiNmZjQwODF9Lm1hdC1wcm9ncmVzcy1zcGlubmVyLm1hdC13YXJuIGNpcmNsZSwubWF0LXNwaW5uZXIubWF0LXdhcm4gY2lyY2xle3N0cm9rZTojZjQ0MzM2fS5tYXQtcmFkaW8tb3V0ZXItY2lyY2xle2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLC41NCl9Lm1hdC1yYWRpby1idXR0b24ubWF0LXByaW1hcnkubWF0LXJhZGlvLWNoZWNrZWQgLm1hdC1yYWRpby1vdXRlci1jaXJjbGV7Ym9yZGVyLWNvbG9yOiMzZjUxYjV9Lm1hdC1yYWRpby1idXR0b24ubWF0LXByaW1hcnkgLm1hdC1yYWRpby1pbm5lci1jaXJjbGUsLm1hdC1yYWRpby1idXR0b24ubWF0LXByaW1hcnkgLm1hdC1yYWRpby1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudDpub3QoLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSksLm1hdC1yYWRpby1idXR0b24ubWF0LXByaW1hcnkubWF0LXJhZGlvLWNoZWNrZWQgLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSwubWF0LXJhZGlvLWJ1dHRvbi5tYXQtcHJpbWFyeTphY3RpdmUgLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZXtiYWNrZ3JvdW5kLWNvbG9yOiMzZjUxYjV9Lm1hdC1yYWRpby1idXR0b24ubWF0LWFjY2VudC5tYXQtcmFkaW8tY2hlY2tlZCAubWF0LXJhZGlvLW91dGVyLWNpcmNsZXtib3JkZXItY29sb3I6I2ZmNDA4MX0ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtYWNjZW50IC5tYXQtcmFkaW8taW5uZXItY2lyY2xlLC5tYXQtcmFkaW8tYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1yYWRpby1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudDpub3QoLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSksLm1hdC1yYWRpby1idXR0b24ubWF0LWFjY2VudC5tYXQtcmFkaW8tY2hlY2tlZCAubWF0LXJhZGlvLXBlcnNpc3RlbnQtcmlwcGxlLC5tYXQtcmFkaW8tYnV0dG9uLm1hdC1hY2NlbnQ6YWN0aXZlIC5tYXQtcmFkaW8tcGVyc2lzdGVudC1yaXBwbGV7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxfS5tYXQtcmFkaW8tYnV0dG9uLm1hdC13YXJuLm1hdC1yYWRpby1jaGVja2VkIC5tYXQtcmFkaW8tb3V0ZXItY2lyY2xle2JvcmRlci1jb2xvcjojZjQ0MzM2fS5tYXQtcmFkaW8tYnV0dG9uLm1hdC13YXJuIC5tYXQtcmFkaW8taW5uZXItY2lyY2xlLC5tYXQtcmFkaW8tYnV0dG9uLm1hdC13YXJuIC5tYXQtcmFkaW8tcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnQ6bm90KC5tYXQtcmFkaW8tcGVyc2lzdGVudC1yaXBwbGUpLC5tYXQtcmFkaW8tYnV0dG9uLm1hdC13YXJuLm1hdC1yYWRpby1jaGVja2VkIC5tYXQtcmFkaW8tcGVyc2lzdGVudC1yaXBwbGUsLm1hdC1yYWRpby1idXR0b24ubWF0LXdhcm46YWN0aXZlIC5tYXQtcmFkaW8tcGVyc2lzdGVudC1yaXBwbGV7YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtcmFkaW8tYnV0dG9uLm1hdC1yYWRpby1kaXNhYmxlZCAubWF0LXJhZGlvLW91dGVyLWNpcmNsZSwubWF0LXJhZGlvLWJ1dHRvbi5tYXQtcmFkaW8tZGlzYWJsZWQubWF0LXJhZGlvLWNoZWNrZWQgLm1hdC1yYWRpby1vdXRlci1jaXJjbGV7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjM4KX0ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtcmFkaW8tZGlzYWJsZWQgLm1hdC1yYWRpby1pbm5lci1jaXJjbGUsLm1hdC1yYWRpby1idXR0b24ubWF0LXJhZGlvLWRpc2FibGVkIC5tYXQtcmFkaW8tcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1yYWRpby1idXR0b24ubWF0LXJhZGlvLWRpc2FibGVkIC5tYXQtcmFkaW8tbGFiZWwtY29udGVudHtjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1yYWRpby1idXR0b24gLm1hdC1yaXBwbGUtZWxlbWVudHtiYWNrZ3JvdW5kLWNvbG9yOiMwMDB9Lm1hdC1zZWxlY3QtdmFsdWV7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtc2VsZWN0LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoMCwwLDAsLjQyKX0ubWF0LXNlbGVjdC1kaXNhYmxlZCAubWF0LXNlbGVjdC12YWx1ZXtjb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1zZWxlY3QtYXJyb3d7Y29sb3I6cmdiYSgwLDAsMCwuNTQpfS5tYXQtc2VsZWN0LXBhbmVse2JhY2tncm91bmQ6I2ZmZn0ubWF0LXNlbGVjdC1wYW5lbDpub3QoW2NsYXNzKj1tYXQtZWxldmF0aW9uLXpdKXtib3gtc2hhZG93OjAgMnB4IDRweCAtMXB4IHJnYmEoMCwwLDAsLjIpLDAgNHB4IDVweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtc2VsZWN0LXBhbmVsIC5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1vcHRpb24tbXVsdGlwbGUpe2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMTIpfS5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZC5tYXQtcHJpbWFyeSAubWF0LXNlbGVjdC1hcnJvd3tjb2xvcjojM2Y1MWI1fS5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZC5tYXQtYWNjZW50IC5tYXQtc2VsZWN0LWFycm93e2NvbG9yOiNmZjQwODF9Lm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkLm1hdC13YXJuIC5tYXQtc2VsZWN0LWFycm93e2NvbG9yOiNmNDQzMzZ9Lm1hdC1mb3JtLWZpZWxkIC5tYXQtc2VsZWN0Lm1hdC1zZWxlY3QtaW52YWxpZCAubWF0LXNlbGVjdC1hcnJvd3tjb2xvcjojZjQ0MzM2fS5tYXQtZm9ybS1maWVsZCAubWF0LXNlbGVjdC5tYXQtc2VsZWN0LWRpc2FibGVkIC5tYXQtc2VsZWN0LWFycm93e2NvbG9yOnJnYmEoMCwwLDAsLjM4KX0ubWF0LWRyYXdlci1jb250YWluZXJ7YmFja2dyb3VuZC1jb2xvcjojZmFmYWZhO2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LWRyYXdlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtZHJhd2VyLm1hdC1kcmF3ZXItcHVzaHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9Lm1hdC1kcmF3ZXI6bm90KC5tYXQtZHJhd2VyLXNpZGUpe2JveC1zaGFkb3c6MCA4cHggMTBweCAtNXB4IHJnYmEoMCwwLDAsLjIpLDAgMTZweCAyNHB4IDJweCByZ2JhKDAsMCwwLC4xNCksMCA2cHggMzBweCA1cHggcmdiYSgwLDAsMCwuMTIpfS5tYXQtZHJhd2VyLXNpZGV7Ym9yZGVyLXJpZ2h0OnNvbGlkIDFweCByZ2JhKDAsMCwwLC4xMil9Lm1hdC1kcmF3ZXItc2lkZS5tYXQtZHJhd2VyLWVuZHtib3JkZXItbGVmdDpzb2xpZCAxcHggcmdiYSgwLDAsMCwuMTIpO2JvcmRlci1yaWdodDpub25lfVtkaXI9cnRsXSAubWF0LWRyYXdlci1zaWRle2JvcmRlci1sZWZ0OnNvbGlkIDFweCByZ2JhKDAsMCwwLC4xMik7Ym9yZGVyLXJpZ2h0Om5vbmV9W2Rpcj1ydGxdIC5tYXQtZHJhd2VyLXNpZGUubWF0LWRyYXdlci1lbmR7Ym9yZGVyLWxlZnQ6bm9uZTtib3JkZXItcmlnaHQ6c29saWQgMXB4IHJnYmEoMCwwLDAsLjEyKX0ubWF0LWRyYXdlci1iYWNrZHJvcC5tYXQtZHJhd2VyLXNob3due2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNil9Lm1hdC1zbGlkZS10b2dnbGUubWF0LWNoZWNrZWQgLm1hdC1zbGlkZS10b2dnbGUtdGh1bWJ7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxfS5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1jaGVja2VkIC5tYXQtc2xpZGUtdG9nZ2xlLWJhcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDY0LDEyOSwuNTQpfS5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1jaGVja2VkIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxfS5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1wcmltYXJ5Lm1hdC1jaGVja2VkIC5tYXQtc2xpZGUtdG9nZ2xlLXRodW1ie2JhY2tncm91bmQtY29sb3I6IzNmNTFiNX0ubWF0LXNsaWRlLXRvZ2dsZS5tYXQtcHJpbWFyeS5tYXQtY2hlY2tlZCAubWF0LXNsaWRlLXRvZ2dsZS1iYXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDYzLDgxLDE4MSwuNTQpfS5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1wcmltYXJ5Lm1hdC1jaGVja2VkIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjojM2Y1MWI1fS5tYXQtc2xpZGUtdG9nZ2xlLm1hdC13YXJuLm1hdC1jaGVja2VkIC5tYXQtc2xpZGUtdG9nZ2xlLXRodW1ie2JhY2tncm91bmQtY29sb3I6I2Y0NDMzNn0ubWF0LXNsaWRlLXRvZ2dsZS5tYXQtd2Fybi5tYXQtY2hlY2tlZCAubWF0LXNsaWRlLXRvZ2dsZS1iYXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0NCw2Nyw1NCwuNTQpfS5tYXQtc2xpZGUtdG9nZ2xlLm1hdC13YXJuLm1hdC1jaGVja2VkIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtc2xpZGUtdG9nZ2xlOm5vdCgubWF0LWNoZWNrZWQpIC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjojMDAwfS5tYXQtc2xpZGUtdG9nZ2xlLXRodW1ie2JveC1zaGFkb3c6MCAycHggMXB4IC0xcHggcmdiYSgwLDAsMCwuMiksMCAxcHggMXB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgMXB4IDNweCAwIHJnYmEoMCwwLDAsLjEyKTtiYWNrZ3JvdW5kLWNvbG9yOiNmYWZhZmF9Lm1hdC1zbGlkZS10b2dnbGUtYmFye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMzgpfS5tYXQtc2xpZGVyLXRyYWNrLWJhY2tncm91bmR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4yNil9Lm1hdC1wcmltYXJ5IC5tYXQtc2xpZGVyLXRodW1iLC5tYXQtcHJpbWFyeSAubWF0LXNsaWRlci10aHVtYi1sYWJlbCwubWF0LXByaW1hcnkgLm1hdC1zbGlkZXItdHJhY2stZmlsbHtiYWNrZ3JvdW5kLWNvbG9yOiMzZjUxYjV9Lm1hdC1wcmltYXJ5IC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXRleHR7Y29sb3I6I2ZmZn0ubWF0LWFjY2VudCAubWF0LXNsaWRlci10aHVtYiwubWF0LWFjY2VudCAubWF0LXNsaWRlci10aHVtYi1sYWJlbCwubWF0LWFjY2VudCAubWF0LXNsaWRlci10cmFjay1maWxse2JhY2tncm91bmQtY29sb3I6I2ZmNDA4MX0ubWF0LWFjY2VudCAubWF0LXNsaWRlci10aHVtYi1sYWJlbC10ZXh0e2NvbG9yOiNmZmZ9Lm1hdC13YXJuIC5tYXQtc2xpZGVyLXRodW1iLC5tYXQtd2FybiAubWF0LXNsaWRlci10aHVtYi1sYWJlbCwubWF0LXdhcm4gLm1hdC1zbGlkZXItdHJhY2stZmlsbHtiYWNrZ3JvdW5kLWNvbG9yOiNmNDQzMzZ9Lm1hdC13YXJuIC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXRleHR7Y29sb3I6I2ZmZn0ubWF0LXNsaWRlci1mb2N1cy1yaW5ne2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsNjQsMTI5LC4yKX0uY2RrLWZvY3VzZWQgLm1hdC1zbGlkZXItdHJhY2stYmFja2dyb3VuZCwubWF0LXNsaWRlcjpob3ZlciAubWF0LXNsaWRlci10cmFjay1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMzgpfS5tYXQtc2xpZGVyLWRpc2FibGVkIC5tYXQtc2xpZGVyLXRodW1iLC5tYXQtc2xpZGVyLWRpc2FibGVkIC5tYXQtc2xpZGVyLXRyYWNrLWJhY2tncm91bmQsLm1hdC1zbGlkZXItZGlzYWJsZWQgLm1hdC1zbGlkZXItdHJhY2stZmlsbHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjI2KX0ubWF0LXNsaWRlci1kaXNhYmxlZDpob3ZlciAubWF0LXNsaWRlci10cmFjay1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMjYpfS5tYXQtc2xpZGVyLW1pbi12YWx1ZSAubWF0LXNsaWRlci1mb2N1cy1yaW5ne2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtc2xpZGVyLW1pbi12YWx1ZS5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcgLm1hdC1zbGlkZXItdGh1bWIsLm1hdC1zbGlkZXItbWluLXZhbHVlLm1hdC1zbGlkZXItdGh1bWItbGFiZWwtc2hvd2luZyAubWF0LXNsaWRlci10aHVtYi1sYWJlbHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LXNsaWRlci1taW4tdmFsdWUubWF0LXNsaWRlci10aHVtYi1sYWJlbC1zaG93aW5nLmNkay1mb2N1c2VkIC5tYXQtc2xpZGVyLXRodW1iLC5tYXQtc2xpZGVyLW1pbi12YWx1ZS5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcuY2RrLWZvY3VzZWQgLm1hdC1zbGlkZXItdGh1bWItbGFiZWx7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4yNil9Lm1hdC1zbGlkZXItbWluLXZhbHVlOm5vdCgubWF0LXNsaWRlci10aHVtYi1sYWJlbC1zaG93aW5nKSAubWF0LXNsaWRlci10aHVtYntib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMjYpO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9Lm1hdC1zbGlkZXItbWluLXZhbHVlOm5vdCgubWF0LXNsaWRlci10aHVtYi1sYWJlbC1zaG93aW5nKS5jZGstZm9jdXNlZCAubWF0LXNsaWRlci10aHVtYiwubWF0LXNsaWRlci1taW4tdmFsdWU6bm90KC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcpOmhvdmVyIC5tYXQtc2xpZGVyLXRodW1ie2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLC4zOCl9Lm1hdC1zbGlkZXItbWluLXZhbHVlOm5vdCgubWF0LXNsaWRlci10aHVtYi1sYWJlbC1zaG93aW5nKS5jZGstZm9jdXNlZC5tYXQtc2xpZGVyLWRpc2FibGVkIC5tYXQtc2xpZGVyLXRodW1iLC5tYXQtc2xpZGVyLW1pbi12YWx1ZTpub3QoLm1hdC1zbGlkZXItdGh1bWItbGFiZWwtc2hvd2luZyk6aG92ZXIubWF0LXNsaWRlci1kaXNhYmxlZCAubWF0LXNsaWRlci10aHVtYntib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMjYpfS5tYXQtc2xpZGVyLWhhcy10aWNrcyAubWF0LXNsaWRlci13cmFwcGVyOjphZnRlcntib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuNyl9Lm1hdC1zbGlkZXItaG9yaXpvbnRhbCAubWF0LXNsaWRlci10aWNrc3tiYWNrZ3JvdW5kLWltYWdlOnJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQodG8gcmlnaHQscmdiYSgwLDAsMCwuNykscmdiYSgwLDAsMCwuNykgMnB4LHRyYW5zcGFyZW50IDAsdHJhbnNwYXJlbnQpO2JhY2tncm91bmQtaW1hZ2U6LW1vei1yZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KC4wMDAxZGVnLHJnYmEoMCwwLDAsLjcpLHJnYmEoMCwwLDAsLjcpIDJweCx0cmFuc3BhcmVudCAwLHRyYW5zcGFyZW50KX0ubWF0LXNsaWRlci12ZXJ0aWNhbCAubWF0LXNsaWRlci10aWNrc3tiYWNrZ3JvdW5kLWltYWdlOnJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMCwwLDAsLjcpLHJnYmEoMCwwLDAsLjcpIDJweCx0cmFuc3BhcmVudCAwLHRyYW5zcGFyZW50KX0ubWF0LXN0ZXAtaGVhZGVyLmNkay1rZXlib2FyZC1mb2N1c2VkLC5tYXQtc3RlcC1oZWFkZXIuY2RrLXByb2dyYW0tZm9jdXNlZCwubWF0LXN0ZXAtaGVhZGVyOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDQpfUBtZWRpYSAoaG92ZXI6bm9uZSl7Lm1hdC1zdGVwLWhlYWRlcjpob3ZlcntiYWNrZ3JvdW5kOjAgMH19Lm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtbGFiZWwsLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtb3B0aW9uYWx7Y29sb3I6cmdiYSgwLDAsMCwuNTQpfS5tYXQtc3RlcC1oZWFkZXIgLm1hdC1zdGVwLWljb257YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC41NCk7Y29sb3I6I2ZmZn0ubWF0LXN0ZXAtaGVhZGVyIC5tYXQtc3RlcC1pY29uLXNlbGVjdGVkLC5tYXQtc3RlcC1oZWFkZXIgLm1hdC1zdGVwLWljb24tc3RhdGUtZG9uZSwubWF0LXN0ZXAtaGVhZGVyIC5tYXQtc3RlcC1pY29uLXN0YXRlLWVkaXR7YmFja2dyb3VuZC1jb2xvcjojM2Y1MWI1O2NvbG9yOiNmZmZ9Lm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtaWNvbi1zdGF0ZS1lcnJvcntiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2NvbG9yOiNmNDQzMzZ9Lm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtbGFiZWwubWF0LXN0ZXAtbGFiZWwtYWN0aXZle2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LXN0ZXAtaGVhZGVyIC5tYXQtc3RlcC1sYWJlbC5tYXQtc3RlcC1sYWJlbC1lcnJvcntjb2xvcjojZjQ0MzM2fS5tYXQtc3RlcHBlci1ob3Jpem9udGFsLC5tYXQtc3RlcHBlci12ZXJ0aWNhbHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9Lm1hdC1zdGVwcGVyLXZlcnRpY2FsLWxpbmU6OmJlZm9yZXtib3JkZXItbGVmdC1jb2xvcjpyZ2JhKDAsMCwwLC4xMil9Lm1hdC1ob3Jpem9udGFsLXN0ZXBwZXItaGVhZGVyOjphZnRlciwubWF0LWhvcml6b250YWwtc3RlcHBlci1oZWFkZXI6OmJlZm9yZSwubWF0LXN0ZXBwZXItaG9yaXpvbnRhbC1saW5le2JvcmRlci10b3AtY29sb3I6cmdiYSgwLDAsMCwuMTIpfS5tYXQtc29ydC1oZWFkZXItYXJyb3d7Y29sb3I6Izc1NzU3NX0ubWF0LXRhYi1oZWFkZXIsLm1hdC10YWItbmF2LWJhcntib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xMil9Lm1hdC10YWItZ3JvdXAtaW52ZXJ0ZWQtaGVhZGVyIC5tYXQtdGFiLWhlYWRlciwubWF0LXRhYi1ncm91cC1pbnZlcnRlZC1oZWFkZXIgLm1hdC10YWItbmF2LWJhcntib3JkZXItdG9wOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xMik7Ym9yZGVyLWJvdHRvbTpub25lfS5tYXQtdGFiLWxhYmVsLC5tYXQtdGFiLWxpbmt7Y29sb3I6cmdiYSgwLDAsMCwuODcpfS5tYXQtdGFiLWxhYmVsLm1hdC10YWItZGlzYWJsZWQsLm1hdC10YWItbGluay5tYXQtdGFiLWRpc2FibGVke2NvbG9yOnJnYmEoMCwwLDAsLjM4KX0ubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1jaGV2cm9ue2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLC44Nyl9Lm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tZGlzYWJsZWQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbntib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMzgpfS5tYXQtdGFiLWdyb3VwW2NsYXNzKj1tYXQtYmFja2dyb3VuZC1dIC5tYXQtdGFiLWhlYWRlciwubWF0LXRhYi1uYXYtYmFyW2NsYXNzKj1tYXQtYmFja2dyb3VuZC1de2JvcmRlci1ib3R0b206bm9uZTtib3JkZXItdG9wOm5vbmV9Lm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1ncm91cC5tYXQtcHJpbWFyeSAubWF0LXRhYi1sYWJlbC5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLWdyb3VwLm1hdC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LXByaW1hcnkgLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpe2JhY2tncm91bmQtY29sb3I6cmdiYSgxOTcsMjAyLDIzMywuMyl9Lm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC1pbmstYmFyLC5tYXQtdGFiLW5hdi1iYXIubWF0LXByaW1hcnkgLm1hdC1pbmstYmFye2JhY2tncm91bmQtY29sb3I6IzNmNTFiNX0ubWF0LXRhYi1ncm91cC5tYXQtcHJpbWFyeS5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtaW5rLWJhciwubWF0LXRhYi1uYXYtYmFyLm1hdC1wcmltYXJ5Lm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC1pbmstYmFye2JhY2tncm91bmQtY29sb3I6I2ZmZn0ubWF0LXRhYi1ncm91cC5tYXQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItZ3JvdXAubWF0LWFjY2VudCAubWF0LXRhYi1sYWJlbC5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItZ3JvdXAubWF0LWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItZ3JvdXAubWF0LWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1hY2NlbnQgLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1hY2NlbnQgLm1hdC10YWItbGFiZWwuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItbmF2LWJhci5tYXQtYWNjZW50IC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpe2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMTI4LDE3MSwuMyl9Lm1hdC10YWItZ3JvdXAubWF0LWFjY2VudCAubWF0LWluay1iYXIsLm1hdC10YWItbmF2LWJhci5tYXQtYWNjZW50IC5tYXQtaW5rLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiNmZjQwODF9Lm1hdC10YWItZ3JvdXAubWF0LWFjY2VudC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC1pbmstYmFyLC5tYXQtdGFiLW5hdi1iYXIubWF0LWFjY2VudC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC1pbmstYmFye2JhY2tncm91bmQtY29sb3I6I2ZmZn0ubWF0LXRhYi1ncm91cC5tYXQtd2FybiAubWF0LXRhYi1sYWJlbC5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLWdyb3VwLm1hdC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1ncm91cC5tYXQtd2FybiAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItZ3JvdXAubWF0LXdhcm4gLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItbmF2LWJhci5tYXQtd2FybiAubWF0LXRhYi1sYWJlbC5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LXdhcm4gLm1hdC10YWItbGFiZWwuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LXdhcm4gLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LXdhcm4gLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCl7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyMDUsMjEwLC4zKX0ubWF0LXRhYi1ncm91cC5tYXQtd2FybiAubWF0LWluay1iYXIsLm1hdC10YWItbmF2LWJhci5tYXQtd2FybiAubWF0LWluay1iYXJ7YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtdGFiLWdyb3VwLm1hdC13YXJuLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC1pbmstYmFyLC5tYXQtdGFiLW5hdi1iYXIubWF0LXdhcm4ubWF0LWJhY2tncm91bmQtd2FybiAubWF0LWluay1iYXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1sYWJlbC5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1sYWJlbC5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCl7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE5NywyMDIsMjMzLC4zKX0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWhlYWRlciwubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmtzLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1oZWFkZXIsLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmtze2JhY2tncm91bmQtY29sb3I6IzNmNTFiNX0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGluaywubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGFiZWwsLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmt7Y29sb3I6I2ZmZn0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLm1hdC10YWItZGlzYWJsZWQsLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1saW5rLm1hdC10YWItZGlzYWJsZWQsLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLm1hdC10YWItZGlzYWJsZWQsLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsubWF0LXRhYi1kaXNhYmxlZHtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC40KX0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24sLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb257Ym9yZGVyLWNvbG9yOiNmZmZ9Lm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1kaXNhYmxlZCAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1jaGV2cm9uLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1kaXNhYmxlZCAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1jaGV2cm9ue2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC40KX0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtcmlwcGxlLWVsZW1lbnQsLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC4xMil9Lm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbC5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCl7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwxMjgsMTcxLC4zKX0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItaGVhZGVyLC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5rcywubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1oZWFkZXIsLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItbGlua3N7YmFja2dyb3VuZC1jb2xvcjojZmY0MDgxfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbCwubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItbGluaywubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbCwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5re2NvbG9yOiNmZmZ9Lm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLm1hdC10YWItZGlzYWJsZWQsLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxpbmsubWF0LXRhYi1kaXNhYmxlZCwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbC5tYXQtdGFiLWRpc2FibGVkLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxpbmsubWF0LXRhYi1kaXNhYmxlZHtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC40KX0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1jaGV2cm9ue2JvcmRlci1jb2xvcjojZmZmfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1kaXNhYmxlZCAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1jaGV2cm9uLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWRpc2FibGVkIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb257Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjQpfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXJpcHBsZS1lbGVtZW50LC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtcmlwcGxlLWVsZW1lbnR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC4xMil9Lm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1sYWJlbC5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKXtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDIwNSwyMTAsLjMpfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItaGVhZGVyLC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGlua3MsLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWhlYWRlciwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGlua3N7YmFja2dyb3VuZC1jb2xvcjojZjQ0MzM2fS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwsLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rLC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1sYWJlbCwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGlua3tjb2xvcjojZmZmfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwubWF0LXRhYi1kaXNhYmxlZCwubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWxpbmsubWF0LXRhYi1kaXNhYmxlZCwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwubWF0LXRhYi1kaXNhYmxlZCwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGluay5tYXQtdGFiLWRpc2FibGVke2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjQpfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbntib3JkZXItY29sb3I6I2ZmZn0ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWRpc2FibGVkIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24sLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWRpc2FibGVkIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb257Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjQpfS5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC1yaXBwbGUtZWxlbWVudCwubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC1yaXBwbGUtZWxlbWVudHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjEyKX0ubWF0LXRvb2xiYXJ7YmFja2dyb3VuZDojZjVmNWY1O2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LXRvb2xiYXIubWF0LXByaW1hcnl7YmFja2dyb3VuZDojM2Y1MWI1O2NvbG9yOiNmZmZ9Lm1hdC10b29sYmFyLm1hdC1hY2NlbnR7YmFja2dyb3VuZDojZmY0MDgxO2NvbG9yOiNmZmZ9Lm1hdC10b29sYmFyLm1hdC13YXJue2JhY2tncm91bmQ6I2Y0NDMzNjtjb2xvcjojZmZmfS5tYXQtdG9vbGJhciAubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSwubWF0LXRvb2xiYXIgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSwubWF0LXRvb2xiYXIgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZXtiYWNrZ3JvdW5kLWNvbG9yOmN1cnJlbnRDb2xvcn0ubWF0LXRvb2xiYXIgLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1sYWJlbCwubWF0LXRvb2xiYXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLC5tYXQtdG9vbGJhciAubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1zZWxlY3QtYXJyb3csLm1hdC10b29sYmFyIC5tYXQtc2VsZWN0LWFycm93LC5tYXQtdG9vbGJhciAubWF0LXNlbGVjdC12YWx1ZXtjb2xvcjppbmhlcml0fS5tYXQtdG9vbGJhciAubWF0LWlucHV0LWVsZW1lbnR7Y2FyZXQtY29sb3I6Y3VycmVudENvbG9yfS5tYXQtdG9vbHRpcHtiYWNrZ3JvdW5kOnJnYmEoOTcsOTcsOTcsLjkpfS5tYXQtdHJlZXtiYWNrZ3JvdW5kOiNmZmZ9Lm1hdC1uZXN0ZWQtdHJlZS1ub2RlLC5tYXQtdHJlZS1ub2Rle2NvbG9yOnJnYmEoMCwwLDAsLjg3KX0ubWF0LXNuYWNrLWJhci1jb250YWluZXJ7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNyk7YmFja2dyb3VuZDojMzIzMjMyO2JveC1zaGFkb3c6MCAzcHggNXB4IC0xcHggcmdiYSgwLDAsMCwuMiksMCA2cHggMTBweCAwIHJnYmEoMCwwLDAsLjE0KSwwIDFweCAxOHB4IDAgcmdiYSgwLDAsMCwuMTIpfS5tYXQtc2ltcGxlLXNuYWNrYmFyLWFjdGlvbntjb2xvcjojZmY0MDgxfSIsIi8qKlxuICogQXBwbGllcyBzdHlsZXMgZm9yIHVzZXJzIGluIGhpZ2ggY29udHJhc3QgbW9kZS4gTm90ZSB0aGF0IHRoaXMgb25seSBhcHBsaWVzXG4gKiB0byBNaWNyb3NvZnQgYnJvd3NlcnMuIENocm9tZSBjYW4gYmUgaW5jbHVkZWQgYnkgY2hlY2tpbmcgZm9yIHRoZSBgaHRtbFtoY11gXG4gKiBhdHRyaWJ1dGUsIGhvd2V2ZXIgQ2hyb21lIGhhbmRsZXMgaGlnaCBjb250cmFzdCBkaWZmZXJlbnRseS5cbiAqIEBwYXJhbSB0YXJnZXQgV2hpY2gga2luZCBvZiBoaWdoIGNvbnRyYXN0IHNldHRpbmcgdG8gdGFyZ2V0LiBEZWZhdWx0cyB0byBgYWN0aXZlYCwgY2FuIGJlXG4gKiAgICBgd2hpdGUtb24tYmxhY2tgIG9yIGBibGFjay1vbi13aGl0ZWAuXG4gKi9cbi8qIFRoZW1lIGZvciB0aGUgcmlwcGxlIGVsZW1lbnRzLiovXG4vKiBzdHlsZWxpbnQtZGlzYWJsZSBtYXRlcmlhbC9uby1wcmVmaXhlcyAqL1xuLyogc3R5bGVsaW50LWVuYWJsZSAqL1xuLyogWW91IGNhbiBhZGQgZ2xvYmFsIHN0eWxlcyB0byB0aGlzIGZpbGUsIGFuZCBhbHNvIGltcG9ydCBvdGhlciBzdHlsZSBmaWxlcyAqL1xuLyoqXG4gKiBBcHBsaWVzIHN0eWxlcyBmb3IgdXNlcnMgaW4gaGlnaCBjb250cmFzdCBtb2RlLiBOb3RlIHRoYXQgdGhpcyBvbmx5IGFwcGxpZXNcbiAqIHRvIE1pY3Jvc29mdCBicm93c2Vycy4gQ2hyb21lIGNhbiBiZSBpbmNsdWRlZCBieSBjaGVja2luZyBmb3IgdGhlIGBodG1sW2hjXWBcbiAqIGF0dHJpYnV0ZSwgaG93ZXZlciBDaHJvbWUgaGFuZGxlcyBoaWdoIGNvbnRyYXN0IGRpZmZlcmVudGx5LlxuICogQHBhcmFtIHRhcmdldCBXaGljaCBraW5kIG9mIGhpZ2ggY29udHJhc3Qgc2V0dGluZyB0byB0YXJnZXQuIERlZmF1bHRzIHRvIGBhY3RpdmVgLCBjYW4gYmVcbiAqICAgIGB3aGl0ZS1vbi1ibGFja2Agb3IgYGJsYWNrLW9uLXdoaXRlYC5cbiAqL1xuLyogVGhlbWUgZm9yIHRoZSByaXBwbGUgZWxlbWVudHMuKi9cbi8qIHN0eWxlbGludC1kaXNhYmxlIG1hdGVyaWFsL25vLXByZWZpeGVzICovXG4vKiBzdHlsZWxpbnQtZW5hYmxlICovXG5AaW1wb3J0IHVybCh+QGFuZ3VsYXIvbWF0ZXJpYWwvcHJlYnVpbHQtdGhlbWVzL2luZGlnby1waW5rLmNzcyk7XG4ubWF0LWJhZGdlLWNvbnRlbnQge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LWJhZGdlLXNtYWxsIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGZvbnQtc2l6ZTogNnB4OyB9XG5cbi5tYXQtYmFkZ2UtbGFyZ2UgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgZm9udC1zaXplOiAyNHB4OyB9XG5cbi5tYXQtaDEsIC5tYXQtaGVhZGxpbmUsIC5tYXQtdHlwb2dyYXBoeSBoMSB7XG4gIGZvbnQ6IDQwMCAyNHB4LzMycHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMCAwIDE2cHg7IH1cblxuLm1hdC1oMiwgLm1hdC10aXRsZSwgLm1hdC10eXBvZ3JhcGh5IGgyIHtcbiAgZm9udDogNTAwIDIwcHgvMzJweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwIDAgMTZweDsgfVxuXG4ubWF0LWgzLCAubWF0LXN1YmhlYWRpbmctMiwgLm1hdC10eXBvZ3JhcGh5IGgzIHtcbiAgZm9udDogNDAwIDE2cHgvMjhweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwIDAgMTZweDsgfVxuXG4ubWF0LWg0LCAubWF0LXN1YmhlYWRpbmctMSwgLm1hdC10eXBvZ3JhcGh5IGg0IHtcbiAgZm9udDogNDAwIDE1cHgvMjRweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwIDAgMTZweDsgfVxuXG4ubWF0LWg1LCAubWF0LXR5cG9ncmFwaHkgaDUge1xuICBmb250OiA0MDAgMTEuNjJweC8yMHB4IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDAgMCAxMnB4OyB9XG5cbi5tYXQtaDYsIC5tYXQtdHlwb2dyYXBoeSBoNiB7XG4gIGZvbnQ6IDQwMCA5LjM4cHgvMjBweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwIDAgMTJweDsgfVxuXG4ubWF0LWJvZHktc3Ryb25nLCAubWF0LWJvZHktMiB7XG4gIGZvbnQ6IDUwMCAxNHB4LzI0cHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7IH1cblxuLm1hdC1ib2R5LCAubWF0LWJvZHktMSwgLm1hdC10eXBvZ3JhcGh5IHtcbiAgZm9udDogNDAwIDE0cHgvMjBweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuICAubWF0LWJvZHkgcCwgLm1hdC1ib2R5LTEgcCwgLm1hdC10eXBvZ3JhcGh5IHAge1xuICAgIG1hcmdpbjogMCAwIDEycHg7IH1cblxuLm1hdC1zbWFsbCwgLm1hdC1jYXB0aW9uIHtcbiAgZm9udDogNDAwIDEycHgvMjBweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LWRpc3BsYXktNCwgLm1hdC10eXBvZ3JhcGh5IC5tYXQtZGlzcGxheS00IHtcbiAgZm9udDogMzAwIDExMnB4LzExMnB4IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDAgMCA1NnB4O1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDVlbTsgfVxuXG4ubWF0LWRpc3BsYXktMywgLm1hdC10eXBvZ3JhcGh5IC5tYXQtZGlzcGxheS0zIHtcbiAgZm9udDogNDAwIDU2cHgvNTZweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwIDAgNjRweDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAyZW07IH1cblxuLm1hdC1kaXNwbGF5LTIsIC5tYXQtdHlwb2dyYXBoeSAubWF0LWRpc3BsYXktMiB7XG4gIGZvbnQ6IDQwMCA0NXB4LzQ4cHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMCAwIDY0cHg7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMDVlbTsgfVxuXG4ubWF0LWRpc3BsYXktMSwgLm1hdC10eXBvZ3JhcGh5IC5tYXQtZGlzcGxheS0xIHtcbiAgZm9udDogNDAwIDM0cHgvNDBweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwIDAgNjRweDsgfVxuXG4ubWF0LWJvdHRvbS1zaGVldC1jb250YWluZXIge1xuICBmb250OiA0MDAgMTRweC8yMHB4IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5tYXQtYnV0dG9uLCAubWF0LXJhaXNlZC1idXR0b24sIC5tYXQtaWNvbi1idXR0b24sIC5tYXQtc3Ryb2tlZC1idXR0b24sXG4ubWF0LWZsYXQtYnV0dG9uLCAubWF0LWZhYiwgLm1hdC1taW5pLWZhYiB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNTAwOyB9XG5cbi5tYXQtYnV0dG9uLXRvZ2dsZSB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LWNhcmQge1xuICBmb250LWZhbWlseTogUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7IH1cblxuLm1hdC1jYXJkLXRpdGxlIHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LXdlaWdodDogNTAwOyB9XG5cbi5tYXQtY2FyZC1oZWFkZXIgLm1hdC1jYXJkLXRpdGxlIHtcbiAgZm9udC1zaXplOiAyMHB4OyB9XG5cbi5tYXQtY2FyZC1zdWJ0aXRsZSxcbi5tYXQtY2FyZC1jb250ZW50IHtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi5tYXQtY2hlY2tib3gge1xuICBmb250LWZhbWlseTogUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7IH1cblxuLm1hdC1jaGVja2JveC1sYXlvdXQgLm1hdC1jaGVja2JveC1sYWJlbCB7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4OyB9XG5cbi5tYXQtY2hpcCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuICAubWF0LWNoaXAgLm1hdC1jaGlwLXRyYWlsaW5nLWljb24ubWF0LWljb24sXG4gIC5tYXQtY2hpcCAubWF0LWNoaXAtcmVtb3ZlLm1hdC1pY29uIHtcbiAgICBmb250LXNpemU6IDE4cHg7IH1cblxuLm1hdC10YWJsZSB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNTAwOyB9XG5cbi5tYXQtY2VsbCwgLm1hdC1mb290ZXItY2VsbCB7XG4gIGZvbnQtc2l6ZTogMTRweDsgfVxuXG4ubWF0LWNhbGVuZGFyIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5tYXQtY2FsZW5kYXItYm9keSB7XG4gIGZvbnQtc2l6ZTogMTNweDsgfVxuXG4ubWF0LWNhbGVuZGFyLWJvZHktbGFiZWwsXG4ubWF0LWNhbGVuZGFyLXBlcmlvZC1idXR0b24ge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7IH1cblxuLm1hdC1jYWxlbmRhci10YWJsZS1oZWFkZXIgdGgge1xuICBmb250LXNpemU6IDExcHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuLm1hdC1kaWFsb2ctdGl0bGUge1xuICBmb250OiA1MDAgMjBweC8zMnB4IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlciB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogNDAwOyB9XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWNvbnRlbnQge1xuICBmb250OiA0MDAgMTRweC8yMHB4IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMTI1O1xuICBmb250LWZhbWlseTogUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7IH1cblxuLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXIge1xuICBwYWRkaW5nLWJvdHRvbTogMS4zNDM3NWVtOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1wcmVmaXggLm1hdC1pY29uLFxuLm1hdC1mb3JtLWZpZWxkLXN1ZmZpeCAubWF0LWljb24ge1xuICBmb250LXNpemU6IDE1MCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjEyNTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtcHJlZml4IC5tYXQtaWNvbi1idXR0b24sXG4ubWF0LWZvcm0tZmllbGQtc3VmZml4IC5tYXQtaWNvbi1idXR0b24ge1xuICBoZWlnaHQ6IDEuNWVtO1xuICB3aWR0aDogMS41ZW07IH1cbiAgLm1hdC1mb3JtLWZpZWxkLXByZWZpeCAubWF0LWljb24tYnV0dG9uIC5tYXQtaWNvbixcbiAgLm1hdC1mb3JtLWZpZWxkLXN1ZmZpeCAubWF0LWljb24tYnV0dG9uIC5tYXQtaWNvbiB7XG4gICAgaGVpZ2h0OiAxLjEyNWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjEyNTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICBwYWRkaW5nOiAwLjVlbSAwO1xuICBib3JkZXItdG9wOiAwLjg0Mzc1ZW0gc29saWQgdHJhbnNwYXJlbnQ7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdC5tYXQtZm9ybS1maWVsZC1zaG91bGQtZmxvYXQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLFxuLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcjpmb2N1cyArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4zNDM3NWVtKSBzY2FsZSgwLjc1KTtcbiAgd2lkdGg6IDEzMy4zMzMzMzMzMyU7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlclxuLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjM0Mzc0ZW0pIHNjYWxlKDAuNzUpO1xuICB3aWR0aDogMTMzLjMzMzM0MzMzJTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciB7XG4gIHRvcDogLTAuODQzNzVlbTtcbiAgcGFkZGluZy10b3A6IDAuODQzNzVlbTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICB0b3A6IDEuMzQzNzVlbTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgYm90dG9tOiAxLjM0Mzc1ZW07IH1cblxuLm1hdC1mb3JtLWZpZWxkLXN1YnNjcmlwdC13cmFwcGVyIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIG1hcmdpbi10b3A6IDAuNjY2NjY2NjdlbTtcbiAgdG9wOiBjYWxjKDEwMCUgLSAxLjc5MTY2NjY3ZW0pOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeSAubWF0LWZvcm0tZmllbGQtd3JhcHBlciB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjI1ZW07IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XG4gIHBhZGRpbmc6IDAuNDM3NWVtIDA7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5Lm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdC5tYXQtZm9ybS1maWVsZC1zaG91bGQtZmxvYXQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLFxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5Lm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcjpmb2N1cyArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4yODEyNWVtKSBzY2FsZSgwLjc1KSBwZXJzcGVjdGl2ZSgxMDBweCkgdHJhbnNsYXRlWigwLjAwMXB4KTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4yODEyNWVtKSBzY2FsZSgwLjc1KTtcbiAgd2lkdGg6IDEzMy4zMzMzMzMzMyU7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5Lm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWZvcm0tZmllbGQtYXV0b2ZpbGwtY29udHJvbDotd2Via2l0LWF1dG9maWxsICsgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXJcbi5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4yODEyNWVtKSBzY2FsZSgwLjc1KSBwZXJzcGVjdGl2ZSgxMDBweCkgdHJhbnNsYXRlWigwLjAwMTAxcHgpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjI4MTI0ZW0pIHNjYWxlKDAuNzUpO1xuICB3aWR0aDogMTMzLjMzMzM0MzMzJTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyW2xhYmVsXTpub3QoOmxhYmVsLXNob3duKSArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyXG4ubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEuMjgxMjVlbSkgc2NhbGUoMC43NSkgcGVyc3BlY3RpdmUoMTAwcHgpIHRyYW5zbGF0ZVooMC4wMDEwMnB4KTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4yODEyM2VtKSBzY2FsZSgwLjc1KTtcbiAgd2lkdGg6IDEzMy4zMzMzNTMzMyU7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIHRvcDogMS4yODEyNWVtOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeSAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgYm90dG9tOiAxLjI1ZW07IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IC5tYXQtZm9ybS1maWVsZC1zdWJzY3JpcHQtd3JhcHBlciB7XG4gIG1hcmdpbi10b3A6IDAuNTQxNjY2NjdlbTtcbiAgdG9wOiBjYWxjKDEwMCUgLSAxLjY2NjY2NjY3ZW0pOyB9XG5cbkBtZWRpYSBwcmludCB7XG4gIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeS5tYXQtZm9ybS1maWVsZC1jYW4tZmxvYXQubWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1sYWJlbCxcbiAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5Lm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcjpmb2N1cyArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjI4MTIyZW0pIHNjYWxlKDAuNzUpOyB9XG4gIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeS5tYXQtZm9ybS1maWVsZC1jYW4tZmxvYXQgLm1hdC1mb3JtLWZpZWxkLWF1dG9maWxsLWNvbnRyb2w6LXdlYmtpdC1hdXRvZmlsbCArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyXG4ubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4yODEyMWVtKSBzY2FsZSgwLjc1KTsgfVxuICAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyW2xhYmVsXTpub3QoOmxhYmVsLXNob3duKSArIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyXG4ubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4yODEyZW0pIHNjYWxlKDAuNzUpOyB9IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbCAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICBwYWRkaW5nOiAwLjI1ZW0gMCAwLjc1ZW0gMDsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1maWxsIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIHRvcDogMS4wOTM3NWVtO1xuICBtYXJnaW4tdG9wOiAtMC41ZW07IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbC5tYXQtZm9ybS1maWVsZC1jYW4tZmxvYXQubWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1sYWJlbCxcbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWZpbGwubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyOmZvY3VzICsgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjU5Mzc1ZW0pIHNjYWxlKDAuNzUpO1xuICB3aWR0aDogMTMzLjMzMzMzMzMzJTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1maWxsLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlclxuLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjU5Mzc0ZW0pIHNjYWxlKDAuNzUpO1xuICB3aWR0aDogMTMzLjMzMzM0MzMzJTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XG4gIHBhZGRpbmc6IDFlbSAwIDFlbSAwOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgdG9wOiAxLjg0Mzc1ZW07XG4gIG1hcmdpbi10b3A6IC0wLjI1ZW07IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9ybS1maWVsZC1jYW4tZmxvYXQubWF0LWZvcm0tZmllbGQtc2hvdWxkLWZsb2F0IC5tYXQtZm9ybS1maWVsZC1sYWJlbCxcbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvcm0tZmllbGQtY2FuLWZsb2F0IC5tYXQtaW5wdXQtc2VydmVyOmZvY3VzICsgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLXdyYXBwZXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjU5Mzc1ZW0pIHNjYWxlKDAuNzUpO1xuICB3aWR0aDogMTMzLjMzMzMzMzMzJTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb3JtLWZpZWxkLWNhbi1mbG9hdCAubWF0LWlucHV0LXNlcnZlcltsYWJlbF06bm90KDpsYWJlbC1zaG93bikgKyAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlclxuLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xLjU5Mzc0ZW0pIHNjYWxlKDAuNzUpO1xuICB3aWR0aDogMTMzLjMzMzM0MzMzJTsgfVxuXG4ubWF0LWdyaWQtdGlsZS1oZWFkZXIsXG4ubWF0LWdyaWQtdGlsZS1mb290ZXIge1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgLm1hdC1ncmlkLXRpbGUtaGVhZGVyIC5tYXQtbGluZSxcbiAgLm1hdC1ncmlkLXRpbGUtZm9vdGVyIC5tYXQtbGluZSB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAubWF0LWdyaWQtdGlsZS1oZWFkZXIgLm1hdC1saW5lOm50aC1jaGlsZChuKzIpLFxuICAgIC5tYXQtZ3JpZC10aWxlLWZvb3RlciAubWF0LWxpbmU6bnRoLWNoaWxkKG4rMikge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9XG5cbmlucHV0Lm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgbWFyZ2luLXRvcDogLTAuMDYyNWVtOyB9XG5cbi5tYXQtbWVudS1pdGVtIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuLm1hdC1wYWdpbmF0b3IsXG4ubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMnB4OyB9XG5cbi5tYXQtcmFkaW8tYnV0dG9uIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5tYXQtc2VsZWN0IHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5tYXQtc2VsZWN0LXRyaWdnZXIge1xuICBoZWlnaHQ6IDEuMTI1ZW07IH1cblxuLm1hdC1zbGlkZS10b2dnbGUtY29udGVudCB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LXNsaWRlci10aHVtYi1sYWJlbC10ZXh0IHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7IH1cblxuLm1hdC1zdGVwcGVyLXZlcnRpY2FsLCAubWF0LXN0ZXBwZXItaG9yaXpvbnRhbCB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LXN0ZXAtbGFiZWwge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuLm1hdC1zdGVwLXN1Yi1sYWJlbC1lcnJvciB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuLm1hdC1zdGVwLWxhYmVsLWVycm9yIHtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi5tYXQtc3RlcC1sYWJlbC1zZWxlY3RlZCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuXG4ubWF0LXRhYi1ncm91cCB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LXRhYi1sYWJlbCwgLm1hdC10YWItbGluayB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNTAwOyB9XG5cbi5tYXQtdG9vbGJhcixcbi5tYXQtdG9vbGJhciBoMSxcbi5tYXQtdG9vbGJhciBoMixcbi5tYXQtdG9vbGJhciBoMyxcbi5tYXQtdG9vbGJhciBoNCxcbi5tYXQtdG9vbGJhciBoNSxcbi5tYXQtdG9vbGJhciBoNiB7XG4gIGZvbnQ6IDUwMCAyMHB4LzMycHggUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMDsgfVxuXG4ubWF0LXRvb2x0aXAge1xuICBmb250LWZhbWlseTogUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgcGFkZGluZy10b3A6IDZweDtcbiAgcGFkZGluZy1ib3R0b206IDZweDsgfVxuXG4ubWF0LXRvb2x0aXAtaGFuZHNldCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcGFkZGluZy10b3A6IDhweDtcbiAgcGFkZGluZy1ib3R0b206IDhweDsgfVxuXG4ubWF0LWxpc3QtaXRlbSB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LWxpc3Qtb3B0aW9uIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtIHtcbiAgZm9udC1zaXplOiAxNnB4OyB9XG4gIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtIC5tYXQtbGluZSB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSAubWF0LWxpbmU6bnRoLWNoaWxkKG4rMikge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1vcHRpb24ge1xuICBmb250LXNpemU6IDE2cHg7IH1cbiAgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbiAubWF0LWxpbmUge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICAgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbiAubWF0LWxpbmU6bnRoLWNoaWxkKG4rMikge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi5tYXQtbGlzdC1iYXNlIC5tYXQtc3ViaGVhZGVyIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7IH1cblxuLm1hdC1saXN0LWJhc2VbZGVuc2VdIC5tYXQtbGlzdC1pdGVtIHtcbiAgZm9udC1zaXplOiAxMnB4OyB9XG4gIC5tYXQtbGlzdC1iYXNlW2RlbnNlXSAubWF0LWxpc3QtaXRlbSAubWF0LWxpbmUge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICAgLm1hdC1saXN0LWJhc2VbZGVuc2VdIC5tYXQtbGlzdC1pdGVtIC5tYXQtbGluZTpudGgtY2hpbGQobisyKSB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH1cblxuLm1hdC1saXN0LWJhc2VbZGVuc2VdIC5tYXQtbGlzdC1vcHRpb24ge1xuICBmb250LXNpemU6IDEycHg7IH1cbiAgLm1hdC1saXN0LWJhc2VbZGVuc2VdIC5tYXQtbGlzdC1vcHRpb24gLm1hdC1saW5lIHtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAgIC5tYXQtbGlzdC1iYXNlW2RlbnNlXSAubWF0LWxpc3Qtb3B0aW9uIC5tYXQtbGluZTpudGgtY2hpbGQobisyKSB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH1cblxuLm1hdC1saXN0LWJhc2VbZGVuc2VdIC5tYXQtc3ViaGVhZGVyIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7IH1cblxuLm1hdC1vcHRpb24ge1xuICBmb250LWZhbWlseTogUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTZweDsgfVxuXG4ubWF0LW9wdGdyb3VwLWxhYmVsIHtcbiAgZm9udDogNTAwIDE0cHgvMjRweCBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LXNpbXBsZS1zbmFja2JhciB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi5tYXQtc2ltcGxlLXNuYWNrYmFyLWFjdGlvbiB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogNTAwOyB9XG5cbi5tYXQtdHJlZSB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjsgfVxuXG4ubWF0LXRyZWUtbm9kZSxcbi5tYXQtbmVzdGVkLXRyZWUtbm9kZSB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTRweDsgfVxuXG4ubWF0LXJpcHBsZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ubWF0LXJpcHBsZS5tYXQtcmlwcGxlLXVuYm91bmRlZCB7XG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHksIHRyYW5zZm9ybSAwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7IH1cbiAgQG1lZGlhICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSB7XG4gICAgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmNkay12aXN1YWxseS1oaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgb3V0bGluZTogMDtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLmNkay1vdmVybGF5LWNvbnRhaW5lciwgLmNkay1nbG9iYWwtb3ZlcmxheS13cmFwcGVyIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTsgfVxuXG4uY2RrLW92ZXJsYXktY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxMDAwOyB9XG4gIC5jZGstb3ZlcmxheS1jb250YWluZXI6ZW1wdHkge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLmNkay1nbG9iYWwtb3ZlcmxheS13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxMDAwOyB9XG5cbi5jZGstb3ZlcmxheS1wYW5lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgei1pbmRleDogMTAwMDtcbiAgZGlzcGxheTogZmxleDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXgtaGVpZ2h0OiAxMDAlOyB9XG5cbi5jZGstb3ZlcmxheS1iYWNrZHJvcCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBjdWJpYy1iZXppZXIoMC4yNSwgMC44LCAwLjI1LCAxKTtcbiAgb3BhY2l0eTogMDsgfVxuICAuY2RrLW92ZXJsYXktYmFja2Ryb3AuY2RrLW92ZXJsYXktYmFja2Ryb3Atc2hvd2luZyB7XG4gICAgb3BhY2l0eTogMTsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSB7XG4gICAgICAuY2RrLW92ZXJsYXktYmFja2Ryb3AuY2RrLW92ZXJsYXktYmFja2Ryb3Atc2hvd2luZyB7XG4gICAgICAgIG9wYWNpdHk6IDAuNjsgfSB9XG5cbi5jZGstb3ZlcmxheS1kYXJrLWJhY2tkcm9wIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjMyKTsgfVxuXG4uY2RrLW92ZXJsYXktdHJhbnNwYXJlbnQtYmFja2Ryb3AsIC5jZGstb3ZlcmxheS10cmFuc3BhcmVudC1iYWNrZHJvcC5jZGstb3ZlcmxheS1iYWNrZHJvcC1zaG93aW5nIHtcbiAgb3BhY2l0eTogMDsgfVxuXG4uY2RrLW92ZXJsYXktY29ubmVjdGVkLXBvc2l0aW9uLWJvdW5kaW5nLWJveCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTAwMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLXdpZHRoOiAxcHg7XG4gIG1pbi1oZWlnaHQ6IDFweDsgfVxuXG4uY2RrLWdsb2JhbC1zY3JvbGxibG9jayB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDsgfVxuXG5Aa2V5ZnJhbWVzIGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLXN0YXJ0IHtcbiAgLyohKi8gfVxuXG5Aa2V5ZnJhbWVzIGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLWVuZCB7XG4gIC8qISovIH1cblxuLmNkay10ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3JlZDotd2Via2l0LWF1dG9maWxsIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGNkay10ZXh0LWZpZWxkLWF1dG9maWxsLXN0YXJ0OyB9XG5cbi5jZGstdGV4dC1maWVsZC1hdXRvZmlsbC1tb25pdG9yZWQ6bm90KDotd2Via2l0LWF1dG9maWxsKSB7XG4gIGFuaW1hdGlvbi1uYW1lOiBjZGstdGV4dC1maWVsZC1hdXRvZmlsbC1lbmQ7IH1cblxudGV4dGFyZWEuY2RrLXRleHRhcmVhLWF1dG9zaXplIHtcbiAgcmVzaXplOiBub25lOyB9XG5cbnRleHRhcmVhLmNkay10ZXh0YXJlYS1hdXRvc2l6ZS1tZWFzdXJpbmcge1xuICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAycHggMCAhaW1wb3J0YW50O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveCAhaW1wb3J0YW50OyB9XG5cbi5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7IH1cblxuLm1hdC1vcHRpb24ge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LW9wdGlvbjpob3Zlcjpub3QoLm1hdC1vcHRpb24tZGlzYWJsZWQpLCAubWF0LW9wdGlvbjpmb2N1czpub3QoLm1hdC1vcHRpb24tZGlzYWJsZWQpIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDQpOyB9XG4gIC5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1vcHRpb24tbXVsdGlwbGUpOm5vdCgubWF0LW9wdGlvbi1kaXNhYmxlZCkge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNCk7IH1cbiAgLm1hdC1vcHRpb24ubWF0LWFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA0KTtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LW9wdGlvbi5tYXQtb3B0aW9uLWRpc2FibGVkIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjM4KTsgfVxuXG4ubWF0LXByaW1hcnkgLm1hdC1vcHRpb24ubWF0LXNlbGVjdGVkOm5vdCgubWF0LW9wdGlvbi1kaXNhYmxlZCkge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWFjY2VudCAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gIGNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtd2FybiAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gIGNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtb3B0Z3JvdXAtbGFiZWwge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuXG4ubWF0LW9wdGdyb3VwLWRpc2FibGVkIC5tYXQtb3B0Z3JvdXAtbGFiZWwge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjM4KTsgfVxuXG4ubWF0LXBzZXVkby1jaGVja2JveCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG4gIC5tYXQtcHNldWRvLWNoZWNrYm94OjphZnRlciB7XG4gICAgY29sb3I6ICNmYWZhZmE7IH1cblxuLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZCxcbi5tYXQtcHNldWRvLWNoZWNrYm94LWluZGV0ZXJtaW5hdGUsXG4ubWF0LWFjY2VudCAubWF0LXBzZXVkby1jaGVja2JveC1jaGVja2VkLFxuLm1hdC1hY2NlbnQgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSB7XG4gIGJhY2tncm91bmQ6ICM2OWYwYWU7IH1cblxuLm1hdC1wcmltYXJ5IC5tYXQtcHNldWRvLWNoZWNrYm94LWNoZWNrZWQsXG4ubWF0LXByaW1hcnkgLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSB7XG4gIGJhY2tncm91bmQ6ICNmNDQzMzY7IH1cblxuLm1hdC13YXJuIC5tYXQtcHNldWRvLWNoZWNrYm94LWNoZWNrZWQsXG4ubWF0LXdhcm4gLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZSB7XG4gIGJhY2tncm91bmQ6ICNmNDQzMzY7IH1cblxuLm1hdC1wc2V1ZG8tY2hlY2tib3gtY2hlY2tlZC5tYXQtcHNldWRvLWNoZWNrYm94LWRpc2FibGVkLFxuLm1hdC1wc2V1ZG8tY2hlY2tib3gtaW5kZXRlcm1pbmF0ZS5tYXQtcHNldWRvLWNoZWNrYm94LWRpc2FibGVkIHtcbiAgYmFja2dyb3VuZDogI2IwYjBiMDsgfVxuXG4ubWF0LWVsZXZhdGlvbi16MCB7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIGJveC1zaGFkb3c6IDBweCAycHggMXB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDFweCAzcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejIge1xuICBib3gtc2hhZG93OiAwcHggM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDJweCAycHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZWxldmF0aW9uLXozIHtcbiAgYm94LXNoYWRvdzogMHB4IDNweCAzcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAzcHggNHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMXB4IDhweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWVsZXZhdGlvbi16NCB7XG4gIGJveC1zaGFkb3c6IDBweCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggNHB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDFweCAxMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZWxldmF0aW9uLXo1IHtcbiAgYm94LXNoYWRvdzogMHB4IDNweCA1cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCA1cHggOHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMXB4IDE0cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejYge1xuICBib3gtc2hhZG93OiAwcHggM3B4IDVweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDZweCAxMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMXB4IDE4cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejcge1xuICBib3gtc2hhZG93OiAwcHggNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDdweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMnB4IDE2cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejgge1xuICBib3gtc2hhZG93OiAwcHggNXB4IDVweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggM3B4IDE0cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejkge1xuICBib3gtc2hhZG93OiAwcHggNXB4IDZweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDlweCAxMnB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggM3B4IDE2cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejEwIHtcbiAgYm94LXNoYWRvdzogMHB4IDZweCA2cHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAxMHB4IDE0cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCA0cHggMThweCAzcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWVsZXZhdGlvbi16MTEge1xuICBib3gtc2hhZG93OiAwcHggNnB4IDdweCAtNHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDExcHggMTVweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDRweCAyMHB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZWxldmF0aW9uLXoxMiB7XG4gIGJveC1zaGFkb3c6IDBweCA3cHggOHB4IC00cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMTJweCAxN3B4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggNXB4IDIycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejEzIHtcbiAgYm94LXNoYWRvdzogMHB4IDdweCA4cHggLTRweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAxM3B4IDE5cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCA1cHggMjRweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWVsZXZhdGlvbi16MTQge1xuICBib3gtc2hhZG93OiAwcHggN3B4IDlweCAtNHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDE0cHggMjFweCAycHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDVweCAyNnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZWxldmF0aW9uLXoxNSB7XG4gIGJveC1zaGFkb3c6IDBweCA4cHggOXB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMTVweCAyMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggNnB4IDI4cHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejE2IHtcbiAgYm94LXNoYWRvdzogMHB4IDhweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMTZweCAyNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggNnB4IDMwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejE3IHtcbiAgYm94LXNoYWRvdzogMHB4IDhweCAxMXB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMTdweCAyNnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggNnB4IDMycHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejE4IHtcbiAgYm94LXNoYWRvdzogMHB4IDlweCAxMXB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMThweCAyOHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggN3B4IDM0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejE5IHtcbiAgYm94LXNoYWRvdzogMHB4IDlweCAxMnB4IC02cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMTlweCAyOXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggN3B4IDM2cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejIwIHtcbiAgYm94LXNoYWRvdzogMHB4IDEwcHggMTNweCAtNnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDIwcHggMzFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDhweCAzOHB4IDdweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZWxldmF0aW9uLXoyMSB7XG4gIGJveC1zaGFkb3c6IDBweCAxMHB4IDEzcHggLTZweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAyMXB4IDMzcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCA4cHggNDBweCA3cHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWVsZXZhdGlvbi16MjIge1xuICBib3gtc2hhZG93OiAwcHggMTBweCAxNHB4IC02cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMjJweCAzNXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggOHB4IDQycHggN3B4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1lbGV2YXRpb24tejIzIHtcbiAgYm94LXNoYWRvdzogMHB4IDExcHggMTRweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDIzcHggMzZweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDlweCA0NHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZWxldmF0aW9uLXoyNCB7XG4gIGJveC1zaGFkb3c6IDBweCAxMXB4IDE1cHggLTdweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAyNHB4IDM4cHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCA5cHggNDZweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWFwcC1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC10aGVtZS1sb2FkZWQtbWFya2VyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4ubWF0LWF1dG9jb21wbGV0ZS1wYW5lbCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LWF1dG9jb21wbGV0ZS1wYW5lbDpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pIHtcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDRweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDRweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggMTBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuICAubWF0LWF1dG9jb21wbGV0ZS1wYW5lbCAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtYWN0aXZlKTpub3QoOmhvdmVyKSB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7IH1cbiAgICAubWF0LWF1dG9jb21wbGV0ZS1wYW5lbCAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtYWN0aXZlKTpub3QoOmhvdmVyKTpub3QoLm1hdC1vcHRpb24tZGlzYWJsZWQpIHtcbiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI2Y0NDMzNjsgfVxuICBAbWVkaWEgKC1tcy1oaWdoLWNvbnRyYXN0OiBhY3RpdmUpIHtcbiAgICAubWF0LWJhZGdlLWNvbnRlbnQge1xuICAgICAgb3V0bGluZTogc29saWQgMXB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMDsgfSB9XG5cbi5tYXQtYmFkZ2UtYWNjZW50IC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGJhY2tncm91bmQ6ICM2OWYwYWU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtYmFkZ2Utd2FybiAubWF0LWJhZGdlLWNvbnRlbnQge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6ICNmNDQzMzY7IH1cblxuLm1hdC1iYWRnZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ubWF0LWJhZGdlLWhpZGRlbiAubWF0LWJhZGdlLWNvbnRlbnQge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5tYXQtYmFkZ2UtZGlzYWJsZWQgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogI2I5YjliOTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zOCk7IH1cblxuLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjAwbXMgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC42KTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG5cbi5tYXQtYmFkZ2UtY29udGVudC5tYXQtYmFkZ2UtYWN0aXZlIHtcbiAgdHJhbnNmb3JtOiBub25lOyB9XG5cbi5tYXQtYmFkZ2Utc21hbGwgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7IH1cblxuLm1hdC1iYWRnZS1zbWFsbC5tYXQtYmFkZ2UtYWJvdmUgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgdG9wOiAtOHB4OyB9XG5cbi5tYXQtYmFkZ2Utc21hbGwubWF0LWJhZGdlLWJlbG93IC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGJvdHRvbTogLThweDsgfVxuXG4ubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgbGVmdDogLTE2cHg7IH1cblxuW2Rpcj0ncnRsJ10gLm1hdC1iYWRnZS1zbWFsbC5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGxlZnQ6IGF1dG87XG4gIHJpZ2h0OiAtMTZweDsgfVxuXG4ubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnQge1xuICByaWdodDogLTE2cHg7IH1cblxuW2Rpcj0ncnRsJ10gLm1hdC1iYWRnZS1zbWFsbC5tYXQtYmFkZ2UtYWZ0ZXIgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgcmlnaHQ6IGF1dG87XG4gIGxlZnQ6IC0xNnB4OyB9XG5cbi5tYXQtYmFkZ2Utc21hbGwubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWJlZm9yZSAubWF0LWJhZGdlLWNvbnRlbnQge1xuICBsZWZ0OiAtOHB4OyB9XG5cbltkaXI9J3J0bCddIC5tYXQtYmFkZ2Utc21hbGwubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWJlZm9yZSAubWF0LWJhZGdlLWNvbnRlbnQge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogLThweDsgfVxuXG4ubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnQge1xuICByaWdodDogLThweDsgfVxuXG5bZGlyPSdydGwnXSAubWF0LWJhZGdlLXNtYWxsLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnQge1xuICByaWdodDogYXV0bztcbiAgbGVmdDogLThweDsgfVxuXG4ubWF0LWJhZGdlLW1lZGl1bSAubWF0LWJhZGdlLWNvbnRlbnQge1xuICB3aWR0aDogMjJweDtcbiAgaGVpZ2h0OiAyMnB4O1xuICBsaW5lLWhlaWdodDogMjJweDsgfVxuXG4ubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2UtYWJvdmUgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgdG9wOiAtMTFweDsgfVxuXG4ubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2UtYmVsb3cgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgYm90dG9tOiAtMTFweDsgfVxuXG4ubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGxlZnQ6IC0yMnB4OyB9XG5cbltkaXI9J3J0bCddIC5tYXQtYmFkZ2UtbWVkaXVtLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgbGVmdDogYXV0bztcbiAgcmlnaHQ6IC0yMnB4OyB9XG5cbi5tYXQtYmFkZ2UtbWVkaXVtLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnQge1xuICByaWdodDogLTIycHg7IH1cblxuW2Rpcj0ncnRsJ10gLm1hdC1iYWRnZS1tZWRpdW0ubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIHJpZ2h0OiBhdXRvO1xuICBsZWZ0OiAtMjJweDsgfVxuXG4ubWF0LWJhZGdlLW1lZGl1bS5tYXQtYmFkZ2Utb3ZlcmxhcC5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGxlZnQ6IC0xMXB4OyB9XG5cbltkaXI9J3J0bCddIC5tYXQtYmFkZ2UtbWVkaXVtLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgbGVmdDogYXV0bztcbiAgcmlnaHQ6IC0xMXB4OyB9XG5cbi5tYXQtYmFkZ2UtbWVkaXVtLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnQge1xuICByaWdodDogLTExcHg7IH1cblxuW2Rpcj0ncnRsJ10gLm1hdC1iYWRnZS1tZWRpdW0ubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIHJpZ2h0OiBhdXRvO1xuICBsZWZ0OiAtMTFweDsgfVxuXG4ubWF0LWJhZGdlLWxhcmdlIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIHdpZHRoOiAyOHB4O1xuICBoZWlnaHQ6IDI4cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOHB4OyB9XG5cbi5tYXQtYmFkZ2UtbGFyZ2UubWF0LWJhZGdlLWFib3ZlIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIHRvcDogLTE0cHg7IH1cblxuLm1hdC1iYWRnZS1sYXJnZS5tYXQtYmFkZ2UtYmVsb3cgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgYm90dG9tOiAtMTRweDsgfVxuXG4ubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgbGVmdDogLTI4cHg7IH1cblxuW2Rpcj0ncnRsJ10gLm1hdC1iYWRnZS1sYXJnZS5tYXQtYmFkZ2UtYmVmb3JlIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIGxlZnQ6IGF1dG87XG4gIHJpZ2h0OiAtMjhweDsgfVxuXG4ubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnQge1xuICByaWdodDogLTI4cHg7IH1cblxuW2Rpcj0ncnRsJ10gLm1hdC1iYWRnZS1sYXJnZS5tYXQtYmFkZ2UtYWZ0ZXIgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgcmlnaHQ6IGF1dG87XG4gIGxlZnQ6IC0yOHB4OyB9XG5cbi5tYXQtYmFkZ2UtbGFyZ2UubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWJlZm9yZSAubWF0LWJhZGdlLWNvbnRlbnQge1xuICBsZWZ0OiAtMTRweDsgfVxuXG5bZGlyPSdydGwnXSAubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1iZWZvcmUgLm1hdC1iYWRnZS1jb250ZW50IHtcbiAgbGVmdDogYXV0bztcbiAgcmlnaHQ6IC0xNHB4OyB9XG5cbi5tYXQtYmFkZ2UtbGFyZ2UubWF0LWJhZGdlLW92ZXJsYXAubWF0LWJhZGdlLWFmdGVyIC5tYXQtYmFkZ2UtY29udGVudCB7XG4gIHJpZ2h0OiAtMTRweDsgfVxuXG5bZGlyPSdydGwnXSAubWF0LWJhZGdlLWxhcmdlLm1hdC1iYWRnZS1vdmVybGFwLm1hdC1iYWRnZS1hZnRlciAubWF0LWJhZGdlLWNvbnRlbnQge1xuICByaWdodDogYXV0bztcbiAgbGVmdDogLTE0cHg7IH1cblxuLm1hdC1ib3R0b20tc2hlZXQtY29udGFpbmVyIHtcbiAgYm94LXNoYWRvdzogMHB4IDhweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMTZweCAyNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggNnB4IDMwcHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuXG4ubWF0LWJ1dHRvbiwgLm1hdC1pY29uLWJ1dHRvbiwgLm1hdC1zdHJva2VkLWJ1dHRvbiB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuICAubWF0LWJ1dHRvbi5tYXQtcHJpbWFyeSwgLm1hdC1pY29uLWJ1dHRvbi5tYXQtcHJpbWFyeSwgLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtcHJpbWFyeSB7XG4gICAgY29sb3I6ICNmNDQzMzY7IH1cbiAgLm1hdC1idXR0b24ubWF0LWFjY2VudCwgLm1hdC1pY29uLWJ1dHRvbi5tYXQtYWNjZW50LCAubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC1hY2NlbnQge1xuICAgIGNvbG9yOiAjNjlmMGFlOyB9XG4gIC5tYXQtYnV0dG9uLm1hdC13YXJuLCAubWF0LWljb24tYnV0dG9uLm1hdC13YXJuLCAubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC13YXJuIHtcbiAgICBjb2xvcjogI2Y0NDMzNjsgfVxuICAubWF0LWJ1dHRvbi5tYXQtcHJpbWFyeVtkaXNhYmxlZF0sIC5tYXQtYnV0dG9uLm1hdC1hY2NlbnRbZGlzYWJsZWRdLCAubWF0LWJ1dHRvbi5tYXQtd2FybltkaXNhYmxlZF0sIC5tYXQtYnV0dG9uW2Rpc2FibGVkXVtkaXNhYmxlZF0sIC5tYXQtaWNvbi1idXR0b24ubWF0LXByaW1hcnlbZGlzYWJsZWRdLCAubWF0LWljb24tYnV0dG9uLm1hdC1hY2NlbnRbZGlzYWJsZWRdLCAubWF0LWljb24tYnV0dG9uLm1hdC13YXJuW2Rpc2FibGVkXSwgLm1hdC1pY29uLWJ1dHRvbltkaXNhYmxlZF1bZGlzYWJsZWRdLCAubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwgLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtYWNjZW50W2Rpc2FibGVkXSwgLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtd2FybltkaXNhYmxlZF0sIC5tYXQtc3Ryb2tlZC1idXR0b25bZGlzYWJsZWRdW2Rpc2FibGVkXSB7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7IH1cbiAgLm1hdC1idXR0b24ubWF0LXByaW1hcnkgLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwgLm1hdC1pY29uLWJ1dHRvbi5tYXQtcHJpbWFyeSAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5LCAubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC1wcmltYXJ5IC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cbiAgLm1hdC1idXR0b24ubWF0LWFjY2VudCAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5LCAubWF0LWljb24tYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwgLm1hdC1zdHJva2VkLWJ1dHRvbi5tYXQtYWNjZW50IC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM2OWYwYWU7IH1cbiAgLm1hdC1idXR0b24ubWF0LXdhcm4gLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSwgLm1hdC1pY29uLWJ1dHRvbi5tYXQtd2FybiAubWF0LWJ1dHRvbi1mb2N1cy1vdmVybGF5LCAubWF0LXN0cm9rZWQtYnV0dG9uLm1hdC13YXJuIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cbiAgLm1hdC1idXR0b25bZGlzYWJsZWRdIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXksIC5tYXQtaWNvbi1idXR0b25bZGlzYWJsZWRdIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXksIC5tYXQtc3Ryb2tlZC1idXR0b25bZGlzYWJsZWRdIC5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gIC5tYXQtYnV0dG9uIC5tYXQtcmlwcGxlLWVsZW1lbnQsIC5tYXQtaWNvbi1idXR0b24gLm1hdC1yaXBwbGUtZWxlbWVudCwgLm1hdC1zdHJva2VkLWJ1dHRvbiAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgICBvcGFjaXR5OiAwLjE7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yOyB9XG5cbi5tYXQtYnV0dG9uLWZvY3VzLW92ZXJsYXkge1xuICBiYWNrZ3JvdW5kOiBibGFjazsgfVxuXG4ubWF0LXN0cm9rZWQtYnV0dG9uOm5vdChbZGlzYWJsZWRdKSB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWZsYXQtYnV0dG9uLCAubWF0LXJhaXNlZC1idXR0b24sIC5tYXQtZmFiLCAubWF0LW1pbmktZmFiIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG4gIC5tYXQtZmxhdC1idXR0b24ubWF0LXByaW1hcnksIC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeSwgLm1hdC1mYWIubWF0LXByaW1hcnksIC5tYXQtbWluaS1mYWIubWF0LXByaW1hcnkge1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAubWF0LWZsYXQtYnV0dG9uLm1hdC1hY2NlbnQsIC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtYWNjZW50LCAubWF0LWZhYi5tYXQtYWNjZW50LCAubWF0LW1pbmktZmFiLm1hdC1hY2NlbnQge1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG4gIC5tYXQtZmxhdC1idXR0b24ubWF0LXdhcm4sIC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtd2FybiwgLm1hdC1mYWIubWF0LXdhcm4sIC5tYXQtbWluaS1mYWIubWF0LXdhcm4ge1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAubWF0LWZsYXQtYnV0dG9uLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwgLm1hdC1mbGF0LWJ1dHRvbi5tYXQtYWNjZW50W2Rpc2FibGVkXSwgLm1hdC1mbGF0LWJ1dHRvbi5tYXQtd2FybltkaXNhYmxlZF0sIC5tYXQtZmxhdC1idXR0b25bZGlzYWJsZWRdW2Rpc2FibGVkXSwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1hY2NlbnRbZGlzYWJsZWRdLCAubWF0LXJhaXNlZC1idXR0b24ubWF0LXdhcm5bZGlzYWJsZWRdLCAubWF0LXJhaXNlZC1idXR0b25bZGlzYWJsZWRdW2Rpc2FibGVkXSwgLm1hdC1mYWIubWF0LXByaW1hcnlbZGlzYWJsZWRdLCAubWF0LWZhYi5tYXQtYWNjZW50W2Rpc2FibGVkXSwgLm1hdC1mYWIubWF0LXdhcm5bZGlzYWJsZWRdLCAubWF0LWZhYltkaXNhYmxlZF1bZGlzYWJsZWRdLCAubWF0LW1pbmktZmFiLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwgLm1hdC1taW5pLWZhYi5tYXQtYWNjZW50W2Rpc2FibGVkXSwgLm1hdC1taW5pLWZhYi5tYXQtd2FybltkaXNhYmxlZF0sIC5tYXQtbWluaS1mYWJbZGlzYWJsZWRdW2Rpc2FibGVkXSB7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7IH1cbiAgLm1hdC1mbGF0LWJ1dHRvbi5tYXQtcHJpbWFyeSwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5LCAubWF0LWZhYi5tYXQtcHJpbWFyeSwgLm1hdC1taW5pLWZhYi5tYXQtcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuICAubWF0LWZsYXQtYnV0dG9uLm1hdC1hY2NlbnQsIC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtYWNjZW50LCAubWF0LWZhYi5tYXQtYWNjZW50LCAubWF0LW1pbmktZmFiLm1hdC1hY2NlbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM2OWYwYWU7IH1cbiAgLm1hdC1mbGF0LWJ1dHRvbi5tYXQtd2FybiwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC13YXJuLCAubWF0LWZhYi5tYXQtd2FybiwgLm1hdC1taW5pLWZhYi5tYXQtd2FybiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuICAubWF0LWZsYXQtYnV0dG9uLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwgLm1hdC1mbGF0LWJ1dHRvbi5tYXQtYWNjZW50W2Rpc2FibGVkXSwgLm1hdC1mbGF0LWJ1dHRvbi5tYXQtd2FybltkaXNhYmxlZF0sIC5tYXQtZmxhdC1idXR0b25bZGlzYWJsZWRdW2Rpc2FibGVkXSwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1hY2NlbnRbZGlzYWJsZWRdLCAubWF0LXJhaXNlZC1idXR0b24ubWF0LXdhcm5bZGlzYWJsZWRdLCAubWF0LXJhaXNlZC1idXR0b25bZGlzYWJsZWRdW2Rpc2FibGVkXSwgLm1hdC1mYWIubWF0LXByaW1hcnlbZGlzYWJsZWRdLCAubWF0LWZhYi5tYXQtYWNjZW50W2Rpc2FibGVkXSwgLm1hdC1mYWIubWF0LXdhcm5bZGlzYWJsZWRdLCAubWF0LWZhYltkaXNhYmxlZF1bZGlzYWJsZWRdLCAubWF0LW1pbmktZmFiLm1hdC1wcmltYXJ5W2Rpc2FibGVkXSwgLm1hdC1taW5pLWZhYi5tYXQtYWNjZW50W2Rpc2FibGVkXSwgLm1hdC1taW5pLWZhYi5tYXQtd2FybltkaXNhYmxlZF0sIC5tYXQtbWluaS1mYWJbZGlzYWJsZWRdW2Rpc2FibGVkXSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuICAubWF0LWZsYXQtYnV0dG9uLm1hdC1wcmltYXJ5IC5tYXQtcmlwcGxlLWVsZW1lbnQsIC5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcHJpbWFyeSAubWF0LXJpcHBsZS1lbGVtZW50LCAubWF0LWZhYi5tYXQtcHJpbWFyeSAubWF0LXJpcHBsZS1lbGVtZW50LCAubWF0LW1pbmktZmFiLm1hdC1wcmltYXJ5IC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsgfVxuICAubWF0LWZsYXQtYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudCwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudCwgLm1hdC1mYWIubWF0LWFjY2VudCAubWF0LXJpcHBsZS1lbGVtZW50LCAubWF0LW1pbmktZmFiLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpOyB9XG4gIC5tYXQtZmxhdC1idXR0b24ubWF0LXdhcm4gLm1hdC1yaXBwbGUtZWxlbWVudCwgLm1hdC1yYWlzZWQtYnV0dG9uLm1hdC13YXJuIC5tYXQtcmlwcGxlLWVsZW1lbnQsIC5tYXQtZmFiLm1hdC13YXJuIC5tYXQtcmlwcGxlLWVsZW1lbnQsIC5tYXQtbWluaS1mYWIubWF0LXdhcm4gLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOyB9XG5cbi5tYXQtc3Ryb2tlZC1idXR0b246bm90KFtjbGFzcyo9J21hdC1lbGV2YXRpb24teiddKSwgLm1hdC1mbGF0LWJ1dHRvbjpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pIHtcbiAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtcmFpc2VkLWJ1dHRvbjpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pIHtcbiAgYm94LXNoYWRvdzogMHB4IDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAycHggMnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMXB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LXJhaXNlZC1idXR0b246bm90KFtkaXNhYmxlZF0pOmFjdGl2ZTpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pIHtcbiAgYm94LXNoYWRvdzogMHB4IDVweCA1cHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCA4cHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtcmFpc2VkLWJ1dHRvbltkaXNhYmxlZF06bm90KFtjbGFzcyo9J21hdC1lbGV2YXRpb24teiddKSB7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWZhYjpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pLCAubWF0LW1pbmktZmFiOm5vdChbY2xhc3MqPSdtYXQtZWxldmF0aW9uLXonXSkge1xuICBib3gtc2hhZG93OiAwcHggM3B4IDVweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDZweCAxMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMXB4IDE4cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1mYWI6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZTpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pLCAubWF0LW1pbmktZmFiOm5vdChbZGlzYWJsZWRdKTphY3RpdmU6bm90KFtjbGFzcyo9J21hdC1lbGV2YXRpb24teiddKSB7XG4gIGJveC1zaGFkb3c6IDBweCA3cHggOHB4IC00cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMTJweCAxN3B4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggNXB4IDIycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1mYWJbZGlzYWJsZWRdOm5vdChbY2xhc3MqPSdtYXQtZWxldmF0aW9uLXonXSksIC5tYXQtbWluaS1mYWJbZGlzYWJsZWRdOm5vdChbY2xhc3MqPSdtYXQtZWxldmF0aW9uLXonXSkge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1idXR0b24tdG9nZ2xlLXN0YW5kYWxvbmUsXG4ubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAge1xuICBib3gtc2hhZG93OiAwcHggM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDJweCAycHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtYnV0dG9uLXRvZ2dsZS1zdGFuZGFsb25lLm1hdC1idXR0b24tdG9nZ2xlLWFwcGVhcmFuY2Utc3RhbmRhcmQsXG4ubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAtYXBwZWFyYW5jZS1zdGFuZGFyZCB7XG4gIGJveC1zaGFkb3c6IG5vbmU7IH1cblxuLm1hdC1idXR0b24tdG9nZ2xlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zOCk7IH1cbiAgLm1hdC1idXR0b24tdG9nZ2xlIC5tYXQtYnV0dG9uLXRvZ2dsZS1mb2N1cy1vdmVybGF5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLXN0YW5kYXJkIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gIGJhY2tncm91bmQ6IHdoaXRlOyB9XG4gIC5tYXQtYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLXN0YW5kYXJkIC5tYXQtYnV0dG9uLXRvZ2dsZS1mb2N1cy1vdmVybGF5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsgfVxuXG4ubWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAtYXBwZWFyYW5jZS1zdGFuZGFyZCAubWF0LWJ1dHRvbi10b2dnbGUgKyAubWF0LWJ1dHRvbi10b2dnbGUge1xuICBib3JkZXItbGVmdDogc29saWQgMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuW2Rpcj0ncnRsJ10gLm1hdC1idXR0b24tdG9nZ2xlLWdyb3VwLWFwcGVhcmFuY2Utc3RhbmRhcmQgLm1hdC1idXR0b24tdG9nZ2xlICsgLm1hdC1idXR0b24tdG9nZ2xlIHtcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gIGJvcmRlci1yaWdodDogc29saWQgMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1idXR0b24tdG9nZ2xlLWdyb3VwLWFwcGVhcmFuY2Utc3RhbmRhcmQubWF0LWJ1dHRvbi10b2dnbGUtdmVydGljYWwgLm1hdC1idXR0b24tdG9nZ2xlICsgLm1hdC1idXR0b24tdG9nZ2xlIHtcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLXRvcDogc29saWQgMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1idXR0b24tdG9nZ2xlLWNoZWNrZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuICAubWF0LWJ1dHRvbi10b2dnbGUtY2hlY2tlZC5tYXQtYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLXN0YW5kYXJkIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuXG4ubWF0LWJ1dHRvbi10b2dnbGUtZGlzYWJsZWQge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsgfVxuICAubWF0LWJ1dHRvbi10b2dnbGUtZGlzYWJsZWQubWF0LWJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZS1zdGFuZGFyZCB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7IH1cbiAgLm1hdC1idXR0b24tdG9nZ2xlLWRpc2FibGVkLm1hdC1idXR0b24tdG9nZ2xlLWNoZWNrZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiZGJkYmQ7IH1cblxuLm1hdC1idXR0b24tdG9nZ2xlLXN0YW5kYWxvbmUubWF0LWJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZS1zdGFuZGFyZCxcbi5tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cC1hcHBlYXJhbmNlLXN0YW5kYXJkIHtcbiAgYm9yZGVyOiBzb2xpZCAxcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWNhcmQge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cbiAgLm1hdC1jYXJkOm5vdChbY2xhc3MqPSdtYXQtZWxldmF0aW9uLXonXSkge1xuICAgIGJveC1zaGFkb3c6IDBweCAycHggMXB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMXB4IDFweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDFweCAzcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cbiAgLm1hdC1jYXJkLm1hdC1jYXJkLWZsYXQ6bm90KFtjbGFzcyo9J21hdC1lbGV2YXRpb24teiddKSB7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAwcHggMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtY2FyZC1zdWJ0aXRsZSB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG5cbi5tYXQtY2hlY2tib3gtZnJhbWUge1xuICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cblxuLm1hdC1jaGVja2JveC1jaGVja21hcmsge1xuICBmaWxsOiAjZmFmYWZhOyB9XG5cbi5tYXQtY2hlY2tib3gtY2hlY2ttYXJrLXBhdGgge1xuICBzdHJva2U6ICNmYWZhZmEgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKC1tcy1oaWdoLWNvbnRyYXN0OiBibGFjay1vbi13aGl0ZSkge1xuICAgIC5tYXQtY2hlY2tib3gtY2hlY2ttYXJrLXBhdGgge1xuICAgICAgc3Ryb2tlOiAjMDAwICFpbXBvcnRhbnQ7IH0gfVxuXG4ubWF0LWNoZWNrYm94LW1peGVkbWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7IH1cblxuLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlLm1hdC1wcmltYXJ5IC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCwgLm1hdC1jaGVja2JveC1jaGVja2VkLm1hdC1wcmltYXJ5IC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlLm1hdC1hY2NlbnQgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5kLCAubWF0LWNoZWNrYm94LWNoZWNrZWQubWF0LWFjY2VudCAubWF0LWNoZWNrYm94LWJhY2tncm91bmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtY2hlY2tib3gtaW5kZXRlcm1pbmF0ZS5tYXQtd2FybiAubWF0LWNoZWNrYm94LWJhY2tncm91bmQsIC5tYXQtY2hlY2tib3gtY2hlY2tlZC5tYXQtd2FybiAubWF0LWNoZWNrYm94LWJhY2tncm91bmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtY2hlY2tib3gtZGlzYWJsZWQubWF0LWNoZWNrYm94LWNoZWNrZWQgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5kLCAubWF0LWNoZWNrYm94LWRpc2FibGVkLm1hdC1jaGVja2JveC1pbmRldGVybWluYXRlIC5tYXQtY2hlY2tib3gtYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMGIwYjA7IH1cblxuLm1hdC1jaGVja2JveC1kaXNhYmxlZDpub3QoLm1hdC1jaGVja2JveC1jaGVja2VkKSAubWF0LWNoZWNrYm94LWZyYW1lIHtcbiAgYm9yZGVyLWNvbG9yOiAjYjBiMGIwOyB9XG5cbi5tYXQtY2hlY2tib3gtZGlzYWJsZWQgLm1hdC1jaGVja2JveC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG5cbkBtZWRpYSAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSkge1xuICAubWF0LWNoZWNrYm94LWRpc2FibGVkIHtcbiAgICBvcGFjaXR5OiAwLjU7IH0gfVxuXG5AbWVkaWEgKC1tcy1oaWdoLWNvbnRyYXN0OiBhY3RpdmUpIHtcbiAgLm1hdC1jaGVja2JveC1iYWNrZ3JvdW5kIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lOyB9IH1cblxuLm1hdC1jaGVja2JveDpub3QoLm1hdC1jaGVja2JveC1kaXNhYmxlZCkubWF0LXByaW1hcnkgLm1hdC1jaGVja2JveC1yaXBwbGUgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1jaGVja2JveDpub3QoLm1hdC1jaGVja2JveC1kaXNhYmxlZCkubWF0LWFjY2VudCAubWF0LWNoZWNrYm94LXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY5ZjBhZTsgfVxuXG4ubWF0LWNoZWNrYm94Om5vdCgubWF0LWNoZWNrYm94LWRpc2FibGVkKS5tYXQtd2FybiAubWF0LWNoZWNrYm94LXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWNoaXAubWF0LXN0YW5kYXJkLWNoaXAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LWNoaXAubWF0LXN0YW5kYXJkLWNoaXAgLm1hdC1jaGlwLXJlbW92ZSB7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcDpub3QoLm1hdC1jaGlwLWRpc2FibGVkKTphY3RpdmUge1xuICAgIGJveC1zaGFkb3c6IDBweCAzcHggM3B4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggM3B4IDRweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDFweCA4cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cbiAgLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwOm5vdCgubWF0LWNoaXAtZGlzYWJsZWQpIC5tYXQtY2hpcC1yZW1vdmU6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNTQ7IH1cbiAgLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLWRpc2FibGVkIHtcbiAgICBvcGFjaXR5OiAwLjQ7IH1cbiAgLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwOjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogYmxhY2s7IH1cblxuLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjtcbiAgY29sb3I6IHdoaXRlOyB9XG4gIC5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcC5tYXQtY2hpcC1zZWxlY3RlZC5tYXQtcHJpbWFyeSAubWF0LWNoaXAtcmVtb3ZlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcC5tYXQtY2hpcC1zZWxlY3RlZC5tYXQtcHJpbWFyeSAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7IH1cblxuLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC13YXJuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjtcbiAgY29sb3I6IHdoaXRlOyB9XG4gIC5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcC5tYXQtY2hpcC1zZWxlY3RlZC5tYXQtd2FybiAubWF0LWNoaXAtcmVtb3ZlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC5tYXQtY2hpcC5tYXQtc3RhbmRhcmQtY2hpcC5tYXQtY2hpcC1zZWxlY3RlZC5tYXQtd2FybiAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7IH1cblxuLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC1hY2NlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjlmMGFlO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LWNoaXAubWF0LXN0YW5kYXJkLWNoaXAubWF0LWNoaXAtc2VsZWN0ZWQubWF0LWFjY2VudCAubWF0LWNoaXAtcmVtb3ZlIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbiAgICBvcGFjaXR5OiAwLjQ7IH1cbiAgLm1hdC1jaGlwLm1hdC1zdGFuZGFyZC1jaGlwLm1hdC1jaGlwLXNlbGVjdGVkLm1hdC1hY2NlbnQgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjEpOyB9XG5cbi5tYXQtdGFibGUge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuXG4ubWF0LXRhYmxlIHRoZWFkLCAubWF0LXRhYmxlIHRib2R5LCAubWF0LXRhYmxlIHRmb290LFxubWF0LWhlYWRlci1yb3csIG1hdC1yb3csIG1hdC1mb290ZXItcm93LFxuW21hdC1oZWFkZXItcm93XSwgW21hdC1yb3ddLCBbbWF0LWZvb3Rlci1yb3ddLFxuLm1hdC10YWJsZS1zdGlja3kge1xuICBiYWNrZ3JvdW5kOiBpbmhlcml0OyB9XG5cbm1hdC1yb3csIG1hdC1oZWFkZXItcm93LCBtYXQtZm9vdGVyLXJvdyxcbnRoLm1hdC1oZWFkZXItY2VsbCwgdGQubWF0LWNlbGwsIHRkLm1hdC1mb290ZXItY2VsbCB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG5cbi5tYXQtY2VsbCwgLm1hdC1mb290ZXItY2VsbCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtY2FsZW5kYXItYXJyb3cge1xuICBib3JkZXItdG9wLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG5cbi5tYXQtZGF0ZXBpY2tlci10b2dnbGUsXG4ubWF0LWRhdGVwaWNrZXItY29udGVudCAubWF0LWNhbGVuZGFyLW5leHQtYnV0dG9uLFxuLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQgLm1hdC1jYWxlbmRhci1wcmV2aW91cy1idXR0b24ge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuXG4ubWF0LWNhbGVuZGFyLXRhYmxlLWhlYWRlciB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtY2FsZW5kYXItdGFibGUtaGVhZGVyLWRpdmlkZXI6OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWNhbGVuZGFyLWJvZHktbGFiZWwge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuXG4ubWF0LWNhbGVuZGFyLWJvZHktY2VsbC1jb250ZW50IHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLm1hdC1jYWxlbmRhci1ib2R5LWRpc2FibGVkID4gLm1hdC1jYWxlbmRhci1ib2R5LWNlbGwtY29udGVudDpub3QoLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkKSB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtY2FsZW5kYXItYm9keS1jZWxsOm5vdCgubWF0LWNhbGVuZGFyLWJvZHktZGlzYWJsZWQpOmhvdmVyID4gLm1hdC1jYWxlbmRhci1ib2R5LWNlbGwtY29udGVudDpub3QoLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkKSxcbi5jZGsta2V5Ym9hcmQtZm9jdXNlZCAubWF0LWNhbGVuZGFyLWJvZHktYWN0aXZlID4gLm1hdC1jYWxlbmRhci1ib2R5LWNlbGwtY29udGVudDpub3QoLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkKSxcbi5jZGstcHJvZ3JhbS1mb2N1c2VkIC5tYXQtY2FsZW5kYXItYm9keS1hY3RpdmUgPiAubWF0LWNhbGVuZGFyLWJvZHktY2VsbC1jb250ZW50Om5vdCgubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA0KTsgfVxuXG4ubWF0LWNhbGVuZGFyLWJvZHktdG9kYXk6bm90KC5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCkge1xuICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zOCk7IH1cblxuLm1hdC1jYWxlbmRhci1ib2R5LWRpc2FibGVkID4gLm1hdC1jYWxlbmRhci1ib2R5LXRvZGF5Om5vdCgubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQpIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTgpOyB9XG5cbi5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7XG4gIGNvbG9yOiB3aGl0ZTsgfVxuXG4ubWF0LWNhbGVuZGFyLWJvZHktZGlzYWJsZWQgPiAubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0NCwgNjcsIDU0LCAwLjQpOyB9XG5cbi5tYXQtY2FsZW5kYXItYm9keS10b2RheS5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDFweCB3aGl0ZTsgfVxuXG4ubWF0LWRhdGVwaWNrZXItY29udGVudCB7XG4gIGJveC1zaGFkb3c6IDBweCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggNHB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDFweCAxMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cbiAgLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQubWF0LWFjY2VudCAubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM2OWYwYWU7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cbiAgLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQubWF0LWFjY2VudCAubWF0LWNhbGVuZGFyLWJvZHktZGlzYWJsZWQgPiAubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTA1LCAyNDAsIDE3NCwgMC40KTsgfVxuICAubWF0LWRhdGVwaWNrZXItY29udGVudC5tYXQtYWNjZW50IC5tYXQtY2FsZW5kYXItYm9keS10b2RheS5tYXQtY2FsZW5kYXItYm9keS1zZWxlY3RlZCB7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cbiAgLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQubWF0LXdhcm4gLm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAubWF0LWRhdGVwaWNrZXItY29udGVudC5tYXQtd2FybiAubWF0LWNhbGVuZGFyLWJvZHktZGlzYWJsZWQgPiAubWF0LWNhbGVuZGFyLWJvZHktc2VsZWN0ZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ0LCA2NywgNTQsIDAuNCk7IH1cbiAgLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQubWF0LXdhcm4gLm1hdC1jYWxlbmRhci1ib2R5LXRvZGF5Lm1hdC1jYWxlbmRhci1ib2R5LXNlbGVjdGVkIHtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAxcHggd2hpdGU7IH1cblxuLm1hdC1kYXRlcGlja2VyLWNvbnRlbnQtdG91Y2gge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMHB4IDBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDBweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1kYXRlcGlja2VyLXRvZ2dsZS1hY3RpdmUge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuICAubWF0LWRhdGVwaWNrZXItdG9nZ2xlLWFjdGl2ZS5tYXQtYWNjZW50IHtcbiAgICBjb2xvcjogIzY5ZjBhZTsgfVxuICAubWF0LWRhdGVwaWNrZXItdG9nZ2xlLWFjdGl2ZS5tYXQtd2FybiB7XG4gICAgY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcbiAgYm94LXNoYWRvdzogMHB4IDExcHggMTVweCAtN3B4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDI0cHggMzhweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDlweCA0NnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC1kaXZpZGVyIHtcbiAgYm9yZGVyLXRvcC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWRpdmlkZXItdmVydGljYWwge1xuICBib3JkZXItcmlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1leHBhbnNpb24tcGFuZWwge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cbiAgLm1hdC1leHBhbnNpb24tcGFuZWw6bm90KFtjbGFzcyo9J21hdC1lbGV2YXRpb24teiddKSB7XG4gICAgYm94LXNoYWRvdzogMHB4IDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAycHggMnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMXB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWFjdGlvbi1yb3cge1xuICBib3JkZXItdG9wLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsOm5vdCgubWF0LWV4cGFuZGVkKSAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI6bm90KFthcmlhLWRpc2FibGVkPSd0cnVlJ10pLmNkay1rZXlib2FyZC1mb2N1c2VkLCAubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCkgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyOm5vdChbYXJpYS1kaXNhYmxlZD0ndHJ1ZSddKS5jZGstcHJvZ3JhbS1mb2N1c2VkLCAubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCkgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyOm5vdChbYXJpYS1kaXNhYmxlZD0ndHJ1ZSddKTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNCk7IH1cblxuQG1lZGlhIChob3Zlcjogbm9uZSkge1xuICAubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoLm1hdC1leHBhbmRlZCk6bm90KFthcmlhLWRpc2FibGVkPSd0cnVlJ10pXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlOyB9IH1cblxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLXRpdGxlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLWRlc2NyaXB0aW9uLFxuLm1hdC1leHBhbnNpb24taW5kaWNhdG9yOjphZnRlciB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlclthcmlhLWRpc2FibGVkPSd0cnVlJ10ge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuICAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXJbYXJpYS1kaXNhYmxlZD0ndHJ1ZSddIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZSxcbiAgLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyW2FyaWEtZGlzYWJsZWQ9J3RydWUnXSAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItZGVzY3JpcHRpb24ge1xuICAgIGNvbG9yOiBpbmhlcml0OyB9XG5cbi5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7IH1cblxuLm1hdC1oaW50IHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTsgfVxuXG4ubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6ICNmNDQzMzY7IH1cbiAgLm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1sYWJlbC5tYXQtYWNjZW50IHtcbiAgICBjb2xvcjogIzY5ZjBhZTsgfVxuICAubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLm1hdC13YXJuIHtcbiAgICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gIGNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuICAubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZS5tYXQtYWNjZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjlmMGFlOyB9XG4gIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlLm1hdC13YXJuIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtZm9ybS1maWVsZC10eXBlLW1hdC1uYXRpdmUtc2VsZWN0Lm1hdC1mb2N1c2VkOm5vdCgubWF0LWZvcm0tZmllbGQtaW52YWxpZCkgLm1hdC1mb3JtLWZpZWxkLWluZml4OjphZnRlciB7XG4gIGNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtZm9ybS1maWVsZC10eXBlLW1hdC1uYXRpdmUtc2VsZWN0Lm1hdC1mb2N1c2VkOm5vdCgubWF0LWZvcm0tZmllbGQtaW52YWxpZCkubWF0LWFjY2VudCAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVyIHtcbiAgY29sb3I6ICM2OWYwYWU7IH1cblxuLm1hdC1mb3JtLWZpZWxkLXR5cGUtbWF0LW5hdGl2ZS1zZWxlY3QubWF0LWZvY3VzZWQ6bm90KC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkKS5tYXQtd2FybiAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVyIHtcbiAgY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1mb3JtLWZpZWxkLm1hdC1mb3JtLWZpZWxkLWludmFsaWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6ICNmNDQzMzY7IH1cbiAgLm1hdC1mb3JtLWZpZWxkLm1hdC1mb3JtLWZpZWxkLWludmFsaWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLm1hdC1hY2NlbnQsXG4gIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1sYWJlbCAubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcbiAgICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWZvcm0tZmllbGQubWF0LWZvcm0tZmllbGQtaW52YWxpZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlLFxuLm1hdC1mb3JtLWZpZWxkLm1hdC1mb3JtLWZpZWxkLWludmFsaWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZS5tYXQtYWNjZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWVycm9yIHtcbiAgY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5IC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWxlZ2FjeSAubWF0LWhpbnQge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1sZWdhY3kgLm1hdC1mb3JtLWZpZWxkLXVuZGVybGluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40Mik7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtbGVnYWN5Lm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMCwgMCwgMCwgMC40MikgMCUsIHJnYmEoMCwgMCwgMCwgMC40MikgMzMlLCB0cmFuc3BhcmVudCAwJSk7XG4gIGJhY2tncm91bmQtc2l6ZTogNHB4IDEwMCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1zdGFuZGFyZCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQyKTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1zdGFuZGFyZC5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDAsIDAsIDAsIDAuNDIpIDAlLCByZ2JhKDAsIDAsIDAsIDAuNDIpIDMzJSwgdHJhbnNwYXJlbnQgMCUpO1xuICBiYWNrZ3JvdW5kLXNpemU6IDRweCAxMDAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbCAubWF0LWZvcm0tZmllbGQtZmxleCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wNCk7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbC5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCAubWF0LWZvcm0tZmllbGQtZmxleCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wMik7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNDIpOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLWZpbGwubWF0LWZvcm0tZmllbGQtZGlzYWJsZWQgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zOCk7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2UtZmlsbC5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCAubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2sge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb2N1c2VkLm1hdC1hY2NlbnQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2sge1xuICBjb2xvcjogIzY5ZjBhZTsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb2N1c2VkLm1hdC13YXJuIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lLXRoaWNrIHtcbiAgY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9ybS1maWVsZC1pbnZhbGlkLm1hdC1mb3JtLWZpZWxkLWludmFsaWQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtdGhpY2sge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb3JtLWZpZWxkLWRpc2FibGVkIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUubWF0LWZvcm0tZmllbGQtZGlzYWJsZWQgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA2KTsgfVxuXG4ubWF0LWljb24ubWF0LXByaW1hcnkge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWljb24ubWF0LWFjY2VudCB7XG4gIGNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtaWNvbi5tYXQtd2FybiB7XG4gIGNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtZm9ybS1maWVsZC10eXBlLW1hdC1uYXRpdmUtc2VsZWN0IC5tYXQtZm9ybS1maWVsZC1pbmZpeDo6YWZ0ZXIge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuXG4ubWF0LWlucHV0LWVsZW1lbnQ6ZGlzYWJsZWQsXG4ubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdC5tYXQtZm9ybS1maWVsZC1kaXNhYmxlZCAubWF0LWZvcm0tZmllbGQtaW5maXg6OmFmdGVyIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zOCk7IH1cblxuLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgY2FyZXQtY29sb3I6ICNmNDQzMzY7IH1cbiAgLm1hdC1pbnB1dC1lbGVtZW50OjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40Mik7IH1cbiAgLm1hdC1pbnB1dC1lbGVtZW50OjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQyKTsgfVxuICAubWF0LWlucHV0LWVsZW1lbnQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNDIpOyB9XG4gIC5tYXQtaW5wdXQtZWxlbWVudDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNDIpOyB9XG5cbi5tYXQtYWNjZW50IC5tYXQtaW5wdXQtZWxlbWVudCB7XG4gIGNhcmV0LWNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtd2FybiAubWF0LWlucHV0LWVsZW1lbnQsXG4ubWF0LWZvcm0tZmllbGQtaW52YWxpZCAubWF0LWlucHV0LWVsZW1lbnQge1xuICBjYXJldC1jb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWZvcm0tZmllbGQtdHlwZS1tYXQtbmF0aXZlLXNlbGVjdC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1pbmZpeDo6YWZ0ZXIge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1vcHRpb24ge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuXG4ubWF0LWxpc3QtYmFzZSAubWF0LXN1YmhlYWRlciB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNTQpOyB9XG5cbi5tYXQtbGlzdC1pdGVtLWRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsgfVxuXG4ubWF0LWxpc3Qtb3B0aW9uOmhvdmVyLCAubWF0LWxpc3Qtb3B0aW9uOmZvY3VzLFxuLm1hdC1uYXYtbGlzdCAubWF0LWxpc3QtaXRlbTpob3Zlcixcbi5tYXQtbmF2LWxpc3QgLm1hdC1saXN0LWl0ZW06Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDQpOyB9XG5cbi5tYXQtbWVudS1wYW5lbCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlOyB9XG4gIC5tYXQtbWVudS1wYW5lbDpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pIHtcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDRweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDRweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggMTBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LW1lbnUtaXRlbSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LW1lbnUtaXRlbVtkaXNhYmxlZF0sIC5tYXQtbWVudS1pdGVtW2Rpc2FibGVkXTo6YWZ0ZXIge1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtbWVudS1pdGVtIC5tYXQtaWNvbi1uby1jb2xvcixcbi5tYXQtbWVudS1pdGVtLXN1Ym1lbnUtdHJpZ2dlcjo6YWZ0ZXIge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuXG4ubWF0LW1lbnUtaXRlbTpob3Zlcjpub3QoW2Rpc2FibGVkXSksXG4ubWF0LW1lbnUtaXRlbS5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdChbZGlzYWJsZWRdKSxcbi5tYXQtbWVudS1pdGVtLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdChbZGlzYWJsZWRdKSxcbi5tYXQtbWVudS1pdGVtLWhpZ2hsaWdodGVkOm5vdChbZGlzYWJsZWRdKSB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNCk7IH1cblxuLm1hdC1wYWdpbmF0b3Ige1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuXG4ubWF0LXBhZ2luYXRvcixcbi5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZSAubWF0LXNlbGVjdC10cmlnZ2VyIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cblxuLm1hdC1wYWdpbmF0b3ItZGVjcmVtZW50LFxuLm1hdC1wYWdpbmF0b3ItaW5jcmVtZW50IHtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cblxuLm1hdC1wYWdpbmF0b3ItZmlyc3QsXG4ubWF0LXBhZ2luYXRvci1sYXN0IHtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cblxuLm1hdC1pY29uLWJ1dHRvbltkaXNhYmxlZF0gLm1hdC1wYWdpbmF0b3ItZGVjcmVtZW50LFxuLm1hdC1pY29uLWJ1dHRvbltkaXNhYmxlZF0gLm1hdC1wYWdpbmF0b3ItaW5jcmVtZW50LFxuLm1hdC1pY29uLWJ1dHRvbltkaXNhYmxlZF0gLm1hdC1wYWdpbmF0b3ItZmlyc3QsXG4ubWF0LWljb24tYnV0dG9uW2Rpc2FibGVkXSAubWF0LXBhZ2luYXRvci1sYXN0IHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtcHJvZ3Jlc3MtYmFyLWJhY2tncm91bmQge1xuICBmaWxsOiAjZmZjZGQyOyB9XG5cbi5tYXQtcHJvZ3Jlc3MtYmFyLWJ1ZmZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmNkZDI7IH1cblxuLm1hdC1wcm9ncmVzcy1iYXItZmlsbDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtcHJvZ3Jlc3MtYmFyLm1hdC1hY2NlbnQgLm1hdC1wcm9ncmVzcy1iYXItYmFja2dyb3VuZCB7XG4gIGZpbGw6ICNiOWY2Y2E7IH1cblxuLm1hdC1wcm9ncmVzcy1iYXIubWF0LWFjY2VudCAubWF0LXByb2dyZXNzLWJhci1idWZmZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjlmNmNhOyB9XG5cbi5tYXQtcHJvZ3Jlc3MtYmFyLm1hdC1hY2NlbnQgLm1hdC1wcm9ncmVzcy1iYXItZmlsbDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtcHJvZ3Jlc3MtYmFyLm1hdC13YXJuIC5tYXQtcHJvZ3Jlc3MtYmFyLWJhY2tncm91bmQge1xuICBmaWxsOiAjZmZjZGQyOyB9XG5cbi5tYXQtcHJvZ3Jlc3MtYmFyLm1hdC13YXJuIC5tYXQtcHJvZ3Jlc3MtYmFyLWJ1ZmZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmNkZDI7IH1cblxuLm1hdC1wcm9ncmVzcy1iYXIubWF0LXdhcm4gLm1hdC1wcm9ncmVzcy1iYXItZmlsbDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtcHJvZ3Jlc3Mtc3Bpbm5lciBjaXJjbGUsIC5tYXQtc3Bpbm5lciBjaXJjbGUge1xuICBzdHJva2U6ICNmNDQzMzY7IH1cblxuLm1hdC1wcm9ncmVzcy1zcGlubmVyLm1hdC1hY2NlbnQgY2lyY2xlLCAubWF0LXNwaW5uZXIubWF0LWFjY2VudCBjaXJjbGUge1xuICBzdHJva2U6ICM2OWYwYWU7IH1cblxuLm1hdC1wcm9ncmVzcy1zcGlubmVyLm1hdC13YXJuIGNpcmNsZSwgLm1hdC1zcGlubmVyLm1hdC13YXJuIGNpcmNsZSB7XG4gIHN0cm9rZTogI2Y0NDMzNjsgfVxuXG4ubWF0LXJhZGlvLW91dGVyLWNpcmNsZSB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU0KTsgfVxuXG4ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtcHJpbWFyeS5tYXQtcmFkaW8tY2hlY2tlZCAubWF0LXJhZGlvLW91dGVyLWNpcmNsZSB7XG4gIGJvcmRlci1jb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtcHJpbWFyeSAubWF0LXJhZGlvLWlubmVyLWNpcmNsZSxcbi5tYXQtcmFkaW8tYnV0dG9uLm1hdC1wcmltYXJ5IC5tYXQtcmFkaW8tcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnQ6bm90KC5tYXQtcmFkaW8tcGVyc2lzdGVudC1yaXBwbGUpLFxuLm1hdC1yYWRpby1idXR0b24ubWF0LXByaW1hcnkubWF0LXJhZGlvLWNoZWNrZWQgLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSxcbi5tYXQtcmFkaW8tYnV0dG9uLm1hdC1wcmltYXJ5OmFjdGl2ZSAubWF0LXJhZGlvLXBlcnNpc3RlbnQtcmlwcGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtYWNjZW50Lm1hdC1yYWRpby1jaGVja2VkIC5tYXQtcmFkaW8tb3V0ZXItY2lyY2xlIHtcbiAgYm9yZGVyLWNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtcmFkaW8tYnV0dG9uLm1hdC1hY2NlbnQgLm1hdC1yYWRpby1pbm5lci1jaXJjbGUsXG4ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtYWNjZW50IC5tYXQtcmFkaW8tcmlwcGxlIC5tYXQtcmlwcGxlLWVsZW1lbnQ6bm90KC5tYXQtcmFkaW8tcGVyc2lzdGVudC1yaXBwbGUpLFxuLm1hdC1yYWRpby1idXR0b24ubWF0LWFjY2VudC5tYXQtcmFkaW8tY2hlY2tlZCAubWF0LXJhZGlvLXBlcnNpc3RlbnQtcmlwcGxlLFxuLm1hdC1yYWRpby1idXR0b24ubWF0LWFjY2VudDphY3RpdmUgLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2OWYwYWU7IH1cblxuLm1hdC1yYWRpby1idXR0b24ubWF0LXdhcm4ubWF0LXJhZGlvLWNoZWNrZWQgLm1hdC1yYWRpby1vdXRlci1jaXJjbGUge1xuICBib3JkZXItY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1yYWRpby1idXR0b24ubWF0LXdhcm4gLm1hdC1yYWRpby1pbm5lci1jaXJjbGUsXG4ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtd2FybiAubWF0LXJhZGlvLXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50Om5vdCgubWF0LXJhZGlvLXBlcnNpc3RlbnQtcmlwcGxlKSxcbi5tYXQtcmFkaW8tYnV0dG9uLm1hdC13YXJuLm1hdC1yYWRpby1jaGVja2VkIC5tYXQtcmFkaW8tcGVyc2lzdGVudC1yaXBwbGUsXG4ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtd2FybjphY3RpdmUgLm1hdC1yYWRpby1wZXJzaXN0ZW50LXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1yYWRpby1idXR0b24ubWF0LXJhZGlvLWRpc2FibGVkLm1hdC1yYWRpby1jaGVja2VkIC5tYXQtcmFkaW8tb3V0ZXItY2lyY2xlLFxuLm1hdC1yYWRpby1idXR0b24ubWF0LXJhZGlvLWRpc2FibGVkIC5tYXQtcmFkaW8tb3V0ZXItY2lyY2xlIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtcmFkaW8tYnV0dG9uLm1hdC1yYWRpby1kaXNhYmxlZCAubWF0LXJhZGlvLXJpcHBsZSAubWF0LXJpcHBsZS1lbGVtZW50LFxuLm1hdC1yYWRpby1idXR0b24ubWF0LXJhZGlvLWRpc2FibGVkIC5tYXQtcmFkaW8taW5uZXItY2lyY2xlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjM4KTsgfVxuXG4ubWF0LXJhZGlvLWJ1dHRvbi5tYXQtcmFkaW8tZGlzYWJsZWQgLm1hdC1yYWRpby1sYWJlbC1jb250ZW50IHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zOCk7IH1cblxuLm1hdC1yYWRpby1idXR0b24gLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyB9XG5cbi5tYXQtc2VsZWN0LXZhbHVlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC1zZWxlY3QtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQyKTsgfVxuXG4ubWF0LXNlbGVjdC1kaXNhYmxlZCAubWF0LXNlbGVjdC12YWx1ZSB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtc2VsZWN0LWFycm93IHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cblxuLm1hdC1zZWxlY3QtcGFuZWwge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuICAubWF0LXNlbGVjdC1wYW5lbDpub3QoW2NsYXNzKj0nbWF0LWVsZXZhdGlvbi16J10pIHtcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDRweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDRweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggMTBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuICAubWF0LXNlbGVjdC1wYW5lbCAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLW11bHRpcGxlKSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQubWF0LXByaW1hcnkgLm1hdC1zZWxlY3QtYXJyb3cge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQubWF0LWFjY2VudCAubWF0LXNlbGVjdC1hcnJvdyB7XG4gIGNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZC5tYXQtd2FybiAubWF0LXNlbGVjdC1hcnJvdyB7XG4gIGNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtZm9ybS1maWVsZCAubWF0LXNlbGVjdC5tYXQtc2VsZWN0LWludmFsaWQgLm1hdC1zZWxlY3QtYXJyb3cge1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LWZvcm0tZmllbGQgLm1hdC1zZWxlY3QubWF0LXNlbGVjdC1kaXNhYmxlZCAubWF0LXNlbGVjdC1hcnJvdyB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtZHJhd2VyLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtZHJhd2VyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG4gIC5tYXQtZHJhd2VyLm1hdC1kcmF3ZXItcHVzaCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cbiAgLm1hdC1kcmF3ZXI6bm90KC5tYXQtZHJhd2VyLXNpZGUpIHtcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAxNnB4IDI0cHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCA2cHggMzBweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LWRyYXdlci1zaWRlIHtcbiAgYm9yZGVyLXJpZ2h0OiBzb2xpZCAxcHggcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuICAubWF0LWRyYXdlci1zaWRlLm1hdC1kcmF3ZXItZW5kIHtcbiAgICBib3JkZXItbGVmdDogc29saWQgMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gICAgYm9yZGVyLXJpZ2h0OiBub25lOyB9XG5cbltkaXI9J3J0bCddIC5tYXQtZHJhd2VyLXNpZGUge1xuICBib3JkZXItbGVmdDogc29saWQgMXB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gIGJvcmRlci1yaWdodDogbm9uZTsgfVxuICBbZGlyPSdydGwnXSAubWF0LWRyYXdlci1zaWRlLm1hdC1kcmF3ZXItZW5kIHtcbiAgICBib3JkZXItbGVmdDogbm9uZTtcbiAgICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtZHJhd2VyLWJhY2tkcm9wLm1hdC1kcmF3ZXItc2hvd24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7IH1cblxuLm1hdC1zbGlkZS10b2dnbGUubWF0LWNoZWNrZWQgLm1hdC1zbGlkZS10b2dnbGUtdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1jaGVja2VkIC5tYXQtc2xpZGUtdG9nZ2xlLWJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTA1LCAyNDAsIDE3NCwgMC41NCk7IH1cblxuLm1hdC1zbGlkZS10b2dnbGUubWF0LWNoZWNrZWQgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2OWYwYWU7IH1cblxuLm1hdC1zbGlkZS10b2dnbGUubWF0LXByaW1hcnkubWF0LWNoZWNrZWQgLm1hdC1zbGlkZS10b2dnbGUtdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1wcmltYXJ5Lm1hdC1jaGVja2VkIC5tYXQtc2xpZGUtdG9nZ2xlLWJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ0LCA2NywgNTQsIDAuNTQpOyB9XG5cbi5tYXQtc2xpZGUtdG9nZ2xlLm1hdC1wcmltYXJ5Lm1hdC1jaGVja2VkIC5tYXQtcmlwcGxlLWVsZW1lbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtc2xpZGUtdG9nZ2xlLm1hdC13YXJuLm1hdC1jaGVja2VkIC5tYXQtc2xpZGUtdG9nZ2xlLXRodW1iIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LXNsaWRlLXRvZ2dsZS5tYXQtd2Fybi5tYXQtY2hlY2tlZCAubWF0LXNsaWRlLXRvZ2dsZS1iYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0NCwgNjcsIDU0LCAwLjU0KTsgfVxuXG4ubWF0LXNsaWRlLXRvZ2dsZS5tYXQtd2Fybi5tYXQtY2hlY2tlZCAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LXNsaWRlLXRvZ2dsZTpub3QoLm1hdC1jaGVja2VkKSAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IH1cblxuLm1hdC1zbGlkZS10b2dnbGUtdGh1bWIge1xuICBib3gtc2hhZG93OiAwcHggMnB4IDFweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDFweCAxcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggM3B4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhOyB9XG5cbi5tYXQtc2xpZGUtdG9nZ2xlLWJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zOCk7IH1cblxuLm1hdC1zbGlkZXItdHJhY2stYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7IH1cblxuLm1hdC1wcmltYXJ5IC5tYXQtc2xpZGVyLXRyYWNrLWZpbGwsXG4ubWF0LXByaW1hcnkgLm1hdC1zbGlkZXItdGh1bWIsXG4ubWF0LXByaW1hcnkgLm1hdC1zbGlkZXItdGh1bWItbGFiZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtcHJpbWFyeSAubWF0LXNsaWRlci10aHVtYi1sYWJlbC10ZXh0IHtcbiAgY29sb3I6IHdoaXRlOyB9XG5cbi5tYXQtYWNjZW50IC5tYXQtc2xpZGVyLXRyYWNrLWZpbGwsXG4ubWF0LWFjY2VudCAubWF0LXNsaWRlci10aHVtYixcbi5tYXQtYWNjZW50IC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY5ZjBhZTsgfVxuXG4ubWF0LWFjY2VudCAubWF0LXNsaWRlci10aHVtYi1sYWJlbC10ZXh0IHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC13YXJuIC5tYXQtc2xpZGVyLXRyYWNrLWZpbGwsXG4ubWF0LXdhcm4gLm1hdC1zbGlkZXItdGh1bWIsXG4ubWF0LXdhcm4gLm1hdC1zbGlkZXItdGh1bWItbGFiZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtd2FybiAubWF0LXNsaWRlci10aHVtYi1sYWJlbC10ZXh0IHtcbiAgY29sb3I6IHdoaXRlOyB9XG5cbi5tYXQtc2xpZGVyLWZvY3VzLXJpbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwNSwgMjQwLCAxNzQsIDAuMik7IH1cblxuLm1hdC1zbGlkZXI6aG92ZXIgLm1hdC1zbGlkZXItdHJhY2stYmFja2dyb3VuZCxcbi5jZGstZm9jdXNlZCAubWF0LXNsaWRlci10cmFjay1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjM4KTsgfVxuXG4ubWF0LXNsaWRlci1kaXNhYmxlZCAubWF0LXNsaWRlci10cmFjay1iYWNrZ3JvdW5kLFxuLm1hdC1zbGlkZXItZGlzYWJsZWQgLm1hdC1zbGlkZXItdHJhY2stZmlsbCxcbi5tYXQtc2xpZGVyLWRpc2FibGVkIC5tYXQtc2xpZGVyLXRodW1iIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuXG4ubWF0LXNsaWRlci1kaXNhYmxlZDpob3ZlciAubWF0LXNsaWRlci10cmFjay1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuXG4ubWF0LXNsaWRlci1taW4tdmFsdWUgLm1hdC1zbGlkZXItZm9jdXMtcmluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC1zbGlkZXItbWluLXZhbHVlLm1hdC1zbGlkZXItdGh1bWItbGFiZWwtc2hvd2luZyAubWF0LXNsaWRlci10aHVtYixcbi5tYXQtc2xpZGVyLW1pbi12YWx1ZS5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcgLm1hdC1zbGlkZXItdGh1bWItbGFiZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtc2xpZGVyLW1pbi12YWx1ZS5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcuY2RrLWZvY3VzZWQgLm1hdC1zbGlkZXItdGh1bWIsXG4ubWF0LXNsaWRlci1taW4tdmFsdWUubWF0LXNsaWRlci10aHVtYi1sYWJlbC1zaG93aW5nLmNkay1mb2N1c2VkIC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI2KTsgfVxuXG4ubWF0LXNsaWRlci1taW4tdmFsdWU6bm90KC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcpIC5tYXQtc2xpZGVyLXRodW1iIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjYpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4ubWF0LXNsaWRlci1taW4tdmFsdWU6bm90KC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcpOmhvdmVyIC5tYXQtc2xpZGVyLXRodW1iLCAubWF0LXNsaWRlci1taW4tdmFsdWU6bm90KC5tYXQtc2xpZGVyLXRodW1iLWxhYmVsLXNob3dpbmcpLmNkay1mb2N1c2VkIC5tYXQtc2xpZGVyLXRodW1iIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtc2xpZGVyLW1pbi12YWx1ZTpub3QoLm1hdC1zbGlkZXItdGh1bWItbGFiZWwtc2hvd2luZyk6aG92ZXIubWF0LXNsaWRlci1kaXNhYmxlZCAubWF0LXNsaWRlci10aHVtYiwgLm1hdC1zbGlkZXItbWluLXZhbHVlOm5vdCgubWF0LXNsaWRlci10aHVtYi1sYWJlbC1zaG93aW5nKS5jZGstZm9jdXNlZC5tYXQtc2xpZGVyLWRpc2FibGVkIC5tYXQtc2xpZGVyLXRodW1iIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjYpOyB9XG5cbi5tYXQtc2xpZGVyLWhhcy10aWNrcyAubWF0LXNsaWRlci13cmFwcGVyOjphZnRlciB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG5cbi5tYXQtc2xpZGVyLWhvcml6b250YWwgLm1hdC1zbGlkZXItdGlja3Mge1xuICBiYWNrZ3JvdW5kLWltYWdlOiByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDAsIDAsIDAsIDAuNyksIHJnYmEoMCwgMCwgMCwgMC43KSAycHgsIHRyYW5zcGFyZW50IDAsIHRyYW5zcGFyZW50KTtcbiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1yZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KDAuMDAwMWRlZywgcmdiYSgwLCAwLCAwLCAwLjcpLCByZ2JhKDAsIDAsIDAsIDAuNykgMnB4LCB0cmFuc3BhcmVudCAwLCB0cmFuc3BhcmVudCk7IH1cblxuLm1hdC1zbGlkZXItdmVydGljYWwgLm1hdC1zbGlkZXItdGlja3Mge1xuICBiYWNrZ3JvdW5kLWltYWdlOiByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLCAwLCAwLCAwLjcpLCByZ2JhKDAsIDAsIDAsIDAuNykgMnB4LCB0cmFuc3BhcmVudCAwLCB0cmFuc3BhcmVudCk7IH1cblxuLm1hdC1zdGVwLWhlYWRlci5jZGsta2V5Ym9hcmQtZm9jdXNlZCwgLm1hdC1zdGVwLWhlYWRlci5jZGstcHJvZ3JhbS1mb2N1c2VkLCAubWF0LXN0ZXAtaGVhZGVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjA0KTsgfVxuXG5AbWVkaWEgKGhvdmVyOiBub25lKSB7XG4gIC5tYXQtc3RlcC1oZWFkZXI6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7IH0gfVxuXG4ubWF0LXN0ZXAtaGVhZGVyIC5tYXQtc3RlcC1sYWJlbCxcbi5tYXQtc3RlcC1oZWFkZXIgLm1hdC1zdGVwLW9wdGlvbmFsIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7IH1cblxuLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtaWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gIGNvbG9yOiB3aGl0ZTsgfVxuXG4ubWF0LXN0ZXAtaGVhZGVyIC5tYXQtc3RlcC1pY29uLXNlbGVjdGVkLFxuLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtaWNvbi1zdGF0ZS1kb25lLFxuLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtaWNvbi1zdGF0ZS1lZGl0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjtcbiAgY29sb3I6IHdoaXRlOyB9XG5cbi5tYXQtc3RlcC1oZWFkZXIgLm1hdC1zdGVwLWljb24tc3RhdGUtZXJyb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtbGFiZWwubWF0LXN0ZXAtbGFiZWwtYWN0aXZlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC1zdGVwLWhlYWRlciAubWF0LXN0ZXAtbGFiZWwubWF0LXN0ZXAtbGFiZWwtZXJyb3Ige1xuICBjb2xvcjogI2Y0NDMzNjsgfVxuXG4ubWF0LXN0ZXBwZXItaG9yaXpvbnRhbCwgLm1hdC1zdGVwcGVyLXZlcnRpY2FsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLm1hdC1zdGVwcGVyLXZlcnRpY2FsLWxpbmU6OmJlZm9yZSB7XG4gIGJvcmRlci1sZWZ0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtaG9yaXpvbnRhbC1zdGVwcGVyLWhlYWRlcjo6YmVmb3JlLFxuLm1hdC1ob3Jpem9udGFsLXN0ZXBwZXItaGVhZGVyOjphZnRlcixcbi5tYXQtc3RlcHBlci1ob3Jpem9udGFsLWxpbmUge1xuICBib3JkZXItdG9wLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtc29ydC1oZWFkZXItYXJyb3cge1xuICBjb2xvcjogIzc1NzU3NTsgfVxuXG4ubWF0LXRhYi1uYXYtYmFyLFxuLm1hdC10YWItaGVhZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7IH1cblxuLm1hdC10YWItZ3JvdXAtaW52ZXJ0ZWQtaGVhZGVyIC5tYXQtdGFiLW5hdi1iYXIsXG4ubWF0LXRhYi1ncm91cC1pbnZlcnRlZC1oZWFkZXIgLm1hdC10YWItaGVhZGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IH1cblxuLm1hdC10YWItbGFiZWwsIC5tYXQtdGFiLWxpbmsge1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LXRhYi1sYWJlbC5tYXQtdGFiLWRpc2FibGVkLCAubWF0LXRhYi1saW5rLm1hdC10YWItZGlzYWJsZWQge1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMzgpOyB9XG5cbi5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24ge1xuICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tZGlzYWJsZWQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjM4KTsgfVxuXG4ubWF0LXRhYi1ncm91cFtjbGFzcyo9J21hdC1iYWNrZ3JvdW5kLSddIC5tYXQtdGFiLWhlYWRlcixcbi5tYXQtdGFiLW5hdi1iYXJbY2xhc3MqPSdtYXQtYmFja2dyb3VuZC0nXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIGJvcmRlci10b3A6IG5vbmU7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwgLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC10YWItbGFiZWwuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksIC5tYXQtdGFiLW5hdi1iYXIubWF0LXByaW1hcnkgLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwgLm1hdC10YWItbmF2LWJhci5tYXQtcHJpbWFyeSAubWF0LXRhYi1sYWJlbC5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1uYXYtYmFyLm1hdC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSxcbi5tYXQtdGFiLW5hdi1iYXIubWF0LXByaW1hcnkgLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjA1LCAyMTAsIDAuMyk7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC1pbmstYmFyLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1wcmltYXJ5IC5tYXQtaW5rLWJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LWluay1iYXIsIC5tYXQtdGFiLW5hdi1iYXIubWF0LXByaW1hcnkubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LWluay1iYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksIC5tYXQtdGFiLWdyb3VwLm1hdC1hY2NlbnQgLm1hdC10YWItbGFiZWwuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItZ3JvdXAubWF0LWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1ncm91cC5tYXQtYWNjZW50IC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1hY2NlbnQgLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwgLm1hdC10YWItbmF2LWJhci5tYXQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSxcbi5tYXQtdGFiLW5hdi1iYXIubWF0LWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1uYXYtYmFyLm1hdC1hY2NlbnQgLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4NSwgMjQ2LCAyMDIsIDAuMyk7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LWFjY2VudCAubWF0LWluay1iYXIsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWFjY2VudCAubWF0LWluay1iYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC1hY2NlbnQubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtaW5rLWJhciwgLm1hdC10YWItbmF2LWJhci5tYXQtYWNjZW50Lm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LWluay1iYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksIC5tYXQtdGFiLWdyb3VwLm1hdC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSxcbi5tYXQtdGFiLWdyb3VwLm1hdC13YXJuIC5tYXQtdGFiLWxpbmsuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSxcbi5tYXQtdGFiLWdyb3VwLm1hdC13YXJuIC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLCAubWF0LXRhYi1uYXYtYmFyLm1hdC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksIC5tYXQtdGFiLW5hdi1iYXIubWF0LXdhcm4gLm1hdC10YWItbGFiZWwuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItbmF2LWJhci5tYXQtd2FybiAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1uYXYtYmFyLm1hdC13YXJuIC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDIwNSwgMjEwLCAwLjMpOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC13YXJuIC5tYXQtaW5rLWJhciwgLm1hdC10YWItbmF2LWJhci5tYXQtd2FybiAubWF0LWluay1iYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC13YXJuLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC1pbmstYmFyLCAubWF0LXRhYi1uYXYtYmFyLm1hdC13YXJuLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC1pbmstYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1sYWJlbC5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLCAubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSxcbi5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1saW5rLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1sYWJlbC5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDIwNSwgMjEwLCAwLjMpOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItaGVhZGVyLCAubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmtzLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItaGVhZGVyLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGlua3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGFiZWwsIC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGluaywgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGluayB7XG4gIGNvbG9yOiB3aGl0ZTsgfVxuICAubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxhYmVsLm1hdC10YWItZGlzYWJsZWQsIC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGluay5tYXQtdGFiLWRpc2FibGVkLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC10YWItbGFiZWwubWF0LXRhYi1kaXNhYmxlZCwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWxpbmsubWF0LXRhYi1kaXNhYmxlZCB7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24sIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1jaGV2cm9uIHtcbiAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1wcmltYXJ5IC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWRpc2FibGVkIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24sIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1kaXNhYmxlZCAubWF0LXRhYi1oZWFkZXItcGFnaW5hdGlvbi1jaGV2cm9uIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtcHJpbWFyeSAubWF0LXJpcHBsZS1lbGVtZW50LCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXByaW1hcnkgLm1hdC1yaXBwbGUtZWxlbWVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xMik7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksIC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbC5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItbGluay5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbC5jZGsta2V5Ym9hcmQtZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbC5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5rLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTg1LCAyNDYsIDIwMiwgMC4zKTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItaGVhZGVyLCAubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItbGlua3MsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWhlYWRlciwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItbGlua3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjlmMGFlOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1sYWJlbCwgLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxpbmssIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5rIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cbiAgLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLm1hdC10YWItZGlzYWJsZWQsIC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXRhYi1saW5rLm1hdC10YWItZGlzYWJsZWQsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxhYmVsLm1hdC10YWItZGlzYWJsZWQsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtYWNjZW50IC5tYXQtdGFiLWxpbmsubWF0LXRhYi1kaXNhYmxlZCB7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tZGlzYWJsZWQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC1hY2NlbnQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tZGlzYWJsZWQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXJpcHBsZS1lbGVtZW50LCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLWFjY2VudCAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEyKTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksIC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLFxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWxpbmsuY2RrLXByb2dyYW0tZm9jdXNlZDpub3QoLm1hdC10YWItZGlzYWJsZWQpLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwuY2RrLWtleWJvYXJkLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWxhYmVsLmNkay1wcm9ncmFtLWZvY3VzZWQ6bm90KC5tYXQtdGFiLWRpc2FibGVkKSxcbi5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rLmNkay1rZXlib2FyZC1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCksXG4ubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGluay5jZGstcHJvZ3JhbS1mb2N1c2VkOm5vdCgubWF0LXRhYi1kaXNhYmxlZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjA1LCAyMTAsIDAuMyk7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1oZWFkZXIsIC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGlua3MsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1oZWFkZXIsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rcyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cblxuLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1sYWJlbCwgLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rIHtcbiAgY29sb3I6IHdoaXRlOyB9XG4gIC5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGFiZWwubWF0LXRhYi1kaXNhYmxlZCwgLm1hdC10YWItZ3JvdXAubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1saW5rLm1hdC10YWItZGlzYWJsZWQsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXRhYi1sYWJlbC5tYXQtdGFiLWRpc2FibGVkLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItbGluay5tYXQtdGFiLWRpc2FibGVkIHtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24ge1xuICBib3JkZXItY29sb3I6IHdoaXRlOyB9XG5cbi5tYXQtdGFiLWdyb3VwLm1hdC1iYWNrZ3JvdW5kLXdhcm4gLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tZGlzYWJsZWQgLm1hdC10YWItaGVhZGVyLXBhZ2luYXRpb24tY2hldnJvbiwgLm1hdC10YWItbmF2LWJhci5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWRpc2FibGVkIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uLWNoZXZyb24ge1xuICBib3JkZXItY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC40KTsgfVxuXG4ubWF0LXRhYi1ncm91cC5tYXQtYmFja2dyb3VuZC13YXJuIC5tYXQtcmlwcGxlLWVsZW1lbnQsIC5tYXQtdGFiLW5hdi1iYXIubWF0LWJhY2tncm91bmQtd2FybiAubWF0LXJpcHBsZS1lbGVtZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEyKTsgfVxuXG4ubWF0LXRvb2xiYXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZXNtb2tlO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgfVxuICAubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICAgIGJhY2tncm91bmQ6ICNmNDQzMzY7XG4gICAgY29sb3I6IHdoaXRlOyB9XG4gIC5tYXQtdG9vbGJhci5tYXQtYWNjZW50IHtcbiAgICBiYWNrZ3JvdW5kOiAjNjlmMGFlO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG4gIC5tYXQtdG9vbGJhci5tYXQtd2FybiB7XG4gICAgYmFja2dyb3VuZDogI2Y0NDMzNjtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgLm1hdC10b29sYmFyIC5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUsXG4gIC5tYXQtdG9vbGJhciAubWF0LWZvcm0tZmllbGQtcmlwcGxlLFxuICAubWF0LXRvb2xiYXIgLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjsgfVxuICAubWF0LXRvb2xiYXIgLm1hdC1mb3JtLWZpZWxkLWxhYmVsLFxuICAubWF0LXRvb2xiYXIgLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1sYWJlbCxcbiAgLm1hdC10b29sYmFyIC5tYXQtc2VsZWN0LXZhbHVlLFxuICAubWF0LXRvb2xiYXIgLm1hdC1zZWxlY3QtYXJyb3csXG4gIC5tYXQtdG9vbGJhciAubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1zZWxlY3QtYXJyb3cge1xuICAgIGNvbG9yOiBpbmhlcml0OyB9XG4gIC5tYXQtdG9vbGJhciAubWF0LWlucHV0LWVsZW1lbnQge1xuICAgIGNhcmV0LWNvbG9yOiBjdXJyZW50Q29sb3I7IH1cblxuLm1hdC10b29sdGlwIHtcbiAgYmFja2dyb3VuZDogcmdiYSg5NywgOTcsIDk3LCAwLjkpOyB9XG5cbi5tYXQtdHJlZSB7XG4gIGJhY2tncm91bmQ6IHdoaXRlOyB9XG5cbi5tYXQtdHJlZS1ub2RlLFxuLm1hdC1uZXN0ZWQtdHJlZS1ub2RlIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cblxuLm1hdC1zbmFjay1iYXItY29udGFpbmVyIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcbiAgYmFja2dyb3VuZDogIzMyMzIzMjtcbiAgYm94LXNoYWRvdzogMHB4IDNweCA1cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCA2cHggMTBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMHB4IDFweCAxOHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpOyB9XG5cbi5tYXQtc2ltcGxlLXNuYWNrYmFyLWFjdGlvbiB7XG4gIGNvbG9yOiAjNjlmMGFlOyB9XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG87IH1cblxuLndhcm4ge1xuICBjb2xvcjogI2VmOWE5YTsgfVxuXG4uZXJyb3Ige1xuICBjb2xvcjogI2ZmMTc0NDsgfVxuXG4vKlxyXG5TdHlsaW5nIG9mIGZpbGUgdXBsb2FkIHBhcnQuXHJcbmZvbGxvd3MgaHR0cHM6Ly90eW1wYW51cy5uZXQvY29kcm9wcy8yMDE1LzA5LzE1L3N0eWxpbmctY3VzdG9taXppbmctZmlsZS1pbnB1dHMtc21hcnQtd2F5L1xyXG4gbWFrZSBpbnB1dCBmaWxlIGJ1dHRvbiBpbnZpc2libGVcclxuKi9cbi5pbnB1dGZpbGUge1xuICB3aWR0aDogMC4xcHg7XG4gIGhlaWdodDogMC4xcHg7XG4gIG9wYWNpdHk6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7IH1cblxuLmlucHV0ZmlsZSArIGxhYmVsIHtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY5ZjBhZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAyMHB4OyB9XG5cbi5pbnB1dGZpbGU6Zm9jdXMgKyBsYWJlbCxcbi5pbnB1dGZpbGUgKyBsYWJlbDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7IH1cbiIsIkBpbXBvcnQgJ35AYW5ndWxhci9tYXRlcmlhbC90aGVtaW5nJztcclxuXHJcbkBpbXBvcnQgJy4uLy4uLy4uLy4uL3N0eWxlcy5zY3NzJztcclxuXHJcbi8qXHJcblN0eWxpbmcgb2YgZmlsZSB1cGxvYWQgcGFydC5cclxuZm9sbG93cyBodHRwczovL3R5bXBhbnVzLm5ldC9jb2Ryb3BzLzIwMTUvMDkvMTUvc3R5bGluZy1jdXN0b21pemluZy1maWxlLWlucHV0cy1zbWFydC13YXkvXHJcbiBtYWtlIGlucHV0IGZpbGUgYnV0dG9uIGludmlzaWJsZVxyXG4qL1xyXG4uaW5wdXRmaWxlIHtcclxuICB3aWR0aDogMC4xcHg7XHJcbiAgaGVpZ2h0OiAwLjFweDtcclxuICBvcGFjaXR5OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHotaW5kZXg6IC0xO1xyXG59XHJcblxyXG4uaW5wdXRmaWxlICsgbGFiZWwge1xyXG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IG1hdC1jb2xvcigkZGl0LWFwcC1hY2NlbnQpO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4uaW5wdXRmaWxlOmZvY3VzICsgbGFiZWwsXHJcbi5pbnB1dGZpbGUgKyBsYWJlbDpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbWF0LWNvbG9yKCRkaXQtYXBwLXByaW1hcnkpO1xyXG59XHJcbiJdfQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {TranslationProject} from '../../../model/translation-project';\nimport {FILETYPE_XTB} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\nimport {IFileDescription} from '../../common/i-file-description';\nimport {DownloadUploadFileDescription} from '../download-upload-file-description';\nimport {DownloadUploadConfiguration} from '../download-upload-configuration';\n\n@Component({\n  selector: 'app-translation-file-upload',\n  templateUrl: './translation-file-upload.component.html',\n  styleUrls: ['./translation-file-upload.component.scss']\n})\nexport class TranslationFileUploadComponent implements OnInit {\n\n  @Input() createdProject?: TranslationProject;\n  @Input() configuration: DownloadUploadConfiguration;\n  @Output() fileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n  @Output() masterXmlFileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n\n  form: FormGroup;\n  private selectedFiles: FileList;\n  private selectedMasterXmbFiles: FileList;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  private initForm() {\n    if (!this.form) {\n      this.form = this.formBuilder.group({\n        selectedFiles: [''],\n        selectedMasterXmbFiles: ['']\n      });\n    }\n  }\n\n  fileSelectionChange(input: HTMLInputElement) {\n    if (input) {\n      this.selectedFiles = input.files;\n    }\n    if (input.files && input.files.length > 0) {\n      const file: File = input.files.item(0);\n      this.fileSelected.emit(\n        DownloadUploadFileDescription.fromBrowserFile(DownloadUploadConfiguration.singleInstance(), file));\n    }\n  }\n\n  masterXmlFileSelectionChange(input: HTMLInputElement) {\n    if (input) {\n      this.selectedMasterXmbFiles = input.files;\n    }\n    if (input.files && input.files.length > 0) {\n      const file: File = input.files.item(0);\n      this.masterXmlFileSelected.emit(\n        DownloadUploadFileDescription.fromBrowserFile(DownloadUploadConfiguration.singleInstance(), file));\n    }\n  }\n\n  selectedFilesFormatted(): string {\n    return this.fileListFormatted(this.selectedFiles);\n  }\n\n  selectedMasterFilesFormatted(): string {\n    return this.fileListFormatted(this.selectedMasterXmbFiles);\n  }\n\n  private fileListFormatted(fileList: FileList): string {\n    if (fileList) {\n      let result = '';\n      for (let i = 0; i < fileList.length; i++) {\n        if (i > 0) {\n          result = result + ', ';\n        }\n        result = result + fileList.item(i).name;\n      }\n      return result;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * If the first file was a xmb file, master is needed.\n   * Enables the input for a second file, the master xmb.\n   */\n  isMasterXmbFileNeeded(): boolean {\n    return this.isFileSelected() &&\n        this.createdProject &&\n        this.createdProject.translationFile &&\n        this.createdProject.translationFile.fileType() === FILETYPE_XTB;\n  }\n\n  isFileSelected(): boolean {\n    return this.selectedFiles && this.selectedFiles.length > 0 && !!this.createdProject;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2dpdGh1Yi9jb25maWd1cmUtZ2l0aHViLXBhZ2UvY29uZmlndXJlLWdpdGh1Yi1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3 i18n>Github access settings</h3>\\n<p i18n>\\n  By configuring an access to Github you can directly import translation files to TinyTranslator and store the translation in your Github repositories.\\n</p>\\n<div class=\\\"info\\\">\\n  <p i18n>To use Github you need a <a href=\\\"https://github.blog/2013-05-16-personal-api-tokens/\\\" target=\\\"_blank\\\">Github Personal API token</a>.</p>\\n  <p>The link above describes its purpose and how to create it.</p>\\n</div>\\n<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n  <mat-expansion-panel *ngFor=\\\"let configuration of githubConfigurations | async; let i = index\\\" [expanded]=\\\"isExpanded(configuration)\\\">\\n    <mat-expansion-panel-header i18n>{{configuration.fullLabel().label}}</mat-expansion-panel-header>\\n    <app-github-config-editor\\n            [githubConfiguration]=\\\"configuration\\\"\\n            (storeConfiguration)=\\\"storeConfiguration($event)\\\"\\n            (deleteConfiguration)=\\\"deleteConfiguration($event)\\\">\\n    </app-github-config-editor>\\n  </mat-expansion-panel>\\n  <button mat-fab (click)=\\\"addConfiguration()\\\" [disabled]=\\\"addedConfiguration.getValue()\\\" matTooltip=\\\"Add another configuration\\\" i18n-matTooltip><mat-icon>add</mat-icon></button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FileAccessorType} from '../../common/file-accessor-type';\nimport {GithubConfiguration} from '../github-configuration';\nimport {BackendServiceAPI} from '../../../model/backend-service-api';\nimport {map} from 'rxjs/operators';\nimport {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-configure-github-page',\n  templateUrl: './configure-github-page.component.html',\n  styleUrls: ['./configure-github-page.component.css']\n})\nexport class ConfigureGithubPageComponent implements OnInit {\n\n  githubConfigurations: Observable<GithubConfiguration[]>;\n  addedConfiguration: BehaviorSubject<GithubConfiguration>;\n\n  constructor(\n      private backendServiceAPI: BackendServiceAPI) {\n  }\n\n  ngOnInit() {\n    this.addedConfiguration = new BehaviorSubject<GithubConfiguration>(null);\n    this.githubConfigurations = combineLatest(\n      this.backendServiceAPI.fileAccessConfigurations().pipe(\n        map(configs => configs\n          .filter(config => config.type === FileAccessorType.GITHUB)\n          .map(config => config  as GithubConfiguration))\n      ), this.addedConfiguration\n    ).pipe(\n        map(values => {\n          const configs = values[0];\n          const added = values[1];\n          return (added === null) ? configs : configs.concat([added]);\n        })\n    );\n  }\n\n  addConfiguration() {\n    this.addedConfiguration.next(new GithubConfiguration(null, '', '', null, null, null));\n  }\n\n  storeConfiguration(configuration: GithubConfiguration) {\n    if (!configuration.id) {\n      this.addedConfiguration.next(null);\n    }\n    this.backendServiceAPI.storeFileAccessConfiguration(configuration);\n  }\n\n  deleteConfiguration(configuration: GithubConfiguration) {\n    if (!configuration.id) {\n      this.addedConfiguration.next(null);\n    } else {\n      this.backendServiceAPI.deleteFileAccessConfiguration(configuration);\n    }\n  }\n\n  isExpanded(configuration: GithubConfiguration): boolean {\n    return configuration.id === null;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FileStatus, ICommitData, IFileAccessService, IFileStats} from '../common/i-file-access-service';\nimport {IFileDescription} from '../common/i-file-description';\nimport {Observable, of, throwError} from 'rxjs';\nimport {GithubConfiguration} from './github-configuration';\nimport {catchError, first, map, switchMap} from 'rxjs/operators';\nimport {GithubApiService, GithubBranch, GithubDirectory, GithubFileContents} from './github-api.service';\nimport {SerializationService} from '../../model/serialization.service';\nimport {IFile} from '../common/i-file';\nimport {GithubFileDescription} from './github-file-description';\nimport {GithubFile} from './github-file';\n\nfunction pathjoin(path: string, subdir: string) {\n  if (subdir && subdir.startsWith('/')) {\n    subdir = subdir.substr(1);\n  }\n  if (path && path.endsWith('/')) {\n    return path + subdir;\n  }\n  return (path) ? path + '/' + subdir : subdir;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubAccessorService implements IFileAccessService {\n\n  constructor(private githubApiService: GithubApiService) { }\n\n  load(description: IFileDescription): Observable<GithubFile|IFileDescription> {\n    const configuration: GithubConfiguration = description.configuration as GithubConfiguration;\n    const branch: GithubBranch = {\n      repo: {\n        owner: configuration.owner,\n        name: configuration.repo\n      },\n      name: configuration.branch\n    };\n    const apiToken = configuration.apiToken;\n    const path = pathjoin(configuration.path, description.path);\n    return this.githubApiService.content(branch, path, apiToken).pipe(\n        first(),\n        map((content: GithubFileContents|GithubDirectory) => {\n          if (content.type === 'dir') {\n            const children = content.entries.map((entry: GithubFileContents|GithubDirectory) => {\n              if (entry.type === 'dir') {\n                return new GithubFileDescription('dir', configuration, pathjoin(description.path, entry.name), entry.name);\n              } else {\n                return new GithubFileDescription('file', configuration, pathjoin(description.path, entry.name), entry.name);\n              }\n            });\n            return new GithubFileDescription('dir', configuration, description.path, description.name, children);\n          } else {\n            const descr = new GithubFileDescription('file', configuration, description.path, description.name);\n            return new GithubFile(descr, content.name, content.size, content.content, content.sha);\n          }\n        })\n    );\n  }\n\n  save(file: GithubFile, commitData: ICommitData): Observable<GithubFile> {\n    const configuration: GithubConfiguration = file.description.configuration as GithubConfiguration;\n    const branch: GithubBranch = {\n      name: configuration.branch,\n      repo: {\n        name: configuration.repo,\n        owner: configuration.owner\n      },\n    };\n    const content: GithubFileContents = {\n      type: 'file',\n      name: file.description.name,\n      branch: branch,\n      path: pathjoin(configuration.path, file.description.path),\n      size: file.size,\n      content: file.content,\n      sha: file.sha\n    };\n    const apiKey = configuration.apiToken;\n    if (!commitData || !commitData.message) {\n      return throwError('no commit message');\n    }\n    const message = commitData.message;\n    return this.stats(file).pipe(\n      map((stats: IFileStats) => {\n        console.log('stats', stats, commitData);\n        if (stats.status !== FileStatus.EXISTS_NOT) {\n          if (commitData.override) {\n            console.log('sha', (stats as any).sha);\n            return (stats as any).sha;\n          } else {\n            throw Error('file exists');\n          }\n        } else {\n          return null;\n        }\n      }),\n      switchMap((sha: string) => {\n        console.log('sha', sha);\n        content.sha = sha;\n        return this.githubApiService.updateContent(branch, content, message, apiKey).pipe(\n          map((newFileContent: GithubFileContents) => {\n            return new GithubFile(\n              file.description,\n              newFileContent.name,\n              newFileContent.size,\n              newFileContent.content,\n              newFileContent.sha);\n          })\n        );\n      })\n    );\n  }\n\n  stats(file: IFile): Observable<IFileStats> {\n    const configuration: GithubConfiguration = file.description.configuration as GithubConfiguration;\n    const branch: GithubBranch = {\n      name: configuration.branch,\n      repo: {\n        name: configuration.repo,\n        owner: configuration.owner\n      },\n    };\n    return this.githubApiService.content(branch, pathjoin(configuration.path, file.description.path), configuration.apiToken).pipe(\n      map((content: GithubFileContents|GithubDirectory) => {\n        if (content.sha === (file as GithubFile).sha) {\n          return {status: FileStatus.UNCHANGED, sha: content.sha};\n        } else {\n          return {status: FileStatus.CHANGED, sha: content.sha};\n        }\n      }),\n      catchError(() => {\n        return of({status: FileStatus.EXISTS_NOT});\n      })\n    );\n  }\n\n  serialize(serializationService: SerializationService, configuration: GithubConfiguration): string {\n    return configuration.serialize(serializationService);\n  }\n\n  deserialize(serializationService: SerializationService, serializedConfiguration: string): GithubConfiguration {\n    return GithubConfiguration.deserialize(serializationService, serializedConfiguration);\n  }\n\n}\n","/**\n * A service to access the github api v3.\n * It can read and write repositories and directories and files in the repositories.\n * Access is authenticated via an OAuth access token.\n */\nimport {Inject, Injectable} from '@angular/core';\nimport {APP_CONFIG, AppConfig} from '../../app.config';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {isArray, isNullOrUndefined} from '../../common/util';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Base64} from 'js-base64';\nimport toBase64 = Base64.toBase64;\nimport fromBase64 = Base64.fromBase64;\n\n/**\n * Representation of a repository.\n */\nexport interface GithubRepo {\n  owner: string;\n  name: string;\n}\n\n/**\n * Representation of a branch in a repository.\n */\nexport interface GithubBranch {\n  repo: GithubRepo; // the repo containing the branch\n  name: string; // name of branch\n}\n\n/**\n * A file.\n */\nexport interface GithubFileContents {\n  type: 'file';\n  branch: GithubBranch;\n  path: string; // path including name\n  name: string; // only name\n  sha: string; // SHA1 of file (needed for update operations)\n  size: number;\n  content?: string; // decoded content, as part of a directory response this is not filled\n}\n\nexport interface GithubDirectory {\n  type: 'dir';\n  branch: GithubBranch;\n  path: string; // path including name\n  name: string; // only name\n  sha: string; // SHA1 of file (needed for update operations)\n  entries?: (GithubFileContents|GithubDirectory)[]; // absent if directory is not read until now\n}\n\n// subset of the data returned from the GitHub API v3\n// Contains only data that is used here.\ninterface RepoFromAPI {\n  name: string;\n  owner: {\n    login: string;\n  };\n}\n\n// subset of the data returned from the GitHub API v3\n// Contains only data that is used here.\ninterface BranchFromAPI {\n  name: string;\n}\n\ninterface FileContentsFromAPI {\n  type: 'file';\n  name: string;\n  path: string;\n  size: number;\n  encoding?: 'base64'; // TODO can there be anything else?\n  content?: string;\n  sha: string;\n}\n\ninterface DirectoryEntryContentsFromAPI {\n  type: 'dir';\n  name: string;\n  path: string;\n  size: number; // always 0 I guess\n  sha: string;\n}\n\ninterface SymlinkContentsFromAPI {\n  type: 'symlink';\n  name: string;\n  path: string;\n  size: number;\n  target: string;\n  sha: string;\n}\n\ninterface SubmoduleContentsFromAPI {\n  type: 'submodule';\n  name: string;\n  path: string;\n  size: number;\n  sha: string;\n}\n\ntype ContentsFromAPI = FileContentsFromAPI | DirectoryEntryContentsFromAPI | SymlinkContentsFromAPI | SubmoduleContentsFromAPI;\n\n/**\n * input type of content update call.\n */\ninterface ContentsUpdateInputAPI {\n  message: string; // Required. The commit message.\n  content: string; // Required. The new file content, using Base64 encoding.\n  sha: string; // Required. The blob SHA of the file being replaced.\n  branch?: string; // The branch name. Default: the repository’s default branch (usually master)\n  // committer and author not used here\n}\n\n/**\n * return type of content update call.\n */\ninterface ContentsUpdateFromAPI {\n  content: {\n    name: string;\n    path: string;\n    sha: string;\n    size: number;\n  };\n}\n\n// subset of the data returned from the GitHub API v3\n// Contains only data that is used here.\n// if requested path is a directory, the answer is an array of the directory content, otherwise it is just the object (normally a file)\ntype FileOrDirectoryContentsFromAPI = ContentsFromAPI | [ContentsFromAPI];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubApiService {\n\n  private readonly _rootUrl: string;\n\n  private _apiKey: string;\n\n  // a setting for tests!!\n  // if set to true, some functions (TODO which functions?) will FAIL BY DESIGN\n  // Used to allow testing of failures.\n  private failByDesign: boolean;\n\n  constructor(@Inject(APP_CONFIG) app_config: AppConfig, private httpClient: HttpClient) {\n    this._rootUrl = app_config.GITHUB_API_ROOT_URL;\n    // API key is secret, normally it is not configured and will be null\n    // it can be set interactively in the app\n    // but in the karma tests it will be set. It is stored than in environment.secret.ts (not in Git)\n    this.setApiKey(app_config.GITHUB_API_KEY); // must be set explicitly via setApiKey()\n    this.failByDesign = app_config.GITHUB_PROVOKE_FAILURES;\n  }\n\n  /**\n   * Headers used for every request.\n   */\n  private headers(apiKey?: string): HttpHeaders {\n    const key = (apiKey) ? apiKey : this.apiKey();\n    return new HttpHeaders()\n        .append('Accept', 'application/vnd.github.v3+json')\n        .append('Authorization', 'token ' + key);\n  }\n\n  /**\n   * Send GET request to API.\n   * @param relativeUrl URL relative to API root.\n   * @param apiKey OAuth-Token\n   * @param parameters additional HTTP Parameters.\n   * @return GET result of type T\n   */\n  private get<T>(relativeUrl: string, apiKey: string, parameters?: HttpParams): Observable<T> {\n    return this.httpClient.get(this.fullUrl(relativeUrl), {headers: this.headers(apiKey), params: parameters}).pipe(\n      map(response => response as T)\n    );\n  }\n\n  /**\n   * Send PUT request to API.\n   * Put an Object of type T, return a result of type U.\n   * @param relativeUrl URL relative to API root.\n   * @param apiKey OAuth-Token\n   * @param body request body to send, will be send as a JSON object.\n   * @param parameters additional HTTP Parameters.\n   * @return PUT result of type U\n   */\n  private put<T, U>(relativeUrl: string, apiKey: string, body: T, parameters?: HttpParams): Observable<U> {\n    return this.httpClient.put(this.fullUrl(relativeUrl), body, {headers: this.headers(apiKey), params: parameters}).pipe(\n        map(response => response as U)\n    );\n  }\n\n  private fullUrl(relativeUrl: string): string {\n    return this._rootUrl + relativeUrl;\n  }\n\n  public apiKey(): string {\n    return this._apiKey;\n  }\n\n  public setApiKey(key: string) {\n    this._apiKey = key;\n  }\n\n  /**\n   * Get a list of repos of the authenticated user.\n   * @param apiKey OAuth token of user.\n   */\n  public repos(apiKey?: string): Observable<GithubRepo[]> {\n    return this.get<RepoFromAPI[]>('user/repos', apiKey).pipe(\n      map(response => response.map((repo: RepoFromAPI) => {\n        return {\n          name: repo.name,\n          owner: repo.owner.login\n        };\n      }))\n    );\n  }\n\n  /**\n   * Get a list of branches of the authenticated user and selected repo.\n   * @param repo the repository to be accessed\n   * @param apiKey OAuth token of user.\n   */\n  public branches(repo: GithubRepo, apiKey?: string): Observable<GithubBranch[]> {\n    return this.get<BranchFromAPI[]>(`repos/${repo.owner}/${repo.name}/branches`, apiKey).pipe(\n        map(response => response.map((branch: BranchFromAPI) => {\n          return {\n            name: branch.name,\n            repo: repo\n          };\n        }))\n    );\n  }\n\n  /**\n   * Get content of a file or directory.\n   * @param branch branch\n   * @param path path\n   * @param apiKey OAuth token of user.\n   */\n  public content(branch: GithubBranch, path: string, apiKey?: string): Observable<GithubFileContents|GithubDirectory> {\n    const repo = branch.repo;\n    const url = `repos/${repo.owner}/${repo.name}/contents/${path}`;\n    return this.get<FileOrDirectoryContentsFromAPI>(\n        url,\n        apiKey,\n        new HttpParams().append('ref', branch.name)\n    ).pipe(\n        map((response: FileOrDirectoryContentsFromAPI) => {\n          if (isArray(response)) {\n            // it is a directory\n            return this.toDirectory(branch, path, response as ContentsFromAPI[]);\n          } else {\n            const singleResponse: ContentsFromAPI = response as ContentsFromAPI;\n            switch (singleResponse.type) {\n              case 'file':\n                return this.toFileContents(branch, response as FileContentsFromAPI);\n              case 'symlink':\n              default:\n                // TODO\n            }\n          }\n        })\n    );\n  }\n\n  /**\n   * Update (or create) a file\n   * @param branch the branch\n   * @param newContents the updated content (path and content must be set, sha must be set, if it is an update)\n   * @param message the commit message\n   * @param apiKey OAuth token of user.\n   */\n  public updateContent(\n      branch: GithubBranch,\n      newContents: GithubFileContents,\n      message: string,\n      apiKey?: string): Observable<GithubFileContents> {\n    const repo = branch.repo;\n    const url = `repos/${repo.owner}/${repo.name}/contents/${newContents.path}`;\n    return this.put<ContentsUpdateInputAPI, ContentsUpdateFromAPI>(\n        url,\n        apiKey,\n        {\n          message: message,\n          content: this.toBase64(newContents.content),\n          sha: newContents.sha,\n          branch: branch.name\n        } as ContentsUpdateInputAPI\n    ).pipe(\n        map((response: ContentsUpdateFromAPI) => {\n          return {\n            type: 'file',\n            branch: branch,\n            path: response.content.path,\n            name: response.content.name,\n            size: response.content.size,\n            content: newContents.content,\n            sha: response.content.sha\n          } as GithubFileContents;\n        })\n    );\n  }\n\n  private toFileContents(branch: GithubBranch, contentApiResponse: FileContentsFromAPI): GithubFileContents {\n    const content = contentApiResponse.content;\n    let decodedContent: string|undefined;\n    if (!isNullOrUndefined(content) && !isNullOrUndefined(contentApiResponse.encoding)) {\n      if (contentApiResponse.encoding === 'base64') {\n        decodedContent = this.fromBase64(content);\n      } else {\n        decodedContent = '??? unknown encoding' + contentApiResponse.encoding;\n      }\n    } else {\n      decodedContent = undefined;\n    }\n    return {\n      type: 'file',\n      branch: branch,\n      path: contentApiResponse.path,\n      name: contentApiResponse.name,\n      size: contentApiResponse.size,\n      content: decodedContent,\n      sha: contentApiResponse.sha\n    };\n  }\n\n  private toDirectory(branch: GithubBranch, path: string, contentApiResponse: ContentsFromAPI[]): GithubDirectory {\n    const entries: (GithubDirectory|GithubFileContents|null)[] = contentApiResponse.map((entry: ContentsFromAPI) => {\n      switch (entry.type) {\n        case 'file':\n          return this.toFileContents(branch, entry);\n        case 'symlink':\n          return null;\n        case 'submodule':\n          return null;\n        case 'dir':\n          return {\n            type: 'dir',\n            branch: branch,\n            path: path,\n            name: entry.name,\n            sha: entry.sha\n          } as GithubDirectory;\n        default:\n          return null;\n      }\n    }).filter(entry => entry !== null);\n    return {\n      type: 'dir',\n      branch: branch,\n      path: path,\n      name: this.basename(path),\n      sha: '',\n      entries: entries\n    };\n  }\n\n  basename(path: string): string {\n    const index = path.lastIndexOf('/');\n    if (index >= 0) {\n      return path.substr(index + 1);\n    } else {\n      return path;\n    }\n  }\n\n  private toBase64(str: string): string {\n    return toBase64(str);\n  }\n\n  private fromBase64(b64str: string): string {\n    return fromBase64(b64str);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2dpdGh1Yi9naXRodWItY29uZmlnLWVkaXRvci1kaWFsb2cvZ2l0aHViLWNvbmZpZy1lZGl0b3ItZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3 matDialogTitle i18n>edit config</h3>\\n<div matDialogContent>\\n  <app-github-config-editor [githubConfiguration]=\\\"activeConfiguration.configuration\\\" (configurationChange)=\\\"changeActiveConfiguration($event)\\\">\\n  </app-github-config-editor>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button matDialogClose [mat-dialog-close]=\\\"result()\\\" i18n [disabled]=\\\"!isActiveConfigurationValid()\\\">OK</button>\\n  <button mat-button matDialogClose (click)=\\\"cancel()\\\" i18n>Cancel</button>\\n</div>\\n\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {GithubConfiguration} from '../github-configuration';\n\nexport interface GithubConfigEditorDialogData {\n  configuration: GithubConfiguration;\n}\n\n@Component({\n  selector: 'app-github-config-editor-dialog',\n  templateUrl: './github-config-editor-dialog.component.html',\n  styleUrls: ['./github-config-editor-dialog.component.css']\n})\nexport class GithubConfigEditorDialogComponent implements OnInit {\n\n  activeConfiguration: {valid: boolean, configuration: GithubConfiguration};\n\n  constructor(private dialogRef: MatDialogRef<GithubConfigEditorDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) data: GithubConfigEditorDialogData) {\n    this.activeConfiguration = {valid: false, configuration: data.configuration.copy()};\n  }\n\n  ngOnInit() {\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  changeActiveConfiguration(newValue: {valid: boolean, configuration: GithubConfiguration}) {\n    this.activeConfiguration = newValue;\n  }\n\n  isActiveConfigurationValid(): boolean {\n    return this.activeConfiguration && this.activeConfiguration.valid;\n  }\n\n  result(): GithubConfiguration {\n    return this.isActiveConfigurationValid() ? this.activeConfiguration.configuration : null;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2dpdGh1Yi9naXRodWItY29uZmlnLWVkaXRvci9naXRodWItY29uZmlnLWVkaXRvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" [formGroup]=\\\"form\\\">\\n  <mat-form-field>\\n    <mat-label i18n>Github API token</mat-label>\\n    <input matInput formControlName=\\\"apiToken\\\" name=\\\"apiToken\\\" placeholder=\\\"Github API token\\\" i18n-placeholder\\n           matTooltip=\\\"The configuration including your API token will be stored in the local storage of your browser. It will not be sent to anywhere but the Github API Service.\\\" i18n-matTooltip>\\n    <mat-error *ngIf=\\\"form.get('apiToken').hasError('tokenInvalid')\\\" i18n>\\n      The token is not valid!\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('apiToken').hasError('required')\\\" i18n>\\n      Token is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label i18n>Github repository</mat-label>\\n    <input matInput formControlName=\\\"repo\\\" name=\\\"repo\\\" placeholder=\\\"Github repository\\\" i18n-placeholder [matAutocomplete]=\\\"repos\\\">\\n    <mat-autocomplete #repos=\\\"matAutocomplete\\\">\\n      <mat-option *ngFor=\\\"let option of availableRepos()\\\" [value]=\\\"option\\\">\\n        {{ option }}\\n      </mat-option>\\n    </mat-autocomplete>\\n    <mat-error *ngIf=\\\"form.get('repo').hasError('repoInvalid')\\\" i18n>\\n      Repository does not exist!\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('repo').hasError('repoUncheckable')\\\" i18n>\\n      Repository cannot be checked (invalid API token)!\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('repo').hasError('required')\\\" i18n>\\n      Repository is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label i18n>Github branch</mat-label>\\n    <input matInput formControlName=\\\"branch\\\" name=\\\"branch\\\" placeholder=\\\"Github branch\\\" i18n-placeholder [matAutocomplete]=\\\"branches\\\">\\n    <mat-autocomplete #branches=\\\"matAutocomplete\\\">\\n      <mat-option *ngFor=\\\"let option of availableBranches()\\\" [value]=\\\"option\\\">\\n        {{ option }}\\n      </mat-option>\\n    </mat-autocomplete>\\n    <mat-error *ngIf=\\\"form.get('branch').hasError('branchInvalid')\\\" i18n>\\n      Branch does not exist!\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('branch').hasError('branchUncheckable')\\\" i18n>\\n      Branch cannot be checked (invalid API token)!\\n    </mat-error>\\n  </mat-form-field>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label i18n>path</mat-label>\\n      <input matInput formControlName=\\\"path\\\" name=\\\"path\\\" placeholder=\\\"path\\\" i18n-placeholder>\\n      <mat-error *ngIf=\\\"form.get('path').hasError('pathInvalid')\\\" i18n>\\n        Path does not exist!\\n      </mat-error>\\n      <mat-error *ngIf=\\\"form.get('path').hasError('pathIsNoDir')\\\" i18n>\\n        Path is not a directory!\\n      </mat-error>\\n    </mat-form-field>\\n    <button color=\\\"accent\\\" mat-icon-button (click)=\\\"openPathBrowser()\\\"\\n        matTooltip=\\\"Select a path\\\" i18n-matTooltip>\\n      <mat-icon>edit</mat-icon>\\n    </button>\\n  </div>\\n  <mat-action-row>\\n    <button color=\\\"primary\\\" mat-button (click)=\\\"storeConfigurationClicked()\\\"\\n            [disabled]=\\\"!form.valid\\\"\\n            matTooltip=\\\"The configuration including your API token will be stored in the local storage of your browser. It will not be sent to anywhere but the Github API Service.\\\" i18n-matTooltip>\\n      <mat-icon>save</mat-icon>\\n      <span i18n>Store configuration</span>\\n    </button>\\n    <button mat-button matTooltip=\\\"Delete this configuration\\\" i18n-matTooltip (click)=\\\"deleteConfigurationClicked()\\\">\\n      <mat-icon>delete</mat-icon>\\n      <span i18n>Delete configuration</span>\\n    </button>\\n  </mat-action-row>\\n</form>\\n\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {AbstractControl, AsyncValidatorFn, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {GithubBranch, GithubDirectory, GithubFileContents, GithubApiService, GithubRepo} from '../github-api.service';\nimport {catchError, finalize, first, map, switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {GithubConfiguration} from '../github-configuration';\nimport {IFileDescription} from '../../common/i-file-description';\nimport {MatDialog} from '@angular/material';\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../../common/file-explorer-dialog/file-explorer-dialog.component';\n\n@Component({\n  selector: 'app-github-config-editor',\n  templateUrl: './github-config-editor.component.html',\n  styleUrls: ['./github-config-editor.component.css']\n})\nexport class GithubConfigEditorComponent implements OnInit, OnChanges {\n\n  @Input() githubConfiguration: GithubConfiguration;\n  @Output() storeConfiguration: EventEmitter<GithubConfiguration>\n    = new EventEmitter<GithubConfiguration>();\n  @Output() deleteConfiguration: EventEmitter<GithubConfiguration>\n    = new EventEmitter<GithubConfiguration>();\n\n  form: FormGroup;\n  private _apiTokenValid = false;\n  private _repos: GithubRepo[] = []; // repos for selected api token read from api\n  private _branches: GithubBranch[] = []; // branches for selected repo read from api\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private githubApiService: GithubApiService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateForm();\n  }\n\n  checkApiTokenValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<{[key: string]: any} | null> => {\n      const token = control.value;\n      return of(null).pipe(\n          switchMap(() => {\n            if (!token) {\n              this._apiTokenValid = false;\n              this._repos = [];\n              return of(null);\n            }\n            return this.githubApiService.repos(token).pipe(\n                first(),\n                map(repos => {\n                  this._apiTokenValid = true;\n                  this._repos = repos;\n                  return null;\n                }),\n                catchError(() => {\n                  this._apiTokenValid = false;\n                  this._repos = [];\n                  return of({'tokenInvalid': {value: token}});\n                })\n            );\n          }),\n          finalize(() => {\n            if (this.form) {\n              this.form.get('repo').updateValueAndValidity();\n            }\n          })\n      );\n    };\n  }\n\n  checkRepoValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<{[key: string]: any} | null> => {\n      return of(null).pipe(\n          switchMap(() => {\n            const reponame = control.value;\n            if (!reponame) {\n              this._branches = [];\n              return of(null);\n            }\n            if (!this._apiTokenValid) {\n              this._branches = [];\n              return of({'repoUncheckable': {value: reponame}});\n            }\n            const repo = this._repos.find(r => r.name === reponame);\n            if (!repo) {\n              this._branches = [];\n              return of({'repoInvalid': {value: reponame}});\n            }\n            return this.githubApiService.branches(repo, this.form.value.apiToken).pipe(\n                first(),\n                map(branches => {\n                  this._branches = branches;\n                  return null;\n                }),\n                catchError(() => {\n                  this._apiTokenValid = false;\n                  this._branches = [];\n                  return of({'repoInvalid': {value: reponame}});\n                }),\n            );\n          }),\n          finalize(() => {\n            if (this.form) {\n              this.form.get('branch').updateValueAndValidity();\n            }\n          })\n      );\n    };\n  }\n\n  checkBranchValidator(): AsyncValidatorFn {\n    return ((control: AbstractControl): Observable<{[key: string]: any} | null> => {\n      return of(null).pipe(\n          switchMap(() => {\n            const branchname = control.value;\n            if (!branchname) {\n              return of(null);\n            }\n            if (!this._apiTokenValid) {\n              return of({'branchUncheckable': {value: branchname}});\n            }\n            const branch = this._branches.find(b => b.name === branchname);\n            return of(branch ? null : {'branchInvalid': {value: branchname}});\n          }),\n          finalize(() => {\n            if (this.form) {\n              this.form.get('path').updateValueAndValidity();\n            }\n          })\n      );\n    });\n  }\n\n  /**\n   * Validator to check for valid path.\n   */\n  checkPathValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<{ [key: string]: any } | null> => {\n      return of(null).pipe(\n          switchMap(() => {\n            if (!this.form) {\n              return of(null);\n            }\n            const path = control.value;\n            const apiToken = this.form.value.apiToken;\n            const branchname = this.form.value.branch;\n            const branch = this._branches.find(b => b.name === branchname);\n            if (!path || !branch) {\n              return of(null);\n            }\n            return this.githubApiService.content(branch, path, apiToken).pipe(\n                first(),\n                map((content: GithubFileContents | GithubDirectory) => {\n                  if (content.type !== 'dir') {\n                    control.markAsTouched();\n                    return {'pathIsNoDir': {value: path}};\n                  }\n                }),\n                catchError(() => {\n                  control.markAsTouched();\n                  return of({'pathInvalid': {value: path}});\n                })\n            );\n          })\n      );\n    };\n  }\n\n  initForm() {\n    if (!this.form) {\n      const configuration = (this.githubConfiguration) ? this.githubConfiguration : {apiToken: '', repo: '', branch: '', path: ''};\n      this.form = this.formBuilder.group({\n        apiToken: [configuration.apiToken, [Validators.required], [this.checkApiTokenValidator()]],\n        repo: [configuration.repo, [Validators.required], [this.checkRepoValidator()]],\n        branch: [configuration.branch, [], [this.checkBranchValidator()]],\n        path: [configuration.path, [], [this.checkPathValidator()]]\n      });\n    }\n  }\n\n  updateForm() {\n    if (this.form) {\n      const configuration = (this.githubConfiguration) ? this.githubConfiguration : {apiToken: '', repo: '', branch: '', path: ''};\n      this.form.patchValue(\n        {\n          apiToken: configuration.apiToken,\n          repo: configuration.repo,\n          branch: configuration.branch,\n          path: configuration.path\n        },\n        {emitEvent: false}\n      );\n    }\n  }\n\n  private currentConfiguration(actualPath: string): GithubConfiguration {\n    const id = (this.githubConfiguration) ? this.githubConfiguration.id : null;\n    const reponame = this.form.value.repo;\n    const repo: GithubRepo = this._repos.find(r => r.name === reponame);\n    const owner = (repo) ? repo.owner : null;\n    return new GithubConfiguration(\n      id,\n      this.form.value.apiToken,\n      owner,\n      reponame,\n      this.form.value.branch,\n      actualPath\n    );\n  }\n\n  availableBranches(): string[] {\n    return this._branches.map(branch => branch.name);\n  }\n\n  availableRepos(): string[] {\n    return this._repos.map(repo => repo.name);\n  }\n\n  openPathBrowser() {\n    const conf = this.currentConfiguration('');\n      const dialogRef = this.dialog.open(FileExplorerDialogComponent, {\n          data: {\n              configuration: conf,\n              file: conf.directoryDescription(this.form.value.path),\n              selectableFileType: 'dir'\n          } as FileExplorerDialogData\n      });\n\n      dialogRef.afterClosed().subscribe((result: IFileDescription) => {\n          if (result) {\n              this.form.get('path').patchValue(result.name);\n          }\n      });\n\n  }\n\n  storeConfigurationClicked() {\n    this.storeConfiguration.emit(this.currentConfiguration(this.form.value.path));\n  }\n\n  deleteConfigurationClicked() {\n    this.deleteConfiguration.emit(this.currentConfiguration(this.form.value.path));\n  }\n}\n","import {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {GithubFileDescription} from './github-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.GITHUB;\r\n    version: '1';\r\n    id: string;\r\n    apiToken: string;\r\n    owner: string;\r\n    repo: string;\r\n    branch: string;\r\n    path: string;\r\n}\r\n\r\nexport class GithubConfiguration implements IFileAccessConfiguration {\r\n\r\n    readonly type = FileAccessorType.GITHUB;\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GithubConfiguration {\r\n        const v1 = JSON.parse(serializedForm) as SerializedFormV1;\r\n        return new GithubConfiguration(v1.id, v1.apiToken, v1.owner, v1.repo, v1.branch, v1.path);\r\n    }\r\n\r\n    constructor(\r\n        private _id: string|null,\r\n        private _apiToken: string,\r\n        private _owner: string,\r\n        private _repo: string,\r\n        private _branch: string|null,\r\n        private _path: string|null\r\n    ) {}\r\n\r\n    serialize(serializationService: SerializationService): string {\r\n       const v1: SerializedFormV1 = {\r\n           accessorType: FileAccessorType.GITHUB,\r\n           version: '1',\r\n           id: this._id,\r\n           apiToken: this._apiToken,\r\n           owner: this._owner,\r\n           repo: this._repo,\r\n           branch: this._branch,\r\n           path: this._path\r\n       };\r\n       return JSON.stringify(v1);\r\n    }\r\n\r\n    copy(): GithubConfiguration {\r\n        return new GithubConfiguration(this._id, this._apiToken, this._owner, this._repo, this._branch, this._path);\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(newId: string) {\r\n        this._id = newId;\r\n    }\r\n\r\n    public equals(another: IFileAccessConfiguration): boolean {\r\n        if (!another || another.type !== FileAccessorType.GITHUB) {\r\n            return false;\r\n        }\r\n        const anotherGitConfiguration = another as GithubConfiguration;\r\n        return this.apiToken === anotherGitConfiguration.apiToken\r\n          && this.repo === anotherGitConfiguration.repo\r\n          && this.branch === anotherGitConfiguration.branch\r\n          && this.path === anotherGitConfiguration.path;\r\n    }\r\n\r\n    public shortLabel(): string {\r\n        return 'repository ' + this._repo;\r\n    }\r\n\r\n    public fullLabel(): { maticon?: string; icon?: string; label: string } {\r\n        const branch = (this._branch) ? this._branch : 'master';\r\n        const owner = (this._owner) ? this._owner : '?';\r\n        const repo = (this._repo) ? this._repo : '?';\r\n        const path = (this._path) ? this._path : '';\r\n        return {\r\n            icon: 'Octocat.jpg',\r\n            label: `${owner}/${repo}@${branch}/${path}`\r\n        };\r\n    }\r\n\r\n    get apiToken(): string {\r\n        return this._apiToken;\r\n    }\r\n\r\n    get owner(): string {\r\n        return this._owner;\r\n    }\r\n\r\n    get repo(): string {\r\n        return this._repo;\r\n    }\r\n\r\n    get branch(): string {\r\n        return this._branch;\r\n    }\r\n\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    public rootDescription(): IFileDescription {\r\n        return new GithubFileDescription('dir', this, '', '');\r\n    }\r\n\r\n    public directoryDescription(dirPath: string): IFileDescription {\r\n        const slashIndex = dirPath.lastIndexOf('/');\r\n        const newName = (slashIndex >= 0) ? dirPath.substr(slashIndex + 1) : dirPath;\r\n        return new GithubFileDescription('dir', this, dirPath, newName);\r\n    }\r\n\r\n    /**\r\n     * Check, wether a publish is possible.\r\n     */\r\n    public canPublish(): boolean {\r\n        return true;\r\n    }\r\n\r\n}\r\n","import {SerializationService} from '../../model/serialization.service';\r\nimport {GithubConfiguration} from './github-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {IFileDescription} from '../common/i-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.GITHUB;\r\n    type: 'dir'|'file';\r\n    version: '1';\r\n    configuration: string;\r\n    path: string;\r\n    name: string;\r\n    children?: string[];\r\n}\r\n\r\nexport class GithubFileDescription implements IFileDescription {\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GithubFileDescription {\r\n        const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n        const children = (v1Object.type === 'dir') ?\r\n          v1Object.children.map(serializedChild => serializationService.deserializeIFileDescription(serializedChild)) :\r\n          null;\r\n        return new GithubFileDescription(\r\n          v1Object.type,\r\n          serializationService.deserializeIFileConfiguration(v1Object.configuration) as GithubConfiguration,\r\n          v1Object.path,\r\n          v1Object.name,\r\n          children\r\n        );\r\n    }\r\n\r\n    constructor(\r\n      public readonly type: 'dir'|'file',\r\n      public configuration: GithubConfiguration,\r\n      public path: string,\r\n      public name: string,\r\n      public children?: IFileDescription[]) {}\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            accessorType: FileAccessorType.GITHUB,\r\n            type: this.type,\r\n            version: '1',\r\n            configuration: this.configuration.serialize(serializationService),\r\n            path: this.path,\r\n            name: this.name,\r\n            children: (this.children) ? this.children.map(fd => fd.serialize(serializationService)) : null\r\n\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    public equals(another: IFileDescription): boolean {\r\n        if (!another || !another.configuration) {\r\n            return false;\r\n        }\r\n        if (!this.configuration.equals(another.configuration)) {\r\n            return false;\r\n        }\r\n        return this.type === another.type\r\n          && this.name === another.name\r\n          && this.path === another.path;\r\n    }\r\n\r\n    /**\r\n     * Test, whether it is a directory.\r\n     */\r\n    public isDirectory(): boolean {\r\n        return this.type === 'dir';\r\n    }\r\n\r\n    /**\r\n     * Return the directory of this file.\r\n     * (or the parent, if it is directory)\r\n     */\r\n    public dirname(): IFileDescription|null {\r\n        const slashIndex = this.path.lastIndexOf('/');\r\n        if (slashIndex <= 0) {\r\n            return null;\r\n        }\r\n        const mydir_path = this.path.substr(0, slashIndex - 1);\r\n        const slashIndexPath = mydir_path.lastIndexOf('/');\r\n        const mydir_name = (slashIndexPath >= 0) ? mydir_path.substr(slashIndexPath + 1) : mydir_path;\r\n        return new GithubFileDescription('dir', this.configuration, mydir_path, mydir_name);\r\n    }\r\n\r\n    /**\r\n     * Create a new FileDescription with the given name under this file or directory.\r\n     * If this is a normal file, it returns a file at the same path, but with new name.\r\n     * If this is directory, it returns a file contained in the directory.\r\n     * @param newName name of file\r\n     * @return file\r\n     */\r\n    public createFileDescription(newName: string): IFileDescription {\r\n        if (this.isDirectory()) {\r\n            const newPath = this.path ? this.path + '/' + newName : newName;\r\n            return new GithubFileDescription('file', this.configuration, newPath, newName);\r\n        } else {\r\n            const dir = this.dirname();\r\n            if (dir) {\r\n                return dir.createFileDescription(newName);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import {GenericFile} from '../common/generic-file';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFile} from '../common/i-file';\r\n\r\ninterface SerializedFormV1 {\r\n  version: '1';\r\n  type: 'github';\r\n  description: string;\r\n  name: string;\r\n  size: number;\r\n  content: string;\r\n  sha: string;\r\n}\r\n\r\nexport class GithubFile extends GenericFile {\r\n  sha?: string; // SHA1 of loaded file\r\n\r\n  static deserialize(serializationService: SerializationService, serializedForm: string): GithubFile {\r\n    const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n    return new GithubFile(\r\n      serializationService.deserializeIFileDescription(v1Object.description),\r\n      v1Object.name,\r\n      v1Object.size,\r\n      v1Object.content,\r\n      v1Object.sha);\r\n  }\r\n\r\n  constructor(_description: IFileDescription, _name: string, _size: number, _content: string, _sha: string) {\r\n    super(_description, _name, _size, _content);\r\n    this.sha = _sha;\r\n  }\r\n\r\n  public serialize(serializationService: SerializationService): string {\r\n    return JSON.stringify({\r\n      version: '1',\r\n      type: 'github',\r\n      description: this.description.serialize(serializationService),\r\n      name: this.name,\r\n      size: this.size,\r\n      content: this.content,\r\n      sha: this.sha\r\n    } as SerializedFormV1);\r\n  }\r\n\r\n  /**\r\n   * Return a copy that has some edited content.\r\n   * @param newContent the changed content\r\n   */\r\n  public copyWithNewContent(newContent: string): IFile {\r\n    return new GithubFile(this.description, this.name, newContent.length, newContent, this.sha);\r\n  }\r\n\r\n  /**\r\n   * Create a copy that can be stored under a new location.\r\n   * @param saveAs new location to save file\r\n   */\r\n  copyForNewDescription(saveAs: IFileDescription): IFile {\r\n    return new GithubFile(saveAs, this.name, this.content.length, this.content, this.sha);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUtYWNjZXNzb3JzL2dpdGh1Yi90cmFuc2xhdGlvbi1maWxlLWZyb20tZ2l0aHViL3RyYW5zbGF0aW9uLWZpbGUtZnJvbS1naXRodWIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\n    <p fxFlex=\\\"50%\\\" i18n>Select the file you want to translate.<br>\\n    The file can be of format XLIFF 1.2, XLIFF 2.0 or XMB.<br>\\n    The file will be stored in your browser local storage until you export the translated version.</p>\\n    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"openDialog()\\\"><mat-icon>explore</mat-icon><span i18n>Open Github Browser...</span></button>\\n</div>\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TranslationProject} from '../../../model/translation-project';\nimport {IFileDescription} from '../../common/i-file-description';\nimport {GithubConfiguration} from '../github-configuration';\nimport {MatDialog} from '@angular/material';\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../../common/file-explorer-dialog/file-explorer-dialog.component';\n\n@Component({\n  selector: 'app-translation-file-from-github',\n  templateUrl: './translation-file-from-github.component.html',\n  styleUrls: ['./translation-file-from-github.component.css']\n})\nexport class TranslationFileFromGithubComponent implements OnInit {\n\n  @Input() createdProject?: TranslationProject;\n  @Input() configuration: GithubConfiguration;\n  @Output() fileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n  @Output() masterXmlFileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(FileExplorerDialogComponent, {\n      data: {\n        configuration: this.configuration,\n        selectableFileType: 'file'\n      } as FileExplorerDialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result: IFileDescription) => {\n      if (result) {\n        this.fileSelected.emit(result);\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbHRlci1wYWdlL2ZpbHRlci1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-translate-unit-list [translationFileView]=\\\"currentView()\\\" [workflowType]=\\\"currentProject()?.workflowType\\\"\\r\\n                         [hasAutotranslatedUnits]=\\\"hasAutotranslatedUnits()\\\"\\r\\n                         (changeTranslationUnit)=\\\"onChangeTranslationUnit($event)\\\">\\r\\n\\r\\n</app-translate-unit-list>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-filter-page',\r\n  templateUrl: './filter-page.component.html',\r\n  styleUrls: ['./filter-page.component.css']\r\n})\r\nexport class FilterPageComponent implements OnInit {\r\n\r\n  constructor(private translationService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentProject(): TranslationProject {\r\n    return this.translationService.currentProject();\r\n  }\r\n\r\n  currentView(): TranslationFileView {\r\n    return this.currentProject() ? this.currentProject().translationFileView : null;\r\n  }\r\n\r\n  /**\r\n   * Navigate to another unit.\r\n   * @param translationUnit\r\n   */\r\n  onChangeTranslationUnit(translationUnit: TranslationUnit) {\r\n    this.translationService.selectTransUnit(translationUnit);\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  hasAutotranslatedUnits(): boolean {\r\n    return this.currentProject()\r\n      && this.currentProject().autoTranslateSummaryReport()\r\n      && this.currentProject().autoTranslateSummaryReport().total() > 0;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbHRlci1zdGF0dXMvZmlsdGVyLXN0YXR1cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n  <a mat-icon-button routerLink=\\\"/selectfilter\\\" routerLinkActive=\\\"active\\\"><mat-icon>filter_list</mat-icon>\\r\\n    <ng-container [ngSwitch]=\\\"currentFilterName()\\\">\\r\\n      <ng-container *ngSwitchCase=\\\"'all'\\\" i18n>All units</ng-container>\\r\\n      <ng-container *ngSwitchCase=\\\"'autotranslated'\\\" i18n>Autotranslated units</ng-container>\\r\\n      <ng-container *ngSwitchCase=\\\"'autotranslatedFailed'\\\" i18n>failed Autotranslated</ng-container>\\r\\n      <ng-container *ngSwitchCase=\\\"'autotranslatedIgnored'\\\" i18n>ignored Autotranslated</ng-container>\\r\\n      <ng-container *ngSwitchCase=\\\"'untranslated'\\\" i18n>Untranslated units</ng-container>\\r\\n      <ng-container *ngSwitchCase=\\\"'needsReview'\\\" i18n>Review needed</ng-container>\\r\\n      <ng-container *ngSwitchCase=\\\"'bySubstring'\\\" i18n>Substring {{substringFilterPattern()}}</ng-container>\\r\\n      <ng-container *ngSwitchDefault>{{currentFilterName()}}</ng-container>\\r\\n    </ng-container>\\r\\n  </a>\\r\\n  <span fxFlex></span>\\r\\n  <span *ngIf=\\\"translationFileView?.currentTransUnitIndex() > 0\\\" i18n>{{translationFileView?.currentTransUnitIndex()}} of {{translationFileView?.scrollabeTransUnitsLength()}}</span>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {TranslationUnitFilterSubstring} from '../model/filters/translation-unit-filter-substring';\r\n\r\n@Component({\r\n  selector: 'app-filter-status',\r\n  templateUrl: './filter-status.component.html',\r\n  styleUrls: ['./filter-status.component.css']\r\n})\r\nexport class FilterStatusComponent implements OnInit {\r\n\r\n  @Input() translationFileView: TranslationFileView;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentFilterName(): string {\r\n    if (this.translationFileView) {\r\n      return this.translationFileView.activeFilter().name();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  substringFilterPattern(): string {\r\n    const activeFilter = this.translationFileView.activeFilter();\r\n    if (activeFilter.name() === 'bySubstring') {\r\n      const filter: TranslationUnitFilterSubstring = <TranslationUnitFilterSubstring> activeFilter;\r\n      return filter.substringFilterPattern();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtcGFnZS9ob21lLXBhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\r\\n  <p i18n>{projects().length, plural, =0 {Currently there is no open project.} =1 {Currently there is <b>1</b> open project.} other {Currently there are <b>{{projects().length}}</b> open projects.}}</p>\\r\\n  <a mat-raised-button color=\\\"accent\\\" routerLink=\\\"/createproject\\\" i18n>Create a new project</a>\\r\\n  <p></p>\\r\\n  <app-project-list [projects]=\\\"projects()\\\" (onStartProject)=\\\"startProject($event)\\\" (onDeleteProject)=\\\"deleteProject($event)\\\" (onSaveProject)=\\\"saveProject($event)\\\"></app-project-list>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public projects(): TranslationProject[] {\r\n    return this.translatorService.projects();\r\n  }\r\n\r\n  public startProject(project: TranslationProject) {\r\n    this.translatorService.setCurrentProject(project);\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.translatorService.deleteProject(project);\r\n  }\r\n\r\n  public saveProject(project: TranslationProject) {\r\n    this.translatorService.downloadProject(project);\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <span [ngClass]=\\\"flagClasses()\\\"></span>\\r\\n  <span id=\\\"code\\\" *ngIf=\\\"showCode\\\">{{code}}</span>\\r\\n</div>\\r\\n\"","module.exports = \".flag-icon-background{background-size:contain;background-position:50%;background-repeat:no-repeat}.flag-icon{background-size:contain;background-position:50%;background-repeat:no-repeat;position:relative;display:inline-block;width:1.33333333em;line-height:1em}.flag-icon:before{content:\\\"\\\\00a0\\\"}.flag-icon.flag-icon-squared{width:1em}.flag-icon-ad{background-image:url('ad.svg')}.flag-icon-ad.flag-icon-squared{background-image:url('ad.svg')}.flag-icon-ae{background-image:url('ae.svg')}.flag-icon-ae.flag-icon-squared{background-image:url('ae.svg')}.flag-icon-af{background-image:url('af.svg')}.flag-icon-af.flag-icon-squared{background-image:url('af.svg')}.flag-icon-ag{background-image:url('ag.svg')}.flag-icon-ag.flag-icon-squared{background-image:url('ag.svg')}.flag-icon-ai{background-image:url('ai.svg')}.flag-icon-ai.flag-icon-squared{background-image:url('ai.svg')}.flag-icon-al{background-image:url('al.svg')}.flag-icon-al.flag-icon-squared{background-image:url('al.svg')}.flag-icon-am{background-image:url('am.svg')}.flag-icon-am.flag-icon-squared{background-image:url('am.svg')}.flag-icon-ao{background-image:url('ao.svg')}.flag-icon-ao.flag-icon-squared{background-image:url('ao.svg')}.flag-icon-aq{background-image:url('aq.svg')}.flag-icon-aq.flag-icon-squared{background-image:url('aq.svg')}.flag-icon-ar{background-image:url('ar.svg')}.flag-icon-ar.flag-icon-squared{background-image:url('ar.svg')}.flag-icon-as{background-image:url('as.svg')}.flag-icon-as.flag-icon-squared{background-image:url('as.svg')}.flag-icon-at{background-image:url('at.svg')}.flag-icon-at.flag-icon-squared{background-image:url('at.svg')}.flag-icon-au{background-image:url('au.svg')}.flag-icon-au.flag-icon-squared{background-image:url('au.svg')}.flag-icon-aw{background-image:url('aw.svg')}.flag-icon-aw.flag-icon-squared{background-image:url('aw.svg')}.flag-icon-ax{background-image:url('ax.svg')}.flag-icon-ax.flag-icon-squared{background-image:url('ax.svg')}.flag-icon-az{background-image:url('az.svg')}.flag-icon-az.flag-icon-squared{background-image:url('az.svg')}.flag-icon-ba{background-image:url('ba.svg')}.flag-icon-ba.flag-icon-squared{background-image:url('ba.svg')}.flag-icon-bb{background-image:url('bb.svg')}.flag-icon-bb.flag-icon-squared{background-image:url('bb.svg')}.flag-icon-bd{background-image:url('bd.svg')}.flag-icon-bd.flag-icon-squared{background-image:url('bd.svg')}.flag-icon-be{background-image:url('be.svg')}.flag-icon-be.flag-icon-squared{background-image:url('be.svg')}.flag-icon-bf{background-image:url('bf.svg')}.flag-icon-bf.flag-icon-squared{background-image:url('bf.svg')}.flag-icon-bg{background-image:url('bg.svg')}.flag-icon-bg.flag-icon-squared{background-image:url('bg.svg')}.flag-icon-bh{background-image:url('bh.svg')}.flag-icon-bh.flag-icon-squared{background-image:url('bh.svg')}.flag-icon-bi{background-image:url('bi.svg')}.flag-icon-bi.flag-icon-squared{background-image:url('bi.svg')}.flag-icon-bj{background-image:url('bj.svg')}.flag-icon-bj.flag-icon-squared{background-image:url('bj.svg')}.flag-icon-bl{background-image:url('bl.svg')}.flag-icon-bl.flag-icon-squared{background-image:url('bl.svg')}.flag-icon-bm{background-image:url('bm.svg')}.flag-icon-bm.flag-icon-squared{background-image:url('bm.svg')}.flag-icon-bn{background-image:url('bn.svg')}.flag-icon-bn.flag-icon-squared{background-image:url('bn.svg')}.flag-icon-bo{background-image:url('bo.svg')}.flag-icon-bo.flag-icon-squared{background-image:url('bo.svg')}.flag-icon-bq{background-image:url('bq.svg')}.flag-icon-bq.flag-icon-squared{background-image:url('bq.svg')}.flag-icon-br{background-image:url('br.svg')}.flag-icon-br.flag-icon-squared{background-image:url('br.svg')}.flag-icon-bs{background-image:url('bs.svg')}.flag-icon-bs.flag-icon-squared{background-image:url('bs.svg')}.flag-icon-bt{background-image:url('bt.svg')}.flag-icon-bt.flag-icon-squared{background-image:url('bt.svg')}.flag-icon-bv{background-image:url('bv.svg')}.flag-icon-bv.flag-icon-squared{background-image:url('bv.svg')}.flag-icon-bw{background-image:url('bw.svg')}.flag-icon-bw.flag-icon-squared{background-image:url('bw.svg')}.flag-icon-by{background-image:url('by.svg')}.flag-icon-by.flag-icon-squared{background-image:url('by.svg')}.flag-icon-bz{background-image:url('bz.svg')}.flag-icon-bz.flag-icon-squared{background-image:url('bz.svg')}.flag-icon-ca{background-image:url('ca.svg')}.flag-icon-ca.flag-icon-squared{background-image:url('ca.svg')}.flag-icon-cc{background-image:url('cc.svg')}.flag-icon-cc.flag-icon-squared{background-image:url('cc.svg')}.flag-icon-cd{background-image:url('cd.svg')}.flag-icon-cd.flag-icon-squared{background-image:url('cd.svg')}.flag-icon-cf{background-image:url('cf.svg')}.flag-icon-cf.flag-icon-squared{background-image:url('cf.svg')}.flag-icon-cg{background-image:url('cg.svg')}.flag-icon-cg.flag-icon-squared{background-image:url('cg.svg')}.flag-icon-ch{background-image:url('ch.svg')}.flag-icon-ch.flag-icon-squared{background-image:url('ch.svg')}.flag-icon-ci{background-image:url('ci.svg')}.flag-icon-ci.flag-icon-squared{background-image:url('ci.svg')}.flag-icon-ck{background-image:url('ck.svg')}.flag-icon-ck.flag-icon-squared{background-image:url('ck.svg')}.flag-icon-cl{background-image:url('cl.svg')}.flag-icon-cl.flag-icon-squared{background-image:url('cl.svg')}.flag-icon-cm{background-image:url('cm.svg')}.flag-icon-cm.flag-icon-squared{background-image:url('cm.svg')}.flag-icon-cn{background-image:url('cn.svg')}.flag-icon-cn.flag-icon-squared{background-image:url('cn.svg')}.flag-icon-co{background-image:url('co.svg')}.flag-icon-co.flag-icon-squared{background-image:url('co.svg')}.flag-icon-cr{background-image:url('cr.svg')}.flag-icon-cr.flag-icon-squared{background-image:url('cr.svg')}.flag-icon-cu{background-image:url('cu.svg')}.flag-icon-cu.flag-icon-squared{background-image:url('cu.svg')}.flag-icon-cv{background-image:url('cv.svg')}.flag-icon-cv.flag-icon-squared{background-image:url('cv.svg')}.flag-icon-cw{background-image:url('cw.svg')}.flag-icon-cw.flag-icon-squared{background-image:url('cw.svg')}.flag-icon-cx{background-image:url('cx.svg')}.flag-icon-cx.flag-icon-squared{background-image:url('cx.svg')}.flag-icon-cy{background-image:url('cy.svg')}.flag-icon-cy.flag-icon-squared{background-image:url('cy.svg')}.flag-icon-cz{background-image:url('cz.svg')}.flag-icon-cz.flag-icon-squared{background-image:url('cz.svg')}.flag-icon-de{background-image:url('de.svg')}.flag-icon-de.flag-icon-squared{background-image:url('de.svg')}.flag-icon-dj{background-image:url('dj.svg')}.flag-icon-dj.flag-icon-squared{background-image:url('dj.svg')}.flag-icon-dk{background-image:url('dk.svg')}.flag-icon-dk.flag-icon-squared{background-image:url('dk.svg')}.flag-icon-dm{background-image:url('dm.svg')}.flag-icon-dm.flag-icon-squared{background-image:url('dm.svg')}.flag-icon-do{background-image:url('do.svg')}.flag-icon-do.flag-icon-squared{background-image:url('do.svg')}.flag-icon-dz{background-image:url('dz.svg')}.flag-icon-dz.flag-icon-squared{background-image:url('dz.svg')}.flag-icon-ec{background-image:url('ec.svg')}.flag-icon-ec.flag-icon-squared{background-image:url('ec.svg')}.flag-icon-ee{background-image:url('ee.svg')}.flag-icon-ee.flag-icon-squared{background-image:url('ee.svg')}.flag-icon-eg{background-image:url('eg.svg')}.flag-icon-eg.flag-icon-squared{background-image:url('eg.svg')}.flag-icon-eh{background-image:url('eh.svg')}.flag-icon-eh.flag-icon-squared{background-image:url('eh.svg')}.flag-icon-er{background-image:url('er.svg')}.flag-icon-er.flag-icon-squared{background-image:url('er.svg')}.flag-icon-es{background-image:url('es.svg')}.flag-icon-es.flag-icon-squared{background-image:url('es.svg')}.flag-icon-et{background-image:url('et.svg')}.flag-icon-et.flag-icon-squared{background-image:url('et.svg')}.flag-icon-fi{background-image:url('fi.svg')}.flag-icon-fi.flag-icon-squared{background-image:url('fi.svg')}.flag-icon-fj{background-image:url('fj.svg')}.flag-icon-fj.flag-icon-squared{background-image:url('fj.svg')}.flag-icon-fk{background-image:url('fk.svg')}.flag-icon-fk.flag-icon-squared{background-image:url('fk.svg')}.flag-icon-fm{background-image:url('fm.svg')}.flag-icon-fm.flag-icon-squared{background-image:url('fm.svg')}.flag-icon-fo{background-image:url('fo.svg')}.flag-icon-fo.flag-icon-squared{background-image:url('fo.svg')}.flag-icon-fr{background-image:url('fr.svg')}.flag-icon-fr.flag-icon-squared{background-image:url('fr.svg')}.flag-icon-ga{background-image:url('ga.svg')}.flag-icon-ga.flag-icon-squared{background-image:url('ga.svg')}.flag-icon-gb{background-image:url('gb.svg')}.flag-icon-gb.flag-icon-squared{background-image:url('gb.svg')}.flag-icon-gd{background-image:url('gd.svg')}.flag-icon-gd.flag-icon-squared{background-image:url('gd.svg')}.flag-icon-ge{background-image:url('ge.svg')}.flag-icon-ge.flag-icon-squared{background-image:url('ge.svg')}.flag-icon-gf{background-image:url('gf.svg')}.flag-icon-gf.flag-icon-squared{background-image:url('gf.svg')}.flag-icon-gg{background-image:url('gg.svg')}.flag-icon-gg.flag-icon-squared{background-image:url('gg.svg')}.flag-icon-gh{background-image:url('gh.svg')}.flag-icon-gh.flag-icon-squared{background-image:url('gh.svg')}.flag-icon-gi{background-image:url('gi.svg')}.flag-icon-gi.flag-icon-squared{background-image:url('gi.svg')}.flag-icon-gl{background-image:url('gl.svg')}.flag-icon-gl.flag-icon-squared{background-image:url('gl.svg')}.flag-icon-gm{background-image:url('gm.svg')}.flag-icon-gm.flag-icon-squared{background-image:url('gm.svg')}.flag-icon-gn{background-image:url('gn.svg')}.flag-icon-gn.flag-icon-squared{background-image:url('gn.svg')}.flag-icon-gp{background-image:url('gp.svg')}.flag-icon-gp.flag-icon-squared{background-image:url('gp.svg')}.flag-icon-gq{background-image:url('gq.svg')}.flag-icon-gq.flag-icon-squared{background-image:url('gq.svg')}.flag-icon-gr{background-image:url('gr.svg')}.flag-icon-gr.flag-icon-squared{background-image:url('gr.svg')}.flag-icon-gs{background-image:url('gs.svg')}.flag-icon-gs.flag-icon-squared{background-image:url('gs.svg')}.flag-icon-gt{background-image:url('gt.svg')}.flag-icon-gt.flag-icon-squared{background-image:url('gt.svg')}.flag-icon-gu{background-image:url('gu.svg')}.flag-icon-gu.flag-icon-squared{background-image:url('gu.svg')}.flag-icon-gw{background-image:url('gw.svg')}.flag-icon-gw.flag-icon-squared{background-image:url('gw.svg')}.flag-icon-gy{background-image:url('gy.svg')}.flag-icon-gy.flag-icon-squared{background-image:url('gy.svg')}.flag-icon-hk{background-image:url('hk.svg')}.flag-icon-hk.flag-icon-squared{background-image:url('hk.svg')}.flag-icon-hm{background-image:url('hm.svg')}.flag-icon-hm.flag-icon-squared{background-image:url('hm.svg')}.flag-icon-hn{background-image:url('hn.svg')}.flag-icon-hn.flag-icon-squared{background-image:url('hn.svg')}.flag-icon-hr{background-image:url('hr.svg')}.flag-icon-hr.flag-icon-squared{background-image:url('hr.svg')}.flag-icon-ht{background-image:url('ht.svg')}.flag-icon-ht.flag-icon-squared{background-image:url('ht.svg')}.flag-icon-hu{background-image:url('hu.svg')}.flag-icon-hu.flag-icon-squared{background-image:url('hu.svg')}.flag-icon-id{background-image:url('id.svg')}.flag-icon-id.flag-icon-squared{background-image:url('id.svg')}.flag-icon-ie{background-image:url('ie.svg')}.flag-icon-ie.flag-icon-squared{background-image:url('ie.svg')}.flag-icon-il{background-image:url('il.svg')}.flag-icon-il.flag-icon-squared{background-image:url('il.svg')}.flag-icon-im{background-image:url('im.svg')}.flag-icon-im.flag-icon-squared{background-image:url('im.svg')}.flag-icon-in{background-image:url('in.svg')}.flag-icon-in.flag-icon-squared{background-image:url('in.svg')}.flag-icon-io{background-image:url('io.svg')}.flag-icon-io.flag-icon-squared{background-image:url('io.svg')}.flag-icon-iq{background-image:url('iq.svg')}.flag-icon-iq.flag-icon-squared{background-image:url('iq.svg')}.flag-icon-ir{background-image:url('ir.svg')}.flag-icon-ir.flag-icon-squared{background-image:url('ir.svg')}.flag-icon-is{background-image:url('is.svg')}.flag-icon-is.flag-icon-squared{background-image:url('is.svg')}.flag-icon-it{background-image:url('it.svg')}.flag-icon-it.flag-icon-squared{background-image:url('it.svg')}.flag-icon-je{background-image:url('je.svg')}.flag-icon-je.flag-icon-squared{background-image:url('je.svg')}.flag-icon-jm{background-image:url('jm.svg')}.flag-icon-jm.flag-icon-squared{background-image:url('jm.svg')}.flag-icon-jo{background-image:url('jo.svg')}.flag-icon-jo.flag-icon-squared{background-image:url('jo.svg')}.flag-icon-jp{background-image:url('jp.svg')}.flag-icon-jp.flag-icon-squared{background-image:url('jp.svg')}.flag-icon-ke{background-image:url('ke.svg')}.flag-icon-ke.flag-icon-squared{background-image:url('ke.svg')}.flag-icon-kg{background-image:url('kg.svg')}.flag-icon-kg.flag-icon-squared{background-image:url('kg.svg')}.flag-icon-kh{background-image:url('kh.svg')}.flag-icon-kh.flag-icon-squared{background-image:url('kh.svg')}.flag-icon-ki{background-image:url('ki.svg')}.flag-icon-ki.flag-icon-squared{background-image:url('ki.svg')}.flag-icon-km{background-image:url('km.svg')}.flag-icon-km.flag-icon-squared{background-image:url('km.svg')}.flag-icon-kn{background-image:url('kn.svg')}.flag-icon-kn.flag-icon-squared{background-image:url('kn.svg')}.flag-icon-kp{background-image:url('kp.svg')}.flag-icon-kp.flag-icon-squared{background-image:url('kp.svg')}.flag-icon-kr{background-image:url('kr.svg')}.flag-icon-kr.flag-icon-squared{background-image:url('kr.svg')}.flag-icon-kw{background-image:url('kw.svg')}.flag-icon-kw.flag-icon-squared{background-image:url('kw.svg')}.flag-icon-ky{background-image:url('ky.svg')}.flag-icon-ky.flag-icon-squared{background-image:url('ky.svg')}.flag-icon-kz{background-image:url('kz.svg')}.flag-icon-kz.flag-icon-squared{background-image:url('kz.svg')}.flag-icon-la{background-image:url('la.svg')}.flag-icon-la.flag-icon-squared{background-image:url('la.svg')}.flag-icon-lb{background-image:url('lb.svg')}.flag-icon-lb.flag-icon-squared{background-image:url('lb.svg')}.flag-icon-lc{background-image:url('lc.svg')}.flag-icon-lc.flag-icon-squared{background-image:url('lc.svg')}.flag-icon-li{background-image:url('li.svg')}.flag-icon-li.flag-icon-squared{background-image:url('li.svg')}.flag-icon-lk{background-image:url('lk.svg')}.flag-icon-lk.flag-icon-squared{background-image:url('lk.svg')}.flag-icon-lr{background-image:url('lr.svg')}.flag-icon-lr.flag-icon-squared{background-image:url('lr.svg')}.flag-icon-ls{background-image:url('ls.svg')}.flag-icon-ls.flag-icon-squared{background-image:url('ls.svg')}.flag-icon-lt{background-image:url('lt.svg')}.flag-icon-lt.flag-icon-squared{background-image:url('lt.svg')}.flag-icon-lu{background-image:url('lu.svg')}.flag-icon-lu.flag-icon-squared{background-image:url('lu.svg')}.flag-icon-lv{background-image:url('lv.svg')}.flag-icon-lv.flag-icon-squared{background-image:url('lv.svg')}.flag-icon-ly{background-image:url('ly.svg')}.flag-icon-ly.flag-icon-squared{background-image:url('ly.svg')}.flag-icon-ma{background-image:url('ma.svg')}.flag-icon-ma.flag-icon-squared{background-image:url('ma.svg')}.flag-icon-mc{background-image:url('mc.svg')}.flag-icon-mc.flag-icon-squared{background-image:url('mc.svg')}.flag-icon-md{background-image:url('md.svg')}.flag-icon-md.flag-icon-squared{background-image:url('md.svg')}.flag-icon-me{background-image:url('me.svg')}.flag-icon-me.flag-icon-squared{background-image:url('me.svg')}.flag-icon-mf{background-image:url('mf.svg')}.flag-icon-mf.flag-icon-squared{background-image:url('mf.svg')}.flag-icon-mg{background-image:url('mg.svg')}.flag-icon-mg.flag-icon-squared{background-image:url('mg.svg')}.flag-icon-mh{background-image:url('mh.svg')}.flag-icon-mh.flag-icon-squared{background-image:url('mh.svg')}.flag-icon-mk{background-image:url('mk.svg')}.flag-icon-mk.flag-icon-squared{background-image:url('mk.svg')}.flag-icon-ml{background-image:url('ml.svg')}.flag-icon-ml.flag-icon-squared{background-image:url('ml.svg')}.flag-icon-mm{background-image:url('mm.svg')}.flag-icon-mm.flag-icon-squared{background-image:url('mm.svg')}.flag-icon-mn{background-image:url('mn.svg')}.flag-icon-mn.flag-icon-squared{background-image:url('mn.svg')}.flag-icon-mo{background-image:url('mo.svg')}.flag-icon-mo.flag-icon-squared{background-image:url('mo.svg')}.flag-icon-mp{background-image:url('mp.svg')}.flag-icon-mp.flag-icon-squared{background-image:url('mp.svg')}.flag-icon-mq{background-image:url('mq.svg')}.flag-icon-mq.flag-icon-squared{background-image:url('mq.svg')}.flag-icon-mr{background-image:url('mr.svg')}.flag-icon-mr.flag-icon-squared{background-image:url('mr.svg')}.flag-icon-ms{background-image:url('ms.svg')}.flag-icon-ms.flag-icon-squared{background-image:url('ms.svg')}.flag-icon-mt{background-image:url('mt.svg')}.flag-icon-mt.flag-icon-squared{background-image:url('mt.svg')}.flag-icon-mu{background-image:url('mu.svg')}.flag-icon-mu.flag-icon-squared{background-image:url('mu.svg')}.flag-icon-mv{background-image:url('mv.svg')}.flag-icon-mv.flag-icon-squared{background-image:url('mv.svg')}.flag-icon-mw{background-image:url('mw.svg')}.flag-icon-mw.flag-icon-squared{background-image:url('mw.svg')}.flag-icon-mx{background-image:url('mx.svg')}.flag-icon-mx.flag-icon-squared{background-image:url('mx.svg')}.flag-icon-my{background-image:url('my.svg')}.flag-icon-my.flag-icon-squared{background-image:url('my.svg')}.flag-icon-mz{background-image:url('mz.svg')}.flag-icon-mz.flag-icon-squared{background-image:url('mz.svg')}.flag-icon-na{background-image:url('na.svg')}.flag-icon-na.flag-icon-squared{background-image:url('na.svg')}.flag-icon-nc{background-image:url('nc.svg')}.flag-icon-nc.flag-icon-squared{background-image:url('nc.svg')}.flag-icon-ne{background-image:url('ne.svg')}.flag-icon-ne.flag-icon-squared{background-image:url('ne.svg')}.flag-icon-nf{background-image:url('nf.svg')}.flag-icon-nf.flag-icon-squared{background-image:url('nf.svg')}.flag-icon-ng{background-image:url('ng.svg')}.flag-icon-ng.flag-icon-squared{background-image:url('ng.svg')}.flag-icon-ni{background-image:url('ni.svg')}.flag-icon-ni.flag-icon-squared{background-image:url('ni.svg')}.flag-icon-nl{background-image:url('nl.svg')}.flag-icon-nl.flag-icon-squared{background-image:url('nl.svg')}.flag-icon-no{background-image:url('no.svg')}.flag-icon-no.flag-icon-squared{background-image:url('no.svg')}.flag-icon-np{background-image:url('np.svg')}.flag-icon-np.flag-icon-squared{background-image:url('np.svg')}.flag-icon-nr{background-image:url('nr.svg')}.flag-icon-nr.flag-icon-squared{background-image:url('nr.svg')}.flag-icon-nu{background-image:url('nu.svg')}.flag-icon-nu.flag-icon-squared{background-image:url('nu.svg')}.flag-icon-nz{background-image:url('nz.svg')}.flag-icon-nz.flag-icon-squared{background-image:url('nz.svg')}.flag-icon-om{background-image:url('om.svg')}.flag-icon-om.flag-icon-squared{background-image:url('om.svg')}.flag-icon-pa{background-image:url('pa.svg')}.flag-icon-pa.flag-icon-squared{background-image:url('pa.svg')}.flag-icon-pe{background-image:url('pe.svg')}.flag-icon-pe.flag-icon-squared{background-image:url('pe.svg')}.flag-icon-pf{background-image:url('pf.svg')}.flag-icon-pf.flag-icon-squared{background-image:url('pf.svg')}.flag-icon-pg{background-image:url('pg.svg')}.flag-icon-pg.flag-icon-squared{background-image:url('pg.svg')}.flag-icon-ph{background-image:url('ph.svg')}.flag-icon-ph.flag-icon-squared{background-image:url('ph.svg')}.flag-icon-pk{background-image:url('pk.svg')}.flag-icon-pk.flag-icon-squared{background-image:url('pk.svg')}.flag-icon-pl{background-image:url('pl.svg')}.flag-icon-pl.flag-icon-squared{background-image:url('pl.svg')}.flag-icon-pm{background-image:url('pm.svg')}.flag-icon-pm.flag-icon-squared{background-image:url('pm.svg')}.flag-icon-pn{background-image:url('pn.svg')}.flag-icon-pn.flag-icon-squared{background-image:url('pn.svg')}.flag-icon-pr{background-image:url('pr.svg')}.flag-icon-pr.flag-icon-squared{background-image:url('pr.svg')}.flag-icon-ps{background-image:url('ps.svg')}.flag-icon-ps.flag-icon-squared{background-image:url('ps.svg')}.flag-icon-pt{background-image:url('pt.svg')}.flag-icon-pt.flag-icon-squared{background-image:url('pt.svg')}.flag-icon-pw{background-image:url('pw.svg')}.flag-icon-pw.flag-icon-squared{background-image:url('pw.svg')}.flag-icon-py{background-image:url('py.svg')}.flag-icon-py.flag-icon-squared{background-image:url('py.svg')}.flag-icon-qa{background-image:url('qa.svg')}.flag-icon-qa.flag-icon-squared{background-image:url('qa.svg')}.flag-icon-re{background-image:url('re.svg')}.flag-icon-re.flag-icon-squared{background-image:url('re.svg')}.flag-icon-ro{background-image:url('ro.svg')}.flag-icon-ro.flag-icon-squared{background-image:url('ro.svg')}.flag-icon-rs{background-image:url('rs.svg')}.flag-icon-rs.flag-icon-squared{background-image:url('rs.svg')}.flag-icon-ru{background-image:url('ru.svg')}.flag-icon-ru.flag-icon-squared{background-image:url('ru.svg')}.flag-icon-rw{background-image:url('rw.svg')}.flag-icon-rw.flag-icon-squared{background-image:url('rw.svg')}.flag-icon-sa{background-image:url('sa.svg')}.flag-icon-sa.flag-icon-squared{background-image:url('sa.svg')}.flag-icon-sb{background-image:url('sb.svg')}.flag-icon-sb.flag-icon-squared{background-image:url('sb.svg')}.flag-icon-sc{background-image:url('sc.svg')}.flag-icon-sc.flag-icon-squared{background-image:url('sc.svg')}.flag-icon-sd{background-image:url('sd.svg')}.flag-icon-sd.flag-icon-squared{background-image:url('sd.svg')}.flag-icon-se{background-image:url('se.svg')}.flag-icon-se.flag-icon-squared{background-image:url('se.svg')}.flag-icon-sg{background-image:url('sg.svg')}.flag-icon-sg.flag-icon-squared{background-image:url('sg.svg')}.flag-icon-sh{background-image:url('sh.svg')}.flag-icon-sh.flag-icon-squared{background-image:url('sh.svg')}.flag-icon-si{background-image:url('si.svg')}.flag-icon-si.flag-icon-squared{background-image:url('si.svg')}.flag-icon-sj{background-image:url('sj.svg')}.flag-icon-sj.flag-icon-squared{background-image:url('sj.svg')}.flag-icon-sk{background-image:url('sk.svg')}.flag-icon-sk.flag-icon-squared{background-image:url('sk.svg')}.flag-icon-sl{background-image:url('sl.svg')}.flag-icon-sl.flag-icon-squared{background-image:url('sl.svg')}.flag-icon-sm{background-image:url('sm.svg')}.flag-icon-sm.flag-icon-squared{background-image:url('sm.svg')}.flag-icon-sn{background-image:url('sn.svg')}.flag-icon-sn.flag-icon-squared{background-image:url('sn.svg')}.flag-icon-so{background-image:url('so.svg')}.flag-icon-so.flag-icon-squared{background-image:url('so.svg')}.flag-icon-sr{background-image:url('sr.svg')}.flag-icon-sr.flag-icon-squared{background-image:url('sr.svg')}.flag-icon-ss{background-image:url('ss.svg')}.flag-icon-ss.flag-icon-squared{background-image:url('ss.svg')}.flag-icon-st{background-image:url('st.svg')}.flag-icon-st.flag-icon-squared{background-image:url('st.svg')}.flag-icon-sv{background-image:url('sv.svg')}.flag-icon-sv.flag-icon-squared{background-image:url('sv.svg')}.flag-icon-sx{background-image:url('sx.svg')}.flag-icon-sx.flag-icon-squared{background-image:url('sx.svg')}.flag-icon-sy{background-image:url('sy.svg')}.flag-icon-sy.flag-icon-squared{background-image:url('sy.svg')}.flag-icon-sz{background-image:url('sz.svg')}.flag-icon-sz.flag-icon-squared{background-image:url('sz.svg')}.flag-icon-tc{background-image:url('tc.svg')}.flag-icon-tc.flag-icon-squared{background-image:url('tc.svg')}.flag-icon-td{background-image:url('td.svg')}.flag-icon-td.flag-icon-squared{background-image:url('td.svg')}.flag-icon-tf{background-image:url('tf.svg')}.flag-icon-tf.flag-icon-squared{background-image:url('tf.svg')}.flag-icon-tg{background-image:url('tg.svg')}.flag-icon-tg.flag-icon-squared{background-image:url('tg.svg')}.flag-icon-th{background-image:url('th.svg')}.flag-icon-th.flag-icon-squared{background-image:url('th.svg')}.flag-icon-tj{background-image:url('tj.svg')}.flag-icon-tj.flag-icon-squared{background-image:url('tj.svg')}.flag-icon-tk{background-image:url('tk.svg')}.flag-icon-tk.flag-icon-squared{background-image:url('tk.svg')}.flag-icon-tl{background-image:url('tl.svg')}.flag-icon-tl.flag-icon-squared{background-image:url('tl.svg')}.flag-icon-tm{background-image:url('tm.svg')}.flag-icon-tm.flag-icon-squared{background-image:url('tm.svg')}.flag-icon-tn{background-image:url('tn.svg')}.flag-icon-tn.flag-icon-squared{background-image:url('tn.svg')}.flag-icon-to{background-image:url('to.svg')}.flag-icon-to.flag-icon-squared{background-image:url('to.svg')}.flag-icon-tr{background-image:url('tr.svg')}.flag-icon-tr.flag-icon-squared{background-image:url('tr.svg')}.flag-icon-tt{background-image:url('tt.svg')}.flag-icon-tt.flag-icon-squared{background-image:url('tt.svg')}.flag-icon-tv{background-image:url('tv.svg')}.flag-icon-tv.flag-icon-squared{background-image:url('tv.svg')}.flag-icon-tw{background-image:url('tw.svg')}.flag-icon-tw.flag-icon-squared{background-image:url('tw.svg')}.flag-icon-tz{background-image:url('tz.svg')}.flag-icon-tz.flag-icon-squared{background-image:url('tz.svg')}.flag-icon-ua{background-image:url('ua.svg')}.flag-icon-ua.flag-icon-squared{background-image:url('ua.svg')}.flag-icon-ug{background-image:url('ug.svg')}.flag-icon-ug.flag-icon-squared{background-image:url('ug.svg')}.flag-icon-um{background-image:url('um.svg')}.flag-icon-um.flag-icon-squared{background-image:url('um.svg')}.flag-icon-us{background-image:url('us.svg')}.flag-icon-us.flag-icon-squared{background-image:url('us.svg')}.flag-icon-uy{background-image:url('uy.svg')}.flag-icon-uy.flag-icon-squared{background-image:url('uy.svg')}.flag-icon-uz{background-image:url('uz.svg')}.flag-icon-uz.flag-icon-squared{background-image:url('uz.svg')}.flag-icon-va{background-image:url('va.svg')}.flag-icon-va.flag-icon-squared{background-image:url('va.svg')}.flag-icon-vc{background-image:url('vc.svg')}.flag-icon-vc.flag-icon-squared{background-image:url('vc.svg')}.flag-icon-ve{background-image:url('ve.svg')}.flag-icon-ve.flag-icon-squared{background-image:url('ve.svg')}.flag-icon-vg{background-image:url('vg.svg')}.flag-icon-vg.flag-icon-squared{background-image:url('vg.svg')}.flag-icon-vi{background-image:url('vi.svg')}.flag-icon-vi.flag-icon-squared{background-image:url('vi.svg')}.flag-icon-vn{background-image:url('vn.svg')}.flag-icon-vn.flag-icon-squared{background-image:url('vn.svg')}.flag-icon-vu{background-image:url('vu.svg')}.flag-icon-vu.flag-icon-squared{background-image:url('vu.svg')}.flag-icon-wf{background-image:url('wf.svg')}.flag-icon-wf.flag-icon-squared{background-image:url('wf.svg')}.flag-icon-ws{background-image:url('ws.svg')}.flag-icon-ws.flag-icon-squared{background-image:url('ws.svg')}.flag-icon-ye{background-image:url('ye.svg')}.flag-icon-ye.flag-icon-squared{background-image:url('ye.svg')}.flag-icon-yt{background-image:url('yt.svg')}.flag-icon-yt.flag-icon-squared{background-image:url('yt.svg')}.flag-icon-za{background-image:url('za.svg')}.flag-icon-za.flag-icon-squared{background-image:url('za.svg')}.flag-icon-zm{background-image:url('zm.svg')}.flag-icon-zm.flag-icon-squared{background-image:url('zm.svg')}.flag-icon-zw{background-image:url('zw.svg')}.flag-icon-zw.flag-icon-squared{background-image:url('zw.svg')}.flag-icon-es-ct{background-image:url('es-ct.svg')}.flag-icon-es-ct.flag-icon-squared{background-image:url('es-ct.svg')}.flag-icon-eu{background-image:url('eu.svg')}.flag-icon-eu.flag-icon-squared{background-image:url('eu.svg')}.flag-icon-gb-eng{background-image:url('gb-eng.svg')}.flag-icon-gb-eng.flag-icon-squared{background-image:url('gb-eng.svg')}.flag-icon-gb-nir{background-image:url('gb-nir.svg')}.flag-icon-gb-nir.flag-icon-squared{background-image:url('gb-nir.svg')}.flag-icon-gb-sct{background-image:url('gb-sct.svg')}.flag-icon-gb-sct.flag-icon-squared{background-image:url('gb-sct.svg')}.flag-icon-gb-wls{background-image:url('gb-wls.svg')}.flag-icon-gb-wls.flag-icon-squared{background-image:url('gb-wls.svg')}.flag-icon-un{background-image:url('un.svg')}.flag-icon-un.flag-icon-squared{background-image:url('un.svg')}#code {\\n  font-family: \\\"Courier New\\\"; }.missing-code {\\n  background-image: url('Pirate_Flag.svg'); }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n/**\r\n * A component that shows a language.\r\n * The input is some ISO 639-1 Code like \"de\", \"de-ch\", \"en\", \"en-uk\"..\r\n * The component tries to show a matching flag icon and the given code.\r\n */\r\n@Component({\r\n  selector: 'app-language',\r\n  templateUrl: './language.component.html',\r\n  styleUrls: ['./language.component.scss']\r\n})\r\nexport class LanguageComponent implements OnInit {\r\n\r\n  @Input() public code: string; // the ISO 639-1 code\r\n\r\n  @Input() public showCode = true; // if false, just show a flag, otherwise flag + code as text\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Classes used by flag-icon-css\r\n   * @return {{flag-icon: boolean}}\r\n   */\r\n  public flagClasses(): any {\r\n    const countryCode = this.languageCodeToCountryCode(this.code);\r\n    if (!countryCode) {\r\n      return {\r\n        'flag-icon': true,\r\n        'missing-code': true};\r\n    }\r\n    const flagIconCountry = 'flag-icon-' + countryCode.toLowerCase();\r\n    const result = {\r\n      'flag-icon': true\r\n    };\r\n    result[flagIconCountry] = true;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Map a given language code (ISO 639-1) to country code (ISO-3166-1-alpha 2 code).\r\n   * This is just a best effort approach.\r\n   */\r\n  public languageCodeToCountryCode(languageCode: string): string {\r\n    if (!languageCode) {\r\n      return null;\r\n    }\r\n    const lang = this.langFromLanguageCode(languageCode);\r\n    const region = this.regionFromLanguageCode(languageCode);\r\n    if (region && region.length === 2) {\r\n      return region;\r\n    }\r\n    // table of all lang codes, that are different from country code\r\n    // based on Microsofts Table of Language Culture Names https://msdn.microsoft.com/de-de/library/ee825488%28v=cs.20%29.aspx\r\n    switch (lang.toLowerCase()) {\r\n      case 'af': return 'ZA';\r\n      case 'sq': return 'AL';\r\n      case 'ar': return 'SA';\r\n      case 'hy': return 'AM';\r\n      case 'eu': return 'ES';\r\n      case 'be': return 'BY';\r\n      case 'ca': return 'ES';\r\n      case 'zh': return 'CN';\r\n      case 'cs': return 'CZ';\r\n      case 'da': return 'DK';\r\n      case 'div': return 'MV';\r\n      case 'en': return 'GB';\r\n      case 'et': return 'EE';\r\n      case 'fa': return 'IR';\r\n      case 'gl': return 'IS';\r\n      case 'ka': return 'GE';\r\n      case 'el': return 'GR';\r\n      case 'gu': return 'IN';\r\n      case 'he': return 'IL';\r\n      case 'hi': return 'IN';\r\n      case 'ja': return 'JP';\r\n      case 'kn': return 'IN';\r\n      case 'kk': return 'KZ';\r\n      case 'kok': return 'IN';\r\n      case 'ko': return 'KR';\r\n      case 'ky': return 'KZ';\r\n      case 'ms': return 'MY';\r\n      case 'mr': return 'IN';\r\n      case 'nb': return 'NO';\r\n      case 'nn': return 'NO';\r\n      case 'pa': return 'IN';\r\n      case 'sa': return 'IN';\r\n      case 'sl': return 'SI';\r\n      case 'sw': return 'KE';\r\n      case 'sv': return 'SE';\r\n      case 'syr': return 'SY';\r\n      case 'ta': return 'IN';\r\n      case 'tt': return 'RU';\r\n      case 'te': return 'IN';\r\n      case 'uk': return 'UA';\r\n      case 'ur': return 'PK';\r\n      case 'vi': return 'VN';\r\n      default: return lang;\r\n    }\r\n  }\r\n\r\n  private langFromLanguageCode(languageCode: string): string {\r\n    const parts: string[] = languageCode.split('-');\r\n    if (parts.length > 0) {\r\n      return parts[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private regionFromLanguageCode(languageCode: string): string {\r\n    const parts: string[] = languageCode.split('-');\r\n    if (parts.length > 1) {\r\n      return parts[1];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","\r\nimport {throwError as observableThrowError, Observable, BehaviorSubject, of, forkJoin} from 'rxjs';\r\nimport {Inject, Injectable} from '@angular/core';\r\nimport {\r\n  AutoTranslateDisabledReason, AutoTranslateDisabledReasonKey, AutoTranslateServiceAPI,\r\n  Language\r\n} from './auto-translate-service-api';\r\nimport {APP_CONFIG, AppConfig} from '../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {catchError, map} from 'rxjs/operators';\r\n\r\n/**\r\n * Types form google translate api.\r\n */\r\n\r\ninterface GetSupportedLanguagesRequest {\r\n  target: string; // The language to use to return localized, human readable names of supported\\nlanguages.\r\n}\r\n\r\ninterface LanguagesResource {\r\n  language: string; // code of the language\r\n  name: string; // human readable name (in target language)\r\n}\r\n\r\ninterface LanguagesListResponse {\r\n  languages: LanguagesResource[];\r\n}\r\n\r\ninterface TranslateTextRequest {\r\n  q: string[];  // The input texts to translate\r\n  target: string; // The language to use for translation of the input text\r\n  source: string; // The language of the source text\r\n  format?: string; // \"html\" (default) or \"text\"\r\n  model?: string; // see public documentation\r\n}\r\n\r\ninterface TranslationsResource {\r\n  detectedSourceLanguage?: string;\r\n  model?: string;\r\n  translatedText: string;\r\n}\r\n\r\ninterface TranslationsListResponse {\r\n  translations: TranslationsResource[];\r\n}\r\n\r\n// maximum number of strings to translate in one request (a Google limit!)\r\nconst MAX_SEGMENTS = 128;\r\n\r\n/**\r\n * Auto Translate Service using Google Translate.\r\n */\r\n@Injectable()\r\nexport class AutoTranslateGoogleService extends AutoTranslateServiceAPI {\r\n\r\n  private _rootUrl: string;\r\n\r\n  private _apiKey: string;\r\n\r\n  // a setting for tests!!\r\n  // if set to true, all autotranslations containing placeholder or tags will FAIL BY DESIGN\r\n  // Used to allow testing of report page and filters for failed translations.\r\n  private failByDesign: boolean;\r\n\r\n  /**\r\n   * Cache of supported languages.\r\n   */\r\n  private _subjects: {[target: string]: BehaviorSubject<Language[]>};\r\n\r\n  /**\r\n   * Reason, that currently disables the API.\r\n   * (no key, invalid key)\r\n   */\r\n  private _permanentFailReason: AutoTranslateDisabledReason;\r\n\r\n  /**\r\n   * Strip region code and convert to lower\r\n   * @param lang lang\r\n   * @return lang without region code and in lower case.\r\n   */\r\n  public static stripRegioncode(lang: string): string {\r\n    if (isNullOrUndefined(lang)) {\r\n      return null;\r\n    }\r\n    const langLower = lang.toLowerCase();\r\n    for (let i = 0; i < langLower.length; i++) {\r\n      const c = langLower.charAt(i);\r\n      if (c < 'a' || c > 'z') {\r\n        return langLower.substring(0, i);\r\n      }\r\n    }\r\n    return langLower;\r\n  }\r\n\r\n  constructor(@Inject(APP_CONFIG) app_config: AppConfig, private httpClient: HttpClient) {\r\n    super();\r\n    this._rootUrl = app_config.GOOGLETRANSLATE_API_ROOT_URL;\r\n    // API key is secret, normally it is nit configured and will be null\r\n    // it can be set interactively in the app\r\n    // but in the karma tests it will be set. It is stored than in environment.secret.ts (not in Git)\r\n    this.setApiKey(app_config.GOOGLETRANSLATE_API_KEY); // must be set explicitly via setApiKey()\r\n    this.failByDesign = false;\r\n    if (app_config.GOOGLETRANSLATE_PROVOKE_FAILURES === true) {\r\n      this.failByDesign = true;\r\n    }\r\n  }\r\n\r\n  public apiKey(): string {\r\n    return this._apiKey;\r\n  }\r\n\r\n  public setApiKey(key: string) {\r\n    this._apiKey = key;\r\n    this._permanentFailReason = null;\r\n    this._subjects = {};\r\n    if (!this._apiKey) {\r\n      this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_KEY};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is active.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   */\r\n  public canAutoTranslate(source: string, target: string): Observable<boolean> {\r\n    return this.supportedLanguages().pipe(\r\n        map((languages: Language[]) => {\r\n          const s = AutoTranslateGoogleService.stripRegioncode(source);\r\n          const t = AutoTranslateGoogleService.stripRegioncode(target);\r\n          if (!s || languages.findIndex((lang) => lang.language === s) < 0) {\r\n            return false;\r\n          }\r\n          return (t && languages.findIndex((lang) => lang.language === t) >= 0);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * The reason, why canAutoTranslate returns false.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   * @return reason or null, if API is enabled.\r\n   */\r\n  public disabledReason(source: string, target: string): Observable<AutoTranslateDisabledReason> {\r\n    return this.supportedLanguages().pipe(\r\n        map((languages: Language[]) => {\r\n          if (languages.length === 0) {\r\n            return this._permanentFailReason;\r\n          }\r\n          const s = AutoTranslateGoogleService.stripRegioncode(source);\r\n          if (!s || languages.findIndex((lang) => lang.language === s) < 0) {\r\n            return {reason: AutoTranslateDisabledReasonKey.SOURCE_LANG_NOT_SUPPORTED};\r\n          }\r\n          const t = AutoTranslateGoogleService.stripRegioncode(target);\r\n          if (!t || languages.findIndex((lang) => lang.language === t) < 0) {\r\n            return {reason: AutoTranslateDisabledReasonKey.TARGET_LANG_NOT_SUPPORTED};\r\n          }\r\n          return null;\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return a list of language codes that can be used.\r\n   * Returns codes as \"language\" and readable name.\r\n   * @param target language for readable name. (default is en)\r\n   */\r\n  supportedLanguages(target?: string): Observable<Language[]> {\r\n    if (!target) {\r\n      target = 'en';\r\n    } else {\r\n      target = AutoTranslateGoogleService.stripRegioncode(target);\r\n    }\r\n    if (!this._subjects[target]) {\r\n      if (this._apiKey) {\r\n        this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_PROVIDER};\r\n      } else {\r\n        this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_KEY};\r\n      }\r\n      this._subjects[target] = new BehaviorSubject<Language[]>([]);\r\n      if (this._apiKey) {\r\n        const languagesRequestUrl = this._rootUrl + 'language/translate/v2/languages' + '?key=' + this._apiKey + '&target=' + target;\r\n        this.httpClient.get<{data: LanguagesListResponse}>(languagesRequestUrl).pipe(\r\n            catchError((error: Response) => {\r\n            if (this.isInvalidApiKeyError(error)) {\r\n              this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.INVALID_KEY};\r\n            } else {\r\n              this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.CONNECT_PROBLEM, details: JSON.stringify(error.body)};\r\n            }\r\n            return [];\r\n           }),\r\n            map((response) => {\r\n          const result: LanguagesListResponse = response.data;\r\n          return result.languages;\r\n        })).subscribe((languages) => {\r\n          this._subjects[target].next(languages);\r\n        });\r\n      }\r\n    }\r\n    return this._subjects[target];\r\n  }\r\n\r\n  private isInvalidApiKeyError(error: Response): boolean {\r\n    if (!error) {\r\n      return false;\r\n    }\r\n    if (error.status === 400) {\r\n      const body = error.body;\r\n      if (body) {\r\n        return JSON.stringify(body).indexOf('API key not valid') >= 0;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Translate a message.\r\n   * @param message the message to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated message or error\r\n   */\r\n  public translate(message: string, from: string, to: string): Observable<string> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const translateRequest: TranslateTextRequest = {\r\n      q: [message],\r\n      target: to,\r\n      source: from,\r\n      // format: TODO useful html or text\r\n    };\r\n    const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n    return this.httpClient.post<{data: TranslationsListResponse}>(realUrl, translateRequest).pipe(map((response) => {\r\n      const result: TranslationsListResponse = response.data;\r\n      return result.translations[0].translatedText;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Translate an array of messages at once.\r\n   * @param messages the messages to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated messages or error\r\n   */\r\n  public translateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    if (messages.length === 0) {\r\n      return of([]);\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const allRequests: Observable<string[]>[] = this.splitMessagesToGoogleLimit(messages).map((partialMessages: string[]) => {\r\n      return this.limitedTranslateMultipleStrings(partialMessages, from, to);\r\n    });\r\n    return forkJoin(allRequests).pipe(map((allTranslations: string[][]) => {\r\n      let all = [];\r\n      for (let i = 0; i < allTranslations.length; i++) {\r\n        all = all.concat(allTranslations[i]);\r\n      }\r\n      return all;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Return translation request, but messages must be limited to google limits.\r\n   * Not more that 128 single messages.\r\n   * @param messages messages\r\n   * @param from from\r\n   * @param to to\r\n   * @return the translated strings\r\n   */\r\n  private limitedTranslateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const translateRequest: TranslateTextRequest = {\r\n      q: messages,\r\n      target: to,\r\n      source: from,\r\n      // format: TODO useful html or text\r\n    };\r\n    const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n    return this.httpClient.post<{data: TranslationsListResponse}>(realUrl, translateRequest).pipe(map((response) => {\r\n      const result: TranslationsListResponse = response.data;\r\n      return result.translations.map((translation: TranslationsResource) => {\r\n        // just for tests, provoke errors and warnings, if explicitly wanted\r\n        if (this.failByDesign) {\r\n          if (translation.translatedText.indexOf('{') >= 0) {\r\n            return 'oopsi';\r\n          }\r\n          if (translation.translatedText.indexOf('<') >= 0) {\r\n            return 'oopsala';\r\n          }\r\n        }\r\n        return translation.translatedText;\r\n      });\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Splits one array of messages to n arrays, where each has at least 128 (const MAX_ENTRIES) entries.\r\n   * @param messages messages\r\n   * @return splitted array\r\n   */\r\n  private splitMessagesToGoogleLimit(messages: string[]): string[][] {\r\n    if (messages.length <= MAX_SEGMENTS) {\r\n      return [messages];\r\n    }\r\n    const result = [];\r\n    let currentPackage = [];\r\n    let packageSize = 0;\r\n    for (let i = 0; i < messages.length; i++) {\r\n      currentPackage.push(messages[i]);\r\n      packageSize++;\r\n      if (packageSize >= MAX_SEGMENTS) {\r\n        result.push(currentPackage);\r\n        currentPackage = [];\r\n        packageSize = 0;\r\n      }\r\n    }\r\n    if (currentPackage.length > 0) {\r\n      result.push(currentPackage);\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n}\r\n","import {TranslationUnit} from './translation-unit';\r\n/**\r\n * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateResult {\r\n\r\n  public static Success(tu: TranslationUnit): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, true, false, null);\r\n  }\r\n\r\n  public static Failed(tu: TranslationUnit, details: string): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, false, false, details);\r\n  }\r\n\r\n  public static Ignored(tu: TranslationUnit, details: string): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, true, true, details);\r\n  }\r\n\r\n  private constructor(private _transUnit: TranslationUnit, private _success: boolean, private _ignored: boolean, private _details: string) {\r\n\r\n  }\r\n\r\n  public success(): boolean {\r\n    return this._success;\r\n  }\r\n\r\n  public failed(): boolean {\r\n    return !this._success;\r\n  }\r\n\r\n  public ignored(): boolean {\r\n    return this._ignored;\r\n  }\r\n\r\n  public details(): string {\r\n    return this._details;\r\n  }\r\n\r\n  public translationUnit(): TranslationUnit {\r\n    return this._transUnit;\r\n  }\r\n\r\n}\r\n","\r\nimport {throwError, Observable, of} from 'rxjs';\r\n\r\n/**\r\n * Reasons, why you cannot use the API.\r\n */\r\nexport enum AutoTranslateDisabledReasonKey {\r\n  NO_PROVIDER,\r\n  NO_KEY,\r\n  INVALID_KEY,\r\n  SOURCE_LANG_NOT_SUPPORTED,\r\n  TARGET_LANG_NOT_SUPPORTED,\r\n  CONNECT_PROBLEM\r\n}\r\n\r\nexport interface AutoTranslateDisabledReason {\r\n  reason: AutoTranslateDisabledReasonKey;\r\n  details?: string;  // in case of CONNECT_PROBLEM some readable details like status code, error message\r\n}\r\n\r\nexport interface Language {\r\n  language: string; // language code\r\n  name: string; // human readable language name\r\n}\r\n\r\n/**\r\n * Interface of AutoTranslate Service API.\r\n * An AutoTranslateService can translate messages to other languages.\r\n */\r\nexport class AutoTranslateServiceAPI {\r\n\r\n  public apiKey(): string {\r\n    return null;\r\n  }\r\n\r\n  public setApiKey(apiKey: string) {\r\n    // ignore it\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is active.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   */\r\n  public canAutoTranslate(source: string, target: string): Observable<boolean> {\r\n    return of(false);\r\n  }\r\n\r\n  /**\r\n   * The reason, why canAutoTranslate returns false.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   * @return reason or null, if API is enabled.\r\n   */\r\n  public disabledReason(source: string, target: string): Observable<AutoTranslateDisabledReason> {\r\n    return of({reason: AutoTranslateDisabledReasonKey.NO_PROVIDER});\r\n  }\r\n\r\n  /**\r\n   * Return a list of language codes that can be used.\r\n   * Returns codes as \"language\" and readable name.\r\n   * @param target language for readable name. (default is en)\r\n   */\r\n  supportedLanguages(target?: string): Observable<Language[]> {\r\n    return of([]);\r\n  }\r\n\r\n  /**\r\n   * Translate a message.\r\n   * TODO API to be designed\r\n   * @param message the message to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated message or error\r\n   */\r\n  public translate(message: string, from: string, to: string): Observable<string> {\r\n    return throwError('no translation service installed');\r\n  }\r\n\r\n  /**\r\n   * Translate an array of messages at once.\r\n   * @param messages the messages to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated messages or error\r\n   */\r\n  public translateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    return throwError('no translation service installed');\r\n  }\r\n}\r\n","import {AutoTranslateResult} from './auto-translate-result';\r\nimport {format} from 'util';\r\n/**\r\n * A report about a run of Google Translate over all untranslated unit.\r\n * * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateSummaryReport {\r\n\r\n  private _total: number;\r\n  private _ignored: number;\r\n  private _success: number;\r\n  private _failed: number;\r\n  private _allResults: {[id: string]: AutoTranslateResult};\r\n\r\n  constructor() {\r\n    this._allResults = {};\r\n    this._total = 0;\r\n    this._ignored = 0;\r\n    this._success = 0;\r\n    this._failed = 0;\r\n  }\r\n\r\n  /**\r\n   * Add a single result to the summary.\r\n   * @param result\r\n   */\r\n  public addSingleResult(result: AutoTranslateResult) {\r\n    this._allResults[result.translationUnit().id()] = result;\r\n    this._total++;\r\n    if (result.success()) {\r\n      if (result.ignored()) {\r\n        this._ignored++;\r\n      } else {\r\n        this._success++;\r\n      }\r\n    } else {\r\n      this._failed++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Merge another summary into this one.\r\n   * @param anotherSummary\r\n   */\r\n  public merge(anotherSummary: AutoTranslateSummaryReport) {\r\n    this._allResults = Object.assign({}, this._allResults, anotherSummary._allResults);\r\n    this._total += anotherSummary.total();\r\n    this._ignored += anotherSummary.ignored();\r\n    this._success += anotherSummary.success();\r\n    this._failed += anotherSummary.failed();\r\n  }\r\n\r\n  public total(): number {\r\n    return this._total;\r\n  }\r\n\r\n  public ignored(): number {\r\n    return this._ignored;\r\n  }\r\n\r\n  public success(): number {\r\n    return this._success;\r\n  }\r\n\r\n  public failed(): number {\r\n    return this._failed;\r\n  }\r\n\r\n  /**\r\n   * Human readable version of report\r\n   */\r\n  public content(): string {\r\n    return format('Total translated: %s\\nIgnored: %s\\nSuccesful: %s\\nFailed: %s',\r\n      this._total, this._ignored, this._success, this._failed);\r\n  }\r\n\r\n  public singleResult(tuId: string): AutoTranslateResult {\r\n    return this._allResults[tuId];\r\n  }\r\n\r\n  public allResults(): AutoTranslateResult[] {\r\n    const result: AutoTranslateResult[] = [];\r\n    Object.keys(this._allResults).forEach((val) => {\r\n      result.push(this._allResults[val]);\r\n    })\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BackendServiceAPI} from './backend-service-api';\r\nimport {TranslationProject} from './translation-project';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {SerializationService} from './serialization.service';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BackendLocalStorageService extends BackendServiceAPI {\r\n\r\n  private PRAEFIX = 'tinytranslator.';\r\n  private PRAEFIX_PROJECT = this.PRAEFIX + 'project.';\r\n  private KEY_CURRENT_PROJECT_ID = this.PRAEFIX + 'currentproject.id';\r\n  private KEY_CURRENT_TRANSUNIT_ID = this.PRAEFIX + 'currenttransunit.id';\r\n  private KEY_APIKEY = this.PRAEFIX + 'googletranslate.apikey';\r\n  private PRAEFIX_FILE_ACCESS_CONFIGURATION = this.PRAEFIX + 'fileaccessconfiguration.';\r\n\r\n  private _fileAccessConfigurations: BehaviorSubject<IFileAccessConfiguration[]>;\r\n\r\n  constructor(\r\n      private fileAccessServiceFactoryService: FileAccessServiceFactoryService,\r\n      private serializationService: SerializationService\r\n  ) {\r\n    super();\r\n    if (!localStorage) {\r\n      throw new Error('oops, local storage not supported');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store a project.\r\n   */\r\n  store(project: TranslationProject) {\r\n    if (!project.id) {\r\n      project.id = BackendServiceAPI.generateUUID();\r\n    }\r\n    localStorage.setItem(this.keyForProject(project), project.serialize(this.serializationService));\r\n  }\r\n\r\n  /**\r\n   * Get all stored projects.\r\n   */\r\n  projects(): TranslationProject[] {\r\n    const projectKeys = this.getProjectKeys();\r\n    return projectKeys\r\n      .map(key => TranslationProject.deserialize(this.serializationService, localStorage.getItem(key)))\r\n      .sort((p1, p2) => p1.name.localeCompare(p2.name));\r\n  }\r\n\r\n  /**\r\n   * Save id of curent project.\r\n   * @param id of project, null to remove.\r\n   */\r\n  storeCurrentProjectId(id: string) {\r\n    if (!id) {\r\n      localStorage.removeItem(this.KEY_CURRENT_PROJECT_ID);\r\n    } else {\r\n      localStorage.setItem(this.KEY_CURRENT_PROJECT_ID, id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID if current project.\r\n   * @return id of current project or null\r\n   */\r\n  currentProjectId(): string {\r\n    return localStorage.getItem(this.KEY_CURRENT_PROJECT_ID);\r\n  }\r\n\r\n  /**\r\n   * Save ID of last active TransUnit\r\n   * @param tuId active unit id or null.\r\n   */\r\n  storeCurrentTransUnitId(tuId: string) {\r\n    if (!tuId) {\r\n      localStorage.removeItem(this.KEY_CURRENT_TRANSUNIT_ID);\r\n    } else {\r\n      localStorage.setItem(this.KEY_CURRENT_TRANSUNIT_ID, tuId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID of last active TransUnit\r\n   * @return active unit or null.\r\n   */\r\n  currentTransUnitId(): string {\r\n    return localStorage.getItem(this.KEY_CURRENT_TRANSUNIT_ID);\r\n  }\r\n\r\n  deleteProject(project: TranslationProject) {\r\n    if (project && project.id) {\r\n      const key = this.keyForProject(project);\r\n      localStorage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save API Key in store.\r\n   * @param key GoogleTranslate API Key\r\n   */\r\n  storeAutoTranslateApiKey(key: string) {\r\n    if (!key) {\r\n      localStorage.removeItem(this.KEY_APIKEY);\r\n    } else {\r\n      localStorage.setItem(this.KEY_APIKEY, key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get API key from store.\r\n   * @return GoogleTranslate API Key\r\n   */\r\n  autoTranslateApiKey(): string {\r\n    return localStorage.getItem(this.KEY_APIKEY);\r\n  }\r\n\r\n  /**\r\n   * Store a file access configuration.\r\n   * @param configuration the configuration to store.\r\n   */\r\n  storeFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    const added = !configuration.id;\r\n    if (added) {\r\n      configuration.id = BackendServiceAPI.generateUUID();\r\n    }\r\n    const key = this.keyForFileAccessConfiguration(configuration);\r\n    const serialization = this.fileAccessServiceFactoryService.getFileAccessService(configuration.type)\r\n      .serialize(this.serializationService, configuration);\r\n    localStorage.setItem(key, serialization);\r\n    if (this._fileAccessConfigurations) {\r\n      const configs = this._fileAccessConfigurations.getValue();\r\n      const changedConfigs = added ?\r\n        [...configs, configuration] :\r\n        configs.map(conf => conf.id === configuration.id ? configuration : conf);\r\n      this._fileAccessConfigurations.next(changedConfigs);\r\n    }\r\n    return of(configuration);\r\n  }\r\n\r\n  deleteFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    if (configuration && configuration.id) {\r\n      const key = this.keyForFileAccessConfiguration(configuration);\r\n      localStorage.removeItem(key);\r\n      if (this._fileAccessConfigurations) {\r\n        const changedConfigs = this._fileAccessConfigurations.getValue().filter(conf => conf.id !== configuration.id);\r\n        this._fileAccessConfigurations.next(changedConfigs);\r\n      }\r\n      return of(configuration);\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return all saved file access configurations.\r\n   */\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    if (!this._fileAccessConfigurations) {\r\n      const configKeys = this.getFileAccessConfigurationKeys();\r\n      const configs = configKeys\r\n        .map(key => {\r\n          const fileAccessorType = this.getFileAccessorTypeFromKey(key);\r\n          const accessorService = this.fileAccessServiceFactoryService.getFileAccessService(fileAccessorType);\r\n          return accessorService.deserialize(this.serializationService, localStorage.getItem(key));\r\n        })\r\n        .sort((cfg1, cfg2) => cfg1.shortLabel().localeCompare(cfg2.shortLabel()));\r\n      this._fileAccessConfigurations = new BehaviorSubject<IFileAccessConfiguration[]>(configs);\r\n    }\r\n    return this._fileAccessConfigurations;\r\n  }\r\n\r\n  private keyForFileAccessConfiguration(configuration: IFileAccessConfiguration): string {\r\n    return this.PRAEFIX_FILE_ACCESS_CONFIGURATION + configuration.type + '.' + configuration.id;\r\n  }\r\n\r\n  private getFileAccessorTypeFromKey(key: string): FileAccessorType {\r\n    const keyParts = key.split('.');\r\n    const type: string = keyParts[keyParts.length - 2];\r\n    return type as FileAccessorType;\r\n  }\r\n\r\n  private getFileAccessConfigurationKeys(): string[] {\r\n    const result = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key && key.startsWith(this.PRAEFIX_FILE_ACCESS_CONFIGURATION)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private keyForProject(project: TranslationProject) {\r\n    return this.PRAEFIX_PROJECT + project.id;\r\n  }\r\n\r\n  private getProjectKeys(): string[] {\r\n    const result = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key && key.startsWith(this.PRAEFIX_PROJECT)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","import {TranslationProject} from './translation-project';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {Observable, of} from 'rxjs';\r\n\r\n/**\r\n * Interface of BackendService.\r\n * A BackendService can store and retrieve translation projects.\r\n * It also can store an API key for Google Translate.\r\n * And it can store FileAccessConfigurations.\r\n */\r\nexport class BackendServiceAPI {\r\n\r\n  /**\r\n   * Helper function to generate a unique ID.\r\n   * (from http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript)\r\n   * @return a unique id\r\n   */\r\n  static generateUUID(): string {\r\n    // Public Domain/MIT\r\n    let d = new Date().getTime();\r\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n      d += performance.now(); // use high-precision timer if available\r\n    }\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      const r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Store a project.\r\n   */\r\n  store(project: TranslationProject) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Get all stored projects.\r\n   */\r\n  projects(): TranslationProject[] {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Save id of curent project.\r\n   * @param id of project, null to remove.\r\n   */\r\n  storeCurrentProjectId(id: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ID if current project.\r\n   * @return id of current project or null\r\n   */\r\n  currentProjectId(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Save ID of last active TransUnit\r\n   * @param tuId active unit id or null.\r\n   */\r\n  storeCurrentTransUnitId(tuId: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ID of last active TransUnit\r\n   * @return active unit or null.\r\n   */\r\n  currentTransUnitId(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Delete a project from store.\r\n   * @param project to delete\r\n   */\r\n  deleteProject(project: TranslationProject) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Save API Key in store.\r\n   * @param key to store\r\n   */\r\n  storeAutoTranslateApiKey(key: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Get API key from store.\r\n   * @return the key\r\n   */\r\n  autoTranslateApiKey(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Store a file access configuration.\r\n   * @param configuration the configuration to store.\r\n   */\r\n  storeFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    return null;\r\n  }\r\n\r\n  deleteFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Return all saved file access configurations.\r\n   */\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return of([]);\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\n/**\r\n * Filter that filters all units.\r\n * Created by martin on 27.05.2017.\r\n */\r\nexport class TranslationUnitFilterAll implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return true;\r\n  }\r\n\r\n  public name(): string {\r\n    return 'all';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\n/**\r\n * Filter that filters all units that should be autotranslated by google, but translation failed.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslatedFailed implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (this.autoTranslateSummaryReport) {\r\n      const autotranslateResult = this.autoTranslateSummaryReport.singleResult(tu.id());\r\n      return autotranslateResult && autotranslateResult.failed();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslatedFailed';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\n/**\r\n * Filter that filters all units that should be autotranslated by google, but are ignored.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslatedIgnored implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (this.autoTranslateSummaryReport) {\r\n      const autotranslateResult = this.autoTranslateSummaryReport.singleResult(tu.id());\r\n      return autotranslateResult && autotranslateResult.ignored();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslatedIgnored';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {STATE_TRANSLATED} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\nimport {isNullOrUndefined} from '../../common/util';\r\n/**\r\n * Filter that filters all units that are autotranslated by google.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslated implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return this.autoTranslateSummaryReport && tu.targetState() === STATE_TRANSLATED && !isNullOrUndefined(this.autoTranslateSummaryReport.singleResult(tu.id()));\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslated';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {STATE_TRANSLATED} from'@ngx-i18nsupport/ngx-i18nsupport-lib';\r\n/**\r\n * Filter that filters all units that have status \"translated\".\r\n * Created by martin on 30.05.2017.\r\n */\r\nexport class TranslationUnitFilterNeedsReview implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return tu.targetState() === STATE_TRANSLATED;\r\n  }\r\n\r\n  public name(): string {\r\n    return 'needsReview';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {isNullOrUndefined} from '../../common/util';\r\n/**\r\n * Filter that filters units, that contain a given substring in source or target.\r\n * Created by martin on 01.06.2017.\r\n */\r\nexport class TranslationUnitFilterSubstring implements ITranslationUnitFilter {\r\n\r\n  constructor(private substring: string) {\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (!this.substring) {\r\n      return true;\r\n    }\r\n    const source = tu.sourceContent();\r\n    if (this.matches(source)) {\r\n      return true;\r\n    }\r\n    const target = tu.targetContent();\r\n    if (this.matches(target)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private matches(val: string): boolean {\r\n    if (isNullOrUndefined(val)) {\r\n      return false;\r\n    }\r\n    return val.toLowerCase().includes(this.substring.toLowerCase());\r\n  }\r\n\r\n  public name(): string {\r\n    return 'bySubstring';\r\n  }\r\n\r\n  public substringFilterPattern(): string {\r\n    return this.substring;\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\n/**\r\n * Filter that filters all units.\r\n * Created by martin on 27.05.2017.\r\n */\r\nexport class TranslationUnitFilterUntranslated implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return !tu.isTranslated();\r\n  }\r\n\r\n  public name(): string {\r\n    return 'untranslated';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnitFilterAll} from './translation-unit-filter-all';\r\nimport {TranslationUnitFilterAutoTranslated} from './translation-unit-filter-autotranslated';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\nimport {TranslationUnitFilterAutoTranslatedFailed} from './translation-unit-filter-autotranslated-failed';\r\nimport {TranslationUnitFilterAutoTranslatedIgnored} from './translation-unit-filter-autotranslated-ignored';\r\nimport {TranslationUnitFilterNeedsReview} from './translation-unit-filter-needs-review';\r\nimport {TranslationUnitFilterSubstring} from './translation-unit-filter-substring';\r\nimport {TranslationUnitFilterUntranslated} from './translation-unit-filter-untranslated';\r\n\r\nexport const FILTER_ALL = 'all';\r\nexport const FILTER_AUTOTRANSLATED = 'autotranslated';\r\nexport const FILTER_AUTOTRANSLATED_FAILED = 'autotranslatedFailed';\r\nexport const FILTER_AUTOTRANSLATED_IGNORED = 'autotranslatedIgnored';\r\nexport const FILTER_NEEDS_REVIEW = 'needsReview';\r\nexport const FILTER_SUBSTRING = 'bySubstring';\r\nexport const FILTER_UNTRANSLATED = 'untranslated';\r\n\r\n@Injectable()\r\nexport class TranslationUnitFilterService {\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * Create a new filter.\r\n   * @param name one of the FILTER_.. constants\r\n   * @param substr Substring in case of FILTER_SUBSTRING\r\n   * @return {ITranslationUnitFilter} new filter instance\r\n   */\r\n  public getFilter(name: string, substr?: string): ITranslationUnitFilter {\r\n    switch (name) {\r\n      case FILTER_ALL:\r\n        return new TranslationUnitFilterAll();\r\n      case 'autotranslated':\r\n        return new TranslationUnitFilterAutoTranslated(this._autoTranslateSummaryReport);\r\n      case 'autotranslatedFailed':\r\n        return new TranslationUnitFilterAutoTranslatedFailed(this._autoTranslateSummaryReport);\r\n      case 'autotranslatedIgnored':\r\n        return new TranslationUnitFilterAutoTranslatedIgnored(this._autoTranslateSummaryReport);\r\n      case 'needsReview':\r\n        return new TranslationUnitFilterNeedsReview();\r\n      case 'bySubstring':\r\n        return new TranslationUnitFilterSubstring(substr);\r\n      case 'untranslated':\r\n        return new TranslationUnitFilterUntranslated();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Remember the last Autotranslate Summary report.\r\n   * Some filters need that.\r\n   * @param summary\r\n   */\r\n  public setAutotranslateSummaryReport(summary: AutoTranslateSummaryReport) {\r\n    this._autoTranslateSummaryReport = summary;\r\n  }\r\n}\r\n","import {INormalizedMessage, IICUMessage, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {ValidationErrors} from '@angular/forms';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n/**\r\n * Created by martin on 19.05.2017.\r\n * Wrapper around INormalizedMessage for GUI usage.\r\n * Holds the normalized form and the original.\r\n */\r\nexport class NormalizedMessage {\r\n\r\n  /**\r\n   * Original source as string.\r\n   */\r\n  private _original: string;\r\n\r\n  /**\r\n   * normalized message.\r\n   * null if original is unparsable.\r\n   */\r\n  private _normalizedMessage: INormalizedMessage;\r\n\r\n  /**\r\n   * Parse error if message was unparsable.\r\n   */\r\n  private _parseError: string;\r\n\r\n  /**\r\n   * Errors and warnings, lazy evaluated.\r\n   */\r\n  private _errors: ValidationErrors;\r\n  private _errorsInitialized = false;\r\n  private _warnings: ValidationErrors;\r\n  private _warningsInitialized = false;\r\n\r\n  private _sourceMessage: INormalizedMessage;\r\n\r\n  /**\r\n   * Create normalized message\r\n   * @param original the original string.\r\n   * @param normalizedMessage parsed version or null, if parsing error.\r\n   * @param parseError parsing error or (normally) null, if no error.\r\n   */\r\n  constructor(original: string, normalizedMessage: INormalizedMessage, parseError: string, sourceMessage: INormalizedMessage) {\r\n    this._original = original;\r\n    this._normalizedMessage = normalizedMessage;\r\n    this._parseError = parseError;\r\n    this._sourceMessage = sourceMessage;\r\n    this._errorsInitialized = false;\r\n    this._warningsInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Return a copy of the message.\r\n   */\r\n  public copy(): NormalizedMessage {\r\n    return new NormalizedMessage(this._original, this._normalizedMessage, this._parseError, this._sourceMessage);\r\n  }\r\n\r\n  public dislayText(normalize: boolean): string {\r\n    if (normalize) {\r\n      if (this._normalizedMessage) {\r\n        if (this.isICUMessage()) {\r\n          return this._normalizedMessage.asDisplayString() + ' ' + this._normalizedMessage.getICUMessage().asNativeString();\r\n        } else {\r\n          return this._normalizedMessage.asDisplayString();\r\n        }\r\n      } else {\r\n        return this._parseError;\r\n      }\r\n    } else {\r\n      return this._original;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is an ICU message.\r\n   */\r\n  isICUMessage(): boolean {\r\n    return this._normalizedMessage && !isNullOrUndefined(this._normalizedMessage.getICUMessage());\r\n  }\r\n\r\n  getICUMessage(): IICUMessage {\r\n    return this._normalizedMessage ? this._normalizedMessage.getICUMessage() : null;\r\n  }\r\n\r\n  public translate(newValue: string, normalize: boolean): NormalizedMessage {\r\n    let newOriginal: string;\r\n    let newMessage: INormalizedMessage;\r\n    let parseError: string;\r\n    if (normalize) {\r\n      try {\r\n        newMessage = this._sourceMessage.translate(newValue);\r\n        newOriginal = newMessage.asNativeString();\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n        newMessage = null;\r\n        newOriginal = null;\r\n      }\r\n    } else {\r\n      newOriginal = newValue;\r\n      try {\r\n        newMessage = this._sourceMessage.translateNativeString(newValue);\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n      }\r\n    }\r\n    return new NormalizedMessage(newOriginal, newMessage, parseError, this._sourceMessage);\r\n  }\r\n\r\n  /**\r\n   * Auto translate this normalized message via Google Translate.\r\n   * @param autoTranslateService autoTranslateService\r\n   * @param sourceLanguage Language of source\r\n   * @param targetLanguage Language of target\r\n   * @return new translated message (as Observable, it is an async call)\r\n   */\r\n  public autoTranslateUsingService(autoTranslateService: AutoTranslateServiceAPI,\r\n                                   sourceLanguage: string,\r\n                                   targetLanguage: string): Observable<NormalizedMessage> {\r\n    // TODO corner cases to be researched like special tags, ...\r\n    if (this.getICUMessage()) {\r\n      return this.autoTranslateICUMessageUsingService(autoTranslateService, sourceLanguage, targetLanguage);\r\n    } else {\r\n      return autoTranslateService.translate(this.dislayText(true), sourceLanguage, targetLanguage).pipe(\r\n          map((translation: string) => {\r\n            if (!isNullOrUndefined(translation)) {\r\n              return this.translate(translation, true);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n      ));\r\n    }\r\n  }\r\n\r\n  private autoTranslateICUMessageUsingService(autoTranslateService: AutoTranslateServiceAPI,\r\n                                              sourceLanguage: string,\r\n                                              targetLanguage: string): Observable<NormalizedMessage> {\r\n    const icuMessage: IICUMessage = this.getICUMessage();\r\n    const categories = icuMessage.getCategories();\r\n    // check for nested ICUs, we do not support that\r\n    if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n      throw new Error('nested ICU message not supported');\r\n    }\r\n    const allMessages: string[] = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n    return autoTranslateService.translateMultipleStrings(allMessages, sourceLanguage, targetLanguage)\r\n      .pipe(map((translations: string[]) => {\r\n        const icuTranslation: IICUMessageTranslation = {};\r\n        for (let i = 0; i < translations.length; i++) {\r\n          const translationText = translations[i];\r\n          icuTranslation[categories[i].getCategory()] = translationText;\r\n        }\r\n        const result = this.translateICUMessage(icuTranslation);\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  public translateICUMessage(newValue: IICUMessageTranslation): NormalizedMessage {\r\n    let newOriginal: string;\r\n    let newMessage: INormalizedMessage;\r\n    let parseError: string;\r\n      try {\r\n        if (this._normalizedMessage) {\r\n          newMessage = this._normalizedMessage.translateICUMessage(newValue);\r\n        } else {\r\n          newMessage = this._sourceMessage.translateICUMessage(newValue);\r\n        }\r\n        newOriginal = newMessage.asNativeString();\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n        newMessage = null;\r\n        newOriginal = null;\r\n      }\r\n    return new NormalizedMessage(newOriginal, newMessage, parseError, this._sourceMessage);\r\n  }\r\n\r\n  public nativeString(): string {\r\n    if (this._normalizedMessage) {\r\n      return this._normalizedMessage.asNativeString();\r\n    } else {\r\n      return this._original;\r\n    }\r\n  }\r\n\r\n  public validate(normalize: boolean): ValidationErrors | null {\r\n    if (!this._errorsInitialized) {\r\n      if (normalize) {\r\n        if (this._normalizedMessage) {\r\n          this._errors = this._normalizedMessage.validate();\r\n        } else {\r\n          this._errors = {'parseError': this._parseError};\r\n        }\r\n      } else {\r\n        this._errors = null;\r\n      }\r\n      this._errorsInitialized = true;\r\n    }\r\n    return this._errors;\r\n  }\r\n\r\n  public validateWarnings(normalize: boolean): ValidationErrors | null {\r\n    if (!this._warningsInitialized) {\r\n      if (normalize) {\r\n        if (this._normalizedMessage) {\r\n          this._warnings = this._normalizedMessage.validateWarnings();\r\n        } else {\r\n          this._warnings = null;\r\n        }\r\n      } else {\r\n        this._warnings = null;\r\n      }\r\n      this._warningsInitialized = true;\r\n    }\r\n    return this._warnings;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\nimport {DownloadUploadFileDescription} from '../file-accessors/download-upload/download-upload-file-description';\nimport {DownloadUploadConfiguration} from '../file-accessors/download-upload/download-upload-configuration';\nimport {GithubConfiguration} from '../file-accessors/github/github-configuration';\nimport {GithubFileDescription} from '../file-accessors/github/github-file-description';\nimport {IFile} from '../file-accessors/common/i-file';\nimport {GenericFile} from '../file-accessors/common/generic-file';\nimport {GithubFile} from '../file-accessors/github/github-file';\n\ninterface SerializedFormOfFile {\n  type?: 'github';\n}\n\ninterface SerializedFormOfDescription {\n  accessorType: FileAccessorType;\n  type: 'file'|'dir';\n}\n\ninterface SerializedFormOfConfiguration {\n  accessorType: FileAccessorType;\n}\n\n/**\n * A service to serialize tiny translator objects to strings and deserialze back.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SerializationService {\n\n  constructor() { }\n\n  public deserializeIFile(serializedForm: string): IFile {\n    const obj: SerializedFormOfFile = JSON.parse(serializedForm);\n    switch (obj.type) {\n      case 'github':\n        return GithubFile.deserialize(this, serializedForm);\n      default:\n        return GenericFile.deserialize(this, serializedForm);\n    }\n  }\n\n  public deserializeIFileDescription(serializedForm: string): IFileDescription {\n    const obj: SerializedFormOfDescription = JSON.parse(serializedForm);\n    switch (obj.accessorType) {\n      case FileAccessorType.DOWNLOAD_UPLOAD:\n        return DownloadUploadFileDescription.deserialize(this, serializedForm);\n      case FileAccessorType.GITHUB:\n        return GithubFileDescription.deserialize(this, serializedForm);\n    }\n    return null;\n  }\n\n  public deserializeIFileConfiguration(serializedForm: string): IFileAccessConfiguration {\n    const obj: SerializedFormOfConfiguration = JSON.parse(serializedForm);\n    switch (obj.accessorType) {\n      case FileAccessorType.DOWNLOAD_UPLOAD:\n        return DownloadUploadConfiguration.deserialize(this, serializedForm);\n      case FileAccessorType.GITHUB:\n        return GithubConfiguration.deserialize(this, serializedForm);\n    }\n    return null;\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {TranslationFile} from './translation-file';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {BackendServiceAPI} from './backend-service-api';\r\nimport {TranslationProject, WorkflowType} from './translation-project';\r\nimport {combineLatest, Observable, of} from 'rxjs';\r\nimport {AutoTranslateDisabledReasonKey, AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {TranslationUnit} from './translation-unit';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {FileStatus, ICommitData, IFileAccessService, IFileStats} from '../file-accessors/common/i-file-access-service';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {IFile} from '../file-accessors/common/i-file';\r\nimport {DownloadUploadConfiguration} from '../file-accessors/download-upload/download-upload-configuration';\r\n\r\n@Injectable()\r\nexport class TinyTranslatorService {\r\n\r\n  /**\r\n   * List of projects for work.\r\n   */\r\n  private _projects: TranslationProject[];\r\n\r\n  /**\r\n   * The current project.\r\n   */\r\n  private _currentProject: TranslationProject;\r\n\r\n  constructor(private backendService: BackendServiceAPI,\r\n              private fileAccessServiceFactoryService: FileAccessServiceFactoryService,\r\n              private autoTranslateService: AutoTranslateServiceAPI) {\r\n    this._projects = this.backendService.projects();\r\n    const currentProjectId = this.backendService.currentProjectId();\r\n    if (currentProjectId) {\r\n      this._currentProject = this._projects.find((project) => project.id === currentProjectId);\r\n    }\r\n    const currentTransUnitId: string = this.backendService.currentTransUnitId();\r\n    if (currentTransUnitId && this.currentProject()) {\r\n      const transUnit = this.currentProject().translationFile.allTransUnits().find(tu => tu.id() === currentTransUnitId);\r\n      this.currentProject().translationFileView.selectTransUnit(transUnit);\r\n    }\r\n    this.autoTranslateService.setApiKey(this.backendService.autoTranslateApiKey());\r\n  }\r\n\r\n  /**\r\n   * Add a new project.\r\n   * @param project project\r\n   * @return list of errors found in file selection.\r\n   */\r\n  public addProject(project: TranslationProject): string[] {\r\n    this._projects.push(project);\r\n    this.backendService.store(project);\r\n    // TODO error handling\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Create a new project.\r\n   * (you must add it with addProject to use it).\r\n   * @param projectName projectName\r\n   * @param file selected xlf or xmb file to translate\r\n   * @param masterXmbFile in case of xmb the master file\r\n   * @param workflowType Type of workflow used in project (singleUser versus withReview).\r\n   * @return TranslationProject\r\n   */\r\n  public createProject(projectName: string,\r\n                       file: IFileDescription,\r\n                       masterXmbFile?: IFileDescription,\r\n                       workflowType?: WorkflowType): Observable<TranslationProject> {\r\n    if (isNullOrUndefined(file)) {\r\n      return of(new TranslationProject(projectName, null, workflowType));\r\n    }\r\n    const fileAccessService: IFileAccessService = this.fileAccessServiceFactoryService.getFileAccessService(file.configuration.type);\r\n    return combineLatest(fileAccessService.load(file), (masterXmbFile) ? fileAccessService.load(masterXmbFile) : of(null)).pipe(\r\n        map(contentArray => {\r\n          const loadedFile = contentArray[0];\r\n          const loadedMaster = contentArray[1];\r\n          return TranslationFile.fromFile(loadedFile as IFile, loadedMaster);\r\n        }),\r\n        map((translationFile: TranslationFile) => {\r\n          return new TranslationProject(projectName, translationFile, workflowType);\r\n        })\r\n    );\r\n  }\r\n\r\n  public setCurrentProject(project: TranslationProject) {\r\n    let id: string = null;\r\n    if (project) {\r\n      if (isNullOrUndefined(this._projects.find(p => p === project))) {\r\n        throw new Error('oops, selected project not in list');\r\n      }\r\n      id = project.id;\r\n    }\r\n    this._currentProject = project;\r\n    this.backendService.storeCurrentProjectId(id);\r\n  }\r\n\r\n  public currentProject(): TranslationProject {\r\n    return this._currentProject;\r\n  }\r\n\r\n  /**\r\n   * Select a TranslationUnit, if it is currently in the filtered list.\r\n   * If it is not, will do nothing.\r\n   * @param transUnit transUnit\r\n   */\r\n  public selectTransUnit(transUnit: TranslationUnit) {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      if (this.currentProject().translationFileView.selectTransUnit(transUnit)) {\r\n        this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to next unit.\r\n   */\r\n  public nextTransUnit() {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      const transUnit = this.currentProject().translationFileView.nextTransUnit();\r\n      this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to previous unit.\r\n   */\r\n  public prevTransUnit() {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      const transUnit = this.currentProject().translationFileView.prevTransUnit();\r\n      this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n    }\r\n  }\r\n\r\n  public projects(): TranslationProject[] {\r\n    return this._projects;\r\n  }\r\n\r\n  public commitChanges(project: TranslationProject) {\r\n    this.backendService.store(project);\r\n  }\r\n\r\n  public downloadProject(project: TranslationProject) {\r\n    this.fileAccessServiceFactoryService.getFileAccessService(FileAccessorType.DOWNLOAD_UPLOAD)\r\n        .save(project.translationFile.editedFile());\r\n    project.translationFile.markExported();\r\n    this.commitChanges(project);\r\n  }\r\n\r\n  public publishProject(\r\n    project: TranslationProject,\r\n    saveAs: IFileDescription|null,\r\n    commitData: ICommitData,\r\n    confirmModifiedCallback: () => Observable<boolean>,\r\n    confirmOverrideCallback: () => Observable<boolean>): Observable<boolean> {\r\n    let fileToSave = project.translationFile.editedFile();\r\n    const isSavePositionChanged = !!saveAs && !saveAs.equals(fileToSave.description);\r\n    if (isSavePositionChanged) {\r\n      fileToSave = fileToSave.copyForNewDescription(saveAs);\r\n    }\r\n    const fileAccessService =\r\n      this.fileAccessServiceFactoryService.getFileAccessService(fileToSave.description.configuration.type);\r\n    return fileAccessService.stats(fileToSave).pipe(\r\n      switchMap((stats: IFileStats) => {\r\n        if (isSavePositionChanged && stats.status !== FileStatus.EXISTS_NOT) {\r\n          return confirmOverrideCallback().pipe(\r\n            tap(doSave => {commitData.override = doSave; })\r\n          );\r\n        }\r\n        if (!isSavePositionChanged && stats.status === FileStatus.CHANGED) {\r\n          return confirmModifiedCallback().pipe(\r\n            tap(doSave => {commitData.override = doSave; })\r\n          );\r\n        }\r\n        if (!isSavePositionChanged) {\r\n          commitData.override = true;\r\n        }\r\n        return of(true);\r\n      }),\r\n      switchMap((doSave: boolean) => {\r\n        if (doSave) {\r\n          return fileAccessService.save(fileToSave, commitData)\r\n            .pipe(\r\n              tap(() => {\r\n                if (!saveAs) {\r\n                  project.translationFile.markExported();\r\n                  this.commitChanges(project);\r\n                }\r\n              }),\r\n              map(() => {\r\n                return true;\r\n              })\r\n            );\r\n        } else {\r\n          return of(false);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.backendService.deleteProject(project);\r\n    const index = this._projects.findIndex(p => p === project);\r\n    if (index >= 0) {\r\n      this._projects = this._projects.slice(0, index).concat(this._projects.slice(index + 1));\r\n      if (project === this.currentProject()) {\r\n        this.setCurrentProject(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set an API key for Google Translate.\r\n   * Will be stored in local storage.\r\n   * @param key key\r\n   */\r\n  public setAutoTranslateApiKey(key: string) {\r\n    this.autoTranslateService.setApiKey(key);\r\n    this.backendService.storeAutoTranslateApiKey(key);\r\n  }\r\n\r\n  /**\r\n   * Get the currently active Google Translate API key.\r\n   * @return api key\r\n   */\r\n  public autoTranslateApiKey(): string {\r\n    return this.autoTranslateService.apiKey();\r\n  }\r\n\r\n  /**\r\n   * Test, wether auto translation is possible for current project.\r\n   * @return Observable<boolean>\r\n   */\r\n  public canAutoTranslate(): Observable<boolean> {\r\n    if (isNullOrUndefined(this.currentProject()) || !this.currentProject().canTranslate()) {\r\n      return of(false);\r\n    }\r\n    return this.canAutoTranslateForLanguages(\r\n      this.currentProject().translationFile.sourceLanguage(),\r\n      this.currentProject().translationFile.targetLanguage());\r\n  }\r\n\r\n  /**\r\n   * Test, wether auto translation is possible for given languages.\r\n   * @param source Source Language\r\n   * @param target Target Language\r\n   * @return Observable<boolean>\r\n   */\r\n  public canAutoTranslateForLanguages(source: string, target: string): Observable<boolean> {\r\n    return this.autoTranslateService.canAutoTranslate(source, target);\r\n  }\r\n\r\n  /**\r\n   * Reason, why auto translation is not possible for current project.\r\n   * @return Observable<string>\r\n   */\r\n  public autoTranslateDisabledReason(): Observable<string> {\r\n    if (isNullOrUndefined(this.currentProject()) || !this.currentProject().canTranslate()) {\r\n      return of('no translatable project');\r\n    }\r\n    return this.autoTranslateDisabledReasonForLanguages(\r\n      this.currentProject().translationFile.sourceLanguage(),\r\n      this.currentProject().translationFile.targetLanguage());\r\n  }\r\n\r\n  /**\r\n   * Reason, why auto translation is not possible for given languages.\r\n   * @return Observable<string>\r\n   */\r\n  public autoTranslateDisabledReasonForLanguages(source: string, target: string): Observable<string> {\r\n    return this.autoTranslateService.disabledReason(source, target).pipe(\r\n        map((reason) => {\r\n          if (isNullOrUndefined(reason)) {\r\n            return null; // means not disabled, everything is ok!\r\n          }\r\n          switch (reason.reason) {\r\n            case AutoTranslateDisabledReasonKey.NO_PROVIDER:\r\n              return 'no provider';\r\n            case AutoTranslateDisabledReasonKey.NO_KEY:\r\n              return 'no key';\r\n            case AutoTranslateDisabledReasonKey.INVALID_KEY:\r\n              return 'invalid key';\r\n            case AutoTranslateDisabledReasonKey.SOURCE_LANG_NOT_SUPPORTED:\r\n              return 'source language not supported';\r\n            case AutoTranslateDisabledReasonKey.TARGET_LANG_NOT_SUPPORTED:\r\n              return 'target language not supported';\r\n            case AutoTranslateDisabledReasonKey.CONNECT_PROBLEM:\r\n              return 'connection problem: ' + reason.details;\r\n          }\r\n        }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Test call the auto translate service.\r\n   * @param message message\r\n   * @param source source\r\n   * @param target target\r\n   * @return translated string\r\n   */\r\n  public testAutoTranslate(message: string, source: string, target: string): Observable<string> {\r\n    return this.autoTranslateService.translate(message, source, target);\r\n  }\r\n\r\n  /**\r\n   * Auto translate all untranslated units.\r\n   */\r\n  public autoTranslate(): Observable<AutoTranslateSummaryReport>  {\r\n    if (this.currentProject() && this.currentProject().translationFile) {\r\n      return this.currentProject().translationFile.autoTranslateUsingService(this.autoTranslateService).pipe(\r\n          map((summary) => {\r\n            this.commitChanges(this.currentProject());\r\n            return summary;\r\n          }\r\n      ));\r\n    } else {\r\n      return of(new AutoTranslateSummaryReport());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all available accessor configurations from backend.\r\n   */\r\n  getFileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return this.backendService.fileAccessConfigurations().pipe(\r\n      map(configs => [DownloadUploadConfiguration.singleInstance(), ...configs])\r\n    );\r\n  }\r\n\r\n}\r\n","import {TranslationUnit} from './translation-unit';\r\nimport {TranslationFile} from './translation-file';\r\nimport {ITranslationUnitFilter} from './filters/i-translation-unit-filter';\r\nimport {TranslationUnitFilterUntranslated} from './filters/translation-unit-filter-untranslated';\r\n\r\n/**\r\n * A view on the current translation file.\r\n * It determines what trans units are currently visible (specified by the active filter).\r\n * It has a pointer to the current trans unit and allows scrolling through the trans units.\r\n * Created by roobm on 27.05.2017.\r\n */\r\n\r\nexport class TranslationFileView {\r\n\r\n  private _translationFile: TranslationFile;\r\n\r\n  private _filter: ITranslationUnitFilter;\r\n\r\n  /**\r\n   * The scroll list (either all or all unitranslated, depending on ScrollMode).\r\n   */\r\n  private _scrollableTransUnits: TranslationUnit[];\r\n\r\n  /**\r\n   * Pointer to current unit (points to _scrollableTransUnits).\r\n   */\r\n  private _currentTransUnitIndex: number = -1;\r\n\r\n  constructor(translationFile: TranslationFile) {\r\n    this._translationFile = translationFile;\r\n    this.setActiveFilter(new TranslationUnitFilterUntranslated());\r\n  }\r\n\r\n  public activeFilter(): ITranslationUnitFilter {\r\n    return this._filter;\r\n  }\r\n\r\n  /**\r\n   * Change active filter.\r\n   * @param {ITranslationUnitFilter} filter\r\n   */\r\n  public setActiveFilter(filter: ITranslationUnitFilter) {\r\n    this._filter = filter;\r\n    if (this._translationFile) {\r\n      const oldCurrent = (this._currentTransUnitIndex >= 0) ? this.currentTransUnit() : null;\r\n      this._scrollableTransUnits = this._translationFile.allTransUnits().filter((tu) => this._filter.filters(tu));\r\n      if (oldCurrent) {\r\n        this._currentTransUnitIndex = this._scrollableTransUnits.findIndex(tu => tu === oldCurrent);\r\n      }\r\n    } else {\r\n      this._scrollableTransUnits = [];\r\n      this._currentTransUnitIndex = -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculate the view by applying the active filter again.\r\n   */\r\n  public refresh(): void {\r\n    this.setActiveFilter(this.activeFilter());\r\n  }\r\n\r\n  public currentTransUnit(): TranslationUnit {\r\n    if (this._scrollableTransUnits.length === 0) {\r\n      return null;\r\n    }\r\n    if (this._currentTransUnitIndex < 0) {\r\n      this._currentTransUnitIndex = 0;\r\n    }\r\n    if (this._currentTransUnitIndex >= 0 && this._currentTransUnitIndex < this._scrollableTransUnits.length) {\r\n      return this._scrollableTransUnits[this._currentTransUnitIndex];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Select given TransUnit\r\n   * @param selectedTransUnit\r\n   * @return true, if selected, false if not in view.\r\n   */\r\n  public selectTransUnit(selectedTransUnit: TranslationUnit): boolean {\r\n    const index = this._scrollableTransUnits.findIndex(tu => tu === selectedTransUnit);\r\n    if (index >= 0) {\r\n      this._currentTransUnitIndex = index;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public nextTransUnit(): TranslationUnit {\r\n    if (this._currentTransUnitIndex >= 0) {\r\n      this._currentTransUnitIndex++;\r\n    }\r\n    return this.currentTransUnit();\r\n  }\r\n\r\n  public prevTransUnit(): TranslationUnit {\r\n    if (this._currentTransUnitIndex >= 1) {\r\n      this._currentTransUnitIndex--;\r\n    }\r\n    return this.currentTransUnit();\r\n  }\r\n\r\n  public hasNext(): boolean {\r\n    if (this._currentTransUnitIndex < 0) {\r\n      return this._scrollableTransUnits.length > 0;\r\n    } else {\r\n      return this._currentTransUnitIndex < (this._scrollableTransUnits.length - 1);\r\n    }\r\n  }\r\n\r\n  public hasPrev(): boolean {\r\n    if (this._currentTransUnitIndex < 0) {\r\n      return false;\r\n    } else {\r\n      return this._currentTransUnitIndex > 0;\r\n    }\r\n  }\r\n\r\n  public scrollabeTransUnits(): TranslationUnit[] {\r\n    return this._scrollableTransUnits;\r\n  }\r\n\r\n  public currentTransUnitIndex(): number {\r\n    return (this._currentTransUnitIndex < 0) ? 0 : this._currentTransUnitIndex + 1;\r\n  }\r\n\r\n  public scrollabeTransUnitsLength(): number {\r\n    return (this._scrollableTransUnits) ? this._scrollableTransUnits.length : 0;\r\n  }\r\n\r\n}\r\n","import {forkJoin, Observable, of} from 'rxjs';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {\r\n  FILETYPE_XTB,\r\n  FORMAT_XMB,\r\n  IICUMessage,\r\n  IICUMessageTranslation,\r\n  ITranslationMessagesFile,\r\n  ITransUnit,\r\n  TranslationMessagesFileFactory\r\n} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {TranslationUnit} from './translation-unit';\r\nimport {AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {AutoTranslateResult} from './auto-translate-result';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {DownloadUploadFileDescription} from '../file-accessors/download-upload/download-upload-file-description';\r\nimport {IFile} from '../file-accessors/common/i-file';\r\nimport {SerializationService} from './serialization.service';\r\nimport {GenericFile} from '../file-accessors/common/generic-file';\r\n\r\n/**\r\n * A single xlf or xmb file ready for work.\r\n * This is a wrapper around ITranslationMessagesFile.\r\n * It can read from uploaded files and adds errorhandling.\r\n * Created by roobm on 22.03.2017.\r\n */\r\n\r\n// internal representation of serialized form.\r\n// format used since v0.15\r\ninterface ISerializedTranslationFileV2 {\r\n  version: string;\r\n  file: string; // serialized\r\n  editedContent: string;\r\n  master?: string; // serialized\r\n  explicitSourceLanguage: string;\r\n}\r\n\r\n// elder internal representation of serialized form.\r\n// old format, used until v0.14\r\ninterface ISerializedTranslationFile {\r\n  name: string;\r\n  size: number;\r\n  fileContent: string;\r\n  editedContent: string;\r\n  masterContent: string;\r\n  masterName: string;\r\n  explicitSourceLanguage: string;\r\n}\r\n\r\nexport class TranslationFile {\r\n\r\n  private _file: IFile;\r\n\r\n  private _error: string = null;\r\n\r\n  private _master?: IFile;\r\n\r\n  private _translationFile: ITranslationMessagesFile;\r\n\r\n  private _explicitSourceLanguage: string;\r\n\r\n  /**\r\n   * all TransUnits read from file.\r\n   */\r\n  private _allTransUnits: TranslationUnit[];\r\n\r\n  /**\r\n   * Create a TranslationFile from the read file.\r\n   * @param loadedFile read in translation file (xliff, xmb)\r\n   * @param loadedMasterXmbFile optional master for xmb file\r\n   */\r\n  static fromFile(loadedFile: IFile, loadedMasterXmbFile?: IFile): TranslationFile {\r\n    const newInstance = new TranslationFile();\r\n    newInstance._file = loadedFile;\r\n    if (loadedFile.content) {\r\n      try {\r\n        let optionalMaster: any = null;\r\n        if (loadedMasterXmbFile && loadedMasterXmbFile.content) {\r\n          optionalMaster = {\r\n            path: loadedMasterXmbFile.description.name,\r\n            xmlContent: loadedMasterXmbFile.content,\r\n            encoding: null\r\n          };\r\n          newInstance._master = loadedMasterXmbFile;\r\n        }\r\n        newInstance._translationFile =\r\n            TranslationMessagesFileFactory.fromUnknownFormatFileContent(\r\n                loadedFile.content, loadedFile.description.name, 'utf-8', optionalMaster);\r\n        if (newInstance._translationFile.i18nFormat() === FORMAT_XMB) {\r\n          newInstance._error = 'xmb files cannot be translated, use xtb instead'; // TODO i18n\r\n        }\r\n        newInstance.readTransUnits();\r\n      } catch (err) {\r\n        newInstance._error = err.toString();\r\n      }\r\n    }\r\n    return newInstance;\r\n  }\r\n\r\n  /**\r\n   * Create a translation file from the serialization.\r\n   * @param serializationService serializationService\r\n   * @param serializationString serializationString\r\n   * @return TranslationFile\r\n   */\r\n  static deserialize(serializationService: SerializationService, serializationString: string): TranslationFile {\r\n    const deserializedObject = <ISerializedTranslationFile> JSON.parse(serializationString);\r\n    return TranslationFile.fromDeserializedObject(serializationService, deserializedObject);\r\n  }\r\n\r\n  static fromDeserializedObject(\r\n      serializationService: SerializationService,\r\n      deserializedJsonObject: ISerializedTranslationFile|ISerializedTranslationFileV2|any): TranslationFile {\r\n    let deserializedObject: ISerializedTranslationFileV2;\r\n    if (deserializedJsonObject.version) {\r\n      deserializedObject = deserializedJsonObject as ISerializedTranslationFileV2;\r\n    } else {\r\n      // migration from old format\r\n      const v1Object = deserializedJsonObject as ISerializedTranslationFile;\r\n      deserializedObject = {\r\n        version: '1',\r\n        file: new GenericFile(DownloadUploadFileDescription.deserialize(serializationService, null),\r\n          v1Object.name, v1Object.size, v1Object.fileContent)\r\n            .serialize(serializationService),\r\n        editedContent: v1Object.editedContent,\r\n        explicitSourceLanguage: v1Object.explicitSourceLanguage\r\n      };\r\n      if (v1Object.masterContent) {\r\n        deserializedObject.master =\r\n            new GenericFile(DownloadUploadFileDescription.deserialize(serializationService, null),\r\n              v1Object.masterName, 0, v1Object.masterContent)\r\n            .serialize(serializationService);\r\n      }\r\n    }\r\n    const newInstance = new TranslationFile();\r\n    newInstance._file = serializationService.deserializeIFile(deserializedObject.file);\r\n    newInstance._explicitSourceLanguage = deserializedObject.explicitSourceLanguage;\r\n    try {\r\n      const encoding = null; // unknown, lib can find it\r\n      let optionalMaster: {xmlContent: string, path: string, encoding: string} = null;\r\n      if (deserializedObject.master) {\r\n        newInstance._master = serializationService.deserializeIFile(deserializedObject.master);\r\n        optionalMaster = {\r\n          xmlContent: newInstance._master.content,\r\n          path: newInstance._master.description.name,\r\n          encoding: encoding\r\n        };\r\n      }\r\n      newInstance._translationFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(\r\n          deserializedObject.editedContent,\r\n          newInstance._file.description.name,\r\n          encoding,\r\n          optionalMaster);\r\n      newInstance.readTransUnits();\r\n    } catch (err) {\r\n      newInstance._error = err.toString();\r\n    }\r\n    return newInstance;\r\n  }\r\n\r\n  constructor() {\r\n    this._allTransUnits = [];\r\n  }\r\n\r\n  private readTransUnits() {\r\n    this._allTransUnits = [];\r\n    if (this._translationFile) {\r\n      this._translationFile.forEachTransUnit((tu: ITransUnit) => {\r\n        this._allTransUnits.push(new TranslationUnit(this, tu));\r\n      });\r\n    }\r\n  }\r\n\r\n  get name(): string {\r\n    return (this._file && this._file.description) ? this._file.description.name : '';\r\n  }\r\n\r\n  /**\r\n   * In case of xmb/xtb the name of the master xmb file.\r\n   * @return name of master file or null\r\n   */\r\n  get masterName(): string|null {\r\n    return (this._master) ? this._master.description.name : null;\r\n  }\r\n\r\n  get size(): number {\r\n    return this._file.size;\r\n  }\r\n\r\n  get numberOfTransUnits(): number {\r\n    return this._allTransUnits.length;\r\n  }\r\n\r\n  get numberOfUntranslatedTransUnits(): number {\r\n    return (this._translationFile) ? this._translationFile.numberOfUntranslatedTransUnits() : 0;\r\n  }\r\n\r\n  public fileDescription(): IFileDescription {\r\n    return this._file.description;\r\n  }\r\n\r\n  public editedFile(): IFile {\r\n    const content = this.editedContent();\r\n    return this._file.copyWithNewContent(content);\r\n  }\r\n\r\n  /**\r\n   * Type of file.\r\n   * Currently 'xlf', 'xlf2', 'xmb' or or 'xtb'\r\n   * @return type of file\r\n   */\r\n  public fileType(): string {\r\n    if (this._translationFile) {\r\n      return this._translationFile.fileType();\r\n    } else {\r\n      // try to get it by name\r\n      if (this.name && this.name.endsWith('xtb')) {\r\n        return FILETYPE_XTB;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Source language as stored in translation file.\r\n   * @return source language\r\n   */\r\n  public sourceLanguageFromFile(): string {\r\n    return this._translationFile ? this._translationFile.sourceLanguage() : 'unknown';\r\n  }\r\n\r\n  /**\r\n   * Source language from file or explicitly set.\r\n   * @return source language\r\n   */\r\n  public sourceLanguage(): string {\r\n    if (this._translationFile) {\r\n      const srcLang = this._translationFile.sourceLanguage();\r\n      if (isNullOrUndefined(srcLang)) {\r\n        return this._explicitSourceLanguage ? this._explicitSourceLanguage : '';\r\n      } else {\r\n        return srcLang;\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Explicitly set source language.\r\n   * Only used, when file format does not store this (xmb case).\r\n   * @param srcLang source language\r\n   */\r\n  public setSourceLanguage(srcLang: string) {\r\n    this._explicitSourceLanguage = srcLang;\r\n  }\r\n\r\n  public targetLanguage(): string {\r\n    return this._translationFile ? this._translationFile.targetLanguage() : '';\r\n  }\r\n\r\n  public percentageUntranslated(): number {\r\n    if (this.numberOfTransUnits === 0) {\r\n      return 100;\r\n    }\r\n    return 100 * this.numberOfUntranslatedTransUnits / this.numberOfTransUnits;\r\n  }\r\n\r\n  public percentageTranslated(): number {\r\n    return 100 - this.percentageUntranslated();\r\n  }\r\n\r\n  public hasErrors(): boolean {\r\n    return !isNullOrUndefined(this._error);\r\n  }\r\n\r\n  public canTranslate(): boolean {\r\n    return !this.hasErrors() && this.numberOfTransUnits > 0;\r\n  }\r\n\r\n  get error(): string {\r\n    return this._error;\r\n  }\r\n\r\n  /**\r\n   * Show warnings detected in file.\r\n   * @return array of warnings\r\n   */\r\n  public warnings(): string[] {\r\n    return this._translationFile ? this._translationFile.warnings() : [];\r\n  }\r\n\r\n  /**\r\n   * Check, wether file is changed.\r\n   * @return wether file is changed.\r\n   */\r\n  public isDirty(): boolean {\r\n    return this._translationFile && this._file.content !== this.editedContent();\r\n  }\r\n\r\n  /**\r\n   * return content with all changes.\r\n   */\r\n  public editedContent(): string {\r\n    if (this._translationFile) {\r\n      return this._translationFile.editedContent();\r\n    } else {\r\n      this._error = 'cannot save, no valid file';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark file as \"exported\".\r\n   * This means, that the file was downloaded.\r\n   * So the new file content is the edited one.\r\n   */\r\n  public markExported() {\r\n    this._file.content = this.editedContent();\r\n  }\r\n\r\n  /**\r\n   * Return all trans units found in file.\r\n   * @return all trans units found in file\r\n   */\r\n  public allTransUnits(): TranslationUnit[] {\r\n    return this._allTransUnits;\r\n  }\r\n\r\n  /**\r\n   * Return a string representation of translation file content.\r\n   * This will be stored in BackendService.\r\n   */\r\n  public serialize(serializationService: SerializationService): string {\r\n    const serializedObject: ISerializedTranslationFileV2 = {\r\n      version: '2',\r\n      file: this._file.serialize(serializationService),\r\n      editedContent: this.editedContent(),\r\n      master: (this._master) ? this._master.serialize(serializationService) : null,\r\n      explicitSourceLanguage: this._explicitSourceLanguage\r\n    };\r\n    return JSON.stringify(serializedObject);\r\n  }\r\n\r\n  /**\r\n   * Auto translate this file via Google Translate.\r\n   * Translates all untranslated units.\r\n   * @param autoTranslateService the service for the raw text translation via Google Translate\r\n   * @return a summary of the run (how many units are handled, how many sucessful, errors, ..)\r\n   */\r\n  public autoTranslateUsingService(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport> {\r\n    return forkJoin([\r\n      this.doAutoTranslateNonICUMessages(autoTranslateService),\r\n      ...this.doAutoTranslateICUMessages(autoTranslateService)])\r\n      .pipe(\r\n          map((summaries: AutoTranslateSummaryReport[]) => {\r\n            const summary = summaries[0];\r\n            for (let i = 1; i < summaries.length; i++) {\r\n              summary.merge(summaries[i]);\r\n            }\r\n            return summary;\r\n          }\r\n      ));\r\n  }\r\n\r\n  /**\r\n   * Auto translate this file via Google Translate.\r\n   * Translates all untranslated units.\r\n   * @param autoTranslateService the service for the raw text translation via Google Translate\r\n   * @return a summary of the run (how many units are handled, how many sucessful, errors, ..)\r\n   */\r\n  private doAutoTranslateNonICUMessages(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport> {\r\n    // collect all units, that should be auto translated\r\n    const allUntranslated: TranslationUnit[] = this.allTransUnits().filter((tu) => !tu.isTranslated());\r\n    const allTranslatable = allUntranslated.filter((tu) => !tu.sourceContentNormalized().isICUMessage());\r\n    const allMessages: string[] = allTranslatable.map((tu) => {\r\n      return tu.sourceContentNormalized().dislayText(true);\r\n    });\r\n    return autoTranslateService.translateMultipleStrings(allMessages, this.sourceLanguage(), this.targetLanguage())\r\n      .pipe(\r\n          map((translations: string[]) => {\r\n            const summary = new AutoTranslateSummaryReport();\r\n            for (let i = 0; i < translations.length; i++) {\r\n              const tu = allTranslatable[i];\r\n              const translationText = translations[i];\r\n              const result = tu.autoTranslateNonICUUnit(translationText);\r\n              summary.addSingleResult(result);\r\n            }\r\n            return summary;\r\n          }\r\n      ));\r\n  }\r\n\r\n  private doAutoTranslateICUMessages(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport>[] {\r\n    // collect all units, that should be auto translated\r\n    const allUntranslated: TranslationUnit[] = this.allTransUnits().filter((tu) => !tu.isTranslated());\r\n    const allTranslatableICU = allUntranslated.filter((tu) => !isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n    return allTranslatableICU.map((tu) => {\r\n      return this.doAutoTranslateICUMessage(autoTranslateService, tu);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Translate single ICU Messages.\r\n   * @param autoTranslateService autoTranslateService\r\n   * @param tu transunit to translate (must contain ICU Message)\r\n   * @return summaryReport\r\n   */\r\n  private doAutoTranslateICUMessage(\r\n      autoTranslateService: AutoTranslateServiceAPI,\r\n      tu: TranslationUnit): Observable<AutoTranslateSummaryReport> {\r\n    const icuMessage: IICUMessage = tu.sourceContentNormalized().getICUMessage();\r\n    const categories = icuMessage.getCategories();\r\n    // check for nested ICUs, we do not support that\r\n    if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n      const summary = new AutoTranslateSummaryReport();\r\n      summary.addSingleResult(AutoTranslateResult.Ignored(tu, 'nested icu message'));\r\n      return of(summary);\r\n    }\r\n    const allMessages: string[] = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n    return autoTranslateService.translateMultipleStrings(allMessages, this.sourceLanguage(), this.targetLanguage())\r\n      .pipe(\r\n          map((translations: string[]) => {\r\n            const summary = new AutoTranslateSummaryReport();\r\n            const icuTranslation: IICUMessageTranslation = {};\r\n            for (let i = 0; i < translations.length; i++) {\r\n              icuTranslation[categories[i].getCategory()] = translations[i];\r\n            }\r\n            const result = tu.autoTranslateICUUnit(icuTranslation);\r\n            summary.addSingleResult(result);\r\n            return summary;\r\n          }\r\n        ), catchError((err) => {\r\n            const failSummary = new AutoTranslateSummaryReport();\r\n            failSummary.addSingleResult(AutoTranslateResult.Failed(tu, err.message));\r\n            return of(failSummary);\r\n          }\r\n      ));\r\n  }\r\n\r\n}\r\n","import {TranslationFile} from './translation-file';\r\nimport {TranslationFileView} from './translation-file-view';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {SerializationService} from './serialization.service';\r\n\r\n/**\r\n * Workflow type determines, how you work with the tool.\r\n * There are 2 modes:\r\n * SINGLE_USER: You are developer and translator in one person.\r\n * You just translate the messages and, when done, reimport it into your application.\r\n * All translations are marked as state \"final\" directly after input.\r\n * WITH_REVIEW: Developer and translator are distinct people.\r\n * All translation are first marked as \"translated\".\r\n * When done, the translator gives it back to the developer, who reviews all marked as \"translated\".\r\n * He then can mark them all as \"final\" or give them back to the translator.\r\n */\r\nexport enum WorkflowType {\r\n  SINGLE_USER,\r\n  WITH_REVIEW\r\n}\r\n\r\n/**\r\n * The role the user has, when working with the tool.\r\n * As a reviewer you can check the translations and mark them as \"final\" at the end.\r\n * As a translator you can translate and give it back to the reviever.\r\n */\r\nexport enum UserRole {\r\n  REVIEWER,\r\n  TRANSLATOR\r\n}\r\n\r\n/**\r\n * A Translation Project.\r\n * A name and a translation file.\r\n */\r\nexport class TranslationProject {\r\n\r\n  public id: string;\r\n\r\n  private _view: TranslationFileView;\r\n\r\n  private _userRole: UserRole;\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  /**\r\n   * Create a project from the serialization.\r\n   * @param serializationString string returned from serialize()\r\n   * @return deserialized project\r\n   */\r\n  static deserialize(serializationService: SerializationService, serializationString: string): TranslationProject {\r\n    const deserializedObject: any = JSON.parse(serializationString);\r\n    const project = new TranslationProject(\r\n      deserializedObject.name,\r\n      TranslationFile.deserialize(serializationService, deserializedObject.translationFile),\r\n      deserializedObject.workflowType);\r\n    project.id = deserializedObject.id;\r\n    project.setUserRole(deserializedObject.userRole);\r\n    return project;\r\n  }\r\n\r\n  constructor(private _name: string, private _translationFile: TranslationFile, private _workflowType?: WorkflowType) {\r\n    if (isNullOrUndefined(this._workflowType)) {\r\n      this._workflowType = WorkflowType.SINGLE_USER;\r\n    }\r\n    this._view = new TranslationFileView(_translationFile);\r\n  }\r\n\r\n  /**\r\n   * Return a string represenation of project state.\r\n   * This will be stored in BackendService.\r\n   */\r\n  public serialize(serializationService: SerializationService): string {\r\n    const serializedObject = {\r\n      id: this.id,\r\n      name: this.name,\r\n      translationFile: this.translationFile.serialize(serializationService),\r\n      workflowType: this.workflowType,\r\n      userRole: this.userRole\r\n    };\r\n    return JSON.stringify(serializedObject);\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public setName(name: string) {\r\n    this._name = name;\r\n  }\r\n\r\n  get translationFile(): TranslationFile {\r\n    return this._translationFile;\r\n  }\r\n\r\n  get translationFileView(): TranslationFileView {\r\n    return this._view;\r\n  }\r\n\r\n  get workflowType(): WorkflowType {\r\n    return this._workflowType ? this._workflowType : WorkflowType.SINGLE_USER;\r\n  }\r\n\r\n  public setWorkflowType(type: WorkflowType) {\r\n    this._workflowType = type;\r\n  }\r\n\r\n  get userRole(): UserRole {\r\n    return isNullOrUndefined(this._userRole) ? UserRole.TRANSLATOR : this._userRole;\r\n  }\r\n\r\n  public setUserRole(role: UserRole) {\r\n    this._userRole = role;\r\n  }\r\n\r\n  public isReviewModeActive(): boolean {\r\n    return this._userRole === UserRole.REVIEWER;\r\n  }\r\n\r\n  public hasErrors(): boolean {\r\n    return this.translationFile && this.translationFile.hasErrors();\r\n  }\r\n\r\n  public canTranslate(): boolean {\r\n    return this.translationFile && this.translationFile.canTranslate();\r\n  }\r\n\r\n  /**\r\n   * Check, wether a publish is possible.\r\n   */\r\n  public canPublish(): boolean {\r\n    return this.translationFile && this.translationFile.fileDescription().configuration.canPublish();\r\n  }\r\n\r\n  /**\r\n   * Return report about last executed Autotranslate run.\r\n   * @return report about last executed Autotranslate run.\r\n   */\r\n  public autoTranslateSummaryReport(): AutoTranslateSummaryReport {\r\n    return this._autoTranslateSummaryReport;\r\n  }\r\n\r\n  /**\r\n   * Store summary of last executed AutoTranslate run.\r\n   * @param summary summary of last executed AutoTranslate run\r\n   */\r\n  public setAutoTranslateSummaryReport(summary: AutoTranslateSummaryReport) {\r\n    this._autoTranslateSummaryReport = summary;\r\n  }\r\n}\r\n","import {ITransUnit, INormalizedMessage, STATE_NEW, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {TranslationFile} from './translation-file';\r\nimport {NormalizedMessage} from './normalized-message';\r\nimport {format} from 'util';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateResult} from './auto-translate-result';\r\n\r\n/**\r\n * A wrapper around ITransUnit.\r\n * Adds some support for easier GUI handling.\r\n * Created by martin on 24.03.2017.\r\n */\r\n\r\nexport class TranslationUnit {\r\n\r\n  private _isDirty: boolean;\r\n  private _normalizedSourceContent: NormalizedMessage;\r\n  private _normalizedTargetContent: NormalizedMessage;\r\n\r\n  constructor(private _translationFile: TranslationFile, private _transUnit: ITransUnit) {\r\n    this._isDirty = false;\r\n  }\r\n\r\n  public translationFile(): TranslationFile {\r\n    return this._translationFile;\r\n  }\r\n\r\n  public id(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.id;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceContent(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.sourceContent();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceContentNormalized(): NormalizedMessage {\r\n    if (this._transUnit) {\r\n      if (!this._normalizedSourceContent) {\r\n        const original = this._transUnit.sourceContent();\r\n        let normalizedMessage: INormalizedMessage = null;\r\n        let parseError: string = null;\r\n        try {\r\n          normalizedMessage = this._transUnit.sourceContentNormalized();\r\n        } catch (error) {\r\n          parseError = error.message;\r\n        }\r\n        this._normalizedSourceContent = new NormalizedMessage(original, normalizedMessage, parseError, normalizedMessage);\r\n      }\r\n      return this._normalizedSourceContent;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetContent(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.targetContent();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetContentNormalized(): NormalizedMessage {\r\n    if (this._transUnit) {\r\n      if (!this._normalizedTargetContent) {\r\n        const original = this._transUnit.targetContent();\r\n        let normalizedMessage: INormalizedMessage = null;\r\n        let parseError: string = null;\r\n        try {\r\n          normalizedMessage = this._transUnit.targetContentNormalized();\r\n        } catch (error) {\r\n          parseError = error.message;\r\n        }\r\n        this._normalizedTargetContent = new NormalizedMessage(\r\n            original, normalizedMessage, parseError, this._transUnit.sourceContentNormalized());\r\n      }\r\n      return this._normalizedTargetContent;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public description(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.description();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public meaning(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.meaning();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceReferences(): {sourcefile: string, linenumber: number}[] {\r\n    if (this._transUnit) {\r\n      return this._transUnit.sourceReferences();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetState(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.targetState();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public setTargetState(newState: string) {\r\n    if (this._transUnit) {\r\n      this._transUnit.setTargetState(newState);\r\n    }\r\n  }\r\n\r\n  public isDirty(): boolean {\r\n    return this._isDirty;\r\n  }\r\n\r\n  public isTranslated(): boolean {\r\n    return this.targetState() && this.targetState() !== STATE_NEW;\r\n  }\r\n\r\n  public translate(newTranslation: NormalizedMessage) {\r\n    if (this._transUnit) {\r\n      this._transUnit.translate(newTranslation.nativeString());\r\n      this._isDirty = true;\r\n      this._normalizedSourceContent = null;\r\n      this._normalizedTargetContent = null;\r\n    }\r\n  }\r\n\r\n  public autoTranslateNonICUUnit(translatedMessage: string): AutoTranslateResult {\r\n    return this.autoTranslate(this.sourceContentNormalized().translate(translatedMessage, true));\r\n  }\r\n\r\n  public autoTranslateICUUnit(translation: IICUMessageTranslation): AutoTranslateResult {\r\n    return this.autoTranslate(this.sourceContentNormalized().translateICUMessage(translation));\r\n  }\r\n\r\n  /**\r\n   * Try to use the given generated message as a translation.\r\n   * If there are any errors or warnings, translation will not take place.\r\n   * @param translatedMessage translatedMessage\r\n   * @return wether it was successful or not.\r\n   */\r\n  public autoTranslate(translatedMessage: NormalizedMessage): AutoTranslateResult {\r\n    const errors = translatedMessage.validate(true);\r\n    const warnings = translatedMessage.validateWarnings(true);\r\n    if (!isNullOrUndefined(errors)) {\r\n      return AutoTranslateResult.Failed(this, format('errors detected, not translated: %s', JSON.stringify(errors)));\r\n    } else if (!isNullOrUndefined(warnings)) {\r\n      return AutoTranslateResult.Failed(this, format('warnings detected, not translated: %s', JSON.stringify(warnings)));\r\n    } else {\r\n      this.translate(translatedMessage);\r\n      return AutoTranslateResult.Success(this);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n  min-width: 80%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbm9ybWFsaXplZC1tZXNzYWdlLWlucHV0L25vcm1hbGl6ZWQtbWVzc2FnZS1pbnB1dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL25vcm1hbGl6ZWQtbWVzc2FnZS1pbnB1dC9ub3JtYWxpemVkLW1lc3NhZ2UtaW5wdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICBtaW4td2lkdGg6IDgwJTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div id=\\\"container\\\">\\r\\n  <ng-container *ngIf=\\\"readonly\\\">\\r\\n    <ng-container *ngIf=\\\"!isICUMessage() || !normalized\\\">\\r\\n      <p>{{textToDisplay()}}</p>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isICUMessage() && normalized\\\">\\r\\n      <div *ngFor=\\\"let category of getICUMessageCategories(); index as i\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\r\\n        <p>{{category.getCategory()}}</p>\\r\\n        <p>{{category.getMessageNormalized().asDisplayString()}}</p>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n  <form *ngIf=\\\"!readonly\\\" [formGroup]=\\\"form\\\" fxLayout=\\\"column\\\">\\r\\n    <ng-container *ngIf=\\\"!isICUMessage() || !normalized\\\">\\r\\n      <mat-form-field fxFlex=\\\"noshrink\\\">\\r\\n        <textarea matInput type=\\\"text\\\"\\r\\n          formControlName=\\\"displayedText\\\"\\r\\n          matTextareaAutosize\\r\\n          [matAutosizeMinRows]=\\\"2\\\"\\r\\n          (keyup.control.enter)=\\\"accept.next()\\\">\\r\\n        </textarea>\\r\\n     </mat-form-field>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isICUMessage() && normalized\\\">\\r\\n      <div fxFlex=\\\"noshrink\\\" *ngFor=\\\"let category of getICUMessageCategories(); index as i\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" formArrayName=\\\"icuMessages\\\">\\r\\n        <p>{{category.getCategory()}}</p>\\r\\n        <mat-form-field fxFlexFill>\\r\\n          <input matInput type=\\\"text\\\" [formControlName]=\\\"i\\\" (keyup.control.enter)=\\\"accept.next()\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {NormalizedMessage} from '../model/normalized-message';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {IICUMessageCategory, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime} from 'rxjs/operators';\r\n/**\r\n * A component used as an input field for normalized message.\r\n */\r\n@Component({\r\n  selector: 'app-normalized-message-input',\r\n  templateUrl: './normalized-message-input.component.html',\r\n  styleUrls: ['./normalized-message-input.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NormalizedMessageInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NormalizedMessageInputComponent implements OnInit, OnChanges, ControlValueAccessor {\r\n\r\n  /**\r\n   * The message to be edited or shown.\r\n   */\r\n  @Input() message: NormalizedMessage;\r\n\r\n  /**\r\n   * Flag, wether the message should be shown in normalized form.\r\n   */\r\n  @Input() normalized: boolean;\r\n\r\n  /**\r\n   * Flag, wether message is read only.\r\n   * Then, there is no input field, but only the text is shown.\r\n   */\r\n  @Input() readonly: boolean;\r\n\r\n  /**\r\n   * Emitted when user presses Ctrl+Enter\r\n   */\r\n  @Output() accept = new EventEmitter<void>();\r\n\r\n  editedMessage: NormalizedMessage;\r\n  form: FormGroup;\r\n  subscription: Subscription;\r\n  disabled = false;\r\n\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!isNullOrUndefined(changes['message'])) {\r\n      this.editedMessage = this.message.copy();\r\n    }\r\n    const isChanged = !isNullOrUndefined(changes['message']) || !isNullOrUndefined(changes['normalized']);\r\n    if (isChanged) {\r\n      this.initForm();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.form = this.formBuilder.group({\r\n      displayedText: [{value: this.textToDisplay(), disabled: this.disabled}],\r\n      icuMessages: this.formBuilder.array(this.initIcuMessagesFormArray())\r\n    });\r\n    this.subscription = this.form.valueChanges.pipe(\r\n        debounceTime(200)\r\n    ).subscribe(formValue => {\r\n        this.valueChanged(formValue);\r\n    });\r\n  }\r\n\r\n  private initIcuMessagesFormArray() {\r\n    if (!this.isICUMessage()) {\r\n      return [];\r\n    }\r\n    return this.getICUMessageCategories().map((category) => {\r\n      return [category.getMessageNormalized().asDisplayString()];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Write a new value to the element.\r\n   */\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a change event.\r\n   */\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a touch event.\r\n   */\r\n  registerOnTouched(fn: any): void {\r\n\r\n  }\r\n\r\n  /**\r\n   * This function is called when the control status changes to or from \"DISABLED\".\r\n   * Depending on the value, it will enable or disable the appropriate DOM element.\r\n   * @param isDisabled isDisabled\r\n   */\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.form = this.formBuilder.group({displayedText: [{value: this.textToDisplay(), disabled: this.disabled}]});\r\n  }\r\n\r\n  /**\r\n   * The text to be shown in the readonly mode.\r\n   * @return text to be shown in readonly mode\r\n   */\r\n  textToDisplay(): string {\r\n    if (this.editedMessage) {\r\n      return this.editedMessage.dislayText(this.normalized);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is an ICU message.\r\n   */\r\n  isICUMessage(): boolean {\r\n    if (this.message) {\r\n      return this.message.isICUMessage();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get list of categories if it is an ICU Message.\r\n   * @return categories or empty array.\r\n   */\r\n  getICUMessageCategories(): IICUMessageCategory[] {\r\n    if (isNullOrUndefined(this.message)) {\r\n      return [];\r\n    }\r\n    const icuMessage = this.message.getICUMessage();\r\n    if (isNullOrUndefined(icuMessage)) {\r\n      return [];\r\n    }\r\n    return icuMessage.getCategories();\r\n  }\r\n\r\n  private valueChanged(value: any) {\r\n    if (!this.readonly && this.message) {\r\n      if (!this.isICUMessage() || !this.normalized) {\r\n        const textEntered = value.displayedText;\r\n        this.editedMessage = this.message.translate(textEntered, this.normalized);\r\n      } else {\r\n        const categories = this.getICUMessageCategories();\r\n        const valuesEntered = value.icuMessages;\r\n        const translation: IICUMessageTranslation = {};\r\n        for (let i = 0; i < value.icuMessages.length; i++) {\r\n          translation[categories[i].getCategory()] = valuesEntered[i];\r\n        }\r\n        this.editedMessage = this.message.translateICUMessage(translation);\r\n      }\r\n    } else {\r\n    }\r\n    this.propagateChange(this.editedMessage);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QtZWRpdG9yL3Byb2plY3QtZWRpdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" style=\\\"min-width: calc(100vw-16px);\\\"><!-- 16px = 2xmargin of container page -->\\r\\n  <h1 i18n>Edit project</h1>\\r\\n  <form id=\\\"editProjectForm\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"form\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <mat-form-field fxFlex=\\\"80%\\\">\\r\\n        <input type=\\\"text\\\" placeholder=\\\"Project name\\\" i18n-placeholder matInput formControlName=\\\"projectName\\\" name=\\\"projectName\\\"/>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <p><b i18n>Selected translation file:</b></p>\\r\\n    <app-translation-file-status\\r\\n                                 [translationFileView]=\\\"project?.translationFileView\\\"\\r\\n                                 [translationFile]=\\\"project?.translationFile\\\">\\r\\n    </app-translation-file-status>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <mat-form-field *ngIf=\\\"hasExplicitSourceLanguage()\\\" fxFlex=\\\"50%\\\"\\r\\n                          matTooltip=\\\"Your selected file contains no information about the language used. You can set it here explicitly.\\\" i18n-matTooltip>\\r\\n        <input placeholder=\\\"Explicitly set source language\\\" i18n-placeholder matInput formControlName=\\\"sourceLanguage\\\" name=\\\"sourceLanguage\\\"/>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <div fxFlex=\\\"50%\\\">\\r\\n        <p i18n>Workflow type you are using</p>\\r\\n        <mat-radio-group formControlName=\\\"workflowType\\\" name=\\\"workflowType\\\">\\r\\n          <mat-radio-button value=\\\"singleuser\\\" i18n>Single User</mat-radio-button>\\r\\n          <mat-radio-button value=\\\"withReview\\\" i18n>Translator/Reviewer</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div *ngIf=\\\"isWorkflowWithReview()\\\">\\r\\n          <p i18n>Your role</p>\\r\\n          <mat-radio-group name=\\\"userRole\\\" formControlName=\\\"userRole\\\">\\r\\n            <mat-radio-button value=\\\"translator\\\" i18n>Translator</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"reviewer\\\" i18n>Reviewer</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button fxFlexAlign=\\\"center\\\"\\r\\n            mat-raised-button\\r\\n            color=\\\"primary\\\"\\r\\n            (click)=\\\"editProject()\\\"\\r\\n            matTooltip=\\\"commit changes and continue working\\\" i18n-matTooltip>\\r\\n      <mat-icon>edit</mat-icon>&nbsp;<span i18n>Save project changes</span>\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject, UserRole, WorkflowType} from '../model/translation-project';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {isNullOrUndefined} from '../common/util';\r\n\r\n/**\r\n * Component to edit some properties of the current project.\r\n * (name, workflowType).-\r\n */\r\n@Component({\r\n  selector: 'app-project-editor',\r\n  templateUrl: './project-editor.component.html',\r\n  styleUrls: ['./project-editor.component.css']\r\n})\r\nexport class ProjectEditorComponent implements OnInit {\r\n\r\n  @Output() onEditProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  @Input() project: TranslationProject;\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      if (this.project) {\r\n        this.form = this.formBuilder.group({\r\n          projectName: [this.project.name],\r\n          workflowType: [this.workflowTypeToString(this.project.workflowType)],\r\n          userRole: [this.userRoleToString(this.project.userRole)],\r\n          sourceLanguage: [this.project.translationFile.sourceLanguage()],\r\n        });\r\n      } else {\r\n        this.form = this.formBuilder.group({\r\n          projectName: [''],\r\n          workflowType: [this.workflowTypeToString(WorkflowType.SINGLE_USER)],\r\n          userRole: [this.userRoleToString(UserRole.TRANSLATOR)],\r\n          sourceLanguage: [null],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  toWorkflowType(type: string): WorkflowType {\r\n    switch (type) {\r\n      case 'singleuser':\r\n        return WorkflowType.SINGLE_USER;\r\n      case 'withReview':\r\n        return WorkflowType.WITH_REVIEW;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  workflowTypeToString(type: WorkflowType): string {\r\n    switch (type) {\r\n      case WorkflowType.SINGLE_USER:\r\n        return 'singleuser';\r\n      case WorkflowType.WITH_REVIEW:\r\n        return 'withReview';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param type\r\n   * @return {any}\r\n   */\r\n  toUserRole(role: string): UserRole {\r\n    switch (role) {\r\n      case 'translator':\r\n        return UserRole.TRANSLATOR;\r\n      case 'reviewer':\r\n        return UserRole.REVIEWER;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  userRoleToString(role: UserRole): string {\r\n    switch (role) {\r\n      case UserRole.TRANSLATOR:\r\n        return 'translator';\r\n      case UserRole.REVIEWER:\r\n        return 'reviewer';\r\n    }\r\n  }\r\n\r\n  editProject() {\r\n    this.project.setName(this.form.value.projectName);\r\n    this.project.setWorkflowType(this.toWorkflowType(this.form.value.workflowType));\r\n    this.project.setUserRole(this.toUserRole(this.form.value.userRole));\r\n    this.project.translationFile.setSourceLanguage(this.form.value.sourceLanguage);\r\n    this.onEditProject.emit(this.project);\r\n  }\r\n\r\n  selectedFilesFormatted(): string {\r\n    if (this.project && this.project.translationFile) {\r\n      return this.project.translationFile.name;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.toWorkflowType(this.form.value.workflowType) === WorkflowType.WITH_REVIEW;\r\n  }\r\n\r\n  hasExplicitSourceLanguage(): boolean {\r\n    return this.project &&\r\n      this.project.translationFile &&\r\n      !this.project.translationFile.hasErrors() &&\r\n      isNullOrUndefined(this.project.translationFile.sourceLanguageFromFile());\r\n  }\r\n\r\n}\r\n","module.exports = \"app-project {\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdC1saXN0L3Byb2plY3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztDQUNmIiwiZmlsZSI6InNyYy9hcHAvcHJvamVjdC1saXN0L3Byb2plY3QtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYXBwLXByb2plY3Qge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div fxLayout=\\\"row wrap\\\">\\r\\n  <app-project *ngFor=\\\"let project of projects\\\" [project]=\\\"project\\\" (onSave)=\\\"saveProject($event)\\\" (onStartWork)=\\\"startWork($event)\\\" (onDeleteProject)=\\\"deleteProject($event)\\\"></app-project>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.css']\r\n})\r\nexport class ProjectListComponent implements OnInit {\r\n\r\n  @Input() projects: TranslationProject[];\r\n\r\n  @Output() onStartProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onDeleteProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onSaveProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public startWork(project: TranslationProject) {\r\n    this.onStartProject.emit(project);\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.onDeleteProject.emit(project);\r\n  }\r\n\r\n  public saveProject(project: TranslationProject) {\r\n    this.onSaveProject.emit(project);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" style=\\\"min-width: calc(100vw-16px);\\\"><!-- 16px = 2xmargin of container page -->\\r\\n  <h1 i18n>Open a new project</h1>\\r\\n  <form id=\\\"createProjectForm\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"form\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <mat-form-field fxFlex=\\\"90%\\\">\\r\\n        <input type=\\\"text\\\" placeholder=\\\"Project name\\\" i18n-placeholder matInput formControlName=\\\"projectName\\\" name=\\\"projectName\\\"/>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <mat-select placeholder=\\\"load translation file from..\\\" i18n-placeholder formControlName=\\\"selectedFileAccessConfigurationIndex\\\" name=\\\"selectedFileAccessConfigurationIndex\\\">\\r\\n        <mat-option *ngFor=\\\"let accessor of fileAccessConfigurations() | async; let i = index\\\" [value]=\\\"i\\\" i18n>{{accessor.type}} {{accessor.shortLabel()}}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <ng-container *ngIf=\\\"selectedFileAccessConfiguration()\\\" [ngSwitch]=\\\"selectedFileAccessConfiguration().type\\\">\\r\\n      <app-translation-file-upload *ngSwitchCase=\\\"'Browser Upload and Download'\\\"\\r\\n                                   [createdProject]=\\\"createdProject\\\"\\r\\n                                   [configuration]=\\\"selectedFileAccessConfiguration()\\\"\\r\\n                                   (fileSelected)=\\\"fileSelectionChange($event)\\\"\\r\\n                                   (masterXmlFileSelected)=\\\"masterXmlFileSelectionChange($event)\\\">\\r\\n      </app-translation-file-upload>\\r\\n      <app-translation-file-from-github *ngSwitchCase=\\\"'Github'\\\"\\r\\n                                        [createdProject]=\\\"createdProject\\\"\\r\\n                                        [configuration]=\\\"selectedFileAccessConfiguration()\\\"\\r\\n                                        (fileSelected)=\\\"fileSelectionChange($event)\\\"\\r\\n                                        (masterXmlFileSelected)=\\\"masterXmlFileSelectionChange($event)\\\">\\r\\n      </app-translation-file-from-github>\\r\\n    </ng-container>\\r\\n    <p><b i18n>Selected translation file:</b></p>\\r\\n    <app-translation-file-status *ngIf=\\\"isFileSelected()\\\"\\r\\n                                 [translationFileView]=\\\"createdProject?.translationFileView\\\"\\r\\n                                 [translationFile]=\\\"createdProject?.translationFile\\\">\\r\\n    </app-translation-file-status>\\r\\n    <p></p>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <mat-form-field *ngIf=\\\"needsExplicitSourceLanguage()\\\" fxFlex=\\\"50%\\\"\\r\\n                          matTooltip=\\\"Your selected file contains no information about the language used. You can set it here explicitly.\\\" i18n-matTooltip>\\r\\n        <input placeholder=\\\"Explicitly set source language\\\" i18n-placeholder matInput formControlName=\\\"sourceLanguage\\\" name=\\\"sourceLanguage\\\"/>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <div fxFlex=\\\"50%\\\">\\r\\n        <p i18n>Workflow type you are using</p>\\r\\n        <mat-radio-group formControlName=\\\"workflowType\\\" name=\\\"workflowType\\\">\\r\\n          <mat-radio-button value=\\\"singleuser\\\" i18n\\r\\n                           matTooltip=\\\"Single user workflow. You are translator and reviewer in one person. Every translated unit will directly get the state 'final'\\\"\\r\\n                           matTooltipPosition=\\\"after\\\" i18n-matTooltip>Single User</mat-radio-button>\\r\\n          <mat-radio-button value=\\\"withReview\\\" i18n\\r\\n                           matTooltip=\\\"Workflow with explicit translator and reviewer. Translation get te state 'translated'. The reviewer must mark them as 'final' later.\\\"\\r\\n                           matTooltipPosition=\\\"after\\\" i18n-matTooltip>Translator/Reviewer</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div *ngIf=\\\"isWorkflowWithReview()\\\">\\r\\n          <p i18n>Your role</p>\\r\\n          <mat-radio-group name=\\\"userRole\\\" formControlName=\\\"userRole\\\">\\r\\n            <mat-radio-button value=\\\"translator\\\" i18n>Translator</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"reviewer\\\" i18n>Reviewer</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <p></p>\\r\\n    <button fxFlexAlign=\\\"center\\\"\\r\\n            mat-raised-button\\r\\n            color=\\\"primary\\\"\\r\\n            (click)=\\\"emitAddProject()\\\"\\r\\n            matTooltip=\\\"add as new project and start working\\\" i18n-matTooltip\\r\\n            [disabled]=\\\"!isInputComplete()\\\">\\r\\n      <mat-icon>add</mat-icon>&nbsp;<span i18n>Add project</span>\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3Qtc3RhcnRlci9wcm9qZWN0LXN0YXJ0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject, UserRole, WorkflowType} from '../model/translation-project';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {Observable, Subscription} from 'rxjs';\r\n\r\n/**\r\n * The ProjectStarter is an upload component.\r\n * You can upload a file for translation (xliff file normally) to start working with it.\r\n */\r\n@Component({\r\n  selector: 'app-project-starter',\r\n  templateUrl: './project-starter.component.html',\r\n  styleUrls: ['./project-starter.component.scss']\r\n})\r\nexport class ProjectStarterComponent implements OnInit, OnDestroy {\r\n\r\n  @Output() addProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  createdProject: TranslationProject;\r\n\r\n  form: FormGroup;\r\n  private selectedFile: IFileDescription;\r\n  private selectedMasterXmbFile: IFileDescription;\r\n  private _fileAccessConfigurations: Observable<IFileAccessConfiguration[]>;\r\n  private _currentFileAccessConfigurations: IFileAccessConfiguration[];\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private translatorService: TinyTranslatorService,\r\n              private fileAccessServiceFactoryService: FileAccessServiceFactoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this._fileAccessConfigurations = this.translatorService.getFileAccessConfigurations();\r\n    this.subscriptions = this._fileAccessConfigurations.subscribe(configs => this._currentFileAccessConfigurations = configs);\r\n    this.subscriptions.add(\r\n      this.form.valueChanges.subscribe(formValue => {\r\n        this.valueChanged(formValue);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        projectName: [''],\r\n        selectedFileAccessConfigurationIndex: 0,\r\n        workflowType: ['singleuser'],\r\n        userRole: ['translator'],\r\n        sourceLanguage: [''],\r\n      });\r\n    }\r\n  }\r\n\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return this._fileAccessConfigurations;\r\n  }\r\n\r\n  selectedFileAccessConfiguration(): IFileAccessConfiguration {\r\n    if (this._currentFileAccessConfigurations) {\r\n      return this._currentFileAccessConfigurations[this.form.value['selectedFileAccessConfigurationIndex']];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  fileSelectionChange(file: IFileDescription) {\r\n    this.selectedFile = file;\r\n    this.valueChanged(this.form.value);\r\n  }\r\n\r\n  masterXmlFileSelectionChange(file: IFileDescription) {\r\n    this.selectedMasterXmbFile = file;\r\n    this.valueChanged(this.form.value);\r\n  }\r\n\r\n  valueChanged(formValue) {\r\n    const translationFile = this.selectedFile;\r\n    const masterXmbFile = this.selectedMasterXmbFile;\r\n    this.translatorService.createProject(\r\n      formValue.projectName,\r\n      translationFile,\r\n      masterXmbFile,\r\n      this.toWorkflowType(formValue.workflowType)\r\n    ).subscribe((newProject) => {\r\n      this.createdProject = newProject;\r\n      if (this.createdProject) {\r\n        this.createdProject.setUserRole(this.toUserRole(formValue.userRole));\r\n        if (this.createdProject.translationFile) {\r\n          this.createdProject.translationFile.setSourceLanguage(formValue.sourceLanguage);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param type type\r\n   * @return type as enum\r\n   */\r\n  toWorkflowType(type: string): WorkflowType {\r\n    switch (type) {\r\n      case 'singleuser':\r\n        return WorkflowType.SINGLE_USER;\r\n      case 'withReview':\r\n        return WorkflowType.WITH_REVIEW;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param role type\r\n   * @return role as enum\r\n   */\r\n  toUserRole(role: string): UserRole {\r\n    switch (role) {\r\n      case 'translator':\r\n        return UserRole.TRANSLATOR;\r\n      case 'reviewer':\r\n        return UserRole.REVIEWER;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  emitAddProject() {\r\n      this.addProject.emit(this.createdProject);\r\n  }\r\n\r\n  /**\r\n   * Check, wether all needed is typed in.\r\n   * Enables the add button.\r\n   */\r\n  isInputComplete(): boolean {\r\n    return this.createdProject && this.createdProject.name && !this.createdProject.hasErrors() && this.isFileSelected();\r\n  }\r\n\r\n  isFileSelected(): boolean {\r\n    return this.selectedFile && !!this.createdProject;\r\n  }\r\n\r\n  needsExplicitSourceLanguage(): boolean {\r\n    return this.createdProject &&\r\n      this.createdProject.translationFile &&\r\n      !this.createdProject.translationFile.hasErrors() &&\r\n      isNullOrUndefined(this.createdProject.translationFile.sourceLanguageFromFile());\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.createdProject && this.createdProject.workflowType === WorkflowType.WITH_REVIEW;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3Qtc3RhdHVzL3Byb2plY3Qtc3RhdHVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n  <p><span i18n><b>Project </b> {{project?.name}}</span>\\r\\n    <button mat-icon-button (click)=\\\"openProjectDetails()\\\" matTooltip=\\\"Details of the project (click to open)\\\" i18n-matTooltip>\\r\\n      <mat-icon>info</mat-icon>\\r\\n    </button>\\r\\n  </p>\\r\\n  <app-translation-file-status\\r\\n    [translationFileView]=\\\"project?.translationFileView\\\"\\r\\n    [translationFile]=\\\"project?.translationFile\\\"\\r\\n    [shortInfo]=\\\"true\\\"\\r\\n    (saved)=\\\"save($event)\\\">\\r\\n  </app-translation-file-status>\\r\\n</div>\\r\\n<p *ngIf=\\\"project?.isReviewModeActive()\\\">\\r\\n  <mat-icon matTooltip=\\\"As a reviewer translation is disabled. You can only mark translated units as reviewed\\\" i18n-matTooltip>warning</mat-icon>\\r\\n  <span i18n>You are currently working as reviewer!</span>\\r\\n</p>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFile} from '../model/translation-file';\r\nimport {Router} from '@angular/router';\r\n\r\n/**\r\n * Shows the actual translation status of a project.\r\n * The layout is made for showing it as part of the toolbar.\r\n * So it is all in one row.\r\n */\r\n@Component({\r\n  selector: 'app-project-status',\r\n  templateUrl: './project-status.component.html',\r\n  styleUrls: ['./project-status.component.css']\r\n})\r\nexport class ProjectStatusComponent implements OnInit {\r\n\r\n  @Input() project: TranslationProject;\r\n  @Input() showActions = true;\r\n\r\n  @Output() onSave: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(translationFile: any) {\r\n    this.onSave.emit(this.project);\r\n  }\r\n\r\n  /**\r\n   * Open a page that shows all the details of the project.\r\n   */\r\n  openProjectDetails() {\r\n    this.router.navigateByUrl('/editproject');\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>\\r\\n      <p i18n><b>Project </b> {{project?.name}}</p>\\r\\n    </mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <app-translation-file-status [translationFileView]=\\\"project?.translationFileView\\\" [translationFile]=\\\"project?.translationFile\\\"\\r\\n                                 (saved)=\\\"save($event)\\\"></app-translation-file-status>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions *ngIf=\\\"showActions\\\">\\r\\n    <button mat-icon-button *ngIf=\\\"!project?.translationFile?.isDirty()\\\" (click)=\\\"deleteProject()\\\"  matTooltip=\\\"Delete Project\\\" i18n-matTooltip><mat-icon>delete</mat-icon></button>\\r\\n    <button mat-fab *ngIf=\\\"project?.canTranslate()\\\" (click)=\\\"startWork()\\\" matTooltip=\\\"Start Translation\\\" i18n-matTooltip><mat-icon>translate</mat-icon></button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFile} from '../model/translation-file';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n  @Input() project: TranslationProject;\r\n  @Input() showActions = true;\r\n\r\n  @Output() onStartWork: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onDeleteProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onSave: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(translationFile: TranslationFile) {\r\n    this.onSave.emit(this.project);\r\n  }\r\n\r\n  startWork() {\r\n    this.onStartWork.emit(this.project);\r\n  }\r\n\r\n  deleteProject() {\r\n    this.onDeleteProject.emit(this.project);\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" style=\\\"min-width: calc(100vw-16px);\\\"><!-- 16px = 2xmargin of container page -->\\n  <h3 i18n>Publish project</h3>\\n  <form id=\\\"publishProjectForm\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"form\\\">\\n    <p i18n>Publish it at the following location</p>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n      <app-file-to-save\\n              [file]=\\\"_saveAs\\\"\\n              [configurations]=\\\"configurations()|async\\\"\\n              (selectedFile)=\\\"setSaveAs($event)\\\">\\n      </app-file-to-save>\\n    </div>\\n    <mat-form-field fxFlex=\\\"90%\\\">\\n      <mat-label i18n>commit message</mat-label>\\n      <input type=\\\"text\\\" placeholder=\\\"commit message\\\" i18n-placeholder matInput formControlName=\\\"commitMessage\\\" name=\\\"commitMessage\\\"/>\\n    </mat-form-field>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"publish()\\\" [disabled]=\\\"form.invalid\\\"><mat-icon>publish</mat-icon><span i18n>Publish</span></button>\\n    </div>\\n    <div *ngIf=\\\"error\\\">\\n      {{error}}\\n    </div>\\n  </form>\\n  <div [hidden]=\\\"true\\\">\\n    <span i18n #confirmSaveQuestion>Do you really want to override this file?</span>\\n    <span i18n #confirmSaveInfo>File already exists.</span>\\n    <span i18n #confirmModifyQuestion>Do you really want to override this file?</span>\\n    <span i18n #confirmModifyInfo>The file has been modified after you loaded it.</span>\\n    <span i18n #publishOkMessage>File successfully saved.</span>\\n  </div>\\n</div>\\n\"","module.exports = \"#configitem {\\n  width: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGlzaC1wcm9qZWN0LXBhZ2UvUzpcXGV4cGVyaW1lbnRlXFxuZ3gtaTE4bnN1cHBvcnRcXHByb2plY3RzXFx0aW55LXRyYW5zbGF0b3Ivc3JjXFxhcHBcXHB1Ymxpc2gtcHJvamVjdC1wYWdlXFxwdWJsaXNoLXByb2plY3QtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVcsRUFDZCIsImZpbGUiOiJzcmMvYXBwL3B1Ymxpc2gtcHJvamVjdC1wYWdlL3B1Ymxpc2gtcHJvamVjdC1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbmZpZ2l0ZW0ge1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbn1cclxuIl19 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog, MatSnackBar} from '@angular/material';\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\nimport {Observable} from 'rxjs';\nimport {ConfirmDialogComponent, ConfirmDialogData} from '../confirm-dialog/confirm-dialog.component';\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\n\n@Component({\n  selector: 'app-publish-project-page',\n  templateUrl: './publish-project-page.component.html',\n  styleUrls: ['./publish-project-page.component.scss']\n})\nexport class PublishProjectPageComponent implements OnInit {\n\n  translationFile: IFileDescription;\n  _saveAs: IFileDescription;\n  form: FormGroup;\n  error: string;\n\n  @ViewChild('confirmSaveQuestion') confirmSaveQuestion: ElementRef;\n  @ViewChild('confirmSaveInfo') confirmSaveInfo: ElementRef;\n  @ViewChild('confirmModifyQuestion') confirmModifyQuestion: ElementRef;\n  @ViewChild('confirmModifyInfo') confirmModifyInfo: ElementRef;\n  @ViewChild('publishOkMessage') publishOkMessage: ElementRef;\n\n  constructor(private tinyTranslatorService: TinyTranslatorService,\n              private formBuilder: FormBuilder,\n              private dialog: MatDialog,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.translationFile = this.tinyTranslatorService.currentProject().translationFile.fileDescription();\n    this._saveAs = this.translationFile;\n    this.initForm();\n  }\n\n  private initForm() {\n    if (!this.form) {\n      const translationFile = this.tinyTranslatorService.currentProject().translationFile;\n      const name = translationFile.fileDescription().name;\n      this.form = this.formBuilder.group({\n        commitMessage: ['', Validators.required],\n        name: [name]\n      });\n    }\n  }\n\n  private textFromElementRef(ref: ElementRef|null): string {\n    if (!ref) {\n      return '?';\n    } else {\n      return ref.nativeElement.innerText;\n    }\n  }\n\n  openConfirmSaveDialog(): Observable<boolean> {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        question: this.textFromElementRef(this.confirmSaveQuestion),\n        info: this.textFromElementRef(this.confirmSaveInfo)\n      } as ConfirmDialogData\n    });\n    return dialogRef.afterClosed();\n  }\n\n  openConfirmModifiedDialog(): Observable<boolean> {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        question: this.textFromElementRef(this.confirmModifyQuestion),\n        info: this.textFromElementRef(this.confirmModifyInfo)\n      } as ConfirmDialogData\n    });\n    return dialogRef.afterClosed();\n  }\n\n  configurations(): Observable<IFileAccessConfiguration[]> {\n    return this.tinyTranslatorService.getFileAccessConfigurations();\n  }\n\n  publish() {\n    this.tinyTranslatorService.publishProject(this.tinyTranslatorService.currentProject(),\n      this.saveAs(),\n      {\n        message: this.form.value.commitMessage\n      },\n      () => this.openConfirmModifiedDialog(),\n      () => this.openConfirmSaveDialog()\n    ).subscribe((done: boolean) => {\n            this.error = null;\n            if (done) {\n              this.snackBar.open(this.textFromElementRef(this.publishOkMessage), undefined, {\n                duration: 3000,\n              });\n            }\n      }, (error) => {\n          this.error = error.toString();\n      });\n  }\n\n  setSaveAs(f: IFileDescription) {\n    this._saveAs = f;\n  }\n\n  private saveAs(): IFileDescription|null {\n    return this._saveAs === this.translationFile ? null : this._saveAs;\n  }\n}\n","module.exports = \"#page {\\r\\n  width: 95vw;\\r\\n}\\r\\n\\r\\n#transunit {\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbnNsYXRlLXBhZ2UvdHJhbnNsYXRlLXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7Q0FDYjs7QUFFRDtFQUNFLGNBQWM7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zbGF0ZS1wYWdlL3RyYW5zbGF0ZS1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcGFnZSB7XHJcbiAgd2lkdGg6IDk1dnc7XHJcbn1cclxuXHJcbiN0cmFuc3VuaXQge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div id=\\\"page\\\" fxLayout=\\\"row\\\">\\r\\n  <app-translate-unit-list [translationFileView]=\\\"currentView()\\\" [workflowType]=\\\"currentProject()?.workflowType\\\"\\r\\n                           [hasAutotranslatedUnits]=\\\"hasAutotranslatedUnits()\\\"\\r\\n                           (changeTranslationUnit)=\\\"onChangeTranslationUnit($event)\\\"\\r\\n                           fxFlex=\\\"0 0 25%\\\" fxHide.lt-md></app-translate-unit-list>\\r\\n  <div id=\\\"transunit\\\" fxLayout=\\\"column\\\" fxFlex=\\\"grow\\\">\\r\\n    <app-filter-status fxHide.gt-sm [translationFileView]=\\\"currentView()\\\"></app-filter-status>\\r\\n    <app-project-status fxHide.lt-md [project]=\\\"currentProject()\\\" (onSave)=\\\"save()\\\"></app-project-status>\\r\\n    <app-translate-unit\\r\\n      [translationFileView]=\\\"currentView()\\\"\\r\\n      [translationUnit]=\\\"currentTranslationUnit()\\\"\\r\\n      [workflowType]=\\\"currentProject()?.workflowType\\\"\\r\\n      [reviewMode]=\\\"isInReviewMode()\\\"\\r\\n      (changed)=\\\"commitChanges($event)\\\"></app-translate-unit>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {TranslationProject, UserRole} from '../model/translation-project';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {NavigationDirection, TranslateUnitChange} from '../translate-unit/translate-unit.component';\r\n\r\n@Component({\r\n  selector: 'app-translate-page',\r\n  templateUrl: './translate-page.component.html',\r\n  styleUrls: ['./translate-page.component.css']\r\n})\r\nexport class TranslatePageComponent implements OnInit {\r\n\r\n  constructor(private translationService: TinyTranslatorService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentProject(): TranslationProject {\r\n    return this.translationService.currentProject();\r\n  }\r\n\r\n  currentView(): TranslationFileView {\r\n    return this.currentProject() ? this.currentProject().translationFileView : null;\r\n  }\r\n\r\n  currentTranslationUnit(): TranslationUnit {\r\n    const currentProject = this.currentProject();\r\n    return currentProject ? currentProject.translationFileView.currentTransUnit() : null;\r\n  }\r\n\r\n  commitChanges(translateUnitChange: TranslateUnitChange) {\r\n    const direction = translateUnitChange.navigationDirection;\r\n    if (direction === NavigationDirection.NEXT) {\r\n      this.translationService.nextTransUnit();\r\n    } else if (direction === NavigationDirection.PREV) {\r\n      this.translationService.prevTransUnit();\r\n    }\r\n    if (translateUnitChange.changedUnit) {\r\n      this.translationService.commitChanges(this.currentProject());\r\n      if (this.currentView()) {\r\n        this.currentView().refresh();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to another unit.\r\n   * @param translationUnit\r\n   */\r\n  onChangeTranslationUnit(translationUnit: TranslationUnit) {\r\n    this.translationService.selectTransUnit(translationUnit);\r\n  }\r\n\r\n  save() {\r\n    this.translationService.downloadProject(this.currentProject());\r\n  }\r\n\r\n  isInReviewMode(): boolean {\r\n    return this.currentProject() && this.currentProject().userRole === UserRole.REVIEWER;\r\n  }\r\n\r\n  hasAutotranslatedUnits(): boolean {\r\n    return this.currentProject()\r\n      && this.currentProject().autoTranslateSummaryReport()\r\n      && this.currentProject().autoTranslateSummaryReport().total() > 0;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"list\\\" fxLayout=\\\"column\\\">\\r\\n  <div id=\\\"selectfilter\\\">\\r\\n    <p i18n>Show</p>\\r\\n    <mat-radio-group (change)=\\\"filterChanged($event)\\\" [(ngModel)]=\\\"_selectedFilterName\\\" fxLayout=\\\"column\\\">\\r\\n      <mat-radio-button value=\\\"all\\\" i18n>All units</mat-radio-button>\\r\\n      <ng-container *ngIf=\\\"hasAutotranslatedUnits\\\">\\r\\n        <mat-radio-button value=\\\"autotranslated\\\" i18n>Autotranslated units</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"autotranslatedFailed\\\" i18n>failed Autotranslated</mat-radio-button>\\r\\n        <mat-radio-button value=\\\"autotranslatedIgnored\\\" i18n>ignored Autotranslated</mat-radio-button>\\r\\n      </ng-container>\\r\\n      <mat-radio-button value=\\\"untranslated\\\" i18n>Untranslated units</mat-radio-button>\\r\\n      <mat-radio-button *ngIf=\\\"isWorkflowWithReview()\\\" value=\\\"needsReview\\\" i18n>Review needed</mat-radio-button>\\r\\n      <mat-radio-button value=\\\"bySubstring\\\">\\r\\n        <span i18n>Search</span>&nbsp;\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Substring\\\" i18n-placeholder [(ngModel)]=\\\"substringToSearch\\\"\\r\\n                 (keyup)=\\\"substringToSearchChange()\\\" [disabled]=\\\"_selectedFilterName !== 'bySubstring'\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </div>\\r\\n  <mat-list>\\r\\n    <h3 matSubheader i18n>Translation Units</h3>\\r\\n    <mat-list-item *ngFor=\\\"let tu of transUnits()\\\" (click)=\\\"selectTransUnit(tu)\\\">\\r\\n      <mat-icon matListAvatar *ngIf=\\\"tu.targetState() === 'final'\\\">done</mat-icon>\\r\\n      <mat-icon matListAvatar *ngIf=\\\"tu.targetState() === 'translated'\\\">label_outline</mat-icon>\\r\\n      <mat-icon matListAvatar *ngIf=\\\"!tu.isTranslated()\\\">translate</mat-icon>\\r\\n      <h4 matLine [ngClass]=\\\"{'selected': isSelected(tu)}\\\">{{tu.sourceContentNormalized().dislayText(true) | abbreviate}}</h4>\\r\\n      <h4 matLine [ngClass]=\\\"{'selected': isSelected(tu)}\\\">{{tu.targetContentNormalized().dislayText(true) | abbreviate}}</h4>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n/* You can add global styles to this file, and also import other style files */\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-badge-small .mat-badge-content{font-size:6px}\\n.mat-badge-large .mat-badge-content{font-size:24px}\\n.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 16px}\\n.mat-h5,.mat-typography h5{font:400 11.62px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-h6,.mat-typography h6{font:400 9.38px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 12px}\\n.mat-body-2,.mat-body-strong{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}\\n.mat-caption,.mat-small{font:400 12px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 56px;letter-spacing:-.05em}\\n.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.02em}\\n.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px;letter-spacing:-.005em}\\n.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0 0 64px}\\n.mat-bottom-sheet-container{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button,.mat-stroked-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-button-toggle{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-card-title{font-size:24px;font-weight:500}\\n.mat-card-header .mat-card-title{font-size:20px}\\n.mat-card-content,.mat-card-subtitle{font-size:14px}\\n.mat-checkbox{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-checkbox-layout .mat-checkbox-label{line-height:24px}\\n.mat-chip{font-size:14px;font-weight:500}\\n.mat-chip .mat-chip-remove.mat-icon,.mat-chip .mat-chip-trailing-icon.mat-icon{font-size:18px}\\n.mat-table{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-header-cell{font-size:12px;font-weight:500}\\n.mat-cell,.mat-footer-cell{font-size:14px}\\n.mat-calendar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-calendar-body{font-size:13px}\\n.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}\\n.mat-calendar-table-header th{font-size:11px;font-weight:400}\\n.mat-dialog-title{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-expansion-panel-header{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:15px;font-weight:400}\\n.mat-expansion-panel-content{font:400 14px/20px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-form-field-wrapper{padding-bottom:1.34375em}\\n.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}\\n.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}\\n.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}\\n.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}\\n.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.34375em) scale(.75);transform:translateY(-1.34375em) scale(.75);width:133.33333%}\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.34374em) scale(.75);transform:translateY(-1.34374em) scale(.75);width:133.33334%}\\n.mat-form-field-label-wrapper{top:-.84375em;padding-top:.84375em}\\n.mat-form-field-label{top:1.34375em}\\n.mat-form-field-underline{bottom:1.34375em}\\n.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.66667em;top:calc(100% - 1.79167em)}\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.001px);-ms-transform:translateY(-1.28125em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00101px);-ms-transform:translateY(-1.28124em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);transform:translateY(-1.28125em) scale(.75) perspective(100px) translateZ(.00102px);-ms-transform:translateY(-1.28123em) scale(.75);width:133.33335%}\\n.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.54167em;top:calc(100% - 1.66667em)}\\n@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.28122em) scale(.75);transform:translateY(-1.28122em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.28121em) scale(.75);transform:translateY(-1.28121em) scale(.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.2812em) scale(.75);transform:translateY(-1.2812em) scale(.75)}}\\n.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em 0}\\n.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-.5em}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-.59375em) scale(.75);transform:translateY(-.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-.59374em) scale(.75);transform:translateY(-.59374em) scale(.75);width:133.33334%}\\n.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0 1em 0}\\n.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-.25em}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{-webkit-transform:translateY(-1.59375em) scale(.75);transform:translateY(-1.59375em) scale(.75);width:133.33333%}\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{-webkit-transform:translateY(-1.59374em) scale(.75);transform:translateY(-1.59374em) scale(.75);width:133.33334%}\\n.mat-grid-tile-footer,.mat-grid-tile-header{font-size:14px}\\n.mat-grid-tile-footer .mat-line,.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}\\ninput.mat-input-element{margin-top:-.0625em}\\n.mat-menu-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:400}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px}\\n.mat-radio-button{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-select-trigger{height:1.125em}\\n.mat-slide-toggle-content{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-slider-thumb-label-text{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-stepper-horizontal,.mat-stepper-vertical{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-step-label{font-size:14px;font-weight:400}\\n.mat-step-sub-label-error{font-weight:400}\\n.mat-step-label-error{font-size:14px}\\n.mat-step-label-selected{font-size:14px;font-weight:500}\\n.mat-tab-group{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-tab-label,.mat-tab-link{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif;margin:0}\\n.mat-tooltip{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}\\n.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}\\n.mat-list-item{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-list-base .mat-list-item{font-size:16px}\\n.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-list-option{font-size:16px}\\n.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}\\n.mat-list-base .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}\\n.mat-list-base[dense] .mat-list-item{font-size:12px}\\n.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-list-option{font-size:12px}\\n.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}\\n.mat-list-base[dense] .mat-subheader{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:12px;font-weight:500}\\n.mat-option{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:16px}\\n.mat-optgroup-label{font:500 14px/24px Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-simple-snackbar{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px}\\n.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}\\n.mat-tree{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}\\n.mat-nested-tree-node,.mat-tree-node{font-weight:400;font-size:14px}\\n.mat-ripple{overflow:hidden;position:relative}\\n.mat-ripple.mat-ripple-unbounded{overflow:visible}\\n.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,-webkit-transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1);transition:opacity,transform 0s cubic-bezier(0,0,.2,1),-webkit-transform 0s cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}\\n@media (-ms-high-contrast:active){.mat-ripple-element{display:none}}\\n.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;outline:0;-webkit-appearance:none;-moz-appearance:none}\\n.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}\\n.cdk-overlay-container{position:fixed;z-index:1000}\\n.cdk-overlay-container:empty{display:none}\\n.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}\\n.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}\\n.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}\\n@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}\\n.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}\\n.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}\\n.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}\\n.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\\n@-webkit-keyframes cdk-text-field-autofill-start{/*!*/}\\n@keyframes cdk-text-field-autofill-start{/*!*/}\\n@-webkit-keyframes cdk-text-field-autofill-end{/*!*/}\\n@keyframes cdk-text-field-autofill-end{/*!*/}\\n.cdk-text-field-autofill-monitored:-webkit-autofill{-webkit-animation-name:cdk-text-field-autofill-start;animation-name:cdk-text-field-autofill-start}\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill){-webkit-animation-name:cdk-text-field-autofill-end;animation-name:cdk-text-field-autofill-end}\\ntextarea.cdk-textarea-autosize{resize:none}\\ntextarea.cdk-textarea-autosize-measuring{height:auto!important;overflow:hidden!important;padding:2px 0!important;box-sizing:content-box!important}\\n.mat-ripple-element{background-color:rgba(0,0,0,.1)}\\n.mat-option{color:rgba(0,0,0,.87)}\\n.mat-option:focus:not(.mat-option-disabled),.mat-option:hover:not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled){background:rgba(0,0,0,.04)}\\n.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}\\n.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:#3f51b5}\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled){color:#ff4081}\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled){color:#f44336}\\n.mat-optgroup-label{color:rgba(0,0,0,.54)}\\n.mat-optgroup-disabled .mat-optgroup-label{color:rgba(0,0,0,.38)}\\n.mat-pseudo-checkbox{color:rgba(0,0,0,.54)}\\n.mat-pseudo-checkbox::after{color:#fafafa}\\n.mat-accent .mat-pseudo-checkbox-checked,.mat-accent .mat-pseudo-checkbox-indeterminate,.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate{background:#ff4081}\\n.mat-primary .mat-pseudo-checkbox-checked,.mat-primary .mat-pseudo-checkbox-indeterminate{background:#3f51b5}\\n.mat-warn .mat-pseudo-checkbox-checked,.mat-warn .mat-pseudo-checkbox-indeterminate{background:#f44336}\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}\\n.mat-elevation-z0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-elevation-z1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-elevation-z7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}\\n.mat-elevation-z8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}\\n.mat-elevation-z10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}\\n.mat-elevation-z12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}\\n.mat-elevation-z15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}\\n.mat-elevation-z18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}\\n.mat-elevation-z20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}\\n.mat-elevation-z23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}\\n.mat-elevation-z24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}\\n.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-theme-loaded-marker{display:none}\\n.mat-autocomplete-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover){background:#fff}\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled){color:rgba(0,0,0,.87)}\\n.mat-badge-content{color:#fff;background:#3f51b5}\\n@media (-ms-high-contrast:active){.mat-badge-content{outline:solid 1px;border-radius:0}}\\n.mat-badge-accent .mat-badge-content{background:#ff4081;color:#fff}\\n.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}\\n.mat-badge{position:relative}\\n.mat-badge-hidden .mat-badge-content{display:none}\\n.mat-badge-disabled .mat-badge-content{background:#b9b9b9;color:rgba(0,0,0,.38)}\\n.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:-webkit-transform .2s ease-in-out;transition:transform .2s ease-in-out;transition:transform .2s ease-in-out, -webkit-transform .2s ease-in-out;-webkit-transform:scale(.6);transform:scale(.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}\\n.mat-badge-content.mat-badge-active{-webkit-transform:none;transform:none}\\n.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}\\n.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}\\n.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}\\n.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}\\n.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}\\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}\\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}\\n.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}\\n.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}\\n.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}\\n.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}\\n.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}\\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}\\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}\\n.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}\\n.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}\\n.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}\\n.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}\\n.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}\\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}\\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}\\n.mat-bottom-sheet-container{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-button,.mat-icon-button,.mat-stroked-button{color:inherit;background:0 0}\\n.mat-button.mat-primary,.mat-icon-button.mat-primary,.mat-stroked-button.mat-primary{color:#3f51b5}\\n.mat-button.mat-accent,.mat-icon-button.mat-accent,.mat-stroked-button.mat-accent{color:#ff4081}\\n.mat-button.mat-warn,.mat-icon-button.mat-warn,.mat-stroked-button.mat-warn{color:#f44336}\\n.mat-button.mat-accent[disabled],.mat-button.mat-primary[disabled],.mat-button.mat-warn[disabled],.mat-button[disabled][disabled],.mat-icon-button.mat-accent[disabled],.mat-icon-button.mat-primary[disabled],.mat-icon-button.mat-warn[disabled],.mat-icon-button[disabled][disabled],.mat-stroked-button.mat-accent[disabled],.mat-stroked-button.mat-primary[disabled],.mat-stroked-button.mat-warn[disabled],.mat-stroked-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-button.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-stroked-button.mat-primary .mat-button-focus-overlay{background-color:#3f51b5}\\n.mat-button.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-stroked-button.mat-accent .mat-button-focus-overlay{background-color:#ff4081}\\n.mat-button.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-stroked-button.mat-warn .mat-button-focus-overlay{background-color:#f44336}\\n.mat-button[disabled] .mat-button-focus-overlay,.mat-icon-button[disabled] .mat-button-focus-overlay,.mat-stroked-button[disabled] .mat-button-focus-overlay{background-color:transparent}\\n.mat-button .mat-ripple-element,.mat-icon-button .mat-ripple-element,.mat-stroked-button .mat-ripple-element{opacity:.1;background-color:currentColor}\\n.mat-button-focus-overlay{background:#000}\\n.mat-stroked-button:not([disabled]){border-color:rgba(0,0,0,.12)}\\n.mat-fab,.mat-flat-button,.mat-mini-fab,.mat-raised-button{color:rgba(0,0,0,.87);background-color:#fff}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{color:#fff}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{color:#fff}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{color:#fff}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{color:rgba(0,0,0,.26)}\\n.mat-fab.mat-primary,.mat-flat-button.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{background-color:#3f51b5}\\n.mat-fab.mat-accent,.mat-flat-button.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{background-color:#ff4081}\\n.mat-fab.mat-warn,.mat-flat-button.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{background-color:#f44336}\\n.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-flat-button.mat-accent[disabled],.mat-flat-button.mat-primary[disabled],.mat-flat-button.mat-warn[disabled],.mat-flat-button[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{background-color:rgba(0,0,0,.12)}\\n.mat-fab.mat-primary .mat-ripple-element,.mat-flat-button.mat-primary .mat-ripple-element,.mat-mini-fab.mat-primary .mat-ripple-element,.mat-raised-button.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-accent .mat-ripple-element,.mat-flat-button.mat-accent .mat-ripple-element,.mat-mini-fab.mat-accent .mat-ripple-element,.mat-raised-button.mat-accent .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-fab.mat-warn .mat-ripple-element,.mat-flat-button.mat-warn .mat-ripple-element,.mat-mini-fab.mat-warn .mat-ripple-element,.mat-raised-button.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}\\n.mat-flat-button:not([class*=mat-elevation-z]),.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}\\n.mat-raised-button[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}\\n.mat-fab[disabled]:not([class*=mat-elevation-z]),.mat-mini-fab[disabled]:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group,.mat-button-toggle-standalone{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{box-shadow:none}\\n.mat-button-toggle{color:rgba(0,0,0,.38)}\\n.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(0,0,0,.12)}\\n.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87);background:#fff}\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#000}\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px rgba(0,0,0,.12)}\\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px rgba(0,0,0,.12)}\\n.mat-button-toggle-checked{background-color:#e0e0e0;color:rgba(0,0,0,.54)}\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87)}\\n.mat-button-toggle-disabled{color:rgba(0,0,0,.26);background-color:#eee}\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#fff}\\n.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}\\n.mat-button-toggle-group-appearance-standard,.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{border:solid 1px rgba(0,0,0,.12)}\\n.mat-card{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-card:not([class*=mat-elevation-z]){box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}\\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-card-subtitle{color:rgba(0,0,0,.54)}\\n.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}\\n.mat-checkbox-checkmark{fill:#fafafa}\\n.mat-checkbox-checkmark-path{stroke:#fafafa!important}\\n@media (-ms-high-contrast:black-on-white){.mat-checkbox-checkmark-path{stroke:#000!important}}\\n.mat-checkbox-mixedmark{background-color:#fafafa}\\n.mat-checkbox-checked.mat-primary .mat-checkbox-background,.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background{background-color:#3f51b5}\\n.mat-checkbox-checked.mat-accent .mat-checkbox-background,.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#ff4081}\\n.mat-checkbox-checked.mat-warn .mat-checkbox-background,.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background{background-color:#f44336}\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}\\n.mat-checkbox-disabled .mat-checkbox-label{color:rgba(0,0,0,.54)}\\n@media (-ms-high-contrast:active){.mat-checkbox-disabled{opacity:.5}}\\n@media (-ms-high-contrast:active){.mat-checkbox-background{background:0 0}}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element{background-color:#3f51b5}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:#ff4081}\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element{background-color:#f44336}\\n.mat-chip.mat-standard-chip{background-color:#e0e0e0;color:rgba(0,0,0,.87)}\\n.mat-chip.mat-standard-chip .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover{opacity:.54}\\n.mat-chip.mat-standard-chip.mat-chip-disabled{opacity:.4}\\n.mat-chip.mat-standard-chip::after{background:#000}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#3f51b5;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn{background-color:#f44336;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent{background-color:#ff4081;color:#fff}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove{color:#fff;opacity:.4}\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element{background:rgba(255,255,255,.1)}\\n.mat-table{background:#fff}\\n.mat-table tbody,.mat-table tfoot,.mat-table thead,.mat-table-sticky,[mat-footer-row],[mat-header-row],[mat-row],mat-footer-row,mat-header-row,mat-row{background:inherit}\\nmat-footer-row,mat-header-row,mat-row,td.mat-cell,td.mat-footer-cell,th.mat-header-cell{border-bottom-color:rgba(0,0,0,.12)}\\n.mat-header-cell{color:rgba(0,0,0,.54)}\\n.mat-cell,.mat-footer-cell{color:rgba(0,0,0,.87)}\\n.mat-calendar-arrow{border-top-color:rgba(0,0,0,.54)}\\n.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button,.mat-datepicker-toggle{color:rgba(0,0,0,.54)}\\n.mat-calendar-table-header{color:rgba(0,0,0,.38)}\\n.mat-calendar-table-header-divider::after{background:rgba(0,0,0,.12)}\\n.mat-calendar-body-label{color:rgba(0,0,0,.54)}\\n.mat-calendar-body-cell-content{color:rgba(0,0,0,.87);border-color:transparent}\\n.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){color:rgba(0,0,0,.38)}\\n.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:rgba(0,0,0,.04)}\\n.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.38)}\\n.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected){border-color:rgba(0,0,0,.18)}\\n.mat-calendar-body-selected{background-color:#3f51b5;color:#fff}\\n.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(63,81,181,.4)}\\n.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#ff4081;color:#fff}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(255,64,129,.4)}\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}\\n.mat-datepicker-content-touch{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}\\n.mat-datepicker-toggle-active{color:#3f51b5}\\n.mat-datepicker-toggle-active.mat-accent{color:#ff4081}\\n.mat-datepicker-toggle-active.mat-warn{color:#f44336}\\n.mat-dialog-container{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);background:#fff;color:rgba(0,0,0,.87)}\\n.mat-divider{border-top-color:rgba(0,0,0,.12)}\\n.mat-divider-vertical{border-right-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel{background:#fff;color:rgba(0,0,0,.87)}\\n.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\n.mat-action-row{border-top-color:rgba(0,0,0,.12)}\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused,.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#fff}}\\n.mat-expansion-panel-header-title{color:rgba(0,0,0,.87)}\\n.mat-expansion-indicator::after,.mat-expansion-panel-header-description{color:rgba(0,0,0,.54)}\\n.mat-expansion-panel-header[aria-disabled=true]{color:rgba(0,0,0,.26)}\\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title{color:inherit}\\n.mat-form-field-label{color:rgba(0,0,0,.6)}\\n.mat-hint{color:rgba(0,0,0,.6)}\\n.mat-form-field.mat-focused .mat-form-field-label{color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent{color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn{color:#f44336}\\n.mat-focused .mat-form-field-required-marker{color:#ff4081}\\n.mat-form-field-ripple{background-color:rgba(0,0,0,.87)}\\n.mat-form-field.mat-focused .mat-form-field-ripple{background-color:#3f51b5}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent{background-color:#ff4081}\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn{background-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after{color:#3f51b5}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after{color:#ff4081}\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker,.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent{color:#f44336}\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent{background-color:#f44336}\\n.mat-error{color:#f44336}\\n.mat-form-field-appearance-legacy .mat-form-field-label{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-hint{color:rgba(0,0,0,.54)}\\n.mat-form-field-appearance-legacy .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-standard .mat-form-field-underline{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right,rgba(0,0,0,.42) 0,rgba(0,0,0,.42) 33%,transparent 0);background-size:4px 100%;background-repeat:repeat-x}\\n.mat-form-field-appearance-fill .mat-form-field-flex{background-color:rgba(0,0,0,.04)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{background-color:rgba(0,0,0,.02)}\\n.mat-form-field-appearance-fill .mat-form-field-underline::before{background-color:rgba(0,0,0,.42)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before{background-color:transparent}\\n.mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(0,0,0,.12)}\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:rgba(0,0,0,.87)}\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:#3f51b5}\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick{color:#ff4081}\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{color:#f44336}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:rgba(0,0,0,.06)}\\n.mat-icon.mat-primary{color:#3f51b5}\\n.mat-icon.mat-accent{color:#ff4081}\\n.mat-icon.mat-warn{color:#f44336}\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after{color:rgba(0,0,0,.54)}\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after,.mat-input-element:disabled{color:rgba(0,0,0,.38)}\\n.mat-input-element{caret-color:#3f51b5}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-moz-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,.42)}\\n.mat-accent .mat-input-element{caret-color:#ff4081}\\n.mat-form-field-invalid .mat-input-element,.mat-warn .mat-input-element{caret-color:#f44336}\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after{color:#f44336}\\n.mat-list-base .mat-list-item{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-list-option{color:rgba(0,0,0,.87)}\\n.mat-list-base .mat-subheader{color:rgba(0,0,0,.54)}\\n.mat-list-item-disabled{background-color:#eee}\\n.mat-list-option:focus,.mat-list-option:hover,.mat-nav-list .mat-list-item:focus,.mat-nav-list .mat-list-item:hover{background:rgba(0,0,0,.04)}\\n.mat-menu-panel{background:#fff}\\n.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-menu-item{background:0 0;color:rgba(0,0,0,.87)}\\n.mat-menu-item[disabled],.mat-menu-item[disabled]::after{color:rgba(0,0,0,.38)}\\n.mat-menu-item .mat-icon-no-color,.mat-menu-item-submenu-trigger::after{color:rgba(0,0,0,.54)}\\n.mat-menu-item-highlighted:not([disabled]),.mat-menu-item.cdk-keyboard-focused:not([disabled]),.mat-menu-item.cdk-program-focused:not([disabled]),.mat-menu-item:hover:not([disabled]){background:rgba(0,0,0,.04)}\\n.mat-paginator{background:#fff}\\n.mat-paginator,.mat-paginator-page-size .mat-select-trigger{color:rgba(0,0,0,.54)}\\n.mat-paginator-decrement,.mat-paginator-increment{border-top:2px solid rgba(0,0,0,.54);border-right:2px solid rgba(0,0,0,.54)}\\n.mat-paginator-first,.mat-paginator-last{border-top:2px solid rgba(0,0,0,.54)}\\n.mat-icon-button[disabled] .mat-paginator-decrement,.mat-icon-button[disabled] .mat-paginator-first,.mat-icon-button[disabled] .mat-paginator-increment,.mat-icon-button[disabled] .mat-paginator-last{border-color:rgba(0,0,0,.38)}\\n.mat-progress-bar-background{fill:#c5cae9}\\n.mat-progress-bar-buffer{background-color:#c5cae9}\\n.mat-progress-bar-fill::after{background-color:#3f51b5}\\n.mat-progress-bar.mat-accent .mat-progress-bar-background{fill:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#ff80ab}\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#ff4081}\\n.mat-progress-bar.mat-warn .mat-progress-bar-background{fill:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#f44336}\\n.mat-progress-spinner circle,.mat-spinner circle{stroke:#3f51b5}\\n.mat-progress-spinner.mat-accent circle,.mat-spinner.mat-accent circle{stroke:#ff4081}\\n.mat-progress-spinner.mat-warn circle,.mat-spinner.mat-warn circle{stroke:#f44336}\\n.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle{border-color:#3f51b5}\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple{background-color:#3f51b5}\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#ff4081}\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple{background-color:#ff4081}\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle{border-color:#f44336}\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple{background-color:#f44336}\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle,.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle,.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element{background-color:rgba(0,0,0,.38)}\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content{color:rgba(0,0,0,.38)}\\n.mat-radio-button .mat-ripple-element{background-color:#000}\\n.mat-select-value{color:rgba(0,0,0,.87)}\\n.mat-select-placeholder{color:rgba(0,0,0,.42)}\\n.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}\\n.mat-select-arrow{color:rgba(0,0,0,.54)}\\n.mat-select-panel{background:#fff}\\n.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple){background:rgba(0,0,0,.12)}\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow{color:#3f51b5}\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow{color:#ff4081}\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow{color:#f44336}\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow{color:rgba(0,0,0,.38)}\\n.mat-drawer-container{background-color:#fafafa;color:rgba(0,0,0,.87)}\\n.mat-drawer{background-color:#fff;color:rgba(0,0,0,.87)}\\n.mat-drawer.mat-drawer-push{background-color:#fff}\\n.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}\\n.mat-drawer-side{border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(0,0,0,.12);border-right:none}\\n[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}\\n.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(0,0,0,.6)}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background-color:#ff4081}\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar{background-color:rgba(255,64,129,.54)}\\n.mat-slide-toggle.mat-checked .mat-ripple-element{background-color:#ff4081}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb{background-color:#3f51b5}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar{background-color:rgba(63,81,181,.54)}\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element{background-color:#3f51b5}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb{background-color:#f44336}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar{background-color:rgba(244,67,54,.54)}\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element{background-color:#f44336}\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:#000}\\n.mat-slide-toggle-thumb{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12);background-color:#fafafa}\\n.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}\\n.mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label,.mat-primary .mat-slider-track-fill{background-color:#3f51b5}\\n.mat-primary .mat-slider-thumb-label-text{color:#fff}\\n.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label,.mat-accent .mat-slider-track-fill{background-color:#ff4081}\\n.mat-accent .mat-slider-thumb-label-text{color:#fff}\\n.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label,.mat-warn .mat-slider-track-fill{background-color:#f44336}\\n.mat-warn .mat-slider-thumb-label-text{color:#fff}\\n.mat-slider-focus-ring{background-color:rgba(255,64,129,.2)}\\n.cdk-focused .mat-slider-track-background,.mat-slider:hover .mat-slider-track-background{background-color:rgba(0,0,0,.38)}\\n.mat-slider-disabled .mat-slider-thumb,.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill{background-color:rgba(0,0,0,.26)}\\n.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(0,0,0,.12)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:rgba(0,0,0,.87)}\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb{border-color:rgba(0,0,0,.38)}\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}\\n.mat-slider-has-ticks .mat-slider-wrapper::after{border-color:rgba(0,0,0,.7)}\\n.mat-slider-horizontal .mat-slider-ticks{background-image:repeating-linear-gradient(to right,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent);background-image:-moz-repeating-linear-gradient(.0001deg,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-slider-vertical .mat-slider-ticks{background-image:repeating-linear-gradient(to bottom,rgba(0,0,0,.7),rgba(0,0,0,.7) 2px,transparent 0,transparent)}\\n.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover{background-color:rgba(0,0,0,.04)}\\n@media (hover:none){.mat-step-header:hover{background:0 0}}\\n.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(0,0,0,.54)}\\n.mat-step-header .mat-step-icon{background-color:rgba(0,0,0,.54);color:#fff}\\n.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#3f51b5;color:#fff}\\n.mat-step-header .mat-step-icon-state-error{background-color:transparent;color:#f44336}\\n.mat-step-header .mat-step-label.mat-step-label-active{color:rgba(0,0,0,.87)}\\n.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}\\n.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#fff}\\n.mat-stepper-vertical-line::before{border-left-color:rgba(0,0,0,.12)}\\n.mat-horizontal-stepper-header::after,.mat-horizontal-stepper-header::before,.mat-stepper-horizontal-line{border-top-color:rgba(0,0,0,.12)}\\n.mat-sort-header-arrow{color:#757575}\\n.mat-tab-header,.mat-tab-nav-bar{border-bottom:1px solid rgba(0,0,0,.12)}\\n.mat-tab-group-inverted-header .mat-tab-header,.mat-tab-group-inverted-header .mat-tab-nav-bar{border-top:1px solid rgba(0,0,0,.12);border-bottom:none}\\n.mat-tab-label,.mat-tab-link{color:rgba(0,0,0,.87)}\\n.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.38)}\\n.mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.87)}\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.38)}\\n.mat-tab-group[class*=mat-background-] .mat-tab-header,.mat-tab-nav-bar[class*=mat-background-]{border-bottom:none;border-top:none}\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary .mat-ink-bar{background-color:#3f51b5}\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent .mat-ink-bar{background-color:#ff4081}\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn .mat-ink-bar{background-color:#f44336}\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar{background-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(197,202,233,.3)}\\n.mat-tab-group.mat-background-primary .mat-tab-header,.mat-tab-group.mat-background-primary .mat-tab-links,.mat-tab-nav-bar.mat-background-primary .mat-tab-header,.mat-tab-nav-bar.mat-background-primary .mat-tab-links{background-color:#3f51b5}\\n.mat-tab-group.mat-background-primary .mat-tab-label,.mat-tab-group.mat-background-primary .mat-tab-link,.mat-tab-nav-bar.mat-background-primary .mat-tab-label,.mat-tab-nav-bar.mat-background-primary .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-primary .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,128,171,.3)}\\n.mat-tab-group.mat-background-accent .mat-tab-header,.mat-tab-group.mat-background-accent .mat-tab-links,.mat-tab-nav-bar.mat-background-accent .mat-tab-header,.mat-tab-nav-bar.mat-background-accent .mat-tab-links{background-color:#ff4081}\\n.mat-tab-group.mat-background-accent .mat-tab-label,.mat-tab-group.mat-background-accent .mat-tab-link,.mat-tab-nav-bar.mat-background-accent .mat-tab-label,.mat-tab-nav-bar.mat-background-accent .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-accent .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}\\n.mat-tab-group.mat-background-warn .mat-tab-header,.mat-tab-group.mat-background-warn .mat-tab-links,.mat-tab-nav-bar.mat-background-warn .mat-tab-header,.mat-tab-nav-bar.mat-background-warn .mat-tab-links{background-color:#f44336}\\n.mat-tab-group.mat-background-warn .mat-tab-label,.mat-tab-group.mat-background-warn .mat-tab-link,.mat-tab-nav-bar.mat-background-warn .mat-tab-label,.mat-tab-nav-bar.mat-background-warn .mat-tab-link{color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron{border-color:#fff}\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}\\n.mat-tab-group.mat-background-warn .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn .mat-ripple-element{background-color:rgba(255,255,255,.12)}\\n.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}\\n.mat-toolbar.mat-primary{background:#3f51b5;color:#fff}\\n.mat-toolbar.mat-accent{background:#ff4081;color:#fff}\\n.mat-toolbar.mat-warn{background:#f44336;color:#fff}\\n.mat-toolbar .mat-focused .mat-form-field-ripple,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-form-field-underline{background-color:currentColor}\\n.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-select-value{color:inherit}\\n.mat-toolbar .mat-input-element{caret-color:currentColor}\\n.mat-tooltip{background:rgba(97,97,97,.9)}\\n.mat-tree{background:#fff}\\n.mat-nested-tree-node,.mat-tree-node{color:rgba(0,0,0,.87)}\\n.mat-snack-bar-container{color:rgba(255,255,255,.7);background:#323232;box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}\\n.mat-simple-snackbar-action{color:#ff4081}\\n.mat-badge-content {\\n  font-weight: 600;\\n  font-size: 12px;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-badge-small .mat-badge-content {\\n  font-size: 6px; }\\n.mat-badge-large .mat-badge-content {\\n  font-size: 24px; }\\n.mat-h1, .mat-headline, .mat-typography h1 {\\n  font: 400 24px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h2, .mat-title, .mat-typography h2 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\\n  font: 400 16px/28px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\\n  font: 400 15px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 16px; }\\n.mat-h5, .mat-typography h5 {\\n  font: 400 11.62px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-h6, .mat-typography h6 {\\n  font: 400 9.38px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 12px; }\\n.mat-body-strong, .mat-body-2 {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body, .mat-body-1, .mat-typography {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-body p, .mat-body-1 p, .mat-typography p {\\n    margin: 0 0 12px; }\\n.mat-small, .mat-caption {\\n  font: 400 12px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-display-4, .mat-typography .mat-display-4 {\\n  font: 300 112px/112px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 56px;\\n  letter-spacing: -0.05em; }\\n.mat-display-3, .mat-typography .mat-display-3 {\\n  font: 400 56px/56px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.02em; }\\n.mat-display-2, .mat-typography .mat-display-2 {\\n  font: 400 45px/48px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px;\\n  letter-spacing: -0.005em; }\\n.mat-display-1, .mat-typography .mat-display-1 {\\n  font: 400 34px/40px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0 0 64px; }\\n.mat-bottom-sheet-container {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\\n.mat-flat-button, .mat-fab, .mat-mini-fab {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-button-toggle {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-card-title {\\n  font-size: 24px;\\n  font-weight: 500; }\\n.mat-card-header .mat-card-title {\\n  font-size: 20px; }\\n.mat-card-subtitle,\\n.mat-card-content {\\n  font-size: 14px; }\\n.mat-checkbox {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-checkbox-layout .mat-checkbox-label {\\n  line-height: 24px; }\\n.mat-chip {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-chip .mat-chip-trailing-icon.mat-icon,\\n  .mat-chip .mat-chip-remove.mat-icon {\\n    font-size: 18px; }\\n.mat-table {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-cell, .mat-footer-cell {\\n  font-size: 14px; }\\n.mat-calendar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-calendar-body {\\n  font-size: 13px; }\\n.mat-calendar-body-label,\\n.mat-calendar-period-button {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-calendar-table-header th {\\n  font-size: 11px;\\n  font-weight: 400; }\\n.mat-dialog-title {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-expansion-panel-header {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400; }\\n.mat-expansion-panel-content {\\n  font: 400 14px/20px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field {\\n  font-size: inherit;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-form-field-wrapper {\\n  padding-bottom: 1.34375em; }\\n.mat-form-field-prefix .mat-icon,\\n.mat-form-field-suffix .mat-icon {\\n  font-size: 150%;\\n  line-height: 1.125; }\\n.mat-form-field-prefix .mat-icon-button,\\n.mat-form-field-suffix .mat-icon-button {\\n  height: 1.5em;\\n  width: 1.5em; }\\n.mat-form-field-prefix .mat-icon-button .mat-icon,\\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\\n    height: 1.125em;\\n    line-height: 1.125; }\\n.mat-form-field-infix {\\n  padding: 0.5em 0;\\n  border-top: 0.84375em solid transparent; }\\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.34375em) scale(0.75);\\n          transform: translateY(-1.34375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.34374em) scale(0.75);\\n          transform: translateY(-1.34374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-label-wrapper {\\n  top: -0.84375em;\\n  padding-top: 0.84375em; }\\n.mat-form-field-label {\\n  top: 1.34375em; }\\n.mat-form-field-underline {\\n  bottom: 1.34375em; }\\n.mat-form-field-subscript-wrapper {\\n  font-size: 75%;\\n  margin-top: 0.66666667em;\\n  top: calc(100% - 1.79166667em); }\\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\\n  padding-bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-infix {\\n  padding: 0.4375em 0; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\\n  -ms-transform: translateY(-1.28125em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\\n  -ms-transform: translateY(-1.28124em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n          transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\\n  -ms-transform: translateY(-1.28123em) scale(0.75);\\n  width: 133.33335333%; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  top: 1.28125em; }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  bottom: 1.25em; }\\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\\n  margin-top: 0.54166667em;\\n  top: calc(100% - 1.66666667em); }\\n@media print {\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n    -webkit-transform: translateY(-1.28122em) scale(0.75);\\n            transform: translateY(-1.28122em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.28121em) scale(0.75);\\n            transform: translateY(-1.28121em) scale(0.75); }\\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n    -webkit-transform: translateY(-1.2812em) scale(0.75);\\n            transform: translateY(-1.2812em) scale(0.75); } }\\n.mat-form-field-appearance-fill .mat-form-field-infix {\\n  padding: 0.25em 0 0.75em 0; }\\n.mat-form-field-appearance-fill .mat-form-field-label {\\n  top: 1.09375em;\\n  margin-top: -0.5em; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-0.59375em) scale(0.75);\\n          transform: translateY(-0.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-0.59374em) scale(0.75);\\n          transform: translateY(-0.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-form-field-appearance-outline .mat-form-field-infix {\\n  padding: 1em 0 1em 0; }\\n.mat-form-field-appearance-outline .mat-form-field-label {\\n  top: 1.84375em;\\n  margin-top: -0.25em; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n  -webkit-transform: translateY(-1.59375em) scale(0.75);\\n          transform: translateY(-1.59375em) scale(0.75);\\n  width: 133.33333333%; }\\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n.mat-form-field-label {\\n  -webkit-transform: translateY(-1.59374em) scale(0.75);\\n          transform: translateY(-1.59374em) scale(0.75);\\n  width: 133.33334333%; }\\n.mat-grid-tile-header,\\n.mat-grid-tile-footer {\\n  font-size: 14px; }\\n.mat-grid-tile-header .mat-line,\\n  .mat-grid-tile-footer .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-grid-tile-header .mat-line:nth-child(n+2),\\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\ninput.mat-input-element {\\n  margin-top: -0.0625em; }\\n.mat-menu-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px; }\\n.mat-radio-button {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-select-trigger {\\n  height: 1.125em; }\\n.mat-slide-toggle-content {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-slider-thumb-label-text {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-stepper-vertical, .mat-stepper-horizontal {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-step-label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n.mat-step-sub-label-error {\\n  font-weight: normal; }\\n.mat-step-label-error {\\n  font-size: 14px; }\\n.mat-step-label-selected {\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-tab-group {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tab-label, .mat-tab-link {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-toolbar,\\n.mat-toolbar h1,\\n.mat-toolbar h2,\\n.mat-toolbar h3,\\n.mat-toolbar h4,\\n.mat-toolbar h5,\\n.mat-toolbar h6 {\\n  font: 500 20px/32px Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  margin: 0; }\\n.mat-tooltip {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 10px;\\n  padding-top: 6px;\\n  padding-bottom: 6px; }\\n.mat-tooltip-handset {\\n  font-size: 14px;\\n  padding-top: 8px;\\n  padding-bottom: 8px; }\\n.mat-list-item {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-list-base .mat-list-item {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-list-option {\\n  font-size: 16px; }\\n.mat-list-base .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 14px; }\\n.mat-list-base .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px;\\n  font-weight: 500; }\\n.mat-list-base[dense] .mat-list-item {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-item .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option {\\n  font-size: 12px; }\\n.mat-list-base[dense] .mat-list-option .mat-line {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    display: block;\\n    box-sizing: border-box; }\\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\\n      font-size: 12px; }\\n.mat-list-base[dense] .mat-subheader {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 500; }\\n.mat-option {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 16px; }\\n.mat-optgroup-label {\\n  font: 500 14px/24px Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-simple-snackbar {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  font-size: 14px; }\\n.mat-simple-snackbar-action {\\n  line-height: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: 500; }\\n.mat-tree {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  font-weight: 400;\\n  font-size: 14px; }\\n.mat-ripple {\\n  overflow: hidden;\\n  position: relative; }\\n.mat-ripple.mat-ripple-unbounded {\\n  overflow: visible; }\\n.mat-ripple-element {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  transition: opacity, -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  -webkit-transform: scale(0);\\n          transform: scale(0); }\\n@media (-ms-high-contrast: active) {\\n    .mat-ripple-element {\\n      display: none; } }\\n.cdk-visually-hidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none; }\\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%; }\\n.cdk-overlay-container {\\n  position: fixed;\\n  z-index: 1000; }\\n.cdk-overlay-container:empty {\\n    display: none; }\\n.cdk-global-overlay-wrapper {\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000; }\\n.cdk-overlay-pane {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%; }\\n.cdk-overlay-backdrop {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0; }\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n    opacity: 1; }\\n@media screen and (-ms-high-contrast: active) {\\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\\n        opacity: 0.6; } }\\n.cdk-overlay-dark-backdrop {\\n  background: rgba(0, 0, 0, 0.32); }\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\n  opacity: 0; }\\n.cdk-overlay-connected-position-bounding-box {\\n  position: absolute;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px; }\\n.cdk-global-scrollblock {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll; }\\n@keyframes cdk-text-field-autofill-start {\\n  /*!*/ }\\n@keyframes cdk-text-field-autofill-end {\\n  /*!*/ }\\n.cdk-text-field-autofill-monitored:-webkit-autofill {\\n  -webkit-animation-name: cdk-text-field-autofill-start;\\n          animation-name: cdk-text-field-autofill-start; }\\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\\n  -webkit-animation-name: cdk-text-field-autofill-end;\\n          animation-name: cdk-text-field-autofill-end; }\\ntextarea.cdk-textarea-autosize {\\n  resize: none; }\\ntextarea.cdk-textarea-autosize-measuring {\\n  height: auto !important;\\n  overflow: hidden !important;\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important; }\\n.mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.1); }\\n.mat-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n    background: rgba(0, 0, 0, 0.04); }\\n.mat-option.mat-active {\\n    background: rgba(0, 0, 0, 0.04);\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-option.mat-option-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #69f0ae; }\\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #f44336; }\\n.mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-optgroup-disabled .mat-optgroup-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-pseudo-checkbox {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-pseudo-checkbox::after {\\n    color: #fafafa; }\\n.mat-pseudo-checkbox-checked,\\n.mat-pseudo-checkbox-indeterminate,\\n.mat-accent .mat-pseudo-checkbox-checked,\\n.mat-accent .mat-pseudo-checkbox-indeterminate {\\n  background: #69f0ae; }\\n.mat-primary .mat-pseudo-checkbox-checked,\\n.mat-primary .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-warn .mat-pseudo-checkbox-checked,\\n.mat-warn .mat-pseudo-checkbox-indeterminate {\\n  background: #f44336; }\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\\n  background: #b0b0b0; }\\n.mat-elevation-z0 {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z1 {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z2 {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z3 {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z4 {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z5 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z6 {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z7 {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z8 {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z9 {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z10 {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z11 {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z12 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z13 {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z14 {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z15 {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z16 {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z17 {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z18 {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z19 {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z20 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z21 {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z22 {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z23 {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\\n.mat-elevation-z24 {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\\n.mat-app-background {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-theme-loaded-marker {\\n  display: none; }\\n.mat-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-autocomplete-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n    background: white; }\\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n      color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n@media (-ms-high-contrast: active) {\\n    .mat-badge-content {\\n      outline: solid 1px;\\n      border-radius: 0; } }\\n.mat-badge-accent .mat-badge-content {\\n  background: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-badge-warn .mat-badge-content {\\n  color: white;\\n  background: #f44336; }\\n.mat-badge {\\n  position: relative; }\\n.mat-badge-hidden .mat-badge-content {\\n  display: none; }\\n.mat-badge-disabled .mat-badge-content {\\n  background: #b9b9b9;\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-badge-content {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  transition: -webkit-transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out;\\n  transition: transform 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\\n  -webkit-transform: scale(0.6);\\n          transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none; }\\n.mat-badge-content.mat-badge-active {\\n  -webkit-transform: none;\\n          transform: none; }\\n.mat-badge-small .mat-badge-content {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px; }\\n.mat-badge-small.mat-badge-above .mat-badge-content {\\n  top: -8px; }\\n.mat-badge-small.mat-badge-below .mat-badge-content {\\n  bottom: -8px; }\\n.mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -16px; }\\n.mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: -16px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -16px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -8px; }\\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -8px; }\\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -8px; }\\n.mat-badge-medium .mat-badge-content {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px; }\\n.mat-badge-medium.mat-badge-above .mat-badge-content {\\n  top: -11px; }\\n.mat-badge-medium.mat-badge-below .mat-badge-content {\\n  bottom: -11px; }\\n.mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -22px; }\\n.mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: -22px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -22px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -11px; }\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -11px; }\\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -11px; }\\n.mat-badge-large .mat-badge-content {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px; }\\n.mat-badge-large.mat-badge-above .mat-badge-content {\\n  top: -14px; }\\n.mat-badge-large.mat-badge-below .mat-badge-content {\\n  bottom: -14px; }\\n.mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -28px; }\\n.mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: -28px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -28px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\\n  left: auto;\\n  right: -14px; }\\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: -14px; }\\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\\n  right: auto;\\n  left: -14px; }\\n.mat-bottom-sheet-container {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-button, .mat-icon-button, .mat-stroked-button {\\n  color: inherit;\\n  background: transparent; }\\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\\n    color: #f44336; }\\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\\n    color: #69f0ae; }\\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\\n    color: #f44336; }\\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\\n    background-color: #69f0ae; }\\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\\n    background-color: #f44336; }\\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\\n    background-color: transparent; }\\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\\n    opacity: 0.1;\\n    background-color: currentColor; }\\n.mat-button-focus-overlay {\\n  background: black; }\\n.mat-stroked-button:not([disabled]) {\\n  border-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\\n  color: rgba(0, 0, 0, 0.87);\\n  background-color: white; }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    color: white; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    color: white; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    color: rgba(0, 0, 0, 0.26); }\\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\\n    background-color: #f44336; }\\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\\n    background-color: rgba(0, 0, 0, 0.1); }\\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n.mat-stroked-button:not([class*='mat-elevation-z']), .mat-flat-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\\n.mat-raised-button[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([class*='mat-elevation-z']), .mat-mini-fab:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-fab:not([disabled]):active:not([class*='mat-elevation-z']), .mat-mini-fab:not([disabled]):active:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\\n.mat-fab[disabled]:not([class*='mat-elevation-z']), .mat-mini-fab[disabled]:not([class*='mat-elevation-z']) {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone,\\n.mat-button-toggle-group {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  box-shadow: none; }\\n.mat-button-toggle {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-button-toggle .mat-button-toggle-focus-overlay {\\n    background-color: rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-appearance-standard {\\n  color: rgba(0, 0, 0, 0.87);\\n  background: white; }\\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\\n    background-color: black; }\\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12); }\\n[dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\\n  border-left: none;\\n  border-right: none;\\n  border-top: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-button-toggle-checked {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-button-toggle-disabled {\\n  color: rgba(0, 0, 0, 0.26);\\n  background-color: #eeeeee; }\\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\\n    background: white; }\\n.mat-button-toggle-disabled.mat-button-toggle-checked {\\n    background-color: #bdbdbd; }\\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\\n.mat-button-toggle-group-appearance-standard {\\n  border: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-card {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-card:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card.mat-card-flat:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-card-subtitle {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-frame {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-checkbox-checkmark {\\n  fill: #fafafa; }\\n.mat-checkbox-checkmark-path {\\n  stroke: #fafafa !important; }\\n@media (-ms-high-contrast: black-on-white) {\\n    .mat-checkbox-checkmark-path {\\n      stroke: #000 !important; } }\\n.mat-checkbox-mixedmark {\\n  background-color: #fafafa; }\\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\\n  background-color: #69f0ae; }\\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\\n  background-color: #f44336; }\\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\\n  background-color: #b0b0b0; }\\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\\n  border-color: #b0b0b0; }\\n.mat-checkbox-disabled .mat-checkbox-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-disabled {\\n    opacity: 0.5; } }\\n@media (-ms-high-contrast: active) {\\n  .mat-checkbox-background {\\n    background: none; } }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-chip.mat-standard-chip {\\n  background-color: #e0e0e0;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\\n    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\\n    opacity: 0.54; }\\n.mat-chip.mat-standard-chip.mat-chip-disabled {\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip::after {\\n    background: black; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\\n    color: white;\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\\n    background: rgba(255, 255, 255, 0.1); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\\n  background-color: #69f0ae;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\\n    color: rgba(0, 0, 0, 0.87);\\n    opacity: 0.4; }\\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\\n    background: rgba(0, 0, 0, 0.1); }\\n.mat-table {\\n  background: white; }\\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\\nmat-header-row, mat-row, mat-footer-row,\\n[mat-header-row], [mat-row], [mat-footer-row],\\n.mat-table-sticky {\\n  background: inherit; }\\nmat-row, mat-header-row, mat-footer-row,\\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\\n.mat-header-cell {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-cell, .mat-footer-cell {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-calendar-arrow {\\n  border-top-color: rgba(0, 0, 0, 0.54); }\\n.mat-datepicker-toggle,\\n.mat-datepicker-content .mat-calendar-next-button,\\n.mat-datepicker-content .mat-calendar-previous-button {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-table-header {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-table-header-divider::after {\\n  background: rgba(0, 0, 0, 0.12); }\\n.mat-calendar-body-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-calendar-body-cell-content {\\n  color: rgba(0, 0, 0, 0.87);\\n  border-color: transparent; }\\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n  border-color: rgba(0, 0, 0, 0.18); }\\n.mat-calendar-body-selected {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\\n  background-color: rgba(244, 67, 54, 0.4); }\\n.mat-calendar-body-today.mat-calendar-body-selected {\\n  box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\\n    background-color: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(105, 240, 174, 0.4); }\\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\\n    background-color: #f44336;\\n    color: white; }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: rgba(244, 67, 54, 0.4); }\\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\\n    box-shadow: inset 0 0 0 1px white; }\\n.mat-datepicker-content-touch {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\\n.mat-datepicker-toggle-active {\\n  color: #f44336; }\\n.mat-datepicker-toggle-active.mat-accent {\\n    color: #69f0ae; }\\n.mat-datepicker-toggle-active.mat-warn {\\n    color: #f44336; }\\n.mat-dialog-container {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-divider {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-divider-vertical {\\n  border-right-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\\n.mat-action-row {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-keyboard-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']).cdk-program-focused, .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled='true']):hover {\\n  background: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\\n.mat-expansion-panel-header:hover {\\n    background: white; } }\\n.mat-expansion-panel-header-title {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-expansion-panel-header-description,\\n.mat-expansion-indicator::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-expansion-panel-header[aria-disabled='true'] {\\n  color: rgba(0, 0, 0, 0.26); }\\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\\n    color: inherit; }\\n.mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-hint {\\n  color: rgba(0, 0, 0, 0.6); }\\n.mat-form-field.mat-focused .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\\n    color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\\n    color: #f44336; }\\n.mat-focused .mat-form-field-required-marker {\\n  color: #69f0ae; }\\n.mat-form-field-ripple {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #f44336; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\\n    background-color: #69f0ae; }\\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\\n    background-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\\n  color: #69f0ae; }\\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\\n  color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\\n    color: #f44336; }\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\\n  background-color: #f44336; }\\n.mat-error {\\n  color: #f44336; }\\n.mat-form-field-appearance-legacy .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-hint {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-form-field-appearance-legacy .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-standard .mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\\n  background-size: 4px 100%;\\n  background-repeat: repeat-x; }\\n.mat-form-field-appearance-fill .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\\n  background-color: rgba(0, 0, 0, 0.02); }\\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\\n  background-color: rgba(0, 0, 0, 0.42); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\\n  background-color: transparent; }\\n.mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.12); }\\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\\n  color: #69f0ae; }\\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\\n  color: #f44336; }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\\n  color: rgba(0, 0, 0, 0.06); }\\n.mat-icon.mat-primary {\\n  color: #f44336; }\\n.mat-icon.mat-accent {\\n  color: #69f0ae; }\\n.mat-icon.mat-warn {\\n  color: #f44336; }\\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-input-element:disabled,\\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-input-element {\\n  caret-color: #f44336; }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-moz-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-input-element:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.42); }\\n.mat-accent .mat-input-element {\\n  caret-color: #69f0ae; }\\n.mat-warn .mat-input-element,\\n.mat-form-field-invalid .mat-input-element {\\n  caret-color: #f44336; }\\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\\n  color: #f44336; }\\n.mat-list-base .mat-list-item {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-list-option {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-list-base .mat-subheader {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-list-item-disabled {\\n  background-color: #eeeeee; }\\n.mat-list-option:hover, .mat-list-option:focus,\\n.mat-nav-list .mat-list-item:hover,\\n.mat-nav-list .mat-list-item:focus {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-menu-panel {\\n  background: white; }\\n.mat-menu-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-menu-item {\\n  background: transparent;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-menu-item .mat-icon-no-color,\\n.mat-menu-item-submenu-trigger::after {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-menu-item:hover:not([disabled]),\\n.mat-menu-item.cdk-program-focused:not([disabled]),\\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\\n.mat-menu-item-highlighted:not([disabled]) {\\n  background: rgba(0, 0, 0, 0.04); }\\n.mat-paginator {\\n  background: white; }\\n.mat-paginator,\\n.mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-paginator-decrement,\\n.mat-paginator-increment {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-paginator-first,\\n.mat-paginator-last {\\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\\n.mat-icon-button[disabled] .mat-paginator-decrement,\\n.mat-icon-button[disabled] .mat-paginator-increment,\\n.mat-icon-button[disabled] .mat-paginator-first,\\n.mat-icon-button[disabled] .mat-paginator-last {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\\n  fill: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\\n  background-color: #b9f6ca; }\\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\\n  background-color: #69f0ae; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\\n  fill: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\\n  background-color: #ffcdd2; }\\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\\n  background-color: #f44336; }\\n.mat-progress-spinner circle, .mat-spinner circle {\\n  stroke: #f44336; }\\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\\n  stroke: #69f0ae; }\\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\\n  stroke: #f44336; }\\n.mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.54); }\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #69f0ae; }\\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\\n  background-color: #69f0ae; }\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\\n  border-color: #f44336; }\\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,\\n.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\\n  background-color: #f44336; }\\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-radio-button .mat-ripple-element {\\n  background-color: black; }\\n.mat-select-value {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-select-placeholder {\\n  color: rgba(0, 0, 0, 0.42); }\\n.mat-select-disabled .mat-select-value {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-select-panel {\\n  background: white; }\\n.mat-select-panel:not([class*='mat-elevation-z']) {\\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\\n    background: rgba(0, 0, 0, 0.12); }\\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\\n  color: #69f0ae; }\\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\\n  color: #f44336; }\\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\\n  color: rgba(0, 0, 0, 0.38); }\\n.mat-drawer-container {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer {\\n  background-color: white;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-drawer.mat-drawer-push {\\n    background-color: white; }\\n.mat-drawer:not(.mat-drawer-side) {\\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side {\\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-side.mat-drawer-end {\\n    border-left: solid 1px rgba(0, 0, 0, 0.12);\\n    border-right: none; }\\n[dir='rtl'] .mat-drawer-side {\\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\\n  border-right: none; }\\n[dir='rtl'] .mat-drawer-side.mat-drawer-end {\\n    border-left: none;\\n    border-right: solid 1px rgba(0, 0, 0, 0.12); }\\n.mat-drawer-backdrop.mat-drawer-shown {\\n  background-color: rgba(0, 0, 0, 0.6); }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(105, 240, 174, 0.54); }\\n.mat-slide-toggle.mat-checked .mat-ripple-element {\\n  background-color: #69f0ae; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\\n  background-color: #f44336; }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\\n  background-color: rgba(244, 67, 54, 0.54); }\\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\\n  background-color: #f44336; }\\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\\n  background-color: black; }\\n.mat-slide-toggle-thumb {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n  background-color: #fafafa; }\\n.mat-slide-toggle-bar {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-primary .mat-slider-track-fill,\\n.mat-primary .mat-slider-thumb,\\n.mat-primary .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-primary .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-accent .mat-slider-track-fill,\\n.mat-accent .mat-slider-thumb,\\n.mat-accent .mat-slider-thumb-label {\\n  background-color: #69f0ae; }\\n.mat-accent .mat-slider-thumb-label-text {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-warn .mat-slider-track-fill,\\n.mat-warn .mat-slider-thumb,\\n.mat-warn .mat-slider-thumb-label {\\n  background-color: #f44336; }\\n.mat-warn .mat-slider-thumb-label-text {\\n  color: white; }\\n.mat-slider-focus-ring {\\n  background-color: rgba(105, 240, 174, 0.2); }\\n.mat-slider:hover .mat-slider-track-background,\\n.cdk-focused .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-disabled .mat-slider-track-background,\\n.mat-slider-disabled .mat-slider-track-fill,\\n.mat-slider-disabled .mat-slider-thumb {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-disabled:hover .mat-slider-track-background {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value .mat-slider-focus-ring {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\\n  background-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26);\\n  background-color: transparent; }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\\n  border-color: rgba(0, 0, 0, 0.26); }\\n.mat-slider-has-ticks .mat-slider-wrapper::after {\\n  border-color: rgba(0, 0, 0, 0.7); }\\n.mat-slider-horizontal .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-slider-vertical .mat-slider-ticks {\\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\\n  background-color: rgba(0, 0, 0, 0.04); }\\n@media (hover: none) {\\n  .mat-step-header:hover {\\n    background: none; } }\\n.mat-step-header .mat-step-label,\\n.mat-step-header .mat-step-optional {\\n  color: rgba(0, 0, 0, 0.54); }\\n.mat-step-header .mat-step-icon {\\n  background-color: rgba(0, 0, 0, 0.54);\\n  color: white; }\\n.mat-step-header .mat-step-icon-selected,\\n.mat-step-header .mat-step-icon-state-done,\\n.mat-step-header .mat-step-icon-state-edit {\\n  background-color: #f44336;\\n  color: white; }\\n.mat-step-header .mat-step-icon-state-error {\\n  background-color: transparent;\\n  color: #f44336; }\\n.mat-step-header .mat-step-label.mat-step-label-active {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-step-header .mat-step-label.mat-step-label-error {\\n  color: #f44336; }\\n.mat-stepper-horizontal, .mat-stepper-vertical {\\n  background-color: white; }\\n.mat-stepper-vertical-line::before {\\n  border-left-color: rgba(0, 0, 0, 0.12); }\\n.mat-horizontal-stepper-header::before,\\n.mat-horizontal-stepper-header::after,\\n.mat-stepper-horizontal-line {\\n  border-top-color: rgba(0, 0, 0, 0.12); }\\n.mat-sort-header-arrow {\\n  color: #757575; }\\n.mat-tab-nav-bar,\\n.mat-tab-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\\n.mat-tab-group-inverted-header .mat-tab-header {\\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\\n  border-bottom: none; }\\n.mat-tab-label, .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.38); }\\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n.mat-tab-nav-bar[class*='mat-background-'] {\\n  border-bottom: none;\\n  border-top: none; }\\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\\n  background-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\\n  background-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(185, 246, 202, 0.3); }\\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links {\\n  background-color: #69f0ae; }\\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\\n    color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.87); }\\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(0, 0, 0, 0.4); }\\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\\n  background-color: rgba(0, 0, 0, 0.12); }\\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\\n  background-color: rgba(255, 205, 210, 0.3); }\\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links {\\n  background-color: #f44336; }\\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\\n  color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\\n    color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\\n  border-color: white; }\\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n  border-color: rgba(255, 255, 255, 0.4); }\\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\\n  background-color: rgba(255, 255, 255, 0.12); }\\n.mat-toolbar {\\n  background: whitesmoke;\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-primary {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar.mat-accent {\\n    background: #69f0ae;\\n    color: rgba(0, 0, 0, 0.87); }\\n.mat-toolbar.mat-warn {\\n    background: #f44336;\\n    color: white; }\\n.mat-toolbar .mat-form-field-underline,\\n  .mat-toolbar .mat-form-field-ripple,\\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\\n    background-color: currentColor; }\\n.mat-toolbar .mat-form-field-label,\\n  .mat-toolbar .mat-focused .mat-form-field-label,\\n  .mat-toolbar .mat-select-value,\\n  .mat-toolbar .mat-select-arrow,\\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\\n    color: inherit; }\\n.mat-toolbar .mat-input-element {\\n    caret-color: currentColor; }\\n.mat-tooltip {\\n  background: rgba(97, 97, 97, 0.9); }\\n.mat-tree {\\n  background: white; }\\n.mat-tree-node,\\n.mat-nested-tree-node {\\n  color: rgba(0, 0, 0, 0.87); }\\n.mat-snack-bar-container {\\n  color: rgba(255, 255, 255, 0.7);\\n  background: #323232;\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\\n.mat-simple-snackbar-action {\\n  color: #69f0ae; }\\nbody {\\n  margin: 0;\\n  font-family: Roboto; }\\n.warn {\\n  color: #ef9a9a; }\\n.error {\\n  color: #ff1744; }\\n#list {\\n  /* 164px = Height of toolbar (128) plus footer (20) + 2*margin */\\n  max-height: calc(100vh - 164px);\\n  min-width: 300px;\\n  overflow: auto; }\\n.selected {\\n  background-color: #69f0ae; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {MatRadioChange} from '@angular/material';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {WorkflowType} from '../model/translation-project';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {\r\n  FILTER_ALL, FILTER_AUTOTRANSLATED, FILTER_AUTOTRANSLATED_FAILED, FILTER_AUTOTRANSLATED_IGNORED, FILTER_NEEDS_REVIEW,\r\n  FILTER_SUBSTRING,\r\n  FILTER_UNTRANSLATED,\r\n  TranslationUnitFilterService\r\n} from '../model/filters/translation-unit-filter.service';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n/**\r\n * Component that shows a list of trans units.\r\n * It allows to filter by different criteria and to select a unit.\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit-list',\r\n  templateUrl: './translate-unit-list.component.html',\r\n  styleUrls: ['./translate-unit-list.component.scss']\r\n})\r\nexport class TranslateUnitListComponent implements OnInit {\r\n\r\n  private _translationFileView: TranslationFileView;\r\n  public _selectedFilterName = 'all';\r\n  public substringToSearch: string;\r\n  private substringSubject: Subject<string>;\r\n  private substringSubscription: Subscription;\r\n\r\n  /**\r\n   * workflowType determines, what filters are visibile.\r\n   */\r\n  @Input() workflowType: WorkflowType;\r\n\r\n  @Input() hasAutotranslatedUnits: boolean;\r\n\r\n  /**\r\n   * Emitted, when user wants to navigate to another unit.\r\n   */\r\n  @Output() changeTranslationUnit: EventEmitter<TranslationUnit> = new EventEmitter();\r\n\r\n  constructor(private translationUnitFilterService: TranslationUnitFilterService) {\r\n    this.translationFileView = new TranslationFileView(null);\r\n    this.substringSubject = new Subject<string>();\r\n  }\r\n\r\n  @Input() public get translationFileView() {\r\n    return this._translationFileView;\r\n  }\r\n\r\n  public set translationFileView(view: TranslationFileView) {\r\n    if (view) {\r\n      this._translationFileView = view;\r\n    } else {\r\n      this._translationFileView = new TranslationFileView(null);\r\n    }\r\n    this._selectedFilterName = this._translationFileView.activeFilter().name();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public transUnits(): TranslationUnit[] {\r\n    return this.translationFileView.scrollabeTransUnits();\r\n  }\r\n\r\n  public showAll() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_ALL));\r\n  }\r\n\r\n  public showUntranslated() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_UNTRANSLATED));\r\n  }\r\n\r\n  public showNeedsReview() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_NEEDS_REVIEW));\r\n  }\r\n\r\n  public showBySearchFilter() {\r\n    if (this.substringSubscription) {\r\n      this.substringSubscription.unsubscribe();\r\n    }\r\n    const substr = this.substringToSearch ? this.substringToSearch : '';\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_SUBSTRING, substr));\r\n    this.substringSubscription = this.substringSubject.pipe(debounceTime(200)).subscribe((sub) => {\r\n      this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_SUBSTRING, sub));\r\n    });\r\n  }\r\n\r\n  substringToSearchChange() {\r\n    this.substringSubject.next(this.substringToSearch);\r\n  }\r\n\r\n  public showAutotranslated() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED));\r\n  }\r\n\r\n  public showAutotranslatedFailed() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_FAILED));\r\n  }\r\n\r\n  public showAutotranslatedIgnored() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_IGNORED));\r\n  }\r\n\r\n  filterChanged(changeEvent: MatRadioChange) {\r\n    switch (changeEvent.value) {\r\n      case 'all':\r\n        this.showAll();\r\n        break;\r\n      case 'untranslated':\r\n        this.showUntranslated();\r\n        break;\r\n      case 'needsReview':\r\n        this.showNeedsReview();\r\n        break;\r\n      case 'bySubstring':\r\n        this.showBySearchFilter();\r\n        break;\r\n      case 'autotranslated':\r\n        this.showAutotranslated();\r\n        break;\r\n      case 'autotranslatedFailed':\r\n        this.showAutotranslatedFailed();\r\n        break;\r\n      case 'autotranslatedIgnored':\r\n        this.showAutotranslatedIgnored();\r\n        break;\r\n      default:\r\n        // do nothing\r\n    }\r\n  }\r\n\r\n  public selectTransUnit(tu: TranslationUnit) {\r\n    this.changeTranslationUnit.emit(tu);\r\n  }\r\n\r\n  isSelected(tu: TranslationUnit): boolean {\r\n    return tu && tu === this.translationFileView.currentTransUnit();\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.workflowType === WorkflowType.WITH_REVIEW;\r\n  }\r\n\r\n}\r\n","module.exports = \".error {\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n.warning {\\r\\n  color: orange;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbnNsYXRlLXVuaXQtd2FybmluZy1jb25maXJtLWRpYWxvZy90cmFuc2xhdGUtdW5pdC13YXJuaW5nLWNvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxjQUFjO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC90cmFuc2xhdGUtdW5pdC13YXJuaW5nLWNvbmZpcm0tZGlhbG9nL3RyYW5zbGF0ZS11bml0LXdhcm5pbmctY29uZmlybS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvciB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLndhcm5pbmcge1xyXG4gIGNvbG9yOiBvcmFuZ2U7XHJcbn1cclxuIl19 */\"","module.exports = \"<h3 matDialogTitle i18n>There are problems with the translation</h3>\\r\\n<div mat-dialog-content>\\r\\n  <p class=\\\"warning\\\" *ngFor=\\\"let warning of data.warnings\\\"><mat-icon>warning</mat-icon>&nbsp;{{warning}}</p>\\r\\n  <p class=\\\"error\\\" *ngFor=\\\"let error of data.errors\\\"><mat-icon>error</mat-icon>&nbsp;{{error}}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button matDialogClose (click)=\\\"accept()\\\" [disabled]=\\\"data?.errors?.length > 0\\\" i18n>Accept, I know what I do</button>\\r\\n  <button mat-button matDialogClose (click)=\\\"discard()\\\" i18n>Discard changes</button>\\r\\n  <button mat-button matDialogClose (click)=\\\"cancel()\\\" i18n>Cancel</button>\\r\\n</div>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n\r\n/**\r\n * Dialog used by translate-unit-component to show errors and warning.\r\n * There are 3 possible results:\r\n * 'cancel': do not do anything, stay on this trans unit.\r\n * 'discard': do not translate, leave transunit unchanged, but go to the next/prev unit.\r\n * 'accept': translate tu as given, ignoring warnings (errors cannot be ignored).\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit-warning-confirm-dialog',\r\n  templateUrl: './translate-unit-warning-confirm-dialog.component.html',\r\n  styleUrls: ['./translate-unit-warning-confirm-dialog.component.css']\r\n})\r\nexport class TranslateUnitWarningConfirmDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TranslateUnitWarningConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  accept() {\r\n    this.dialogRef.close('accept');\r\n  }\r\n\r\n  discard() {\r\n    this.dialogRef.close('discard');\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close('cancel');\r\n  }\r\n}\r\n","module.exports = \"mat-card {\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n.mdcardcontent_gt {\\r\\n  height: calc(100vh - 456px);\\r\\n  /* 456 = toolbar 128 + 2 * margin 8 + projectstatus (72 oder 132,5) + 2 * card padding 24 + card header 56 + 2 * card content margin 16 + action bar 44 + footer 20 */\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.mdcardcontent_sm {\\r\\n  height: calc(100vh - 368px);\\r\\n  /* 368 = toolbar 112 + 2 * margin 8 + filter 40 + 2 * card padding 24 + card header 56 + 2 * card content margin 16 + action bar 44 + footer 20 */\\r\\n}\\r\\n\\r\\nmat-card-header {\\r\\n  min-height: 50px;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n  min-width: 250px;\\r\\n}\\r\\n\\r\\nmat-card-content {\\r\\n  overflow: scroll;\\r\\n}\\r\\n\\r\\n#translation {\\r\\n  border: 2px solid;\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n#translationinput {\\r\\n  border: 1px solid;\\r\\n}\\r\\n\\r\\n#sourcemessage {\\r\\n  border: 1px solid;\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n.normalizationhint {\\r\\n  font-size: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbnNsYXRlLXVuaXQvdHJhbnNsYXRlLXVuaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtDQUNsQjs7QUFFRDtFQUNFLDRCQUE0QjtFQUM1QixzS0FBc0s7RUFDdEssZUFBZTtDQUNoQjs7QUFFRDtFQUNFLDRCQUE0QjtFQUM1QixrSkFBa0o7Q0FDbko7O0FBRUQ7RUFDRSxpQkFBaUI7Q0FDbEI7O0FBRUQ7RUFDRSxpQkFBaUI7Q0FDbEI7O0FBRUQ7RUFDRSxpQkFBaUI7Q0FDbEI7O0FBRUQ7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtDQUNkOztBQUVEO0VBQ0Usa0JBQWtCO0NBQ25COztBQUNEO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7Q0FDZDs7QUFFRDtFQUNFLGdCQUFnQjtDQUNqQiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zbGF0ZS11bml0L3RyYW5zbGF0ZS11bml0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XHJcbiAgbWluLXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuLm1kY2FyZGNvbnRlbnRfZ3Qge1xyXG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDQ1NnB4KTtcclxuICAvKiA0NTYgPSB0b29sYmFyIDEyOCArIDIgKiBtYXJnaW4gOCArIHByb2plY3RzdGF0dXMgKDcyIG9kZXIgMTMyLDUpICsgMiAqIGNhcmQgcGFkZGluZyAyNCArIGNhcmQgaGVhZGVyIDU2ICsgMiAqIGNhcmQgY29udGVudCBtYXJnaW4gMTYgKyBhY3Rpb24gYmFyIDQ0ICsgZm9vdGVyIDIwICovXHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi5tZGNhcmRjb250ZW50X3NtIHtcclxuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAzNjhweCk7XHJcbiAgLyogMzY4ID0gdG9vbGJhciAxMTIgKyAyICogbWFyZ2luIDggKyBmaWx0ZXIgNDAgKyAyICogY2FyZCBwYWRkaW5nIDI0ICsgY2FyZCBoZWFkZXIgNTYgKyAyICogY2FyZCBjb250ZW50IG1hcmdpbiAxNiArIGFjdGlvbiBiYXIgNDQgKyBmb290ZXIgMjAgKi9cclxufVxyXG5cclxubWF0LWNhcmQtaGVhZGVyIHtcclxuICBtaW4taGVpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgbWluLXdpZHRoOiAyNTBweDtcclxufVxyXG5cclxubWF0LWNhcmQtY29udGVudCB7XHJcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcclxufVxyXG5cclxuI3RyYW5zbGF0aW9uIHtcclxuICBib3JkZXI6IDJweCBzb2xpZDtcclxuICBwYWRkaW5nOiA1cHg7XHJcbn1cclxuXHJcbiN0cmFuc2xhdGlvbmlucHV0IHtcclxuICBib3JkZXI6IDFweCBzb2xpZDtcclxufVxyXG4jc291cmNlbWVzc2FnZSB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgcGFkZGluZzogNXB4O1xyXG59XHJcblxyXG4ubm9ybWFsaXphdGlvbmhpbnQge1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<mat-card *ngIf=\\\"!translationUnit\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title i18n>No Translation Unit</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content style=\\\"overflow: hidden\\\">\\r\\n    <p i18n>no content</p>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card *ngIf=\\\"translationUnit\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n      <ng-container i18n>State {{targetState()}}</ng-container>\\r\\n      <mat-icon *ngIf=\\\"targetState() === 'final'\\\">done</mat-icon>\\r\\n      <mat-icon *ngIf=\\\"targetState() === 'translated'\\\">label_outline</mat-icon>\\r\\n      <mat-icon *ngIf=\\\"targetState() === 'new'\\\">translate</mat-icon>\\r\\n      <button mat-icon-button (click)=\\\"showTransUnitID()\\\" matTooltip=\\\"ID {{transUnitID()}}\\\"><mat-icon>info</mat-icon></button>\\r\\n      <button mat-icon-button *ngIf=\\\"sourceRef()\\\" (click)=\\\"showSourceRefInfo()\\\" matTooltip=\\\"{{sourceRef()}}\\\"><mat-icon>location_on</mat-icon></button>\\r\\n    </mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content fxLayout=\\\"column\\\" fxLayoutGap=\\\"5px\\\" [ngClass.gt-sm]=\\\"'mdcardcontent_gt'\\\" [ngClass.lt-md]=\\\"'mdcardcontent_sm'\\\">\\r\\n    <div>\\r\\n      <div id=\\\"sourcemessage\\\">\\r\\n        <app-language [code]=\\\"sourceLanguage()\\\"></app-language>\\r\\n        <app-normalized-message-input [readonly]=\\\"true\\\" [normalized]=\\\"showNormalized\\\" [message]=\\\"sourceContentNormalized()\\\"></app-normalized-message-input>\\r\\n        <p *ngIf=\\\"sourceDescription()\\\"><b i18n>Description</b> {{sourceDescription()}}</p>\\r\\n        <p *ngIf=\\\"sourceMeaning()\\\"><b i18n>Meaning</b> {{sourceMeaning()}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form id=\\\"translation\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"form\\\">\\r\\n      <p fxLayout=\\\"row\\\"><span i18n>Your translation to</span>&nbsp;<app-language [code]=\\\"targetLanguage()\\\"></app-language></p>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\" fxFlex=\\\"noshrink\\\">\\r\\n        <div fxLayout=\\\"column\\\">\\r\\n          <mat-slide-toggle formControlName=\\\"showNormalized\\\" color=\\\"accent\\\"\\r\\n                           matTooltip=\\\"In normalization mode all markup contained in the messsages is shown in a simplified, format neutral way.\\\"\\r\\n                           i18n-matTooltip i18n>Normalization mode\\r\\n          </mat-slide-toggle>\\r\\n          <p class=\\\"normalizationhint\\\" *ngIf=\\\"showNormalized\\\" i18n>(switch off to show native message)</p>\\r\\n          <p class=\\\"normalizationhint\\\" *ngIf=\\\"!showNormalized\\\" i18n>(switch on to use normalization)</p>\\r\\n        </div>\\r\\n        <button *ngIf=\\\"!reviewMode\\\" mat-icon-button\\r\\n                fxFlexAlign=\\\"start\\\"\\r\\n                mat-button color=\\\"accent\\\"\\r\\n                (click)=\\\"undo()\\\"\\r\\n                [disabled]=\\\"!isTranslationChanged()\\\"\\r\\n                matTooltip=\\\"undo changes\\\" i18n-matTooltip>\\r\\n          <mat-icon>undo</mat-icon>\\r\\n        </button>\\r\\n        <button *ngIf=\\\"!reviewMode\\\" mat-mini-fab\\r\\n                fxFlexAlign=\\\"start\\\"\\r\\n                mat-button color=\\\"accent\\\"\\r\\n                (click)=\\\"autoTranslate()\\\"\\r\\n                [disabled]=\\\"autoTranslateDisabled() | async\\\"\\r\\n                matTooltip=\\\"press to get a translation suggestion from Google Translate\\\" i18n-matTooltip>\\r\\n          <mat-icon>g_translate</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n      <app-normalized-message-input id=\\\"translationinput\\\" [readonly]=\\\"reviewMode\\\" [normalized]=\\\"showNormalized\\\"\\r\\n                                    [message]=\\\"editedTargetContentNormalized()\\\"\\r\\n                                    formControlName=\\\"_editedTargetMessage\\\"\\r\\n                                    (accept)=\\\"next()\\\"></app-normalized-message-input>\\r\\n      <p *ngFor=\\\"let w of warnings()\\\" class=\\\"warn\\\"><mat-icon>warning</mat-icon>&nbsp;{{w}}</p>\\r\\n      <p *ngFor=\\\"let e of errors()\\\" class=\\\"error\\\"><mat-icon>error</mat-icon>&nbsp;{{e}}</p>\\r\\n      <div fxLayout=\\\"row\\\">\\r\\n        <button *ngIf=\\\"!reviewMode\\\"\\r\\n                fxFlexAlign=\\\"start\\\"\\r\\n                mat-button color=\\\"primary\\\"\\r\\n                (click)=\\\"markTranslated()\\\"\\r\\n                i18n\\r\\n                matTooltip=\\\"press to accept the given translation\\\" i18n-matTooltip>\\r\\n          mark as translated\\r\\n        </button>\\r\\n        <button *ngIf=\\\"reviewMode && targetState() === 'translated'\\\"\\r\\n                fxFlexAlign=\\\"start\\\"\\r\\n                mat-button color=\\\"primary\\\"\\r\\n                (click)=\\\"markReviewed()\\\"\\r\\n                i18n\\r\\n                matTooltip=\\\"press to accept the given translation as reviewed\\\" i18n-matTooltip>\\r\\n          mark as reviewed\\r\\n        </button>\\r\\n        <button *ngIf=\\\"reviewMode && targetState() === 'final'\\\"\\r\\n                fxFlexAlign=\\\"start\\\"\\r\\n                mat-button color=\\\"primary\\\"\\r\\n                (click)=\\\"markTranslated()\\\"\\r\\n                i18n\\r\\n                matTooltip=\\\"press to reset the reviewed translation to 'translated'\\\" i18n-matTooltip>\\r\\n          mark as translated, but not reviewed\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-button i18n (click)=\\\"prev()\\\"\\r\\n            [disabled]=\\\"!hasPrev()\\\"\\r\\n            matTooltip=\\\"accept translation and go to previous unit\\\" i18n-matTooltip>\\r\\n      Previous\\r\\n    </button>\\r\\n    <button mat-button i18n (click)=\\\"next()\\\"\\r\\n            [disabled]=\\\"!hasNext()\\\"\\r\\n            matTooltip=\\\"accept translation and go to next unit (Keyboard shortcut 'Ctrl Enter')\\\" i18n-matTooltip>\\r\\n      Next\\r\\n    </button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange, SimpleChanges} from '@angular/core';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {MatDialog, MatSnackBar} from '@angular/material';\r\nimport {NormalizedMessage} from '../model/normalized-message';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Observable, of} from 'rxjs';\r\nimport {TranslateUnitWarningConfirmDialogComponent} from '../translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {WorkflowType} from '../model/translation-project';\r\nimport {STATE_FINAL, STATE_TRANSLATED} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {AutoTranslateServiceAPI} from '../model/auto-translate-service-api';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {map} from 'rxjs/operators';\r\n\r\nexport enum NavigationDirection {\r\n  NEXT,\r\n  PREV,\r\n  STAY\r\n}\r\n\r\nexport interface TranslateUnitChange {\r\n  changedUnit?: TranslationUnit;\r\n  navigationDirection: NavigationDirection;\r\n}\r\n\r\n/**\r\n * Component to input a new translation.\r\n * It shows the source and allows to input the target text.\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit',\r\n  templateUrl: './translate-unit.component.html',\r\n  styleUrls: ['./translate-unit.component.css']\r\n})\r\nexport class TranslateUnitComponent implements OnInit, OnChanges {\r\n\r\n  @Input() translationFileView: TranslationFileView;\r\n\r\n  @Input() translationUnit: TranslationUnit;\r\n\r\n  @Input() workflowType: WorkflowType;\r\n\r\n  @Input() showNormalized = true;\r\n\r\n  @Input() reviewMode = false;\r\n\r\n  /**\r\n   * Emitted, when translation is changed and/or the user wants to navigate to next/prev unit.\r\n   * If changedUnit is null, there is no change, but only navigation.\r\n   * @type {EventEmitter<TranslateUnitChange>}\r\n   */\r\n  @Output() changed: EventEmitter<TranslateUnitChange> = new EventEmitter();\r\n\r\n  form: FormGroup;\r\n\r\n  private _editedTargetMessage: NormalizedMessage;\r\n  private _editableTargetMessage: NormalizedMessage;\r\n  private isMarkedAsTranslated = false;\r\n  private isMarkedAsReviewed = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private dialog: MatDialog,\r\n              private _snackbar: MatSnackBar,\r\n              private autoTranslateService: AutoTranslateServiceAPI) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.form.valueChanges.subscribe(formValue => {this.valueChanged(formValue); });\r\n  }\r\n\r\n  private valueChanged(v: any) {\r\n    this._editedTargetMessage = v._editedTargetMessage;\r\n    this.showNormalized = v.showNormalized;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.initForm();\r\n    const changedTranslationUnit: SimpleChange = changes['translationUnit'];\r\n    if (changedTranslationUnit) {\r\n      if (changedTranslationUnit.currentValue) {\r\n        this._editedTargetMessage = changedTranslationUnit.currentValue.targetContentNormalized();\r\n      } else {\r\n        this._editedTargetMessage = null;\r\n      }\r\n      this._editableTargetMessage = null;\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        _editedTargetMessage: [this.editedTargetContentNormalized()],\r\n        showNormalized: [this.showNormalized],\r\n      });\r\n    }\r\n  }\r\n\r\n  public transUnitID(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.id();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public targetState(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.targetState();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public targetLanguage(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.translationFile().targetLanguage();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceContent(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.sourceContent();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceContentNormalized(): NormalizedMessage {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.sourceContentNormalized();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public editedTargetContentNormalized(): NormalizedMessage {\r\n    if (isNullOrUndefined(this._editableTargetMessage)) {\r\n      if (this.translationUnit) {\r\n        this._editableTargetMessage = this.translationUnit.targetContentNormalized();\r\n      }\r\n    }\r\n    return this._editableTargetMessage;\r\n  }\r\n\r\n  public sourceLanguage(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.translationFile().sourceLanguage();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceDescription(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.description();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceMeaning(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.meaning();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceRef(): string {\r\n    if (this.translationUnit) {\r\n      const refs = this.translationUnit.sourceReferences();\r\n      if (refs.length > 0) {\r\n        return refs[0].sourcefile + ':' + refs[0].linenumber;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open a snackbar to show source ref\r\n   */\r\n  public showSourceRefInfo() {\r\n    const sourceRefMessage = 'Original message position: ' + this.sourceRef(); // TODO i18n it\r\n    this._snackbar.open(sourceRefMessage, 'OK', {duration: 5000}); // TODO i18n it\r\n  }\r\n\r\n  /**\r\n   * Open a snackbar to show units ID\r\n   */\r\n  public showTransUnitID() {\r\n    const message = 'ID: ' + this.transUnitID();\r\n    this._snackbar.open(message, 'OK', {duration: 5000});\r\n  }\r\n\r\n  errors(): any[] {\r\n    if (!this._editedTargetMessage) {\r\n      return [];\r\n    }\r\n    const errors = this._editedTargetMessage.validate(this.showNormalized);\r\n    if (errors) {\r\n      return Object.keys(errors).map(key => errors[key]);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  warnings(): any[] {\r\n    if (!this._editedTargetMessage) {\r\n      return [];\r\n    }\r\n    const errors = this._editedTargetMessage.validateWarnings(this.showNormalized);\r\n    if (errors) {\r\n      return Object.keys(errors).map(key => errors[key]);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  commitChanges(navigationDirection: NavigationDirection) {\r\n    if (this.translationUnit) {\r\n      if (this.isTranslationChanged() || this.isMarkedAsTranslated || this.isMarkedAsReviewed) {\r\n        this.translationUnit.translate(this._editedTargetMessage);\r\n        switch (this.workflowType) {\r\n          case WorkflowType.SINGLE_USER:\r\n            this.translationUnit.setTargetState(STATE_FINAL);\r\n            break;\r\n          case WorkflowType.WITH_REVIEW:\r\n            if (this.isMarkedAsReviewed) {\r\n              this.translationUnit.setTargetState(STATE_FINAL);\r\n            } else {\r\n              this.translationUnit.setTargetState(STATE_TRANSLATED);\r\n            }\r\n            break;\r\n        }\r\n        this.changed.emit({changedUnit: this.translationUnit, navigationDirection: navigationDirection});\r\n        this.isMarkedAsTranslated = false;\r\n        this.isMarkedAsReviewed = false;\r\n      } else {\r\n        this.changed.emit({navigationDirection: navigationDirection});\r\n      }\r\n    }\r\n  }\r\n\r\n  public isTranslationChanged(): boolean {\r\n    const original = this.translationUnit.targetContent();\r\n    if (isNullOrUndefined(this._editedTargetMessage)) {\r\n      return false;\r\n    }\r\n    return original !== this._editedTargetMessage.nativeString();\r\n  }\r\n\r\n  markTranslated() {\r\n    this.openConfirmWarningsDialog().subscribe(result => {\r\n      switch (result) {\r\n        case 'cancel':\r\n          break;\r\n        case 'discard':\r\n          break;\r\n        case 'accept':\r\n          this.isMarkedAsTranslated = true;\r\n          this.commitChanges(NavigationDirection.STAY);\r\n          break;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  undo() {\r\n    this._editableTargetMessage = this.translationUnit.targetContentNormalized().copy();\r\n    this._editedTargetMessage = this._editableTargetMessage;\r\n    this.changed.emit({changedUnit: this.translationUnit, navigationDirection: NavigationDirection.STAY});\r\n  }\r\n\r\n  markReviewed() {\r\n    this.isMarkedAsReviewed = true;\r\n    this.commitChanges(NavigationDirection.STAY);\r\n  }\r\n\r\n  /**\r\n   * If there are errors or warnings, open a dialog to conform what to do.\r\n   * There are 3 possible results:\r\n   * 'cancel': do not do anything, stay on this trans unit.\r\n   * 'discard': do not translate, leave transunit unchanged, but go to the next/prev unit.\r\n   * 'accept': translate tu as given, ignoring warnings (errors cannot be ignored).\r\n   * @return any\r\n   */\r\n  openConfirmWarningsDialog(): Observable<any> {\r\n    const warnings = this.warnings();\r\n    const errors = this.errors();\r\n    if (warnings.length === 0 && errors.length === 0) {\r\n      // everything good, we don´t need a dialog then.\r\n      return of('accept');\r\n    } else if (!this.isTranslationChanged()) {\r\n      return of('accept');\r\n    } else {\r\n      const dialogRef = this.dialog.open(TranslateUnitWarningConfirmDialogComponent,\r\n        {\r\n          data: {errors: errors, warnings: warnings},\r\n          disableClose: true\r\n        }\r\n        );\r\n      return dialogRef.afterClosed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Go to the next trans unit.\r\n   */\r\n  public next() {\r\n    if (this.translationUnit) {\r\n      this.openConfirmWarningsDialog().subscribe(result => {\r\n        switch (result) {\r\n          case 'cancel':\r\n            break;\r\n          case 'discard':\r\n            if (this.translationFileView.hasNext()) {\r\n              this.changed.emit({navigationDirection: NavigationDirection.NEXT});\r\n            }\r\n            break;\r\n          case 'accept':\r\n            const direction = (this.translationFileView.hasNext()) ? NavigationDirection.NEXT : NavigationDirection.STAY;\r\n            this.commitChanges(direction);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check, wether there is a next trans unit.\r\n   * @return wether there is a next trans unit\r\n   */\r\n  public hasNext(): boolean {\r\n    if (this.translationUnit) {\r\n      return this.translationFileView.hasNext();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public prev() {\r\n    if (this.translationUnit) {\r\n      this.openConfirmWarningsDialog().subscribe(result => {\r\n        switch (result) {\r\n          case 'cancel':\r\n            break;\r\n          case 'discard':\r\n            if (this.translationFileView.hasPrev()) {\r\n              this.changed.emit({navigationDirection: NavigationDirection.PREV});\r\n            }\r\n            break;\r\n          case 'accept':\r\n            const direction = (this.translationFileView.hasPrev()) ? NavigationDirection.PREV : NavigationDirection.STAY;\r\n            this.commitChanges(direction);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public hasPrev(): boolean {\r\n    if (this.translationUnit) {\r\n      return this.translationFileView.hasPrev();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Auto translate this unit using Google Translate.\r\n   */\r\n  autoTranslate() {\r\n    this.sourceContentNormalized().autoTranslateUsingService(\r\n      this.autoTranslateService,\r\n      this.sourceLanguage(),\r\n      this.targetLanguage()\r\n    ).subscribe((translatedMessage: NormalizedMessage) => {\r\n        this._editableTargetMessage = translatedMessage;\r\n        this._editedTargetMessage = translatedMessage;\r\n        this.changed.emit({changedUnit: this.translationUnit, navigationDirection: NavigationDirection.STAY});\r\n    });\r\n  }\r\n\r\n  autoTranslateDisabled(): Observable<boolean> {\r\n    if (!this.translationUnit) {\r\n      return of(true);\r\n    }\r\n    return this.autoTranslateService.canAutoTranslate(\r\n      this.translationUnit.translationFile().sourceLanguage(),\r\n      this.translationUnit.translationFile().targetLanguage()).pipe(map(val => !val));\r\n  }\r\n\r\n}\r\n","module.exports = \".error {\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n.warn {\\r\\n  color: orange;\\r\\n}\\r\\n\\r\\nmat-progress-spinner {\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhbnNsYXRpb24tZmlsZS1zdGF0dXMvdHJhbnNsYXRpb24tZmlsZS1zdGF0dXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7Q0FDWjs7QUFFRDtFQUNFLGNBQWM7Q0FDZjs7QUFFRDtFQUNFLFlBQVk7RUFDWixhQUFhO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC90cmFuc2xhdGlvbi1maWxlLXN0YXR1cy90cmFuc2xhdGlvbi1maWxlLXN0YXR1cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4ud2FybiB7XHJcbiAgY29sb3I6IG9yYW5nZTtcclxufVxyXG5cclxubWF0LXByb2dyZXNzLXNwaW5uZXIge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div *ngIf=\\\"!shortInfo\\\" fxLayout=\\\"column\\\">\\r\\n  <p *ngIf=\\\"translationFile?.hasErrors()\\\" class=\\\"error\\\">{{translationFile?.error}}</p>\\r\\n  <p *ngFor=\\\"let warning of translationFile?.warnings()\\\" class=\\\"warn\\\">{{warning}}</p>\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n    <span i18n>Translate <b>from</b></span>&nbsp;<app-language [code]=\\\"translationFile?.sourceLanguage()\\\"></app-language>\\r\\n    &nbsp;<span i18n><b>to</b></span>&nbsp;<app-language [code]=\\\"translationFile?.targetLanguage()\\\"></app-language>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n    <span>{{translationFile?.name}}, </span>\\r\\n    <span i18n>{{translationFile?.size}} bytes, </span>\\r\\n    <span i18n>{{translationFile?.numberOfTransUnits}} entries</span>\\r\\n    <mat-icon *ngIf=\\\"translationFile?.isDirty()\\\" matTooltip=\\\"There are unpublished changes\\\" i18n-matTooltip>warning</mat-icon>\\r\\n    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"save()\\\" matTooltip=\\\"save current state to file (download)\\\" i18n-matTooltip><mat-icon>save</mat-icon></button>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"translationFile?.masterName\\\">\\r\\n    <span i18n>(translation of file {{translationFile?.masterName}})</span>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <mat-progress-spinner mode=\\\"determinate\\\" [diameter]=\\\"30\\\" [strokeWidth]=\\\"5\\\" [value]=\\\"translationFile?.percentageTranslated()\\\" color=\\\"accent\\\"></mat-progress-spinner>\\r\\n    <span i18n>{{percentageTranslated()}} % translated</span>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"shortInfo\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"10px\\\">\\r\\n    <mat-progress-spinner mode=\\\"determinate\\\" [diameter]=\\\"30\\\" [strokeWidth]=\\\"5\\\" [value]=\\\"translationFile?.percentageTranslated()\\\" color=\\\"accent\\\"></mat-progress-spinner>\\r\\n    <span i18n>{{percentageTranslated()}} % translated</span>\\r\\n  </div>\\r\\n  <p *ngIf=\\\"translationFileView?.currentTransUnitIndex() > 0\\\" i18n>current transunit {{translationFileView?.currentTransUnitIndex()}} of {{translationFileView?.scrollabeTransUnitsLength()}}</p>\\r\\n  <mat-icon *ngIf=\\\"translationFile?.isDirty()\\\" matTooltip=\\\"There are unpublished changes\\\" i18n-matTooltip>warning</mat-icon>\\r\\n  <button mat-icon-button color=\\\"primary\\\" (click)=\\\"save()\\\" matTooltip=\\\"export current translation state to file (download)\\\" i18n-matTooltip><mat-icon>save</mat-icon></button>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationFile} from '../model/translation-file';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\n\r\n/**\r\n * Component to show the current status of a loaded translation file.\r\n * It shows the size, number of translations, wether it is changed etc.\r\n */\r\n@Component({\r\n  selector: 'app-translation-file-status',\r\n  templateUrl: './translation-file-status.component.html',\r\n  styleUrls: ['./translation-file-status.component.css']\r\n})\r\nexport class TranslationFileStatusComponent implements OnInit {\r\n\r\n  @Input() translationFile: TranslationFile;\r\n  @Input() translationFileView: TranslationFileView;\r\n  @Input() shortInfo = false;\r\n\r\n  @Output() saved: EventEmitter<TranslationFile> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * percentage translated rounded to 0 digits.\r\n   * @return percentage number\r\n   */\r\n  public percentageTranslated(): string {\r\n    if (this.translationFile) {\r\n      const result: number = this.translationFile.percentageTranslated();\r\n      return result.toFixed(0);\r\n    } else {\r\n      return '0';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save the changed file.\r\n   */\r\n  public save() {\r\n    if (this.translationFile) {\r\n      this.saved.emit(this.translationFile);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1hdmFpbGFibGUvdXBkYXRlLWF2YWlsYWJsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<span i18n>A newer version of the app is available (actual version {{actualVersion}}, new version {{availableVersion}})</span>\\r\\n<button mat-button color=\\\"primary\\\" i18n (click)=\\\"updateApplication()\\\">Refresh Application</button>\\r\\n<button mat-button i18n (click)=\\\"closeSnackbar()\\\">Ignore</button>\\r\\n\"","import {Component, OnInit, Optional} from '@angular/core';\r\nimport {MatSnackBarRef} from '@angular/material';\r\nimport {SwUpdate, UpdateAvailableEvent} from '@angular/service-worker';\r\nimport {take} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-update-available',\r\n  templateUrl: './update-available.component.html',\r\n  styleUrls: ['./update-available.component.css']\r\n})\r\nexport class UpdateAvailableComponent implements OnInit {\r\n\r\n  actualVersion: string;\r\n  availableVersion: string;\r\n\r\n  constructor(private snackBarRef: MatSnackBarRef<any>, @Optional() private updates: SwUpdate) { }\r\n\r\n  ngOnInit() {\r\n    this.actualVersion = 'unknown';\r\n    this.availableVersion = 'unknown';\r\n    if (this.updates) {\r\n      this.updates.available.pipe(take(1)).subscribe((availableEvent: UpdateAvailableEvent) => {\r\n        if (availableEvent.current.appData) {\r\n          this.actualVersion = (<any> availableEvent.current.appData).version;\r\n        }\r\n        if (availableEvent.available.appData) {\r\n            this.availableVersion = (<any> availableEvent.available.appData).version;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  updateApplication() {\r\n    if (this.updates) {\r\n        this.updates.activateUpdate().then(() => document.location.reload());\r\n    }\r\n  }\r\n\r\n  closeSnackbar() {\r\n    this.snackBarRef.dismiss();\r\n  }\r\n}\r\n","// The file content for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  version: '%VERSION%',\r\n  buildtime: '%BUILDTIME%',\r\n  base_href: '%BASE_HREF%',\r\n  googletranslate_api_key: null,\r\n  googletranslate_provoke_failures: false,\r\n  github_api_key: null,\r\n  github_provoke_failures: false,\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}