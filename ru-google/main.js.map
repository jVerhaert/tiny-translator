{"version":3,"sources":["webpack:///S:/experimente/ngx-i18nsupport/dist/ngx-i18nsupport-lib/fesm5/ngx-i18nsupport-ngx-i18nsupport-lib.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/active-project.guard.ts","webpack:///./src/app/app-material.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auto-translate-summary-page/auto-translate-summary-page.component.html","webpack:///./src/app/auto-translate-summary-page/auto-translate-summary-page.component.ts","webpack:///./src/app/common/abbreviate.pipe.ts","webpack:///./src/app/common/util.ts","webpack:///./src/app/configure-auto-translate-page/configure-auto-translate-page.component.html","webpack:///./src/app/configure-auto-translate-page/configure-auto-translate-page.component.ts","webpack:///./src/app/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/create-project-page/create-project-page.component.html","webpack:///./src/app/create-project-page/create-project-page.component.ts","webpack:///./src/app/edit-project-page/edit-project-page.component.html","webpack:///./src/app/edit-project-page/edit-project-page.component.ts","webpack:///./src/app/file-accessors/common/file-access-service-factory.service.ts","webpack:///./src/app/file-accessors/common/file-accessor-type.ts","webpack:///./src/app/file-accessors/common/file-explorer-dialog/file-explorer-dialog.component.html","webpack:///./src/app/file-accessors/common/file-explorer-dialog/file-explorer-dialog.component.ts","webpack:///./src/app/file-accessors/common/file-explorer/file-explorer.component.html","webpack:///./src/app/file-accessors/common/file-explorer/file-explorer.component.ts","webpack:///./src/app/file-accessors/common/file-to-save/file-to-save.component.html","webpack:///./src/app/file-accessors/common/file-to-save/file-to-save.component.ts","webpack:///./src/app/file-accessors/common/generic-file.ts","webpack:///./src/app/file-accessors/common/i-file-access-service.ts","webpack:///./src/app/file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component.html","webpack:///./src/app/file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component.ts","webpack:///./src/app/file-accessors/common/save-as-explorer/save-as-explorer.component.html","webpack:///./src/app/file-accessors/common/save-as-explorer/save-as-explorer.component.ts","webpack:///./src/app/file-accessors/download-upload/asynchronous-file-reader.service.ts","webpack:///./src/app/file-accessors/download-upload/download-upload-configuration.ts","webpack:///./src/app/file-accessors/download-upload/download-upload-file-description.ts","webpack:///./src/app/file-accessors/download-upload/download-upload.service.ts","webpack:///./src/app/file-accessors/download-upload/downloader.service.ts","webpack:///./src/app/file-accessors/download-upload/translation-file-upload/translation-file-upload.component.html","webpack:///./src/app/file-accessors/download-upload/translation-file-upload/translation-file-upload.component.ts","webpack:///./src/app/file-accessors/github/configure-github-page/configure-github-page.component.html","webpack:///./src/app/file-accessors/github/configure-github-page/configure-github-page.component.ts","webpack:///./src/app/file-accessors/github/github-accessor.service.ts","webpack:///./src/app/file-accessors/github/github-api.service.ts","webpack:///./src/app/file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component.html","webpack:///./src/app/file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component.ts","webpack:///./src/app/file-accessors/github/github-config-editor/github-config-editor.component.html","webpack:///./src/app/file-accessors/github/github-config-editor/github-config-editor.component.ts","webpack:///./src/app/file-accessors/github/github-configuration.ts","webpack:///./src/app/file-accessors/github/github-file-description.ts","webpack:///./src/app/file-accessors/github/github-file.ts","webpack:///./src/app/file-accessors/github/translation-file-from-github/translation-file-from-github.component.html","webpack:///./src/app/file-accessors/github/translation-file-from-github/translation-file-from-github.component.ts","webpack:///./src/app/filter-page/filter-page.component.html","webpack:///./src/app/filter-page/filter-page.component.ts","webpack:///./src/app/filter-status/filter-status.component.html","webpack:///./src/app/filter-status/filter-status.component.ts","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/language/language.component.html","webpack:///./src/app/language/language.component.ts","webpack:///./src/app/model/auto-translate-google.service.ts","webpack:///./src/app/model/auto-translate-result.ts","webpack:///./src/app/model/auto-translate-service-api.ts","webpack:///./src/app/model/auto-translate-summary-report.ts","webpack:///./src/app/model/backend-local-storage.service.ts","webpack:///./src/app/model/backend-service-api.ts","webpack:///./src/app/model/filters/translation-unit-filter-all.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated-failed.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated-ignored.ts","webpack:///./src/app/model/filters/translation-unit-filter-autotranslated.ts","webpack:///./src/app/model/filters/translation-unit-filter-needs-review.ts","webpack:///./src/app/model/filters/translation-unit-filter-substring.ts","webpack:///./src/app/model/filters/translation-unit-filter-untranslated.ts","webpack:///./src/app/model/filters/translation-unit-filter.service.ts","webpack:///./src/app/model/normalized-message.ts","webpack:///./src/app/model/serialization.service.ts","webpack:///./src/app/model/tiny-translator.service.ts","webpack:///./src/app/model/translation-file-view.ts","webpack:///./src/app/model/translation-file.ts","webpack:///./src/app/model/translation-project.ts","webpack:///./src/app/model/translation-unit.ts","webpack:///./src/app/normalized-message-input/normalized-message-input.component.html","webpack:///./src/app/normalized-message-input/normalized-message-input.component.ts","webpack:///./src/app/project-editor/project-editor.component.html","webpack:///./src/app/project-editor/project-editor.component.ts","webpack:///./src/app/project-list/project-list.component.html","webpack:///./src/app/project-list/project-list.component.ts","webpack:///./src/app/project-starter/project-starter.component.html","webpack:///./src/app/project-starter/project-starter.component.ts","webpack:///./src/app/project-status/project-status.component.html","webpack:///./src/app/project-status/project-status.component.ts","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/publish-project-page/publish-project-page.component.html","webpack:///./src/app/publish-project-page/publish-project-page.component.ts","webpack:///./src/app/translate-page/translate-page.component.html","webpack:///./src/app/translate-page/translate-page.component.ts","webpack:///./src/app/translate-unit-list/translate-unit-list.component.html","webpack:///./src/app/translate-unit-list/translate-unit-list.component.ts","webpack:///./src/app/translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component.html","webpack:///./src/app/translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component.ts","webpack:///./src/app/translate-unit/translate-unit.component.html","webpack:///./src/app/translate-unit/translate-unit.component.ts","webpack:///./src/app/translation-file-status/translation-file-status.component.html","webpack:///./src/app/translation-file-status/translation-file-status.component.ts","webpack:///./src/app/update-available/update-available.component.html","webpack:///./src/app/update-available/update-available.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACS;AACN;AACe;AACtB;;AAErC;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC,UAAU;AACV;AACA;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,6BAA6B;AACxD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,oDAAa;AACtC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,gDAAS;AAC1C,mBAAmB,EAAE;AACrB;AACA,uBAAuB,wBAAwB;AAC/C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gDAAgD,gDAAgD;AAChG;AACA;AACA,gDAAgD,oCAAoC;AACpF;AACA;AACA,+BAA+B,SAAS;AACxC,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,gDAAgD,iCAAiC;AACjF;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,4CAA4C,iCAAiC;AAC7E;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,EAAE;AACrD;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,EAAE;AACrD,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC,8BAA8B;AAC9B,+BAA+B;AAC/B,gCAAgC;AAChC,uCAAuC;AACvC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAQ;AACpC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uEAAuE,wBAAwB,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mCAAmC,gDAAS;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,qBAAqB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,qBAAqB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,oEAAoE,qBAAqB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6DAA6D,+DAA+D,EAAE;AAC9H,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,qDAAQ;AACpB,4CAA4C,EAAE;AAC9C;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,qCAAQ;AAChC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oCAAoC;AACpC;AACA;AACA,SAAS;AACT,mCAAmC;AACnC;AACA;AACA,SAAS;AACT,mCAAmC;AACnC;AACA;AACA,SAAS;AACT,qBAAqB;AACrB,0CAA0C;AAC1C;AACA;AACA;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE;AACA;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,eAAe,GAAG;AACrE,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,mDAAM,OAAO,GAAG;AAC1D,SAAS;AACT,eAAe,mDAAM,GAAG,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,oBAAoB,UAAU,KAAK,SAAS,KAAK,WAAW,QAAQ;AACjG;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA,qBAAqB,qDAAQ;AAC7B;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,4FAA4F,EAAE;AAC9F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,iDAAiD,6BAA6B,EAAE;AAChF;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD,SAAS,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAoD,SAAS,MAAM;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B,kEAAkE,EAAE;AACpE;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA,gDAAgD,4CAA4C,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yCAAyC,EAAE;AAC3C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,+BAA+B,EAAE;AACjC,+CAA+C,EAAE;AACjD;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,qCAAQ;AAChC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,SAAS;AACT;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,8DAAiB;AAC3C,mCAAmC,qCAAqC;AACxE,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,8DAAiB;AAC3C,mCAAmC,qCAAqC;AACxE,SAAS;AACT;AACA;AACA,iCAAiC,iBAAiB;AAClD,SAAS;AACT;AACA,sBAAsB,UAAU;AAChC,qCAAqC,oCAAoC;AACzE,SAAS;AACT;AACA;AACA,yCAAyC,oCAAoC;AAC7E,SAAS;AACT;AACA;AACA,qCAAqC,oBAAoB;AACzD,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,gDAAS;AAC/B,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yBAAyB,8DAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2CAA2C,kCAAkC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,sCAAsC,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACrG,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE,sCAAsC,eAAe,QAAQ,KAAK,IAAI,QAAQ,MAAM;AACrG,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB,gDAAS;AAChC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,sFAAsF,+CAA+C,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,sFAAsF,+CAA+C,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kFAAkF,6CAA6C,EAAE;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kFAAkF,6CAA6C,EAAE;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,gFAAgF,EAAE;AAClF;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA,mFAAmF,EAAE;AACrF;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA,wFAAwF,EAAE;AAC1F;AACA;AACA,0FAA0F,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,4BAA4B;AAC3D,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iDAAiD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA,2BAA2B,EAAE;AAC7B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD;AACA,0CAA0C,OAAO;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,qBAAqB;AACxC,uBAAuB,EAAE;AACzB;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,yEAAyE,EAAE;AAC3E;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0EAA0E,EAAE;AAC5E;AACA,+EAA+E,EAAE;AACjF;AACA,6EAA6E,EAAE;AAC/E;AACA,+EAA+E,EAAE;AACjF;AACA,kFAAkF,EAAE;AACpF;AACA,oFAAoF,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2CAA2C,QAAQ;AACnD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,2BAA2B;AAClD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gKAAgK,qFAAqF;AACrP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6EAA6E,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB,IAAI,KAAK,IAAI,QAAQ,KAAK;AAC/F;AACA,sEAAsE;AACtE,6DAA6D;AAC7D,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,eAAe,MAAM;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,8BAA8B,KAAK,eAAe,MAAM;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,qCAAqC;AAC3D,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,oHAAoH,EAAE;AACtH;AACA;AACA,2HAA2H,EAAE;AAC7H;AACA;AACA,6HAA6H,EAAE;AAC/H;AACA;AACA,+BAA+B,EAAE;AACjC,6FAA6F,EAAE;AAC/F;AACA,gCAAgC,sBAAsB,EAAE,yCAAyC,EAAE,wBAAwB;AAC3H;AACA;AACA,+BAA+B,EAAE;AACjC,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+FAA+F,EAAE;AACjG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yGAAyG,KAAK,eAAe,MAAM;AACnI;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+DAA+D,SAAS;AACxE,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC,8DAAiB;AACzD;AACA;AACA;AACA;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB,8DAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA,sEAAsE,GAAG;AACzE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,8DAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,wCAAwC,mDAAM;AAC9C;AACA;AACA;AACA,gCAAgC,mDAAM;AACtC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB,uCAAuC,EAAE;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,mDAAM;AAClC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAM;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEA;AACA;AACA,cAAc,kDAAkD;AAChE;;AAEsS;;AAEtS,2CAA2C,cAAc,uuse;;;;;;;;;;;AC7vTzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;A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AC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC;YACxB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC;YACxB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;YACvB,OAAO,CAAC,CAAC,OAAO,IAAI,CAA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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { DOMParser, XMLSerializer } from 'xmldom';\nimport { __extends, __spread } from 'tslib';\nimport { isNullOrUndefined, isString, format } from 'util';\nimport * as Tokenizr from 'tokenizr';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\nvar NgxI18nsupportLibModule = /** @class */ (function () {\r\n    function NgxI18nsupportLibModule() {\r\n    }\r\n    NgxI18nsupportLibModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [],\r\n                    exports: []\r\n                },] }\r\n    ];\r\n    return NgxI18nsupportLibModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 08.05.2017.\r\n * Some constant values used in the API.\r\n */\r\n/**\r\n * supported file formats\r\n * @type {?}\r\n */\r\nvar FORMAT_XLIFF12 = 'xlf';\r\n/** @type {?} */\r\nvar FORMAT_XLIFF20 = 'xlf2';\r\n/** @type {?} */\r\nvar FORMAT_XMB = 'xmb';\r\n/** @type {?} */\r\nvar FORMAT_XTB = 'xtb';\r\n/**\r\n * File types\r\n * (returned by fileType() method)\r\n * @type {?}\r\n */\r\nvar FILETYPE_XLIFF12 = 'XLIFF 1.2';\r\n/** @type {?} */\r\nvar FILETYPE_XLIFF20 = 'XLIFF 2.0';\r\n/** @type {?} */\r\nvar FILETYPE_XMB = 'XMB';\r\n/** @type {?} */\r\nvar FILETYPE_XTB = 'XTB';\r\n/**\r\n * State NEW.\r\n * Signals an untranslated unit.\r\n * @type {?}\r\n */\r\nvar STATE_NEW = 'new';\r\n/**\r\n * State TRANSLATED.\r\n * Signals a translated unit, that is not reviewed until now.\r\n * @type {?}\r\n */\r\nvar STATE_TRANSLATED = 'translated';\r\n/**\r\n * State FINAL.\r\n * Signals a translated unit, that is reviewed and ready for use.\r\n * @type {?}\r\n */\r\nvar STATE_FINAL = 'final';\r\n/**\r\n * Default format, contains placeholders, html markup.\r\n * @type {?}\r\n */\r\nvar NORMALIZATION_FORMAT_DEFAULT = 'default';\r\n/**\r\n * Format for usage in ngxtranslate messages.\r\n * Placeholder are in the form {{n}}, no html markup.\r\n * @type {?}\r\n */\r\nvar NORMALIZATION_FORMAT_NGXTRANSLATE = 'ngxtranslate';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * Some Tool functions for XML Handling.\r\n */\r\nDOMUtilities = /** @class */ (function () {\r\n    function DOMUtilities() {\r\n    }\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    /**\r\n     * return the first subelement with the given tag.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    DOMUtilities.getFirstElementByTagName = /**\r\n     * return the first subelement with the given tag.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    function (element, tagName) {\r\n        /** @type {?} */\r\n        var matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            return matchingElements.item(0);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param element element\r\n     * @param tagName tagName\r\n     * @param id id\r\n     * @return subelement or null, if not existing.\r\n     */\r\n    /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @param {?} id id\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    DOMUtilities.getElementByTagNameAndId = /**\r\n     * return an element with the given tag and id attribute.\r\n     * @param {?} element element\r\n     * @param {?} tagName tagName\r\n     * @param {?} id id\r\n     * @return {?} subelement or null, if not existing.\r\n     */\r\n    function (element, tagName, id) {\r\n        /** @type {?} */\r\n        var matchingElements = element.getElementsByTagName(tagName);\r\n        if (matchingElements && matchingElements.length > 0) {\r\n            for (var i = 0; i < matchingElements.length; i++) {\r\n                /** @type {?} */\r\n                var node = matchingElements.item(i);\r\n                if (node.getAttribute('id') === id) {\r\n                    return node;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    /**\r\n     * Get next sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.getElementFollowingSibling = /**\r\n     * Get next sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var e = element.nextSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (e));\r\n            }\r\n            e = e.nextSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param element element\r\n     */\r\n    /**\r\n     * Get previous sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.getElementPrecedingSibling = /**\r\n     * Get previous sibling, that is an element.\r\n     * @param {?} element element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var e = element.previousSibling;\r\n        while (e) {\r\n            if (e.nodeType === e.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (e));\r\n            }\r\n            e = e.previousSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param element element\r\n     * @return content of element as string, including all markup.\r\n     */\r\n    /**\r\n     * return content of element as string, including all markup.\r\n     * @param {?} element element\r\n     * @return {?} content of element as string, including all markup.\r\n     */\r\n    DOMUtilities.getXMLContent = /**\r\n     * return content of element as string, including all markup.\r\n     * @param {?} element element\r\n     * @return {?} content of element as string, including all markup.\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var result = new XMLSerializer().serializeToString(element);\r\n        /** @type {?} */\r\n        var tagName = element.nodeName;\r\n        /** @type {?} */\r\n        var reStartMsg = new RegExp('<' + tagName + '[^>]*>', 'g');\r\n        result = result.replace(reStartMsg, '');\r\n        /** @type {?} */\r\n        var reEndMsg = new RegExp('</' + tagName + '>', 'g');\r\n        result = result.replace(reEndMsg, '');\r\n        return result;\r\n    };\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param element element\r\n     * @return PCDATA content of element.\r\n     */\r\n    /**\r\n     * return PCDATA content of element.\r\n     * @param {?} element element\r\n     * @return {?} PCDATA content of element.\r\n     */\r\n    DOMUtilities.getPCDATA = /**\r\n     * return PCDATA content of element.\r\n     * @param {?} element element\r\n     * @return {?} PCDATA content of element.\r\n     */\r\n    function (element) {\r\n        if (!element) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var result = '';\r\n        /** @type {?} */\r\n        var childNodes = element.childNodes;\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            /** @type {?} */\r\n            var child = childNodes.item(i);\r\n            if (child.nodeType === child.TEXT_NODE || child.nodeType === child.CDATA_SECTION_NODE) {\r\n                result = result + child.nodeValue;\r\n            }\r\n        }\r\n        return result.length === 0 ? null : result;\r\n    };\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param element element\r\n     * @param pcdata pcdata\r\n     */\r\n    /**\r\n     * replace PCDATA content with a new one.\r\n     * @param {?} element element\r\n     * @param {?} pcdata pcdata\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.replaceContentWithXMLContent = /**\r\n     * replace PCDATA content with a new one.\r\n     * @param {?} element element\r\n     * @param {?} pcdata pcdata\r\n     * @return {?}\r\n     */\r\n    function (element, pcdata) {\r\n        // remove all children\r\n        while (element.firstChild) {\r\n            element.removeChild(element.firstChild);\r\n        }\r\n        // parseICUMessage pcdata\r\n        /** @type {?} */\r\n        var pcdataFragment = new DOMParser().parseFromString('<fragment>' + pcdata + '</fragment>', 'application/xml');\r\n        /** @type {?} */\r\n        var newChildren = pcdataFragment.getElementsByTagName('fragment').item(0).childNodes;\r\n        for (var j = 0; j < newChildren.length; j++) {\r\n            /** @type {?} */\r\n            var newChild = newChildren.item(j);\r\n            element.appendChild(element.ownerDocument.importNode(newChild, true));\r\n        }\r\n    };\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param element element\r\n     * @return the previous sibling that is an element or null.\r\n     */\r\n    /**\r\n     * find the previous sibling that is an element.\r\n     * @param {?} element element\r\n     * @return {?} the previous sibling that is an element or null.\r\n     */\r\n    DOMUtilities.getPreviousElementSibling = /**\r\n     * find the previous sibling that is an element.\r\n     * @param {?} element element\r\n     * @return {?} the previous sibling that is an element or null.\r\n     */\r\n    function (element) {\r\n        /** @type {?} */\r\n        var node = element.previousSibling;\r\n        while (node !== null) {\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                return (/** @type {?} */ (node));\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param elementNameToCreate elementNameToCreate\r\n     * @param previousSibling previousSibling\r\n     * @return new element\r\n     */\r\n    /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param {?} elementNameToCreate elementNameToCreate\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?} new element\r\n     */\r\n    DOMUtilities.createFollowingSibling = /**\r\n     * Create an Element Node that is the next sibling of a given node.\r\n     * @param {?} elementNameToCreate elementNameToCreate\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?} new element\r\n     */\r\n    function (elementNameToCreate, previousSibling) {\r\n        /** @type {?} */\r\n        var newElement = previousSibling.ownerDocument.createElement(elementNameToCreate);\r\n        return (/** @type {?} */ (DOMUtilities.insertAfter(newElement, previousSibling)));\r\n    };\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param newElement newElement\r\n     * @param previousSibling previousSibling\r\n     */\r\n    /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.insertAfter = /**\r\n     * Insert newElement directly after previousSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} previousSibling previousSibling\r\n     * @return {?}\r\n     */\r\n    function (newElement, previousSibling) {\r\n        if (previousSibling.nextSibling !== null) {\r\n            previousSibling.parentNode.insertBefore(newElement, previousSibling.nextSibling);\r\n        }\r\n        else {\r\n            previousSibling.parentNode.appendChild(newElement);\r\n        }\r\n        return newElement;\r\n    };\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param newElement newElement\r\n     * @param nextSibling nextSibling\r\n     */\r\n    /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} nextSibling nextSibling\r\n     * @return {?}\r\n     */\r\n    DOMUtilities.insertBefore = /**\r\n     * Insert newElement directly before nextSibling.\r\n     * @param {?} newElement newElement\r\n     * @param {?} nextSibling nextSibling\r\n     * @return {?}\r\n     */\r\n    function (newElement, nextSibling) {\r\n        nextSibling.parentNode.insertBefore(newElement, nextSibling);\r\n        return newElement;\r\n    };\r\n    return DOMUtilities;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar DEFAULT_INDENT_STRING = '  ';\r\nvar XmlSerializer = /** @class */ (function () {\r\n    function XmlSerializer() {\r\n    }\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param document the document\r\n     * @param options can be used to activate beautifying.\r\n     */\r\n    /**\r\n     * Serialze xml document to string.\r\n     * @param {?} document the document\r\n     * @param {?=} options can be used to activate beautifying.\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.serializeToString = /**\r\n     * Serialze xml document to string.\r\n     * @param {?} document the document\r\n     * @param {?=} options can be used to activate beautifying.\r\n     * @return {?}\r\n     */\r\n    function (document, options) {\r\n        /** @type {?} */\r\n        var buf = [];\r\n        /** @type {?} */\r\n        var visibleNamespaces = [];\r\n        /** @type {?} */\r\n        var refNode = document.documentElement;\r\n        /** @type {?} */\r\n        var prefix = refNode.prefix;\r\n        /** @type {?} */\r\n        var uri = refNode.namespaceURI;\r\n        if (uri && prefix == null) {\r\n            prefix = refNode.lookupPrefix(uri);\r\n            if (prefix == null) {\r\n                visibleNamespaces = [\r\n                    { namespace: uri, prefix: null }\r\n                    // {namespace:uri,prefix:''}\r\n                ];\r\n            }\r\n        }\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        if (options.indentString) {\r\n            if (!this.containsOnlyWhiteSpace(options.indentString)) {\r\n                throw new Error('indentString must not contain non white characters');\r\n            }\r\n        }\r\n        this.doSerializeToString(document, options, buf, 0, false, visibleNamespaces);\r\n        return buf.join('');\r\n    };\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param node the node to be formatted.\r\n     * @param options options\r\n     * @param buf outputbuffer, new output will be appended to this array.\r\n     * @param indentLevel Lever of indentation for formatted output.\r\n     * @param partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param visibleNamespaces visibleNamespaces\r\n     */\r\n    /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param {?} node the node to be formatted.\r\n     * @param {?} options options\r\n     * @param {?} buf outputbuffer, new output will be appended to this array.\r\n     * @param {?} indentLevel Lever of indentation for formatted output.\r\n     * @param {?} partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param {?} visibleNamespaces visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.doSerializeToString = /**\r\n     * Main format method that does all the work.\r\n     * Outputs a node to the outputbuffer.\r\n     * @param {?} node the node to be formatted.\r\n     * @param {?} options options\r\n     * @param {?} buf outputbuffer, new output will be appended to this array.\r\n     * @param {?} indentLevel Lever of indentation for formatted output.\r\n     * @param {?} partOfMixedContent true, if node is a subelement of an element containind mixed content.\r\n     * @param {?} visibleNamespaces visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    function (node, options, buf, indentLevel, partOfMixedContent, visibleNamespaces) {\r\n        /** @type {?} */\r\n        var child;\r\n        switch (node.nodeType) {\r\n            case node.ELEMENT_NODE:\r\n                /** @type {?} */\r\n                var elementNode = (/** @type {?} */ (node));\r\n                /** @type {?} */\r\n                var attrs = elementNode.attributes;\r\n                /** @type {?} */\r\n                var len = attrs.length;\r\n                child = elementNode.firstChild;\r\n                /** @type {?} */\r\n                var nodeName = elementNode.tagName;\r\n                /** @type {?} */\r\n                var elementHasMixedContent = this.isMixedContentElement(nodeName, options);\r\n                if (partOfMixedContent) {\r\n                    buf.push('<', nodeName);\r\n                }\r\n                else {\r\n                    this.outputIndented(options, buf, indentLevel, '<', nodeName);\r\n                }\r\n                for (var i = 0; i < len; i++) {\r\n                    // add namespaces for attributes\r\n                    /** @type {?} */\r\n                    var attr = attrs.item(i);\r\n                    if (attr.prefix === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\r\n                    }\r\n                    else if (attr.nodeName === 'xmlns') {\r\n                        visibleNamespaces.push({ prefix: '', namespace: attr.value });\r\n                    }\r\n                }\r\n                for (var i = 0; i < len; i++) {\r\n                    /** @type {?} */\r\n                    var attr = attrs.item(i);\r\n                    if (this.needNamespaceDefine(attr, visibleNamespaces)) {\r\n                        /** @type {?} */\r\n                        var prefix = attr.prefix || '';\r\n                        /** @type {?} */\r\n                        var uri = attr.namespaceURI;\r\n                        /** @type {?} */\r\n                        var ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                        buf.push(ns, '=\"', uri, '\"');\r\n                        visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                    }\r\n                    this.doSerializeToString(attr, options, buf, indentLevel, false, visibleNamespaces);\r\n                }\r\n                // add namespace for current node\r\n                if (this.needNamespaceDefine(elementNode, visibleNamespaces)) {\r\n                    /** @type {?} */\r\n                    var prefix = elementNode.prefix || '';\r\n                    /** @type {?} */\r\n                    var uri = node.namespaceURI;\r\n                    /** @type {?} */\r\n                    var ns = prefix ? ' xmlns:' + prefix : ' xmlns';\r\n                    buf.push(ns, '=\"', uri, '\"');\r\n                    visibleNamespaces.push({ prefix: prefix, namespace: uri });\r\n                }\r\n                if (child) {\r\n                    buf.push('>');\r\n                    // if is cdata child node\r\n                    /** @type {?} */\r\n                    var hasComplexContent = false;\r\n                    while (child) {\r\n                        if (child.nodeType === child.ELEMENT_NODE) {\r\n                            hasComplexContent = true;\r\n                        }\r\n                        this.doSerializeToString(child, options, buf, indentLevel + 1, partOfMixedContent || elementHasMixedContent, visibleNamespaces);\r\n                        child = child.nextSibling;\r\n                    }\r\n                    if (!partOfMixedContent && !elementHasMixedContent && hasComplexContent) {\r\n                        this.outputIndented(options, buf, indentLevel, '</', nodeName, '>');\r\n                    }\r\n                    else {\r\n                        buf.push('</', nodeName, '>');\r\n                    }\r\n                }\r\n                else {\r\n                    buf.push('/>');\r\n                }\r\n                return;\r\n            case node.DOCUMENT_NODE:\r\n            case node.DOCUMENT_FRAGMENT_NODE:\r\n                child = node.firstChild;\r\n                while (child) {\r\n                    this.doSerializeToString(child, options, buf, indentLevel, false, visibleNamespaces);\r\n                    child = child.nextSibling;\r\n                }\r\n                return;\r\n            case node.ATTRIBUTE_NODE:\r\n                /** @type {?} */\r\n                var attrNode = (/** @type {?} */ (node));\r\n                return buf.push(' ', attrNode.name, '=\"', attrNode.value.replace(/[<&\"]/g, this._xmlEncoder), '\"');\r\n            case node.TEXT_NODE:\r\n                /** @type {?} */\r\n                var textNode = (/** @type {?} */ (node));\r\n                if (!options.beautify || partOfMixedContent || !this.containsOnlyWhiteSpace(textNode.data)) {\r\n                    return buf.push(textNode.data.replace(/[<&]/g, this._xmlEncoder));\r\n                }\r\n                return;\r\n            case node.CDATA_SECTION_NODE:\r\n                /** @type {?} */\r\n                var cdatasectionNode = (/** @type {?} */ (node));\r\n                return buf.push('<![CDATA[', cdatasectionNode.data, ']]>');\r\n            case node.COMMENT_NODE:\r\n                /** @type {?} */\r\n                var commentNode = (/** @type {?} */ (node));\r\n                return buf.push('<!--', commentNode.data, '-->');\r\n            case node.DOCUMENT_TYPE_NODE:\r\n                /** @type {?} */\r\n                var documenttypeNode = (/** @type {?} */ (node));\r\n                /** @type {?} */\r\n                var pubid = documenttypeNode.publicId;\r\n                /** @type {?} */\r\n                var sysid = documenttypeNode.systemId;\r\n                buf.push('<!DOCTYPE ', documenttypeNode.name);\r\n                if (pubid) {\r\n                    buf.push(' PUBLIC \"', pubid);\r\n                    if (sysid && sysid !== '.') {\r\n                        buf.push('\" \"', sysid);\r\n                    }\r\n                    buf.push('\">');\r\n                }\r\n                else if (sysid && sysid !== '.') {\r\n                    buf.push(' SYSTEM \"', sysid, '\">');\r\n                }\r\n                else {\r\n                    buf.push('>');\r\n                }\r\n                return;\r\n            case node.PROCESSING_INSTRUCTION_NODE:\r\n                /** @type {?} */\r\n                var piNode = (/** @type {?} */ (node));\r\n                return buf.push('<?', piNode.target, ' ', piNode.data, '?>');\r\n            case node.ENTITY_REFERENCE_NODE:\r\n                return buf.push('&', node.nodeName, ';');\r\n            // case ENTITY_NODE:\r\n            // case NOTATION_NODE:\r\n            default:\r\n                buf.push('??', node.nodeName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} node\r\n     * @param {?} visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.needNamespaceDefine = /**\r\n     * @param {?} node\r\n     * @param {?} visibleNamespaces\r\n     * @return {?}\r\n     */\r\n    function (node, visibleNamespaces) {\r\n        /** @type {?} */\r\n        var prefix = node.prefix || '';\r\n        /** @type {?} */\r\n        var uri = node.namespaceURI;\r\n        if (!prefix && !uri) {\r\n            return false;\r\n        }\r\n        if (prefix === 'xml' && uri === 'http://www.w3.org/XML/1998/namespace'\r\n            || uri === 'http://www.w3.org/2000/xmlns/') {\r\n            return false;\r\n        }\r\n        /** @type {?} */\r\n        var i = visibleNamespaces.length;\r\n        while (i--) {\r\n            /** @type {?} */\r\n            var ns = visibleNamespaces[i];\r\n            // get namespace prefix\r\n            if (ns.prefix === prefix) {\r\n                return ns.namespace !== uri;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} c\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype._xmlEncoder = /**\r\n     * @param {?} c\r\n     * @return {?}\r\n     */\r\n    function (c) {\r\n        return c === '<' && '&lt;' ||\r\n            c === '>' && '&gt;' ||\r\n            c === '&' && '&amp;' ||\r\n            c === '\"' && '&quot;' ||\r\n            '&#' + c.charCodeAt(0) + ';';\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} buf\r\n     * @param {?} indentLevel\r\n     * @param {...?} outputParts\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.outputIndented = /**\r\n     * @param {?} options\r\n     * @param {?} buf\r\n     * @param {?} indentLevel\r\n     * @param {...?} outputParts\r\n     * @return {?}\r\n     */\r\n    function (options, buf, indentLevel) {\r\n        var outputParts = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            outputParts[_i - 3] = arguments[_i];\r\n        }\r\n        if (options.beautify) {\r\n            buf.push('\\n');\r\n            if (indentLevel > 0) {\r\n                buf.push(this.indentationString(options, indentLevel));\r\n            }\r\n        }\r\n        buf.push.apply(buf, __spread(outputParts));\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @param {?} indentLevel\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.indentationString = /**\r\n     * @param {?} options\r\n     * @param {?} indentLevel\r\n     * @return {?}\r\n     */\r\n    function (options, indentLevel) {\r\n        /** @type {?} */\r\n        var indent = (options.indentString) ? options.indentString : DEFAULT_INDENT_STRING;\r\n        /** @type {?} */\r\n        var result = '';\r\n        for (var i = 0; i < indentLevel; i++) {\r\n            result = result + indent;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param tagName tagName\r\n     * @param options options\r\n     */\r\n    /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param {?} tagName tagName\r\n     * @param {?} options options\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.isMixedContentElement = /**\r\n     * Test, wether tagName is an element containing mixed content.\r\n     * @param {?} tagName tagName\r\n     * @param {?} options options\r\n     * @return {?}\r\n     */\r\n    function (tagName, options) {\r\n        if (options && options.mixedContentElements) {\r\n            return !!options.mixedContentElements.find(function (tag) { return tag === tagName; });\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    XmlSerializer.prototype.containsOnlyWhiteSpace = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        for (var i = 0; i < text.length; i++) {\r\n            /** @type {?} */\r\n            var c = text.charAt(i);\r\n            if (!(c === ' ' || c === '\\t' || c === '\\r' || c === '\\n')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return XmlSerializer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 09.05.2017.\r\n * Abstract superclass for all implementations of ITranslationMessagesFile.\r\n * @abstract\r\n */\r\nAbstractTranslationMessagesFile = /** @class */ (function () {\r\n    function AbstractTranslationMessagesFile() {\r\n        this.transUnits = null;\r\n        this._warnings = [];\r\n    }\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param xmlString xmlString\r\n     * @param path path\r\n     * @param encoding encoding\r\n     * @param optionalMaster optionalMaster\r\n     */\r\n    /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param {?} xmlString xmlString\r\n     * @param {?} path path\r\n     * @param {?} encoding encoding\r\n     * @param {?=} optionalMaster optionalMaster\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.parseContent = /**\r\n     * Parse file content.\r\n     * Sets _parsedDocument, line ending, encoding, etc.\r\n     * @param {?} xmlString xmlString\r\n     * @param {?} path path\r\n     * @param {?} encoding encoding\r\n     * @param {?=} optionalMaster optionalMaster\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding, optionalMaster) {\r\n        this._filename = path;\r\n        this._encoding = encoding;\r\n        this._parsedDocument = new DOMParser().parseFromString(xmlString, 'text/xml');\r\n        this._fileEndsWithEOL = xmlString.endsWith('\\n');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.lazyInitializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this.transUnits)) {\r\n            this.initializeTransUnits();\r\n            this.countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * count units after changes of trans units\r\n     */\r\n    /**\r\n     * count units after changes of trans units\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.countNumbers = /**\r\n     * count units after changes of trans units\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._numberOfTransUnitsWithMissingId = 0;\r\n        this._numberOfUntranslatedTransUnits = 0;\r\n        this._numberOfReviewedTransUnits = 0;\r\n        this.forEachTransUnit(function (tu) {\r\n            if (isNullOrUndefined(tu.id) || tu.id === '') {\r\n                _this._numberOfTransUnitsWithMissingId++;\r\n            }\r\n            /** @type {?} */\r\n            var state = tu.targetState();\r\n            if (isNullOrUndefined(state) || state === STATE_NEW) {\r\n                _this._numberOfUntranslatedTransUnits++;\r\n            }\r\n            if (state === STATE_TRANSLATED) {\r\n                _this._numberOfReviewedTransUnits++;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.warnings = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._warnings;\r\n    };\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     */\r\n    /**\r\n     * Total number of translation units found in the file.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfTransUnits = /**\r\n     * Total number of translation units found in the file.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.length;\r\n    };\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfUntranslatedTransUnits = /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfUntranslatedTransUnits;\r\n    };\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     */\r\n    /**\r\n     * Number of translation units with state 'final'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfReviewedTransUnits = /**\r\n     * Number of translation units with state 'final'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfReviewedTransUnits;\r\n    };\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     */\r\n    /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.numberOfTransUnitsWithMissingId = /**\r\n     * Number of translation units without translation found in the file.\r\n     * These units have state 'translated'.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.lazyInitializeTransUnits();\r\n        return this._numberOfTransUnitsWithMissingId;\r\n    };\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param callback callback\r\n     */\r\n    /**\r\n     * Loop over all Translation Units.\r\n     * @param {?} callback callback\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.forEachTransUnit = /**\r\n     * Loop over all Translation Units.\r\n     * @param {?} callback callback\r\n     * @return {?}\r\n     */\r\n    function (callback) {\r\n        this.lazyInitializeTransUnits();\r\n        this.transUnits.forEach(function (tu) { return callback(tu); });\r\n    };\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param id id\r\n     * @return trans-unit with given id.\r\n     */\r\n    /**\r\n     * Get trans-unit with given id.\r\n     * @param {?} id id\r\n     * @return {?} trans-unit with given id.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.transUnitWithId = /**\r\n     * Get trans-unit with given id.\r\n     * @param {?} id id\r\n     * @return {?} trans-unit with given id.\r\n     */\r\n    function (id) {\r\n        this.lazyInitializeTransUnits();\r\n        return this.transUnits.find(function (tu) { return tu.id === id; });\r\n    };\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetPraefix targetPraefix\r\n     */\r\n    /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetPraefix targetPraefix\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.setNewTransUnitTargetPraefix = /**\r\n     * Set the praefix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetPraefix targetPraefix\r\n     * @return {?}\r\n     */\r\n    function (targetPraefix) {\r\n        this.targetPraefix = targetPraefix;\r\n    };\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the praefix used when copying source to target.\r\n     */\r\n    /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the praefix used when copying source to target.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.getNewTransUnitTargetPraefix = /**\r\n     * Get the praefix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the praefix used when copying source to target.\r\n     */\r\n    function () {\r\n        return isNullOrUndefined(this.targetPraefix) ? '' : this.targetPraefix;\r\n    };\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param targetSuffix targetSuffix\r\n     */\r\n    /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetSuffix targetSuffix\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.setNewTransUnitTargetSuffix = /**\r\n     * Set the suffix used when copying source to target.\r\n     * This is used by importNewTransUnit and createTranslationFileForLang methods.\r\n     * (since 1.8.0)\r\n     * @param {?} targetSuffix targetSuffix\r\n     * @return {?}\r\n     */\r\n    function (targetSuffix) {\r\n        this.targetSuffix = targetSuffix;\r\n    };\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return the suffix used when copying source to target.\r\n     */\r\n    /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the suffix used when copying source to target.\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.getNewTransUnitTargetSuffix = /**\r\n     * Get the suffix used when copying source to target.\r\n     * (since 1.8.0)\r\n     * @return {?} the suffix used when copying source to target.\r\n     */\r\n    function () {\r\n        return isNullOrUndefined(this.targetSuffix) ? '' : this.targetSuffix;\r\n    };\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param id id\r\n     */\r\n    /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param {?} id id\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.removeTransUnitWithId = /**\r\n     * Remove the trans-unit with the given id.\r\n     * @param {?} id id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var tuNode = this._parsedDocument.getElementById(id);\r\n        if (tuNode) {\r\n            tuNode.parentNode.removeChild(tuNode);\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits = this.transUnits.filter(function (tu) { return tu.id !== id; });\r\n            this.countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * The filename where the data is read from.\r\n     */\r\n    /**\r\n     * The filename where the data is read from.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.filename = /**\r\n     * The filename where the data is read from.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._filename;\r\n    };\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     */\r\n    /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.encoding = /**\r\n     * The encoding if the xml content (UTF-8, ISO-8859-1, ...)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._encoding;\r\n    };\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     */\r\n    /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param {?=} beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     * @return {?}\r\n     */\r\n    AbstractTranslationMessagesFile.prototype.editedContent = /**\r\n     * The xml content to be saved after changes are made.\r\n     * @param {?=} beautifyOutput Flag whether to use pretty-data to format the output.\r\n     * XMLSerializer produces some correct but strangely formatted output, which pretty-data can correct.\r\n     * See issue #64 for details.\r\n     * Default is false.\r\n     * @return {?}\r\n     */\r\n    function (beautifyOutput) {\r\n        /** @type {?} */\r\n        var options = {};\r\n        if (beautifyOutput === true) {\r\n            options.beautify = true;\r\n            options.indentString = '  ';\r\n            options.mixedContentElements = this.elementsWithMixedContent();\r\n        }\r\n        /** @type {?} */\r\n        var result = new XmlSerializer().serializeToString(this._parsedDocument, options);\r\n        if (this._fileEndsWithEOL) {\r\n            // add eol if there was eol in original source\r\n            return result + '\\n';\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    };\r\n    return AbstractTranslationMessagesFile;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * Abstract superclass for all implementations of ITransUnit.\r\n * @abstract\r\n */\r\nAbstractTransUnit = /** @class */ (function () {\r\n    function AbstractTransUnit(_element, _id, _translationMessagesFile) {\r\n        this._element = _element;\r\n        this._id = _id;\r\n        this._translationMessagesFile = _translationMessagesFile;\r\n    }\r\n    Object.defineProperty(AbstractTransUnit.prototype, \"id\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The file the unit belongs to.,\r\n     */\r\n    /**\r\n     * The file the unit belongs to.,\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.translationMessagesFile = /**\r\n     * The file the unit belongs to.,\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._translationMessagesFile;\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.sourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this._sourceContentNormalized)) {\r\n            this._sourceContentNormalized = this.createSourceContentNormalized();\r\n        }\r\n        return this._sourceContentNormalized;\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.targetState = /**\r\n     * State of the translation.\r\n     * (on of new, translated, final)\r\n     * Return values are defined as Constants STATE_...\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var nativeState = this.nativeTargetState();\r\n        return this.mapNativeStateToState(nativeState);\r\n    };\r\n    /**\r\n     * Modify the target state.\r\n     * @param newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     */\r\n    /**\r\n     * Modify the target state.\r\n     * @param {?} newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.setTargetState = /**\r\n     * Modify the target state.\r\n     * @param {?} newState one of the 3 allowed target states new, translated, final.\r\n     * Constants STATE_...\r\n     * Invalid states throw an error.\r\n     * @return {?}\r\n     */\r\n    function (newState) {\r\n        this.setNativeTargetState(this.mapStateToNativeState(newState));\r\n        if (this.translationMessagesFile() instanceof AbstractTranslationMessagesFile) {\r\n            ((/** @type {?} */ (this.translationMessagesFile()))).countNumbers();\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetSourceReferences = /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Check notes\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    /**\r\n     * Check notes\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.checkNotes = /**\r\n     * Check notes\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // check from values\r\n        /** @type {?} */\r\n        var errorInFromNote = newNotes.find(function (note) { return note.from === 'description' || note.from === 'meaning'; });\r\n        if (!isNullOrUndefined(errorInFromNote)) {\r\n            throw new Error('description or meaning are not allowed as from atttribute');\r\n        }\r\n    };\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return real xml element used for the trans unit.\r\n     */\r\n    /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return {?} real xml element used for the trans unit.\r\n     */\r\n    AbstractTransUnit.prototype.asXmlElement = /**\r\n     * The real xml element used for the trans unit.\r\n     * (internal usage only, a client should never need this)\r\n     * @return {?} real xml element used for the trans unit.\r\n     */\r\n    function () {\r\n        return this._element;\r\n    };\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     */\r\n    /**\r\n     * Translate the trans unit.\r\n     * @param {?} translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     * @return {?}\r\n     */\r\n    AbstractTransUnit.prototype.translate = /**\r\n     * Translate the trans unit.\r\n     * @param {?} translation the translated string or (preferred) a normalized message.\r\n     * The pure string can contain any markup and will not be checked.\r\n     * So it can damage the document.\r\n     * A normalized message prevents this.\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var translationNative;\r\n        if (isString(translation)) {\r\n            translationNative = (/** @type {?} */ (translation));\r\n        }\r\n        else {\r\n            translationNative = ((/** @type {?} */ (translation))).asNativeString();\r\n        }\r\n        this.translateNative(translationNative);\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param message message\r\n     * @return wether message looks like ICU message.\r\n     */\r\n    /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param {?} message message\r\n     * @return {?} wether message looks like ICU message.\r\n     */\r\n    AbstractTransUnit.prototype.isICUMessage = /**\r\n     * Test, wether message looks like ICU message.\r\n     * @param {?} message message\r\n     * @return {?} wether message looks like ICU message.\r\n     */\r\n    function (message) {\r\n        return this.messageParser().isICUMessageStart(message);\r\n    };\r\n    return AbstractTransUnit;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A part of a parsed message.\r\n * Can be a text, a placeholder, a tag\r\n */\r\n/** @enum {number} */\r\nvar ParsedMessagePartType = {\r\n    TEXT: 0,\r\n    PLACEHOLDER: 1,\r\n    START_TAG: 2,\r\n    END_TAG: 3,\r\n    EMPTY_TAG: 4,\r\n    ICU_MESSAGE: 5,\r\n    ICU_MESSAGE_REF: 6,\r\n};\r\nParsedMessagePartType[ParsedMessagePartType.TEXT] = 'TEXT';\r\nParsedMessagePartType[ParsedMessagePartType.PLACEHOLDER] = 'PLACEHOLDER';\r\nParsedMessagePartType[ParsedMessagePartType.START_TAG] = 'START_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.END_TAG] = 'END_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.EMPTY_TAG] = 'EMPTY_TAG';\r\nParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE] = 'ICU_MESSAGE';\r\nParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE_REF] = 'ICU_MESSAGE_REF';\r\n/**\r\n * @abstract\r\n */\r\nvar /**\r\n * @abstract\r\n */\r\nParsedMessagePart = /** @class */ (function () {\r\n    function ParsedMessagePart(type) {\r\n        this.type = type;\r\n    }\r\n    return ParsedMessagePart;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of just simple text.\r\n */\r\nParsedMessagePartText = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartText, _super);\r\n    function ParsedMessagePartText(text) {\r\n        var _this = _super.call(this, ParsedMessagePartType.TEXT) || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartText.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        return this.text;\r\n    };\r\n    return ParsedMessagePartText;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a placeholder.\r\n * Placeholders are numbered from 0 to n.\r\n */\r\nParsedMessagePartPlaceholder = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartPlaceholder, _super);\r\n    function ParsedMessagePartPlaceholder(index, disp) {\r\n        var _this = _super.call(this, ParsedMessagePartType.PLACEHOLDER) || this;\r\n        _this._index = index;\r\n        _this._disp = disp;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        if (format$$1 === NORMALIZATION_FORMAT_NGXTRANSLATE) {\r\n            return '{{' + this._index + '}}';\r\n        }\r\n        return '{{' + this._index + '}}';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.index = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartPlaceholder.prototype.disp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._disp;\r\n    };\r\n    return ParsedMessagePartPlaceholder;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of an opening tag like <b> or <strange>.\r\n */\r\nParsedMessagePartStartTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartStartTag, _super);\r\n    function ParsedMessagePartStartTag(tagname, idcounter) {\r\n        var _this = _super.call(this, ParsedMessagePartType.START_TAG) || this;\r\n        _this._tagname = tagname;\r\n        _this._idcounter = idcounter;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartStartTag.prototype.idCounter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._idcounter;\r\n    };\r\n    return ParsedMessagePartStartTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message part consisting of a closing tag like </b> or </strange>.\r\n */\r\nParsedMessagePartEndTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartEndTag, _super);\r\n    function ParsedMessagePartEndTag(tagname) {\r\n        var _this = _super.call(this, ParsedMessagePartType.END_TAG) || this;\r\n        _this._tagname = tagname;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEndTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        return '</' + this._tagname + '>';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEndTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    return ParsedMessagePartEndTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n// Tokens\r\n/**\r\n * Created by martin on 04.06.2017.\r\n * A tokenizer for ICU messages.\r\n * @type {?}\r\n */\r\nvar TEXT = 'TEXT';\r\n/** @type {?} */\r\nvar CURLY_BRACE_OPEN = 'CURLY_BRACE_OPEN';\r\n/** @type {?} */\r\nvar CURLY_BRACE_CLOSE = 'CURLY_BRACE_CLOSE';\r\n/** @type {?} */\r\nvar COMMA = 'COMMA';\r\n/** @type {?} */\r\nvar PLURAL = 'PLURAL';\r\n/** @type {?} */\r\nvar SELECT = 'SELECT';\r\n// states: default normal in_message\r\n/** @type {?} */\r\nvar STATE_DEFAULT = 'default';\r\n/** @type {?} */\r\nvar STATE_NORMAL = 'normal';\r\n/** @type {?} */\r\nvar STATE_IN_MESSAGE = 'in_message';\r\nvar ICUMessageTokenizer = /** @class */ (function () {\r\n    function ICUMessageTokenizer() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.getLexer = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var lexer = new Tokenizr();\r\n        /** @type {?} */\r\n        var plaintext = '';\r\n        /** @type {?} */\r\n        var openedCurlyBracesInTextCounter = 0;\r\n        lexer.before(function (ctx, match, rule) {\r\n            if (rule.name !== TEXT) {\r\n                if (_this.containsNonWhiteSpace(plaintext)) {\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                }\r\n                else {\r\n                    ctx.ignore();\r\n                }\r\n            }\r\n        });\r\n        lexer.finish(function (ctx) {\r\n            if (_this.containsNonWhiteSpace(plaintext)) {\r\n                ctx.accept(TEXT, plaintext);\r\n            }\r\n        });\r\n        // curly brace\r\n        lexer.rule(STATE_DEFAULT, /{/, function (ctx, match) {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_NORMAL);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /{/, function (ctx, match) {\r\n            ctx.accept(CURLY_BRACE_OPEN, match[0]);\r\n            ctx.push(STATE_IN_MESSAGE);\r\n        }, CURLY_BRACE_OPEN);\r\n        lexer.rule(STATE_NORMAL, /}/, function (ctx, match) {\r\n            ctx.pop();\r\n            ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n        }, CURLY_BRACE_CLOSE);\r\n        // masked ' { and }\r\n        lexer.rule(STATE_IN_MESSAGE, /'[{}]?'/, function (ctx, match) {\r\n            if (match[0] === '\\'\\'') {\r\n                plaintext += '\\'';\r\n            }\r\n            else if (match[0] === '\\'{\\'') {\r\n                plaintext += '{';\r\n            }\r\n            else if (match[0] === '\\'}\\'') {\r\n                plaintext += '}';\r\n            }\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(STATE_IN_MESSAGE, /./, function (ctx, match) {\r\n            /** @type {?} */\r\n            var char = match[0];\r\n            if (char === '{') {\r\n                openedCurlyBracesInTextCounter++;\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n            else if (char === '}') {\r\n                if (openedCurlyBracesInTextCounter > 0) {\r\n                    openedCurlyBracesInTextCounter--;\r\n                    plaintext += match[0];\r\n                    ctx.ignore();\r\n                }\r\n                else {\r\n                    ctx.pop();\r\n                    ctx.accept(TEXT, plaintext);\r\n                    plaintext = '';\r\n                    ctx.accept(CURLY_BRACE_CLOSE, match[0]);\r\n                }\r\n            }\r\n            else {\r\n                plaintext += match[0];\r\n                ctx.ignore();\r\n            }\r\n        }, TEXT);\r\n        // comma\r\n        lexer.rule(STATE_NORMAL, /,/, function (ctx, match) {\r\n            ctx.accept(COMMA, match[0]);\r\n        }, COMMA);\r\n        // keywords plural and select\r\n        lexer.rule(STATE_NORMAL, /plural/, function (ctx, match) {\r\n            ctx.accept(PLURAL, match[0]);\r\n        }, PLURAL);\r\n        lexer.rule(STATE_NORMAL, /select/, function (ctx, match) {\r\n            ctx.accept(SELECT, match[0]);\r\n        }, SELECT);\r\n        // text\r\n        lexer.rule(/./, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        lexer.rule(/[\\s]+/, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT);\r\n        return lexer;\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.containsNonWhiteSpace = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        for (var i = 0; i < text.length; i++) {\r\n            if (!/\\s/.test(text.charAt(i))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.tokenize = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        /** @type {?} */\r\n        var lexer = this.getLexer();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.input = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        this.lexer = this.getLexer();\r\n        this.lexer.input(normalizedMessage);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.next = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lexer.token();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ICUMessageTokenizer.prototype.peek = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lexer.peek();\r\n    };\r\n    return ICUMessageTokenizer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\nvar MessageCategory = /** @class */ (function () {\r\n    function MessageCategory(_category, _message) {\r\n        this._category = _category;\r\n        this._message = _message;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MessageCategory.prototype.getCategory = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._category;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MessageCategory.prototype.getMessageNormalized = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._message;\r\n    };\r\n    return MessageCategory;\r\n}());\r\n/**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nvar /**\r\n * Implementation of an ICU Message.\r\n * Created by martin on 05.06.2017.\r\n */\r\nICUMessage = /** @class */ (function () {\r\n    function ICUMessage(_parser, isPluralMessage) {\r\n        this._parser = _parser;\r\n        this._isPluralMessage = isPluralMessage;\r\n        this._categories = [];\r\n    }\r\n    /**\r\n     * @param {?} category\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.addCategory = /**\r\n     * @param {?} category\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (category, message) {\r\n        this._categories.push(new MessageCategory(category, message));\r\n    };\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return ICU message as native string.\r\n     */\r\n    /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return {?} ICU message as native string.\r\n     */\r\n    ICUMessage.prototype.asNativeString = /**\r\n     * ICU message as native string.\r\n     * This is, how it is stored, something like '{x, plural, =0 {..}'\r\n     * @return {?} ICU message as native string.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var varname = (this.isPluralMessage()) ? 'VAR_PLURAL' : 'VAR_SELECT';\r\n        /** @type {?} */\r\n        var type = (this.isPluralMessage()) ? 'plural' : 'select';\r\n        /** @type {?} */\r\n        var choiceString = '';\r\n        this._categories.forEach(function (category) {\r\n            choiceString = choiceString + format(' %s {%s}', category.getCategory(), category.getMessageNormalized().asNativeString());\r\n        });\r\n        return format('{%s, %s,%s}', varname, type, choiceString);\r\n    };\r\n    /**\r\n     * Is it a plural message?\r\n     */\r\n    /**\r\n     * Is it a plural message?\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.isPluralMessage = /**\r\n     * Is it a plural message?\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._isPluralMessage;\r\n    };\r\n    /**\r\n     * Is it a select message?\r\n     */\r\n    /**\r\n     * Is it a select message?\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.isSelectMessage = /**\r\n     * Is it a select message?\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return !this._isPluralMessage;\r\n    };\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     */\r\n    /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.getCategories = /**\r\n     * All the parts of the message.\r\n     * E.g. the ICU message {wolves, plural, =0 {no wolves} =1 {one wolf} =2 {two wolves} other {a wolf pack}}\r\n     * has 4 category objects with the categories =0, =1, =2, other.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._categories;\r\n    };\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @param translation the translation (hashmap of categories and translations).\r\n     * @return new message wit translated content.\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     */\r\n    /**\r\n     * Translate message and return a new, translated message\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     * @param {?} translation the translation (hashmap of categories and translations).\r\n     * @return {?} new message wit translated content.\r\n     */\r\n    ICUMessage.prototype.translate = /**\r\n     * Translate message and return a new, translated message\r\n     * @throws an error if translation does not match the message.\r\n     * This is the case, if there are categories not contained in the original message.\r\n     * @param {?} translation the translation (hashmap of categories and translations).\r\n     * @return {?} new message wit translated content.\r\n     */\r\n    function (translation) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var message = new ICUMessage(this._parser, this.isPluralMessage());\r\n        /** @type {?} */\r\n        var translatedCategories = new Set();\r\n        this._categories.forEach(function (category) {\r\n            /** @type {?} */\r\n            var translatedMessage;\r\n            /** @type {?} */\r\n            var translationForCategory = translation[category.getCategory()];\r\n            if (isNullOrUndefined(translationForCategory)) {\r\n                translatedMessage = category.getMessageNormalized();\r\n            }\r\n            else if (isString(translationForCategory)) {\r\n                translatedCategories.add(category.getCategory());\r\n                translatedMessage = _this._parser.parseNormalizedString((/** @type {?} */ (translationForCategory)), null);\r\n            }\r\n            else {\r\n                // TODO embedded ICU Message\r\n                translatedMessage = null;\r\n            }\r\n            message.addCategory(category.getCategory(), translatedMessage);\r\n        });\r\n        // new categories, which are not part of the original message\r\n        Object.keys(translation).forEach(function (categoryName) {\r\n            if (!translatedCategories.has(categoryName)) {\r\n                if (_this.isSelectMessage()) {\r\n                    throw new Error(format('adding a new category not allowed for select messages (\"%s\" is not part of message)', categoryName));\r\n                }\r\n                else {\r\n                    _this.checkValidPluralCategory(categoryName);\r\n                    // TODO embedded ICU Message\r\n                    /** @type {?} */\r\n                    var translatedMessage = _this._parser.parseNormalizedString((/** @type {?} */ (translation[categoryName])), null);\r\n                    message.addCategory(categoryName, translatedMessage);\r\n                }\r\n            }\r\n        });\r\n        return message;\r\n    };\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @param categoryName category\r\n     * @throws an error, if it is not a valid category name\r\n     */\r\n    /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @throws an error, if it is not a valid category name\r\n     * @param {?} categoryName category\r\n     * @return {?}\r\n     */\r\n    ICUMessage.prototype.checkValidPluralCategory = /**\r\n     * Check, wether category is valid plural category.\r\n     * Allowed are =n, 'zero', 'one', 'two', 'few', 'many' and 'other'\r\n     * @throws an error, if it is not a valid category name\r\n     * @param {?} categoryName category\r\n     * @return {?}\r\n     */\r\n    function (categoryName) {\r\n        /** @type {?} */\r\n        var allowedKeywords = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n        if (categoryName.match(/=\\d+/)) {\r\n            return;\r\n        }\r\n        if (allowedKeywords.find(function (key) { return key === categoryName; })) {\r\n            return;\r\n        }\r\n        throw new Error(format('invalid plural category \"%s\", allowed are =<n> and %s', categoryName, allowedKeywords));\r\n    };\r\n    return ICUMessage;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nvar /**\r\n * Created by martin on 02.06.2017.\r\n * A message part consisting of an icu message.\r\n * There can only be one icu message in a parsed message.\r\n * Syntax of ICU message is '{' <keyname> ',' 'select'|'plural' ',' (<category> '{' text '}')+ '}'\r\n */\r\nParsedMessagePartICUMessage = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartICUMessage, _super);\r\n    function ParsedMessagePartICUMessage(icuMessageText, _parser) {\r\n        var _this = _super.call(this, ParsedMessagePartType.ICU_MESSAGE) || this;\r\n        _this._parser = _parser;\r\n        if (icuMessageText) {\r\n            _this.parseICUMessage(icuMessageText);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param icuMessageText icuMessageText\r\n     * @return wether text might be an ICU message.\r\n     */\r\n    /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} icuMessageText icuMessageText\r\n     * @return {?} wether text might be an ICU message.\r\n     */\r\n    ParsedMessagePartICUMessage.looksLikeICUMessage = /**\r\n     * Test wether text might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} icuMessageText icuMessageText\r\n     * @return {?} wether text might be an ICU message.\r\n     */\r\n    function (icuMessageText) {\r\n        /** @type {?} */\r\n        var part = new ParsedMessagePartICUMessage(null, null);\r\n        return part.looksLikeICUMessage(icuMessageText);\r\n    };\r\n    /**\r\n     * @param {?=} displayFormat\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.asDisplayString = /**\r\n     * @param {?=} displayFormat\r\n     * @return {?}\r\n     */\r\n    function (displayFormat) {\r\n        return '<ICU-Message/>';\r\n    };\r\n    /**\r\n     * return the parsed message.\r\n     * @return parsed message\r\n     */\r\n    /**\r\n     * return the parsed message.\r\n     * @return {?} parsed message\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.getICUMessage = /**\r\n     * return the parsed message.\r\n     * @return {?} parsed message\r\n     */\r\n    function () {\r\n        return this._message;\r\n    };\r\n    /**\r\n     * Parse the message.\r\n     * @param text message text to parse\r\n     * @throws an error if the syntax is not ok in any way.\r\n     */\r\n    /**\r\n     * Parse the message.\r\n     * @throws an error if the syntax is not ok in any way.\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.parseICUMessage = /**\r\n     * Parse the message.\r\n     * @throws an error if the syntax is not ok in any way.\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._messageText = text;\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        this.expectNext(CURLY_BRACE_OPEN);\r\n        this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n        this.expectNext(COMMA);\r\n        /** @type {?} */\r\n        var token = this._tokenizer.next();\r\n        if (token.type === PLURAL) {\r\n            this._message = new ICUMessage(this._parser, true);\r\n        }\r\n        else if (token.type === SELECT) {\r\n            this._message = new ICUMessage(this._parser, false);\r\n        }\r\n        this.expectNext(COMMA);\r\n        token = this._tokenizer.peek();\r\n        while (token.type !== CURLY_BRACE_CLOSE) {\r\n            /** @type {?} */\r\n            var category = this.expectNext(TEXT).value.trim();\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            /** @type {?} */\r\n            var message = this.expectNext(TEXT).value;\r\n            this._message.addCategory(category, this.parseNativeSubMessage(message));\r\n            this.expectNext(CURLY_BRACE_CLOSE);\r\n            token = this._tokenizer.peek();\r\n        }\r\n        this.expectNext(CURLY_BRACE_CLOSE);\r\n        this.expectNext('EOF');\r\n    };\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param text message text to parse\r\n     */\r\n    /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.looksLikeICUMessage = /**\r\n     * Parse the message to check, wether it might be an ICU message.\r\n     * Should at least start with something like '{<name>, select, ..' or '{<name>, plural, ...'\r\n     * @param {?} text message text to parse\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        // console.log('message ', text);\r\n        // const tokens = new ICUMessageTokenizer().tokenize(text);\r\n        // tokens.forEach((tok) => {\r\n        //     console.log('Token', tok.type, tok.value);\r\n        // });\r\n        this._tokenizer = new ICUMessageTokenizer();\r\n        this._tokenizer.input(text);\r\n        try {\r\n            this.expectNext(CURLY_BRACE_OPEN);\r\n            this.expectNext(TEXT); // varname, not used currently, ng always used VAR_PLURAL or VAR_SELECT\r\n            this.expectNext(COMMA);\r\n            /** @type {?} */\r\n            var token = this._tokenizer.next();\r\n            if (token.type !== PLURAL && token.type !== SELECT) {\r\n                return false;\r\n            }\r\n            this.expectNext(COMMA);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @param tokentype expected type.\r\n     * @return Token\r\n     * @throws error, if next token has wrong type.\r\n     */\r\n    /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @throws error, if next token has wrong type.\r\n     * @param {?} tokentype expected type.\r\n     * @return {?} Token\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.expectNext = /**\r\n     * Read next token and expect, that it is of the given type.\r\n     * @throws error, if next token has wrong type.\r\n     * @param {?} tokentype expected type.\r\n     * @return {?} Token\r\n     */\r\n    function (tokentype) {\r\n        /** @type {?} */\r\n        var token = this._tokenizer.next();\r\n        if (token.type !== tokentype) {\r\n            throw new Error(format('Error parsing ICU Message: expected %s, found %s (%s) (message %s)', tokentype, token.type, token.value, this._messageText));\r\n        }\r\n        return token;\r\n    };\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param message message in format dependent xml syntax.\r\n     * @return normalized message\r\n     */\r\n    /**\r\n     * Parse XML text to normalized message.\r\n     * @param {?} message message in format dependent xml syntax.\r\n     * @return {?} normalized message\r\n     */\r\n    ParsedMessagePartICUMessage.prototype.parseNativeSubMessage = /**\r\n     * Parse XML text to normalized message.\r\n     * @param {?} message message in format dependent xml syntax.\r\n     * @return {?} normalized message\r\n     */\r\n    function (message) {\r\n        return this._parser.createNormalizedMessageFromXMLString(message, null);\r\n    };\r\n    return ParsedMessagePartICUMessage;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A reference to an ICU message\r\n * icu references are numbered from 0 to n.\r\n */\r\nParsedMessagePartICUMessageRef = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartICUMessageRef, _super);\r\n    function ParsedMessagePartICUMessageRef(index, disp) {\r\n        var _this = _super.call(this, ParsedMessagePartType.ICU_MESSAGE_REF) || this;\r\n        _this._index = index;\r\n        _this._disp = disp;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        return '<ICU-Message-Ref_' + this._index + '/>';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.index = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartICUMessageRef.prototype.disp = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._disp;\r\n    };\r\n    return ParsedMessagePartICUMessageRef;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nvar /**\r\n * Created by martin on 14.06.2017.\r\n * A message part consisting of an empty tag like <br/>.\r\n */\r\nParsedMessagePartEmptyTag = /** @class */ (function (_super) {\r\n    __extends(ParsedMessagePartEmptyTag, _super);\r\n    function ParsedMessagePartEmptyTag(tagname, idcounter) {\r\n        var _this = _super.call(this, ParsedMessagePartType.EMPTY_TAG) || this;\r\n        _this._tagname = tagname;\r\n        _this._idcounter = idcounter;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.asDisplayString = /**\r\n     * @param {?=} format\r\n     * @return {?}\r\n     */\r\n    function (format$$1) {\r\n        if (this._idcounter === 0) {\r\n            return '<' + this._tagname + '>';\r\n        }\r\n        else {\r\n            return '<' + this._tagname + ' id=\"' + this._idcounter.toString() + '\">';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.tagName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._tagname;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessagePartEmptyTag.prototype.idCounter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._idcounter;\r\n    };\r\n    return ParsedMessagePartEmptyTag;\r\n}(ParsedMessagePart));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nvar /**\r\n * Created by martin on 05.05.2017.\r\n * A message text read from a translation file.\r\n * Can contain placeholders, tags, text.\r\n * This class is a representation independent of the concrete format.\r\n */\r\nParsedMessage = /** @class */ (function () {\r\n    function ParsedMessage(parser, sourceMessage) {\r\n        this._parser = parser;\r\n        this.sourceMessage = sourceMessage;\r\n        this._parts = [];\r\n    }\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return parser\r\n     */\r\n    /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return {?} parser\r\n     */\r\n    ParsedMessage.prototype.getParser = /**\r\n     * Get the parser (for tests only, not part of API)\r\n     * @return {?} parser\r\n     */\r\n    function () {\r\n        return this._parser;\r\n    };\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @param normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     */\r\n    /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     * @param {?} normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translate = /**\r\n     * Create a new normalized message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is an ICU message.\r\n     * @param {?} normalizedString the translation in normalized form.\r\n     * If the message is an ICUMessage (getICUMessage returns a value), use translateICUMessage instead.\r\n     * @return {?}\r\n     */\r\n    function (normalizedString) {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return this._parser.parseNormalizedString((/** @type {?} */ (normalizedString)), this);\r\n        }\r\n        else {\r\n            throw new Error(format('cannot translate ICU message with simple string, use translateICUMessage() instead (\"%s\", \"%s\")', normalizedString, this.asNativeString()));\r\n        }\r\n    };\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @param icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     */\r\n    /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     * @param {?} icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translateICUMessage = /**\r\n     * Create a new normalized icu message as a translation of this one.\r\n     * @throws an error if normalized string is not well formed.\r\n     * Throws an error too, if this is not an ICU message.\r\n     * @param {?} icuTranslation the translation, this is the translation of the ICU message,\r\n     * which is not a string, but a collections of the translations of the different categories.\r\n     * The message must be an ICUMessage (getICUMessage returns a value)\r\n     * @return {?}\r\n     */\r\n    function (icuTranslation) {\r\n        /** @type {?} */\r\n        var icuMessage = this.getICUMessage();\r\n        if (isNullOrUndefined(icuMessage)) {\r\n            throw new Error(format('this is not an ICU message, use translate() instead (\"%s\", \"%s\")', icuTranslation, this.asNativeString()));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var translatedICUMessage = icuMessage.translate(icuTranslation);\r\n            return this._parser.parseICUMessage(translatedICUMessage.asNativeString(), this);\r\n        }\r\n    };\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     */\r\n    /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param {?} nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.translateNativeString = /**\r\n     * Create a new normalized message from a native xml string as a translation of this one.\r\n     * @param {?} nativeString xml string in the format of the underlying file format.\r\n     * Throws an error if native string is not acceptable.\r\n     * @return {?}\r\n     */\r\n    function (nativeString) {\r\n        return this._parser.createNormalizedMessageFromXMLString(nativeString, this);\r\n    };\r\n    /**\r\n     * normalized message as string.\r\n     * @param displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     */\r\n    /**\r\n     * normalized message as string.\r\n     * @param {?=} displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.asDisplayString = /**\r\n     * normalized message as string.\r\n     * @param {?=} displayFormat optional way to determine the exact syntax.\r\n     * Allowed formats are defined as constants NORMALIZATION_FORMAT...\r\n     * @return {?}\r\n     */\r\n    function (displayFormat) {\r\n        return this._parts.map(function (part) { return part.asDisplayString(displayFormat); }).join('');\r\n    };\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     */\r\n    /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.asNativeString = /**\r\n     * Returns the message content as format dependent native string.\r\n     * Includes all format specific markup like <ph id=\"INTERPOLATION\" ../> ..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isNullOrUndefined(this.getICUMessage())) {\r\n            return DOMUtilities.getXMLContent(this._xmlRepresentation);\r\n        }\r\n        else {\r\n            return this.getICUMessage().asNativeString();\r\n        }\r\n    };\r\n    /**\r\n     * Validate the message.\r\n     * @return null, if ok, error object otherwise.\r\n     */\r\n    /**\r\n     * Validate the message.\r\n     * @return {?} null, if ok, error object otherwise.\r\n     */\r\n    ParsedMessage.prototype.validate = /**\r\n     * Validate the message.\r\n     * @return {?} null, if ok, error object otherwise.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var hasErrors = false;\r\n        /** @type {?} */\r\n        var errors = {};\r\n        /** @type {?} */\r\n        var e;\r\n        e = this.checkPlaceholderAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.placeholderAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefRemoved();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefRemoved = e;\r\n            hasErrors = true;\r\n        }\r\n        e = this.checkICUMessageRefAdded();\r\n        if (!isNullOrUndefined(e)) {\r\n            errors.icuMessageRefAdded = e;\r\n            hasErrors = true;\r\n        }\r\n        return hasErrors ? errors : null;\r\n    };\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return null, if no warning, warnings as error object otherwise.\r\n     */\r\n    /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return {?} null, if no warning, warnings as error object otherwise.\r\n     */\r\n    ParsedMessage.prototype.validateWarnings = /**\r\n     * Validate the message, check for warnings only.\r\n     * A warning shows, that the message is acceptable, but misses something.\r\n     * E.g. if you remove a placeholder or a special tag from the original message, this generates a warning.\r\n     * @return {?} null, if no warning, warnings as error object otherwise.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var hasWarnings = false;\r\n        /** @type {?} */\r\n        var warnings = {};\r\n        /** @type {?} */\r\n        var w;\r\n        w = this.checkPlaceholderRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.placeholderRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagRemoved();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagRemoved = w;\r\n            hasWarnings = true;\r\n        }\r\n        w = this.checkTagAdded();\r\n        if (!isNullOrUndefined(w)) {\r\n            warnings.tagAdded = w;\r\n            hasWarnings = true;\r\n        }\r\n        return hasWarnings ? warnings : null;\r\n    };\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return ICUMessage or null.\r\n     */\r\n    /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return {?} ICUMessage or null.\r\n     */\r\n    ParsedMessage.prototype.getICUMessage = /**\r\n     * If this message is an ICU message, returns its structure.\r\n     * Otherwise this method returns null.\r\n     * @return {?} ICUMessage or null.\r\n     */\r\n    function () {\r\n        if (this._parts.length === 1 && this._parts[0].type === ParsedMessagePartType.ICU_MESSAGE) {\r\n            /** @type {?} */\r\n            var icuPart = (/** @type {?} */ (this._parts[0]));\r\n            return icuPart.getICUMessage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkPlaceholderAdded = /**\r\n     * Check for added placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourcePlaceholders_1 = this.sourceMessage.allPlaceholders();\r\n            /** @type {?} */\r\n            var myPlaceholders = this.allPlaceholders();\r\n            myPlaceholders.forEach(function (index) {\r\n                if (!sourcePlaceholders_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added placeholder ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_1 = '';\r\n            /** @type {?} */\r\n            var first_1 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_1) {\r\n                    allSuspiciousIndexes_1 = allSuspiciousIndexes_1 + ', ';\r\n                }\r\n                allSuspiciousIndexes_1 = allSuspiciousIndexes_1 + index;\r\n                first_1 = false;\r\n            });\r\n            e = 'added placeholders ' + allSuspiciousIndexes_1 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkPlaceholderRemoved = /**\r\n     * Check for removed placeholder.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var w = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourcePlaceholders = this.sourceMessage.allPlaceholders();\r\n            /** @type {?} */\r\n            var myPlaceholders_1 = this.allPlaceholders();\r\n            sourcePlaceholders.forEach(function (index) {\r\n                if (!myPlaceholders_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            w = 'removed placeholder ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_2 = '';\r\n            /** @type {?} */\r\n            var first_2 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_2) {\r\n                    allSuspiciousIndexes_2 = allSuspiciousIndexes_2 + ', ';\r\n                }\r\n                allSuspiciousIndexes_2 = allSuspiciousIndexes_2 + index;\r\n                first_2 = false;\r\n            });\r\n            w = 'removed placeholders ' + allSuspiciousIndexes_2 + ' from original message';\r\n        }\r\n        return w;\r\n    };\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkICUMessageRefAdded = /**\r\n     * Check for added ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceICURefs_1 = this.sourceMessage.allICUMessageRefs();\r\n            /** @type {?} */\r\n            var myICURefs = this.allICUMessageRefs();\r\n            myICURefs.forEach(function (index) {\r\n                if (!sourceICURefs_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'added ICU message reference ' + suspiciousIndexes[0] + ', which is not in original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_3 = '';\r\n            /** @type {?} */\r\n            var first_3 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_3) {\r\n                    allSuspiciousIndexes_3 = allSuspiciousIndexes_3 + ', ';\r\n                }\r\n                allSuspiciousIndexes_3 = allSuspiciousIndexes_3 + index;\r\n                first_3 = false;\r\n            });\r\n            e = 'added ICU message references ' + allSuspiciousIndexes_3 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkICUMessageRefRemoved = /**\r\n     * Check for removed ICU Message Refs.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousIndexes = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceICURefs = this.sourceMessage.allICUMessageRefs();\r\n            /** @type {?} */\r\n            var myICURefs_1 = this.allICUMessageRefs();\r\n            sourceICURefs.forEach(function (index) {\r\n                if (!myICURefs_1.has(index)) {\r\n                    suspiciousIndexes.push(index);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousIndexes.length === 1) {\r\n            e = 'removed ICU message reference ' + suspiciousIndexes[0] + ' from original message';\r\n        }\r\n        else if (suspiciousIndexes.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousIndexes_4 = '';\r\n            /** @type {?} */\r\n            var first_4 = true;\r\n            suspiciousIndexes.forEach(function (index) {\r\n                if (!first_4) {\r\n                    allSuspiciousIndexes_4 = allSuspiciousIndexes_4 + ', ';\r\n                }\r\n                allSuspiciousIndexes_4 = allSuspiciousIndexes_4 + index;\r\n                first_4 = false;\r\n            });\r\n            e = 'removed ICU message references ' + allSuspiciousIndexes_4 + ' from original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     */\r\n    /**\r\n     * Get all indexes of placeholders used in the message.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allPlaceholders = /**\r\n     * Get all indexes of placeholders used in the message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                /** @type {?} */\r\n                var index = ((/** @type {?} */ (part))).index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param index index of placeholder\r\n     * @return disp or null\r\n     */\r\n    /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param {?} index index of placeholder\r\n     * @return {?} disp or null\r\n     */\r\n    ParsedMessage.prototype.getPlaceholderDisp = /**\r\n     * Return the disp-Attribute of placeholder\r\n     * @param {?} index index of placeholder\r\n     * @return {?} disp or null\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var placeHolder = null;\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.PLACEHOLDER) {\r\n                /** @type {?} */\r\n                var phPart = (/** @type {?} */ (part));\r\n                if (phPart.index() === index) {\r\n                    placeHolder = phPart;\r\n                }\r\n            }\r\n        });\r\n        return placeHolder ? placeHolder.disp() : null;\r\n    };\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     */\r\n    /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allICUMessageRefs = /**\r\n     * Get all indexes of ICU message refs used in the message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                /** @type {?} */\r\n                var index = ((/** @type {?} */ (part))).index();\r\n                result.add(index);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param index of ref\r\n     * @return disp or null\r\n     */\r\n    /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param {?} index of ref\r\n     * @return {?} disp or null\r\n     */\r\n    ParsedMessage.prototype.getICUMessageRefDisp = /**\r\n     * Return the disp-Attribute of icu message ref\r\n     * @param {?} index of ref\r\n     * @return {?} disp or null\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var icuMessageRefPart = null;\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.ICU_MESSAGE_REF) {\r\n                /** @type {?} */\r\n                var refPart = (/** @type {?} */ (part));\r\n                if (refPart.index() === index) {\r\n                    icuMessageRefPart = refPart;\r\n                }\r\n            }\r\n        });\r\n        return icuMessageRefPart ? icuMessageRefPart.disp() : null;\r\n    };\r\n    /**\r\n     * Check for added tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for added tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkTagAdded = /**\r\n     * Check for added tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var e = null;\r\n        /** @type {?} */\r\n        var suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceTags_1 = this.sourceMessage.allTags();\r\n            /** @type {?} */\r\n            var myTags = this.allTags();\r\n            myTags.forEach(function (tagName) {\r\n                if (!sourceTags_1.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            e = 'added tag <' + suspiciousTags[0] + '>, which is not in original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousTags_1 = '';\r\n            /** @type {?} */\r\n            var first_5 = true;\r\n            suspiciousTags.forEach(function (tag) {\r\n                if (!first_5) {\r\n                    allSuspiciousTags_1 = allSuspiciousTags_1 + ', ';\r\n                }\r\n                allSuspiciousTags_1 = allSuspiciousTags_1 + '<' + tag + '>';\r\n                first_5 = false;\r\n            });\r\n            e = 'added tags ' + allSuspiciousTags_1 + ', which are not in original message';\r\n        }\r\n        return e;\r\n    };\r\n    /**\r\n     * Check for removed tags.\r\n     * @return null or message, if fulfilled.\r\n     */\r\n    /**\r\n     * Check for removed tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    ParsedMessage.prototype.checkTagRemoved = /**\r\n     * Check for removed tags.\r\n     * @return {?} null or message, if fulfilled.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var w = null;\r\n        /** @type {?} */\r\n        var suspiciousTags = [];\r\n        if (this.sourceMessage) {\r\n            /** @type {?} */\r\n            var sourceTags = this.sourceMessage.allTags();\r\n            /** @type {?} */\r\n            var myTags_1 = this.allTags();\r\n            sourceTags.forEach(function (tagName) {\r\n                if (!myTags_1.has(tagName)) {\r\n                    suspiciousTags.push(tagName);\r\n                }\r\n            });\r\n        }\r\n        if (suspiciousTags.length === 1) {\r\n            w = 'removed tag <' + suspiciousTags[0] + '> from original message';\r\n        }\r\n        else if (suspiciousTags.length > 1) {\r\n            /** @type {?} */\r\n            var allSuspiciousTags_2 = '';\r\n            /** @type {?} */\r\n            var first_6 = true;\r\n            suspiciousTags.forEach(function (tag) {\r\n                if (!first_6) {\r\n                    allSuspiciousTags_2 = allSuspiciousTags_2 + ', ';\r\n                }\r\n                allSuspiciousTags_2 = allSuspiciousTags_2 + '<' + tag + '>';\r\n                first_6 = false;\r\n            });\r\n            w = 'removed tags ' + allSuspiciousTags_2 + ' from original message';\r\n        }\r\n        return w;\r\n    };\r\n    /**\r\n     * Get all tag names used in the message.\r\n     */\r\n    /**\r\n     * Get all tag names used in the message.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.allTags = /**\r\n     * Get all tag names used in the message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var result = new Set();\r\n        this.parts().forEach(function (part) {\r\n            if (part.type === ParsedMessagePartType.START_TAG || part.type === ParsedMessagePartType.EMPTY_TAG) {\r\n                /** @type {?} */\r\n                var tagName = ((/** @type {?} */ (part))).tagName();\r\n                result.add(tagName);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.parts = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._parts;\r\n    };\r\n    /**\r\n     * @param {?} xmlRepresentation\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.setXmlRepresentation = /**\r\n     * @param {?} xmlRepresentation\r\n     * @return {?}\r\n     */\r\n    function (xmlRepresentation) {\r\n        this._xmlRepresentation = xmlRepresentation;\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addText = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        this._parts.push(new ParsedMessagePartText(text));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addPlaceholder = /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    function (index, disp) {\r\n        this._parts.push(new ParsedMessagePartPlaceholder(index, disp));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addStartTag = /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    function (tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartStartTag(tagname, idcounter));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addEndTag = /**\r\n     * @param {?} tagname\r\n     * @return {?}\r\n     */\r\n    function (tagname) {\r\n        // check if well formed\r\n        /** @type {?} */\r\n        var openTag = this.calculateOpenTagName();\r\n        if (!openTag || openTag !== tagname) {\r\n            // oops, not well formed\r\n            throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagname, openTag, this.asNativeString()));\r\n        }\r\n        this._parts.push(new ParsedMessagePartEndTag(tagname));\r\n    };\r\n    /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addEmptyTag = /**\r\n     * @param {?} tagname\r\n     * @param {?} idcounter\r\n     * @return {?}\r\n     */\r\n    function (tagname, idcounter) {\r\n        this._parts.push(new ParsedMessagePartEmptyTag(tagname, idcounter));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addICUMessageRef = /**\r\n     * @param {?} index\r\n     * @param {?} disp\r\n     * @return {?}\r\n     */\r\n    function (index, disp) {\r\n        this._parts.push(new ParsedMessagePartICUMessageRef(index, disp));\r\n    };\r\n    /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.addICUMessage = /**\r\n     * @param {?} text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        this._parts.push(new ParsedMessagePartICUMessage(text, this._parser));\r\n    };\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     */\r\n    /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     * @return {?}\r\n     */\r\n    ParsedMessage.prototype.calculateOpenTagName = /**\r\n     * Determine, wether there is an open tag, that is not closed.\r\n     * Returns the latest one or null, if there is no open tag.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var openTags = [];\r\n        this._parts.forEach(function (part) {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.START_TAG:\r\n                    openTags.push(((/** @type {?} */ (part))).tagName());\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    /** @type {?} */\r\n                    var tagName = ((/** @type {?} */ (part))).tagName();\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== tagName) {\r\n                        // oops, not well formed\r\n                        /** @type {?} */\r\n                        var openTag = (openTags.length === 0) ? 'nothing' : openTags[openTags.length - 1];\r\n                        throw new Error(format('unexpected close tag %s (currently open is %s, native xml is \"%s\")', tagName, openTag, _this.asNativeString()));\r\n                    }\r\n                    openTags.pop();\r\n            }\r\n        });\r\n        return openTags.length === 0 ? null : openTags[openTags.length - 1];\r\n    };\r\n    return ParsedMessage;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n// Tokens\r\n/**\r\n * Created by martin on 14.05.2017.\r\n * A tokenizer for normalized messages.\r\n * @type {?}\r\n */\r\nvar TEXT$1 = 'TEXT';\r\n/** @type {?} */\r\nvar START_TAG = 'START_TAG';\r\n/** @type {?} */\r\nvar END_TAG = 'END_TAG';\r\n/** @type {?} */\r\nvar EMPTY_TAG = 'EMPTY_TAG';\r\n/** @type {?} */\r\nvar PLACEHOLDER = 'PLACEHOLDER';\r\n/** @type {?} */\r\nvar ICU_MESSAGE_REF = 'ICU_MESSAGE_REF';\r\n/** @type {?} */\r\nvar ICU_MESSAGE = 'ICU_MESSAGE';\r\nvar ParsedMesageTokenizer = /** @class */ (function () {\r\n    function ParsedMesageTokenizer() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParsedMesageTokenizer.prototype.getLexer = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var lexer = new Tokenizr();\r\n        /** @type {?} */\r\n        var plaintext = '';\r\n        lexer.before(function (ctx, match, rule) {\r\n            if (rule.name !== TEXT$1 && plaintext !== '') {\r\n                ctx.accept(TEXT$1, { text: plaintext });\r\n                plaintext = '';\r\n            }\r\n        });\r\n        lexer.finish(function (ctx) {\r\n            if (plaintext !== '') {\r\n                ctx.accept(TEXT$1, { text: plaintext });\r\n            }\r\n        });\r\n        // empty tag, there are only a few allowed (see tag-mappings): ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR']\r\n        // format is <name id=\"nr\">, nr ist optional, z.B. <img> oder <img id=\"2\">\r\n        lexer.rule(/<(br|hr|img|area|link|wbr)( id=\"([0-9])*\")?\\>/, function (ctx, match) {\r\n            /** @type {?} */\r\n            var idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(EMPTY_TAG, { name: match[1], idcounter: idcount });\r\n        }, EMPTY_TAG);\r\n        // start tag, Format <name id=\"nr\">, nr ist optional, z.B. <mytag> oder <mytag id=\"2\">\r\n        lexer.rule(/<([a-zA-Z][a-zA-Z-0-9]*)( id=\"([0-9]*)\")?>/, function (ctx, match) {\r\n            /** @type {?} */\r\n            var idcount = isNullOrUndefined(match[3]) ? 0 : parseInt(match[3], 10);\r\n            ctx.accept(START_TAG, { name: match[1], idcounter: idcount });\r\n        }, START_TAG);\r\n        // end tag\r\n        lexer.rule(/<\\/([a-zA-Z][a-zA-Z-0-9]*)>/, function (ctx, match) {\r\n            ctx.accept(END_TAG, { name: match[1] });\r\n        }, END_TAG);\r\n        // placeholder\r\n        lexer.rule(/{{([0-9]+)}}/, function (ctx, match) {\r\n            ctx.accept(PLACEHOLDER, { idcounter: parseInt(match[1], 10) });\r\n        }, PLACEHOLDER);\r\n        // icu message ref\r\n        lexer.rule(/<ICU-Message-Ref_([0-9]+)\\/>/, function (ctx, match) {\r\n            ctx.accept(ICU_MESSAGE_REF, { idcounter: parseInt(match[1], 10) });\r\n        }, ICU_MESSAGE_REF);\r\n        // icu message\r\n        lexer.rule(/<ICU-Message\\/>/, function (ctx, match) {\r\n            ctx.accept(ICU_MESSAGE, { message: match[0] });\r\n        }, ICU_MESSAGE);\r\n        // text\r\n        lexer.rule(/./, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT$1);\r\n        lexer.rule(/[\\t\\r\\n]+/, function (ctx, match) {\r\n            plaintext += match[0];\r\n            ctx.ignore();\r\n        }, TEXT$1);\r\n        return lexer;\r\n    };\r\n    /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    ParsedMesageTokenizer.prototype.tokenize = /**\r\n     * @param {?} normalizedMessage\r\n     * @return {?}\r\n     */\r\n    function (normalizedMessage) {\r\n        /** @type {?} */\r\n        var lexer = this.getLexer();\r\n        lexer.reset();\r\n        lexer.input(normalizedMessage);\r\n        return lexer.tokens();\r\n    };\r\n    return ParsedMesageTokenizer;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n * @abstract\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser can parse the xml content of a translatable message.\r\n * It generates a ParsedMessage from it.\r\n * @abstract\r\n */\r\nAbstractMessageParser = /** @class */ (function () {\r\n    function AbstractMessageParser() {\r\n    }\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param xmlElement the xml representation\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param {?} xmlElement the xml representation\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createNormalizedMessageFromXML = /**\r\n     * Parse XML to ParsedMessage.\r\n     * @param {?} xmlElement the xml representation\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    function (xmlElement, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        if (xmlElement) {\r\n            message.setXmlRepresentation(xmlElement);\r\n            this.addPartsOfNodeToMessage(xmlElement, message, false);\r\n        }\r\n        return message;\r\n    };\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     */\r\n    /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param {?} xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createNormalizedMessageFromXMLString = /**\r\n     * Parse XML string to ParsedMessage.\r\n     * @param {?} xmlString the xml representation without root element, e.g. this is <ph x></ph> an example.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * Throws an error if normalized xml is not well formed.\r\n     * @return {?}\r\n     */\r\n    function (xmlString, sourceMessage) {\r\n        /** @type {?} */\r\n        var doc = new DOMParser().parseFromString('<dummy>' + xmlString + '</dummy>', 'text/xml');\r\n        /** @type {?} */\r\n        var xmlElement = (/** @type {?} */ (doc.childNodes.item(0)));\r\n        return this.createNormalizedMessageFromXML(xmlElement, sourceMessage);\r\n    };\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param node node\r\n     * @param message message to be generated.\r\n     * @param includeSelf if true, add node by itself, otherwise only children.\r\n     */\r\n    /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param {?} node node\r\n     * @param {?} message message to be generated.\r\n     * @param {?} includeSelf if true, add node by itself, otherwise only children.\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.addPartsOfNodeToMessage = /**\r\n     * recursively run through a node and add all identified parts to the message.\r\n     * @param {?} node node\r\n     * @param {?} message message to be generated.\r\n     * @param {?} includeSelf if true, add node by itself, otherwise only children.\r\n     * @return {?}\r\n     */\r\n    function (node, message, includeSelf) {\r\n        /** @type {?} */\r\n        var processChildren = true;\r\n        if (includeSelf) {\r\n            if (node.nodeType === node.TEXT_NODE) {\r\n                message.addText(node.textContent);\r\n                return;\r\n            }\r\n            if (node.nodeType === node.ELEMENT_NODE) {\r\n                processChildren = this.processStartElement((/** @type {?} */ (node)), message);\r\n            }\r\n        }\r\n        if (processChildren) {\r\n            /** @type {?} */\r\n            var icuMessageText = this.getICUMessageText(node);\r\n            /** @type {?} */\r\n            var isICU = !isNullOrUndefined(icuMessageText);\r\n            if (isICU) {\r\n                try {\r\n                    message.addICUMessage(icuMessageText);\r\n                }\r\n                catch (error) {\r\n                    // if it is not parsable, handle it as non ICU\r\n                    console.log('non ICU message: ', icuMessageText, error);\r\n                    isICU = false;\r\n                }\r\n            }\r\n            if (!isICU) {\r\n                /** @type {?} */\r\n                var children = node.childNodes;\r\n                for (var i = 0; i < children.length; i++) {\r\n                    this.addPartsOfNodeToMessage(children.item(i), message, true);\r\n                }\r\n            }\r\n        }\r\n        if (node.nodeType === node.ELEMENT_NODE) {\r\n            this.processEndElement((/** @type {?} */ (node)), message);\r\n        }\r\n    };\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    AbstractMessageParser.prototype.getICUMessageText = /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    function (node) {\r\n        /** @type {?} */\r\n        var children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var firstChild = children.item(0);\r\n        if (firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                return DOMUtilities.getXMLContent((/** @type {?} */ (node)));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param text text\r\n     */\r\n    /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param {?} text text\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.isICUMessageStart = /**\r\n     * Test, wether text is beginning of ICU Message.\r\n     * @param {?} text text\r\n     * @return {?}\r\n     */\r\n    function (text) {\r\n        return ParsedMessagePartICUMessage.looksLikeICUMessage(text);\r\n        //        return text.startsWith('{VAR_PLURAL') || text.startsWith('{VAR_SELECT');\r\n    };\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param normalizedString normalized string\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param {?} normalizedString normalized string\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    AbstractMessageParser.prototype.parseNormalizedString = /**\r\n     * Parse normalized string to ParsedMessage.\r\n     * @param {?} normalizedString normalized string\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if normalized string is not well formed.\r\n     */\r\n    function (normalizedString, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        /** @type {?} */\r\n        var openTags = [];\r\n        /** @type {?} */\r\n        var tokens;\r\n        try {\r\n            tokens = new ParsedMesageTokenizer().tokenize(normalizedString);\r\n        }\r\n        catch (error) {\r\n            throw new Error(format('unexpected error while parsing message: \"%s\" (parsed \"%\")', error.message, normalizedString));\r\n        }\r\n        tokens.forEach(function (token) {\r\n            /** @type {?} */\r\n            var disp = null;\r\n            switch (token.type) {\r\n                case TEXT$1:\r\n                    message.addText(token.value.text);\r\n                    break;\r\n                case START_TAG:\r\n                    message.addStartTag(token.value.name, token.value.idcounter);\r\n                    openTags.push(token.value.name);\r\n                    break;\r\n                case END_TAG:\r\n                    message.addEndTag(token.value.name);\r\n                    if (openTags.length === 0 || openTags[openTags.length - 1] !== token.value.name) {\r\n                        // oops, not well formed\r\n                        throw new Error(format('unexpected close tag \"%s\" (parsed \"%s\")', token.value.name, normalizedString));\r\n                    }\r\n                    openTags.pop();\r\n                    break;\r\n                case EMPTY_TAG:\r\n                    message.addEmptyTag(token.value.name, token.value.idcounter);\r\n                    break;\r\n                case PLACEHOLDER:\r\n                    disp = (sourceMessage) ? sourceMessage.getPlaceholderDisp(token.value.idcounter) : null;\r\n                    message.addPlaceholder(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE_REF:\r\n                    disp = (sourceMessage) ? sourceMessage.getICUMessageRefDisp(token.value.idcounter) : null;\r\n                    message.addICUMessageRef(token.value.idcounter, disp);\r\n                    break;\r\n                case ICU_MESSAGE:\r\n                    throw new Error(format('<ICUMessage/> not allowed here, use parseICUMessage instead (parsed \"%\")', normalizedString));\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        if (openTags.length > 0) {\r\n            // oops, not well closed tags\r\n            throw new Error(format('missing close tag \"%s\" (parsed \"%s\")', openTags[openTags.length - 1], normalizedString));\r\n        }\r\n        message.setXmlRepresentation(this.createXmlRepresentation(message));\r\n        return message;\r\n    };\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param sourceMessage optional original message that will be translated by normalized new one\r\n     * @return a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param {?} icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    AbstractMessageParser.prototype.parseICUMessage = /**\r\n     * Parse a string, that is an ICU message, to ParsedMessage.\r\n     * @param {?} icuMessageString the message, like '{x, plural, =0 {nothing} =1 {one} other {many}}'.\r\n     * @param {?} sourceMessage optional original message that will be translated by normalized new one\r\n     * @return {?} a new parsed message.\r\n     * Throws an error if icuMessageString has not the correct syntax.\r\n     */\r\n    function (icuMessageString, sourceMessage) {\r\n        /** @type {?} */\r\n        var message = new ParsedMessage(this, sourceMessage);\r\n        message.addICUMessage(icuMessageString);\r\n        return message;\r\n    };\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param name name\r\n     * @return id count\r\n     */\r\n    /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param {?} name name\r\n     * @return {?} id count\r\n     */\r\n    AbstractMessageParser.prototype.parseIdCountFromName = /**\r\n     * Helper function: Parse ID from a name.\r\n     * name optionally ends with _<number>. This is the idcount.\r\n     * E.g. name=\"TAG_IMG\" returns 0\r\n     * name = \"TAG_IMG_1\" returns 1\r\n     * @param {?} name name\r\n     * @return {?} id count\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var regex = /.*_([0-9]*)/;\r\n        /** @type {?} */\r\n        var match = regex.exec(name);\r\n        if (isNullOrUndefined(match) || match[1] === '') {\r\n            return 0;\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var num = match[1];\r\n            return parseInt(num, 10);\r\n        }\r\n    };\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param message message\r\n     */\r\n    /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param {?} message message\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createXmlRepresentation = /**\r\n     * Create the native xml for a message.\r\n     * Parts are already set here.\r\n     * @param {?} message message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        /** @type {?} */\r\n        var root = new DOMParser().parseFromString('<dummy/>', 'text/xml');\r\n        /** @type {?} */\r\n        var rootElem = root.getElementsByTagName('dummy').item(0);\r\n        this.addXmlRepresentationToRoot(message, rootElem);\r\n        return rootElem;\r\n    };\r\n    /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    AbstractMessageParser.prototype.createXmlRepresentationOfTextPart = /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        return rootElem.ownerDocument.createTextNode(part.asDisplayString());\r\n    };\r\n    return AbstractMessageParser;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 16.05.2017.\r\n * Mapping from normalized tag names to placeholder names.\r\n */\r\n/*\r\ncopied from https://github.com/angular/angular/blob/master/packages/compiler/src/i18n/serializers/placeholder.ts\r\n */\r\n/** @type {?} */\r\nvar TAG_TO_PLACEHOLDER_NAMES = {\r\n    'A': 'LINK',\r\n    'B': 'BOLD_TEXT',\r\n    'BR': 'LINE_BREAK',\r\n    'EM': 'EMPHASISED_TEXT',\r\n    'H1': 'HEADING_LEVEL1',\r\n    'H2': 'HEADING_LEVEL2',\r\n    'H3': 'HEADING_LEVEL3',\r\n    'H4': 'HEADING_LEVEL4',\r\n    'H5': 'HEADING_LEVEL5',\r\n    'H6': 'HEADING_LEVEL6',\r\n    'HR': 'HORIZONTAL_RULE',\r\n    'I': 'ITALIC_TEXT',\r\n    'LI': 'LIST_ITEM',\r\n    'LINK': 'MEDIA_LINK',\r\n    'OL': 'ORDERED_LIST',\r\n    'P': 'PARAGRAPH',\r\n    'Q': 'QUOTATION',\r\n    'S': 'STRIKETHROUGH_TEXT',\r\n    'SMALL': 'SMALL_TEXT',\r\n    'SUB': 'SUBSTRIPT',\r\n    'SUP': 'SUPERSCRIPT',\r\n    'TBODY': 'TABLE_BODY',\r\n    'TD': 'TABLE_CELL',\r\n    'TFOOT': 'TABLE_FOOTER',\r\n    'TH': 'TABLE_HEADER_CELL',\r\n    'THEAD': 'TABLE_HEADER',\r\n    'TR': 'TABLE_ROW',\r\n    'TT': 'MONOSPACED_TEXT',\r\n    'U': 'UNDERLINED_TEXT',\r\n    'UL': 'UNORDERED_LIST',\r\n};\r\n/**\r\n * HTML Tags (in uppercase) that are empty, they have no content, but do not need a close tag, e.g. <br>, <img>, <hr>.\r\n * @type {?}\r\n */\r\nvar VOID_TAGS = ['BR', 'HR', 'IMG', 'AREA', 'LINK', 'WBR'];\r\nvar TagMapping = /** @class */ (function () {\r\n    function TagMapping() {\r\n    }\r\n    /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getStartTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (tag, id) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return \"START_\" + baseName + this.counterString(id);\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getCloseTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return \"CLOSE_\" + baseName;\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getEmptyTagPlaceholderName = /**\r\n     * @param {?} tag\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (tag, id) {\r\n        /** @type {?} */\r\n        var upperTag = tag.toUpperCase();\r\n        /** @type {?} */\r\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\r\n        return baseName + this.counterString(id);\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getCtypeForTag = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n                return 'lb';\r\n            case 'img':\r\n                return 'image';\r\n            default:\r\n                return \"x-\" + tag;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromStartTagPlaceholderName = /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName.startsWith('START_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('START_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('START_')) {\r\n            /** @type {?} */\r\n            var ph_1 = this.stripCounter(placeholderName.substring('START_'.length));\r\n            /** @type {?} */\r\n            var matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph_1; });\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromCloseTagPlaceholderName = /**\r\n     * @param {?} placeholderName\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName.startsWith('CLOSE_TAG_')) {\r\n            return this.stripCounter(placeholderName.substring('CLOSE_TAG_'.length)).toLowerCase();\r\n        }\r\n        else if (placeholderName.startsWith('CLOSE_')) {\r\n            /** @type {?} */\r\n            var ph_2 = this.stripCounter(placeholderName.substring('CLOSE_'.length));\r\n            /** @type {?} */\r\n            var matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph_2; });\r\n            return matchKey ? matchKey.toLowerCase() : null;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.isEmptyTagPlaceholderName = /**\r\n     * Test, wether placeholder name stands for empty html tag.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        /** @type {?} */\r\n        var ph = this.stripCounter(placeholderName);\r\n        /** @type {?} */\r\n        var matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph; });\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param placeholderName can be TAG_<name> or just <name>\r\n     */\r\n    /**\r\n     * tagname of empty tag placeholder.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    TagMapping.prototype.getTagnameFromEmptyTagPlaceholderName = /**\r\n     * tagname of empty tag placeholder.\r\n     * @param {?} placeholderName can be TAG_<name> or just <name>\r\n     * @return {?}\r\n     */\r\n    function (placeholderName) {\r\n        /** @type {?} */\r\n        var ph = this.stripCounter(placeholderName);\r\n        /** @type {?} */\r\n        var matchKey;\r\n        if (ph.startsWith('TAG_')) {\r\n            matchKey = ph.substring(4).toUpperCase();\r\n        }\r\n        else {\r\n            matchKey = Object.keys(TAG_TO_PLACEHOLDER_NAMES).find(function (key) { return TAG_TO_PLACEHOLDER_NAMES[key] === ph; });\r\n        }\r\n        if (matchKey) {\r\n            if (VOID_TAGS.indexOf(matchKey) >= 0) {\r\n                return matchKey.toLowerCase();\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param placeholderName placeholderName\r\n     * @return placeholderName without counter at end.\r\n     */\r\n    /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param {?} placeholderName placeholderName\r\n     * @return {?} placeholderName without counter at end.\r\n     */\r\n    TagMapping.prototype.stripCounter = /**\r\n     * If placeholder ends with _[0-9]+, strip that number.\r\n     * @param {?} placeholderName placeholderName\r\n     * @return {?} placeholderName without counter at end.\r\n     */\r\n    function (placeholderName) {\r\n        if (placeholderName) {\r\n            /** @type {?} */\r\n            var re = /(.*)_[0-9]+$/;\r\n            if (placeholderName.match(re)) {\r\n                return placeholderName.replace(re, '$1');\r\n            }\r\n        }\r\n        return placeholderName;\r\n    };\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param id id\r\n     * @return suffix for counter.\r\n     */\r\n    /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param {?} id id\r\n     * @return {?} suffix for counter.\r\n     */\r\n    TagMapping.prototype.counterString = /**\r\n     * String suffix for counter.\r\n     * If counter is 0, it is empty, otherwise _<id>.\r\n     * @param {?} id id\r\n     * @return {?} suffix for counter.\r\n     */\r\n    function (id) {\r\n        if (id === 0) {\r\n            return '';\r\n        }\r\n        else {\r\n            return '_' + id.toString(10);\r\n        }\r\n    };\r\n    return TagMapping;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 1.2\r\n */\r\nXliffMessageParser = /** @class */ (function (_super) {\r\n    __extends(XliffMessageParser, _super);\r\n    function XliffMessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    XliffMessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        if (tagName === 'x') {\r\n            // placeholder are like <x id=\"INTERPOLATION\"/> or <x id=\"INTERPOLATION_1\">\r\n            /** @type {?} */\r\n            var id = elementNode.getAttribute('id');\r\n            if (!id) {\r\n                return; // should not happen\r\n            }\r\n            if (id.startsWith('INTERPOLATION')) {\r\n                /** @type {?} */\r\n                var index = this.parsePlaceholderIndexFromId(id);\r\n                message.addPlaceholder(index, null);\r\n            }\r\n            else if (id.startsWith('ICU')) {\r\n                /** @type {?} */\r\n                var index = this.parseICUMessageRefIndexFromId(id);\r\n                message.addICUMessageRef(index, null);\r\n            }\r\n            else if (id.startsWith('START_')) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromStartTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    /** @type {?} */\r\n                    var idcount = this.parseIdCountFromName(id);\r\n                    message.addStartTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n            else if (id.startsWith('CLOSE_')) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromCloseTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    message.addEndTag(normalizedTagName);\r\n                }\r\n            }\r\n            else if (tagMapping.isEmptyTagPlaceholderName(id)) {\r\n                /** @type {?} */\r\n                var normalizedTagName = tagMapping.getTagnameFromEmptyTagPlaceholderName(id);\r\n                if (normalizedTagName) {\r\n                    /** @type {?} */\r\n                    var idcount = this.parseIdCountFromName(id);\r\n                    message.addEmptyTag(normalizedTagName, idcount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return index\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} index\r\n     */\r\n    XliffMessageParser.prototype.parsePlaceholderIndexFromId = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} index\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (id === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param id id\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} id as number\r\n     */\r\n    XliffMessageParser.prototype.parseICUMessageRefIndexFromId = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} id id\r\n     * @return {?} id as number\r\n     */\r\n    function (id) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (id === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = id.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        message.parts().forEach(function (part) {\r\n            /** @type {?} */\r\n            var child;\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    child = _this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    child = _this.createXmlRepresentationOfStartTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    child = _this.createXmlRepresentationOfEndTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    child = _this.createXmlRepresentationOfEmptyTagPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    child = _this.createXmlRepresentationOfPlaceholderPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    child = _this.createXmlRepresentationOfICUMessageRefPart(((/** @type {?} */ (part))), rootElem);\r\n                    break;\r\n            }\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        /** @type {?} */\r\n        var ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        /** @type {?} */\r\n        var equivTextAttr = '<' + part.tagName() + '>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        /** @type {?} */\r\n        var ctypeAttrib = 'x-' + part.tagName();\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty <x/>-Element with attributes id and ctype\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var idAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        /** @type {?} */\r\n        var ctypeAttrib = tagMapping.getCtypeForTag(part.tagName());\r\n        /** @type {?} */\r\n        var equivTextAttr = '<' + part.tagName() + '/>';\r\n        xElem.setAttribute('id', idAttrib);\r\n        xElem.setAttribute('ctype', ctypeAttrib);\r\n        xElem.setAttribute('equiv-text', equivTextAttr);\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an empty <x/>-Element with attribute id=\"INTERPOLATION\" or id=\"INTERPOLATION_n\"\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var idAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        /** @type {?} */\r\n        var equivTextAttr = part.disp();\r\n        xElem.setAttribute('id', idAttrib);\r\n        if (equivTextAttr) {\r\n            xElem.setAttribute('equiv-text', equivTextAttr);\r\n        }\r\n        return xElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XliffMessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var xElem = rootElem.ownerDocument.createElement('x');\r\n        /** @type {?} */\r\n        var idAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            idAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        xElem.setAttribute('id', idAttrib);\r\n        return xElem;\r\n    };\r\n    return XliffMessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XLIFF 1.2 file.\r\n */\r\nXliffTransUnit = /** @class */ (function (_super) {\r\n    __extends(XliffTransUnit, _super);\r\n    function XliffTransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.sourceContent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            source = this._element.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XliffMessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new XliffMessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            return targetElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (targetElement) {\r\n            targetElement.setAttribute('state', nativeState);\r\n        }\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XliffTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'new';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        switch (nativeState) {\r\n            case 'new':\r\n                return STATE_NEW;\r\n            case 'needs-translation':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-adaptation':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-l10n':\r\n                return STATE_TRANSLATED;\r\n            case 'needs-review-translation':\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            case 'signed-off':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('context-group');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                /** @type {?} */\r\n                var contextElements = elem.getElementsByTagName('context');\r\n                /** @type {?} */\r\n                var sourcefile = null;\r\n                /** @type {?} */\r\n                var linenumber = 0;\r\n                for (var j = 0; j < contextElements.length; j++) {\r\n                    /** @type {?} */\r\n                    var contextElem = contextElements.item(j);\r\n                    if (contextElem.getAttribute('context-type') === 'sourcefile') {\r\n                        sourcefile = DOMUtilities.getPCDATA(contextElem);\r\n                    }\r\n                    if (contextElem.getAttribute('context-type') === 'linenumber') {\r\n                        linenumber = Number.parseInt(DOMUtilities.getPCDATA(contextElem), 10);\r\n                    }\r\n                }\r\n                sourceRefs.push({ sourcefile: sourcefile, linenumber: linenumber });\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        var _this = this;\r\n        this.removeAllSourceReferences();\r\n        sourceRefs.forEach(function (ref) {\r\n            /** @type {?} */\r\n            var contextGroup = _this._element.ownerDocument.createElement('context-group');\r\n            contextGroup.setAttribute('purpose', 'location');\r\n            /** @type {?} */\r\n            var contextSource = _this._element.ownerDocument.createElement('context');\r\n            contextSource.setAttribute('context-type', 'sourcefile');\r\n            contextSource.appendChild(_this._element.ownerDocument.createTextNode(ref.sourcefile));\r\n            /** @type {?} */\r\n            var contextLine = _this._element.ownerDocument.createElement('context');\r\n            contextLine.setAttribute('context-type', 'linenumber');\r\n            contextLine.appendChild(_this._element.ownerDocument.createTextNode(ref.linenumber.toString(10)));\r\n            contextGroup.appendChild(contextSource);\r\n            contextGroup.appendChild(contextLine);\r\n            _this._element.appendChild(contextGroup);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeAllSourceReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('context-group');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            if (elem.getAttribute('purpose') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach(function (elem) { elem.parentNode.removeChild(elem); });\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"description\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('description');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     * @return element or null is absent\r\n     */\r\n    /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?} element or null is absent\r\n     */\r\n    XliffTransUnit.prototype.findNoteElementWithFromAttribute = /**\r\n     * Find a note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?} element or null is absent\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('from') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    XliffTransUnit.prototype.findAllAdditionalNoteElements = /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var result = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            /** @type {?} */\r\n            var fromAttribute = noteElem.getAttribute('from');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param fromAttrValue value of \"from\" attribute\r\n     * @param content text value of note element\r\n     * @return the new created element\r\n     */\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} fromAttrValue value of \"from\" attribute\r\n     * @param {?} content text value of note element\r\n     * @return {?} the new created element\r\n     */\r\n    XliffTransUnit.prototype.createNoteElementWithFromAttribute = /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} fromAttrValue value of \"from\" attribute\r\n     * @param {?} content text value of note element\r\n     * @return {?} the new created element\r\n     */\r\n    function (fromAttrValue, content) {\r\n        /** @type {?} */\r\n        var noteElement = this._element.ownerDocument.createElement('note');\r\n        if (fromAttrValue) {\r\n            noteElement.setAttribute('from', fromAttrValue);\r\n        }\r\n        noteElement.setAttribute('priority', '1');\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        this._element.appendChild(noteElement);\r\n        return noteElement;\r\n    };\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeNoteElementWithFromAttribute = /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElement = this.findNoteElementWithFromAttribute(attrValue);\r\n        if (noteElement) {\r\n            this._element.removeChild(noteElement);\r\n        }\r\n    };\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.removeAllAdditionalNoteElements = /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach(function (noteElement) {\r\n            _this._element.removeChild(noteElement);\r\n        });\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff this is stored as a note element with attribute from=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param  meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithFromAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                noteElem = this.createNoteElementWithFromAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithFromAttribute('meaning');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(function (elem) {\r\n            return {\r\n                from: elem.getAttribute('from'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @throws an Error if any note contains description or meaning as from attribute.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        var _this = this;\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach(function (note) {\r\n                /** @type {?} */\r\n                var noteElem = _this.createNoteElementWithFromAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            /** @type {?} */\r\n            var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, (/** @type {?} */ (translation)));\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this._element.cloneNode(true)));\r\n        /** @type {?} */\r\n        var clone = new XliffTransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XliffTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = DOMUtilities.createFollowingSibling('target', source);\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            /** @type {?} */\r\n            var sourceString = DOMUtilities.getXMLContent(source);\r\n            /** @type {?} */\r\n            var newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        if (isDefaultLang) {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n        }\r\n        else {\r\n            target.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n        }\r\n    };\r\n    return XliffTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nvar /**\r\n * Created by martin on 23.02.2017.\r\n * Ab xliff file read from a source file.\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nXliffFile = /** @class */ (function (_super) {\r\n    __extends(XliffFile, _super);\r\n    /**\r\n     * Create an xlf-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XliffFile\r\n     */\r\n    function XliffFile(xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        /** @type {?} */\r\n        var xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var version = xliffList.item(0).getAttribute('version');\r\n            /** @type {?} */\r\n            var expectedVersion = '1.2';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 1.2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XLIFF12;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XLIFF 1.2'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XLIFF12;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['source', 'target', 'tool', 'seg-source', 'g', 'ph', 'bpt', 'ept', 'it', 'sub', 'mrk'];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('trans-unit');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var transunit = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XliffTransUnit(transunit, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    XliffFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('source-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('source-language', language);\r\n        }\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    XliffFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            return fileElem.getAttribute('target-language');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var fileElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (fileElem) {\r\n            fileElem.setAttribute('target-language', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XliffFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var bodyElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'body');\r\n        if (!bodyElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 1.2 file (should contain a body element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            bodyElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'trans-unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to body\r\n                bodyElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'trans-unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XliffFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationFile = new XliffFile(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit(function (transUnit) {\r\n            ((/** @type {?} */ (transUnit))).useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    };\r\n    return XliffFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XMB\r\n */\r\nXmbMessageParser = /** @class */ (function (_super) {\r\n    __extends(XmbMessageParser, _super);\r\n    function XmbMessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    XmbMessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // There are 4 different usages of ph element:\r\n            // 1. placeholders are like <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph>\r\n            // or <ph name=\"INTERPOLATION_1\"><ex>INTERPOLATION_1</ex></ph>\r\n            // 2. start tags:\r\n            // <ph name=\"START_LINK\"><ex>&lt;a&gt;</ex></ph>\r\n            // 3. empty tags:\r\n            // <ph name=\"TAG_IMG\"><ex>&lt;img&gt;</ex></ph>\r\n            // 4. ICU:\r\n            // <ph name=\"ICU\"><ex>ICU</ex></ph>\r\n            /** @type {?} */\r\n            var name_1 = elementNode.getAttribute('name');\r\n            if (!name_1) {\r\n                return true; // should not happen\r\n            }\r\n            if (name_1.startsWith('INTERPOLATION')) {\r\n                /** @type {?} */\r\n                var index = this.parsePlaceholderIndexFromName(name_1);\r\n                message.addPlaceholder(index, null);\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('START_')) {\r\n                /** @type {?} */\r\n                var tag = this.parseTagnameFromPhElement(elementNode);\r\n                /** @type {?} */\r\n                var idcounter = this.parseIdCountFromName(name_1);\r\n                if (tag) {\r\n                    message.addStartTag(tag, idcounter);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('CLOSE_')) {\r\n                /** @type {?} */\r\n                var tag = this.parseTagnameFromPhElement(elementNode);\r\n                if (tag) {\r\n                    message.addEndTag(tag);\r\n                }\r\n                return false; // ignore children\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(name_1)) {\r\n                /** @type {?} */\r\n                var emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(name_1);\r\n                /** @type {?} */\r\n                var idcounter = this.parseIdCountFromName(name_1);\r\n                message.addEmptyTag(emptyTagName, idcounter);\r\n                return false; // ignore children\r\n            }\r\n            else if (name_1.startsWith('ICU')) {\r\n                /** @type {?} */\r\n                var index = this.parseICUMessageIndexFromName(name_1);\r\n                message.addICUMessageRef(index, null);\r\n                return false; // ignore children\r\n            }\r\n        }\r\n        else if (tagName === 'source') {\r\n            // ignore source\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param node node\r\n     * @return message or null, if it is no ICU Message.\r\n     */\r\n    /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    XmbMessageParser.prototype.getICUMessageText = /**\r\n     * Return the ICU message content of the node, if it is an ICU Message.\r\n     * @param {?} node node\r\n     * @return {?} message or null, if it is no ICU Message.\r\n     */\r\n    function (node) {\r\n        /** @type {?} */\r\n        var children = node.childNodes;\r\n        if (children.length === 0) {\r\n            return null;\r\n        }\r\n        /** @type {?} */\r\n        var firstChild = null;\r\n        // find first child that is no source element.\r\n        /** @type {?} */\r\n        var i;\r\n        for (i = 0; i < children.length; i++) {\r\n            /** @type {?} */\r\n            var child = children.item(i);\r\n            if (child.nodeType !== child.ELEMENT_NODE || ((/** @type {?} */ (child))).tagName !== 'source') {\r\n                firstChild = child;\r\n                break;\r\n            }\r\n        }\r\n        if (firstChild && firstChild.nodeType === firstChild.TEXT_NODE) {\r\n            if (this.isICUMessageStart(firstChild.textContent)) {\r\n                /** @type {?} */\r\n                var messageText = DOMUtilities.getXMLContent((/** @type {?} */ (node)));\r\n                if (i > 0) {\r\n                    // drop <source> elements\r\n                    /** @type {?} */\r\n                    var reSource = new RegExp('<source[^>]*>.*</source>', 'g');\r\n                    return messageText.replace(reSource, '');\r\n                }\r\n                else {\r\n                    return messageText;\r\n                }\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    XmbMessageParser.prototype.parsePlaceholderIndexFromName = /**\r\n     * Parse id attribute of x element as placeholder index.\r\n     * id can be \"INTERPOLATION\" or \"INTERPOLATION_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (name === 'INTERPOLATION') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('INTERPOLATION_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param name name\r\n     * @return id as number\r\n     */\r\n    /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    XmbMessageParser.prototype.parseICUMessageIndexFromName = /**\r\n     * Parse id attribute of x element as ICU message ref index.\r\n     * id can be \"ICU\" or \"ICU_n\"\r\n     * @param {?} name name\r\n     * @return {?} id as number\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var indexString = '';\r\n        if (name === 'ICU') {\r\n            indexString = '0';\r\n        }\r\n        else {\r\n            indexString = name.substring('ICU_'.length);\r\n        }\r\n        return Number.parseInt(indexString, 10);\r\n    };\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param phElement phElement\r\n     */\r\n    /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param {?} phElement phElement\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.parseTagnameFromPhElement = /**\r\n     * Parse the tag name from a ph element.\r\n     * It contained in the <ex> subelements value and enclosed in <>.\r\n     * Example: <ph name=\"START_BOLD_TEXT\"><ex>&lt;b&gt;</ex></ph>\r\n     * @param {?} phElement phElement\r\n     * @return {?}\r\n     */\r\n    function (phElement) {\r\n        /** @type {?} */\r\n        var exElement = DOMUtilities.getFirstElementByTagName(phElement, 'ex');\r\n        if (exElement) {\r\n            /** @type {?} */\r\n            var value = DOMUtilities.getPCDATA(exElement);\r\n            if (!value || !value.startsWith('<') || !value.endsWith('>')) {\r\n                // oops\r\n                return null;\r\n            }\r\n            if (value.charAt(1) === '/') {\r\n                return value.substring(2, value.length - 1);\r\n            }\r\n            else {\r\n                return value.substring(1, value.length - 1);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * @param {?} message\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        message.parts().forEach(function (part) {\r\n            /** @type {?} */\r\n            var child = _this.createXmlRepresentationOfPart(part, rootElem);\r\n            if (child) {\r\n                rootElem.appendChild(child);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfPart = /**\r\n     * @param {?} part\r\n     * @param {?} rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        switch (part.type) {\r\n            case ParsedMessagePartType.TEXT:\r\n                return this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem);\r\n            case ParsedMessagePartType.START_TAG:\r\n                return this.createXmlRepresentationOfStartTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.END_TAG:\r\n                return this.createXmlRepresentationOfEndTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.EMPTY_TAG:\r\n                return this.createXmlRepresentationOfEmptyTagPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.PLACEHOLDER:\r\n                return this.createXmlRepresentationOfPlaceholderPart(((/** @type {?} */ (part))), rootElem);\r\n            case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                return this.createXmlRepresentationOfICUMessageRefPart(((/** @type {?} */ (part))), rootElem);\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getStartTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getCloseTagPlaceholderName(part.tagName());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('</' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var nameAttrib = tagMapping.getEmptyTagPlaceholderName(part.tagName(), part.idCounter());\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode('<' + part.tagName() + '>'));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns an <ph>-Element with attribute name and subelement ex\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var nameAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    XmbMessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var nameAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            nameAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('name', nameAttrib);\r\n        /** @type {?} */\r\n        var exElem = rootElem.ownerDocument.createElement('ex');\r\n        exElem.appendChild(rootElem.ownerDocument.createTextNode(nameAttrib));\r\n        phElem.appendChild(exElem);\r\n        return phElem;\r\n    };\r\n    return XmbMessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nvar /**\r\n * Created by martin on 01.05.2017.\r\n * A Translation Unit in an XMB file.\r\n */\r\nXmbTransUnit = /** @class */ (function (_super) {\r\n    __extends(XmbTransUnit, _super);\r\n    function XmbTransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and linenumber\r\n     */\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and linenumber\r\n     */\r\n    XmbTransUnit.parseSourceAndPos = /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and linenumber\r\n     */\r\n    function (sourceAndPos) {\r\n        /** @type {?} */\r\n        var index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: XmbTransUnit.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.parseLineNumber = /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    function (lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    };\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return source content\r\n     */\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} source content\r\n     */\r\n    XmbTransUnit.prototype.sourceContent = /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} source content\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var msgContent = DOMUtilities.getXMLContent(this._element);\r\n        /** @type {?} */\r\n        var reSourceElem = /<source>.*<\\/source>/g;\r\n        msgContent = msgContent.replace(reSourceElem, '');\r\n        return msgContent;\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        // not supported\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, null);\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // in fact, target and source are just the same in xmb\r\n        return this.sourceContent();\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return null; // not supported in xmb\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XmbTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        return state;\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        return nativeState;\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        // not supported for xmb\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('source');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            /** @type {?} */\r\n            var sourceAndPos = DOMUtilities.getPCDATA(elem);\r\n            sourceRefs.push(XmbTransUnit.parseSourceAndPos(sourceAndPos));\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        this.removeAllSourceReferences();\r\n        /** @type {?} */\r\n        var insertPosition = this._element.childNodes.item(0);\r\n        for (var i = sourceRefs.length - 1; i >= 0; i--) {\r\n            /** @type {?} */\r\n            var ref = sourceRefs[i];\r\n            /** @type {?} */\r\n            var source = this._element.ownerDocument.createElement('source');\r\n            source.appendChild(this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            this._element.insertBefore(source, insertPosition);\r\n            insertPosition = source;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.removeAllSourceReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElements = this._element.getElementsByTagName('source');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < sourceElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = sourceElements.item(i);\r\n            toBeRemoved.push(elem);\r\n        }\r\n        toBeRemoved.forEach(function (elem) { elem.parentNode.removeChild(elem); });\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xmb this is stored in the attribute \"desc\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.getAttribute('desc');\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xmb this is stored in the attribute \"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.getAttribute('meaning');\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xmb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        // do nothing\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XmbTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * In fact, xmb cannot be translated.\r\n     * So this throws an error.\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        throw new Error('You cannot translate xmb files, use xtb instead.');\r\n    };\r\n    return XmbTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Doctype of xtb translation file corresponding with thos xmb file.\r\n * @type {?}\r\n */\r\nvar XTB_DOCTYPE = \"<!DOCTYPE translationbundle [\\n  <!ELEMENT translationbundle (translation)*>\\n  <!ATTLIST translationbundle lang CDATA #REQUIRED>\\n  <!ELEMENT translation (#PCDATA|ph)*>\\n  <!ATTLIST translation id CDATA #REQUIRED>\\n  <!ELEMENT ph EMPTY>\\n  <!ATTLIST ph name CDATA #REQUIRED>\\n]>\";\r\nvar XmbFile = /** @class */ (function (_super) {\r\n    __extends(XmbFile, _super);\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return XmbFile\r\n     */\r\n    function XmbFile(_translationMessageFileFactory, xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('messagebundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xmb file (should contain a messagebundle element)', path));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('msg');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var msg = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new XmbTransUnit(msg, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XMB;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XMB'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XMB;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['message'];\r\n    };\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return Language or null\r\n     */\r\n    /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return {?} Language or null\r\n     */\r\n    XmbFile.prototype.guessLanguageFromFilename = /**\r\n     * Guess language from filename.\r\n     * If filename is foo.xy.xmb, than language is assumed to be xy.\r\n     * @return {?} Language or null\r\n     */\r\n    function () {\r\n        if (this._filename) {\r\n            /** @type {?} */\r\n            var parts = this._filename.split('.');\r\n            if (parts.length > 2 && parts[parts.length - 1].toLowerCase() === 'xmb') {\r\n                return parts[parts.length - 2];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    XmbFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        return this.guessLanguageFromFilename();\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xmb has no notation for this.\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} target language.\r\n     */\r\n    XmbFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * Unsupported in xmb.\r\n     * Try to guess it from filename if any..\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        return this.guessLanguageFromFilename();\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * Unsupported in xmb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xmb has no notation for this.\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XmbFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        throw Error('xmb file cannot be used to store translations, use xtb file');\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XmbFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationbundleXMLSource = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + XTB_DOCTYPE + '\\n<translationbundle>\\n</translationbundle>\\n';\r\n        /** @type {?} */\r\n        var translationFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XTB, translationbundleXMLSource, filename, this.encoding(), { xmlContent: this.editedContent(), path: this.filename(), encoding: this.encoding() });\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.setNewTransUnitTargetPraefix(this.getNewTransUnitTargetPraefix());\r\n        translationFile.setNewTransUnitTargetSuffix(this.getNewTransUnitTargetSuffix());\r\n        this.forEachTransUnit(function (tu) {\r\n            translationFile.importNewTransUnit(tu, isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    };\r\n    return XmbFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nvar /**\r\n * Created by roobm on 10.05.2017.\r\n * A message parser for XLIFF 2.0\r\n */\r\nXliff2MessageParser = /** @class */ (function (_super) {\r\n    __extends(Xliff2MessageParser, _super);\r\n    function Xliff2MessageParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     * @return true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    Xliff2MessageParser.prototype.processStartElement = /**\r\n     * Handle this element node.\r\n     * This is called before the children are done.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?} true, if children should be processed too, false otherwise (children ignored then)\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'ph') {\r\n            // placeholder are like <ph id=\"0\" equiv=\"INTERPOLATION\" disp=\"{{number()}}\"/>\r\n            // They contain the id and also a name (number in the example)\r\n            // TODO make some use of the name (but it is not available in XLIFF 1.2)\r\n            // ICU message are handled with the same tag\r\n            // Before 4.3.2 they did not have an equiv and disp (Bug #17344):\r\n            // e.g. <ph id=\"0\"/>\r\n            // Beginning with 4.3.2 they do have an equiv ICU and disp:\r\n            // e.g. <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>\r\n            // and empty tags have equiv other then INTERPOLATION:\r\n            // e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n            // or <ph equiv=\"LINE_BREAK\" type=\"lb\" disp=\"&lt;br/>\"/>\r\n            /** @type {?} */\r\n            var isInterpolation = false;\r\n            /** @type {?} */\r\n            var isICU = false;\r\n            /** @type {?} */\r\n            var isEmptyTag = false;\r\n            /** @type {?} */\r\n            var equiv = elementNode.getAttribute('equiv');\r\n            /** @type {?} */\r\n            var disp = elementNode.getAttribute('disp');\r\n            /** @type {?} */\r\n            var indexString = null;\r\n            /** @type {?} */\r\n            var index = 0;\r\n            /** @type {?} */\r\n            var emptyTagName = null;\r\n            if (!equiv) {\r\n                // old ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                indexString = elementNode.getAttribute('id');\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('ICU')) {\r\n                // new ICU syntax, fixed with #17344\r\n                isICU = true;\r\n                if (equiv === 'ICU') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('ICU_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (equiv.startsWith('INTERPOLATION')) {\r\n                isInterpolation = true;\r\n                if (equiv === 'INTERPOLATION') {\r\n                    indexString = '0';\r\n                }\r\n                else {\r\n                    indexString = equiv.substring('INTERPOLATION_'.length);\r\n                }\r\n                index = Number.parseInt(indexString, 10);\r\n            }\r\n            else if (new TagMapping().isEmptyTagPlaceholderName(equiv)) {\r\n                isEmptyTag = true;\r\n                emptyTagName = new TagMapping().getTagnameFromEmptyTagPlaceholderName(equiv);\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n            if (isInterpolation) {\r\n                message.addPlaceholder(index, disp);\r\n            }\r\n            else if (isICU) {\r\n                message.addICUMessageRef(index, disp);\r\n            }\r\n            else if (isEmptyTag) {\r\n                message.addEmptyTag(emptyTagName, this.parseIdCountFromName(equiv));\r\n            }\r\n        }\r\n        else if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            /** @type {?} */\r\n            var embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addStartTag(embeddedTagName, this.parseIdCountFromName(elementNode.getAttribute('equivStart')));\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param elementNode elementNode\r\n     * @param message message to be altered\r\n     */\r\n    /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.processEndElement = /**\r\n     * Handle end of this element node.\r\n     * This is called after all children are processed.\r\n     * @param {?} elementNode elementNode\r\n     * @param {?} message message to be altered\r\n     * @return {?}\r\n     */\r\n    function (elementNode, message) {\r\n        /** @type {?} */\r\n        var tagName = elementNode.tagName;\r\n        if (tagName === 'pc') {\r\n            // pc example: <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\"\r\n            // dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">IMPORTANT</pc>\r\n            /** @type {?} */\r\n            var embeddedTagName = this.tagNameFromPCElement(elementNode);\r\n            if (embeddedTagName) {\r\n                message.addEndTag(embeddedTagName);\r\n            }\r\n            return;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} pcNode\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.tagNameFromPCElement = /**\r\n     * @param {?} pcNode\r\n     * @return {?}\r\n     */\r\n    function (pcNode) {\r\n        /** @type {?} */\r\n        var dispStart = pcNode.getAttribute('dispStart');\r\n        if (dispStart.startsWith('<')) {\r\n            dispStart = dispStart.substring(1);\r\n        }\r\n        if (dispStart.endsWith('>')) {\r\n            dispStart = dispStart.substring(0, dispStart.length - 1);\r\n        }\r\n        return dispStart;\r\n    };\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param message message\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param {?} message message\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.addXmlRepresentationToRoot = /**\r\n     * reimplemented here, because XLIFF 2.0 uses a deeper xml model.\r\n     * So we cannot simply replace the message parts by xml parts.\r\n     * @param {?} message message\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (message, rootElem) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var stack = [{ element: rootElem, tagName: 'root' }];\r\n        /** @type {?} */\r\n        var id = 0;\r\n        message.parts().forEach(function (part) {\r\n            switch (part.type) {\r\n                case ParsedMessagePartType.TEXT:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfTextPart((/** @type {?} */ (part)), rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.PLACEHOLDER:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfPlaceholderPart((/** @type {?} */ (part)), rootElem, id++));\r\n                    break;\r\n                case ParsedMessagePartType.ICU_MESSAGE_REF:\r\n                    stack[stack.length - 1].element.appendChild(_this.createXmlRepresentationOfICUMessageRefPart((/** @type {?} */ (part)), rootElem));\r\n                    break;\r\n                case ParsedMessagePartType.START_TAG:\r\n                    /** @type {?} */\r\n                    var newTagElem = _this.createXmlRepresentationOfStartTagPart((/** @type {?} */ (part)), rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(newTagElem);\r\n                    stack.push({ element: (/** @type {?} */ (newTagElem)), tagName: ((/** @type {?} */ (part))).tagName() });\r\n                    break;\r\n                case ParsedMessagePartType.END_TAG:\r\n                    /** @type {?} */\r\n                    var closeTagName = ((/** @type {?} */ (part))).tagName();\r\n                    if (stack.length <= 1 || stack[stack.length - 1].tagName !== closeTagName) {\r\n                        // oops, not well formed\r\n                        throw new Error('unexpected close tag ' + closeTagName);\r\n                    }\r\n                    stack.pop();\r\n                    break;\r\n                case ParsedMessagePartType.EMPTY_TAG:\r\n                    /** @type {?} */\r\n                    var emptyTagElem = _this.createXmlRepresentationOfEmptyTagPart((/** @type {?} */ (part)), rootElem, id++);\r\n                    stack[stack.length - 1].element.appendChild(emptyTagElem);\r\n                    break;\r\n            }\r\n        });\r\n        if (stack.length !== 1) {\r\n            // oops, not well closed tags\r\n            throw new Error('missing close tag ' + stack[stack.length - 1].tagName);\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfStartTagPart = /**\r\n     * the xml used for start tag in the message.\r\n     * Returns an empty pc-Element.\r\n     * e.g. <pc id=\"0\" equivStart=\"START_BOLD_TEXT\" equivEnd=\"CLOSE_BOLD_TEXT\" type=\"fmt\" dispStart=\"&lt;b&gt;\" dispEnd=\"&lt;/b&gt;\">\r\n     * Text content will be added later.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var pcElem = rootElem.ownerDocument.createElement('pc');\r\n        /** @type {?} */\r\n        var tagName = part.tagName();\r\n        /** @type {?} */\r\n        var equivStart = tagMapping.getStartTagPlaceholderName(tagName, part.idCounter());\r\n        /** @type {?} */\r\n        var equivEnd = tagMapping.getCloseTagPlaceholderName(tagName);\r\n        /** @type {?} */\r\n        var dispStart = '<' + tagName + '>';\r\n        /** @type {?} */\r\n        var dispEnd = '</' + tagName + '>';\r\n        pcElem.setAttribute('id', id.toString(10));\r\n        pcElem.setAttribute('equivStart', equivStart);\r\n        pcElem.setAttribute('equivEnd', equivEnd);\r\n        pcElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        pcElem.setAttribute('dispStart', dispStart);\r\n        pcElem.setAttribute('dispEnd', dispEnd);\r\n        return pcElem;\r\n    };\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfEndTagPart = /**\r\n     * the xml used for end tag in the message.\r\n     * Not used here, because content is child of start tag.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        // not used\r\n        return null;\r\n    };\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfEmptyTagPart = /**\r\n     * the xml used for empty tag in the message.\r\n     * Returns an empty ph-Element.\r\n     * e.g. <ph id=\"3\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var tagMapping = new TagMapping();\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var tagName = part.tagName();\r\n        /** @type {?} */\r\n        var equiv = tagMapping.getEmptyTagPlaceholderName(tagName, part.idCounter());\r\n        /** @type {?} */\r\n        var disp = '<' + tagName + '/>';\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equiv);\r\n        phElem.setAttribute('type', this.getTypeForTag(tagName));\r\n        phElem.setAttribute('disp', disp);\r\n        return phElem;\r\n    };\r\n    /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.getTypeForTag = /**\r\n     * @param {?} tag\r\n     * @return {?}\r\n     */\r\n    function (tag) {\r\n        switch (tag.toLowerCase()) {\r\n            case 'br':\r\n            case 'b':\r\n            case 'i':\r\n            case 'u':\r\n                return 'fmt';\r\n            case 'img':\r\n                return 'image';\r\n            case 'a':\r\n                return 'link';\r\n            default:\r\n                return 'other';\r\n        }\r\n    };\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     * @param id id number in xliff2\r\n     */\r\n    /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfPlaceholderPart = /**\r\n     * the xml used for placeholder in the message.\r\n     * Returns e.g. <ph id=\"1\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @param {?} id id number in xliff2\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem, id) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var equivAttrib = 'INTERPOLATION';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'INTERPOLATION_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', id.toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        /** @type {?} */\r\n        var disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    };\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param part part\r\n     * @param rootElem rootElem\r\n     */\r\n    /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    Xliff2MessageParser.prototype.createXmlRepresentationOfICUMessageRefPart = /**\r\n     * the xml used for icu message refs in the message.\r\n     * @param {?} part part\r\n     * @param {?} rootElem rootElem\r\n     * @return {?}\r\n     */\r\n    function (part, rootElem) {\r\n        /** @type {?} */\r\n        var phElem = rootElem.ownerDocument.createElement('ph');\r\n        /** @type {?} */\r\n        var equivAttrib = 'ICU';\r\n        if (part.index() > 0) {\r\n            equivAttrib = 'ICU_' + part.index().toString(10);\r\n        }\r\n        phElem.setAttribute('id', part.index().toString(10));\r\n        phElem.setAttribute('equiv', equivAttrib);\r\n        /** @type {?} */\r\n        var disp = part.disp();\r\n        if (disp) {\r\n            phElem.setAttribute('disp', disp);\r\n        }\r\n        return phElem;\r\n    };\r\n    return Xliff2MessageParser;\r\n}(AbstractMessageParser));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nvar /**\r\n * Created by martin on 04.05.2017.\r\n * A Translation Unit in an XLIFF 2.0 file.\r\n */\r\nXliff2TransUnit = /** @class */ (function (_super) {\r\n    __extends(Xliff2TransUnit, _super);\r\n    function Xliff2TransUnit(_element, _id, _translationMessagesFile) {\r\n        return _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.sourceContent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        return DOMUtilities.getXMLContent(sourceElement);\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (!source) {\r\n            // should not happen, there always has to be a source, but who knows..\r\n            /** @type {?} */\r\n            var segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n            source = segment.parentNode.appendChild(this._element.ownerDocument.createElement('source'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(source, newContent);\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Xliff2MessageParser();\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var sourceElement = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        if (sourceElement) {\r\n            return this.messageParser().createNormalizedMessageFromXML(sourceElement, null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return DOMUtilities.getXMLContent(targetElement);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var targetElement = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        return new Xliff2MessageParser().createNormalizedMessageFromXML(targetElement, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     */\r\n    /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation as stored in the xml.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            return segmentElement.getAttribute('state');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        /** @type {?} */\r\n        var segmentElement = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segmentElement) {\r\n            segmentElement.setAttribute('state', nativeState);\r\n        }\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    Xliff2TransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        switch (state) {\r\n            case STATE_NEW:\r\n                return 'initial';\r\n            case STATE_TRANSLATED:\r\n                return 'translated';\r\n            case STATE_FINAL:\r\n                return 'final';\r\n            default:\r\n                throw new Error('unknown state ' + state);\r\n        }\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        switch (nativeState) {\r\n            case 'initial':\r\n                return STATE_NEW;\r\n            case 'translated':\r\n                return STATE_TRANSLATED;\r\n            case 'reviewed': // same as translated\r\n                return STATE_TRANSLATED;\r\n            case 'final':\r\n                return STATE_FINAL;\r\n            default:\r\n                return STATE_NEW;\r\n        }\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // Source is found as <file>:<line> in <note category=\"location\">...\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var sourceRefs = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === 'location') {\r\n                /** @type {?} */\r\n                var sourceAndPos = DOMUtilities.getPCDATA(noteElem);\r\n                sourceRefs.push(this.parseSourceAndPos(sourceAndPos));\r\n            }\r\n        }\r\n        return sourceRefs;\r\n    };\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return source and line number\r\n     */\r\n    /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and line number\r\n     */\r\n    Xliff2TransUnit.prototype.parseSourceAndPos = /**\r\n     * Parses something like 'c:\\xxx:7' and returns source and linenumber.\r\n     * @param {?} sourceAndPos something like 'c:\\xxx:7', last colon is the separator\r\n     * @return {?} source and line number\r\n     */\r\n    function (sourceAndPos) {\r\n        /** @type {?} */\r\n        var index = sourceAndPos.lastIndexOf(':');\r\n        if (index < 0) {\r\n            return {\r\n                sourcefile: sourceAndPos,\r\n                linenumber: 0\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                sourcefile: sourceAndPos.substring(0, index),\r\n                linenumber: this.parseLineNumber(sourceAndPos.substring(index + 1))\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.parseLineNumber = /**\r\n     * @param {?} lineNumberString\r\n     * @return {?}\r\n     */\r\n    function (lineNumberString) {\r\n        return Number.parseInt(lineNumberString, 10);\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        var _this = this;\r\n        this.removeAllSourceReferences();\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (sourceRefs.length === 0 && !isNullOrUndefined(notesElement) && notesElement.childNodes.length === 0) {\r\n            // remove empty notes element\r\n            notesElement.parentNode.removeChild(notesElement);\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(notesElement)) {\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.insertBefore(notesElement, this._element.childNodes.item(0));\r\n        }\r\n        sourceRefs.forEach(function (ref) {\r\n            /** @type {?} */\r\n            var note = _this._element.ownerDocument.createElement('note');\r\n            note.setAttribute('category', 'location');\r\n            note.appendChild(_this._element.ownerDocument.createTextNode(ref.sourcefile + ':' + ref.linenumber.toString(10)));\r\n            notesElement.appendChild(note);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeAllSourceReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var toBeRemoved = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var elem = noteElements.item(i);\r\n            if (elem.getAttribute('category') === 'location') {\r\n                toBeRemoved.push(elem);\r\n            }\r\n        }\r\n        toBeRemoved.forEach(function (elem) { elem.parentNode.removeChild(elem); });\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"description\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('description');\r\n        if (description) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('description', description);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, description);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('description');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param attrValue value of category attribute\r\n     * @return element or null is absent\r\n     */\r\n    /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param {?} attrValue value of category attribute\r\n     * @return {?} element or null is absent\r\n     */\r\n    Xliff2TransUnit.prototype.findNoteElementWithCategoryAttribute = /**\r\n     * Find a note element with attribute category='<attrValue>'\r\n     * @param {?} attrValue value of category attribute\r\n     * @return {?} element or null is absent\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            if (noteElem.getAttribute('category') === attrValue) {\r\n                return noteElem;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return elements\r\n     */\r\n    /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    Xliff2TransUnit.prototype.findAllAdditionalNoteElements = /**\r\n     * Get all note elements where from attribute is not description or meaning\r\n     * @return {?} elements\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this._element.getElementsByTagName('note');\r\n        /** @type {?} */\r\n        var result = [];\r\n        for (var i = 0; i < noteElements.length; i++) {\r\n            /** @type {?} */\r\n            var noteElem = noteElements.item(i);\r\n            /** @type {?} */\r\n            var fromAttribute = noteElem.getAttribute('category');\r\n            if (fromAttribute !== 'description' && fromAttribute !== 'meaning') {\r\n                result.push(noteElem);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param attrValue category attribute value\r\n     * @param content content of note element\r\n     * @return the new created element\r\n     */\r\n    /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue category attribute value\r\n     * @param {?} content content of note element\r\n     * @return {?} the new created element\r\n     */\r\n    Xliff2TransUnit.prototype.createNoteElementWithCategoryAttribute = /**\r\n     * Create a new note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue category attribute value\r\n     * @param {?} content content of note element\r\n     * @return {?} the new created element\r\n     */\r\n    function (attrValue, content) {\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (isNullOrUndefined(notesElement)) {\r\n            // create it\r\n            notesElement = this._element.ownerDocument.createElement('notes');\r\n            this._element.appendChild(notesElement);\r\n        }\r\n        /** @type {?} */\r\n        var noteElement = this._element.ownerDocument.createElement('note');\r\n        if (attrValue) {\r\n            noteElement.setAttribute('category', attrValue);\r\n        }\r\n        if (content) {\r\n            DOMUtilities.replaceContentWithXMLContent(noteElement, content);\r\n        }\r\n        notesElement.appendChild(noteElement);\r\n        return noteElement;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeNotesElementIfEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var notesElement = DOMUtilities.getFirstElementByTagName(this._element, 'notes');\r\n        if (notesElement) {\r\n            /** @type {?} */\r\n            var childNote = DOMUtilities.getFirstElementByTagName(this._element, 'note');\r\n            if (!childNote) {\r\n                // remove notes element\r\n                notesElement.parentNode.removeChild(notesElement);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param attrValue attrValue\r\n     */\r\n    /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeNoteElementWithCategoryAttribute = /**\r\n     * Remove note element with attribute from='<attrValue>'\r\n     * @param {?} attrValue attrValue\r\n     * @return {?}\r\n     */\r\n    function (attrValue) {\r\n        /** @type {?} */\r\n        var noteElement = this.findNoteElementWithCategoryAttribute(attrValue);\r\n        if (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        }\r\n        this.removeNotesElementIfEmpty();\r\n    };\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     */\r\n    /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.removeAllAdditionalNoteElements = /**\r\n     * Remove all note elements where attribute \"from\" is not description or meaning.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElements = this.findAllAdditionalNoteElements();\r\n        noteElements.forEach(function (noteElement) {\r\n            noteElement.parentNode.removeChild(noteElement);\r\n        });\r\n        this.removeNotesElementIfEmpty();\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xliff 2.0 this is stored as a note element with attribute category=\"meaning\".\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (noteElem) {\r\n            return DOMUtilities.getPCDATA(noteElem);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        /** @type {?} */\r\n        var noteElem = this.findNoteElementWithCategoryAttribute('meaning');\r\n        if (meaning) {\r\n            if (isNullOrUndefined(noteElem)) {\r\n                // create it\r\n                this.createNoteElementWithCategoryAttribute('meaning', meaning);\r\n            }\r\n            else {\r\n                DOMUtilities.replaceContentWithXMLContent(noteElem, meaning);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(noteElem)) {\r\n                // remove node\r\n                this.removeNoteElementWithCategoryAttribute('meaning');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * Notes are remarks made by a translator.\r\n     * (description and meaning are not included here!)\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var noteElememts = this.findAllAdditionalNoteElements();\r\n        return noteElememts.map(function (elem) {\r\n            return {\r\n                from: elem.getAttribute('category'),\r\n                text: DOMUtilities.getPCDATA(elem)\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        var _this = this;\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            this.checkNotes(newNotes);\r\n        }\r\n        this.removeAllAdditionalNoteElements();\r\n        if (!isNullOrUndefined(newNotes)) {\r\n            newNotes.forEach(function (note) {\r\n                _this.createNoteElementWithCategoryAttribute(note.from, note.text);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            /** @type {?} */\r\n            var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, (/** @type {?} */ (translation)));\r\n        this.setTargetState(STATE_TRANSLATED);\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this._element.cloneNode(true)));\r\n        /** @type {?} */\r\n        var clone = new Xliff2TransUnit(element, this._id, targetFile);\r\n        clone.useSourceAsTarget(isDefaultLang, copyContent);\r\n        return clone;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    Xliff2TransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var source = DOMUtilities.getFirstElementByTagName(this._element, 'source');\r\n        /** @type {?} */\r\n        var target = DOMUtilities.getFirstElementByTagName(this._element, 'target');\r\n        if (!target) {\r\n            target = source.parentNode.appendChild(this._element.ownerDocument.createElement('target'));\r\n        }\r\n        if (isDefaultLang || copyContent) {\r\n            /** @type {?} */\r\n            var sourceString = DOMUtilities.getXMLContent(source);\r\n            /** @type {?} */\r\n            var newTargetString = sourceString;\r\n            if (!this.isICUMessage(sourceString)) {\r\n                newTargetString = this.translationMessagesFile().getNewTransUnitTargetPraefix()\r\n                    + sourceString\r\n                    + this.translationMessagesFile().getNewTransUnitTargetSuffix();\r\n            }\r\n            DOMUtilities.replaceContentWithXMLContent(target, newTargetString);\r\n        }\r\n        else {\r\n            DOMUtilities.replaceContentWithXMLContent(target, '');\r\n        }\r\n        /** @type {?} */\r\n        var segment = DOMUtilities.getFirstElementByTagName(this._element, 'segment');\r\n        if (segment) {\r\n            if (isDefaultLang) {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_FINAL));\r\n            }\r\n            else {\r\n                segment.setAttribute('state', this.mapStateToNativeState(STATE_NEW));\r\n            }\r\n        }\r\n    };\r\n    return Xliff2TransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nvar /**\r\n * Created by martin on 04.05.2017.\r\n * An XLIFF 2.0 file read from a source file.\r\n * Format definition is: http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\r\n *\r\n * Defines some relevant get and set method for reading and modifying such a file.\r\n */\r\nXliff2File = /** @class */ (function (_super) {\r\n    __extends(Xliff2File, _super);\r\n    /**\r\n     * Create an XLIFF 2.0-File from source.\r\n     * @param xmlString source read from file.\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @return xliff file\r\n     */\r\n    function Xliff2File(xmlString, path, encoding) {\r\n        var _this = _super.call(this) || this;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        /** @type {?} */\r\n        var xliffList = this._parsedDocument.getElementsByTagName('xliff');\r\n        if (xliffList.length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff file (should contain an xliff element)', path));\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var version = xliffList.item(0).getAttribute('version');\r\n            /** @type {?} */\r\n            var expectedVersion = '2.0';\r\n            if (version !== expectedVersion) {\r\n                throw new Error(format('File \"%s\" seems to be no xliff 2 file, version should be %s, found %s', path, expectedVersion, version));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xmb', 'xmb2'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XLIFF20;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XLIFF 2.0'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XLIFF20;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['skeleton', 'note', 'data', 'source', 'target', 'pc', 'mrk'];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('unit');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var transunit = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = transunit.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, trans-unit without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            this.transUnits.push(new Xliff2TransUnit(transunit, id, this));\r\n        }\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    Xliff2File.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('srcLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('srcLang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    Xliff2File.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            return xliffElem.getAttribute('trgLang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var xliffElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'xliff');\r\n        if (xliffElem) {\r\n            xliffElem.setAttribute('trgLang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    Xliff2File.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var fileElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'file');\r\n        if (!fileElement) {\r\n            throw new Error(format('File \"%s\" seems to be no xliff 2.0 file (should contain a file element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            fileElement.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstUnitElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'unit');\r\n            if (firstUnitElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstUnitElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to first file element\r\n                fileElement.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'unit', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    Xliff2File.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        /** @type {?} */\r\n        var translationFile = new Xliff2File(this.editedContent(), filename, this.encoding());\r\n        translationFile.setNewTransUnitTargetPraefix(this.targetPraefix);\r\n        translationFile.setNewTransUnitTargetSuffix(this.targetSuffix);\r\n        translationFile.setTargetLanguage(lang);\r\n        translationFile.forEachTransUnit(function (transUnit) {\r\n            ((/** @type {?} */ (transUnit))).useSourceAsTarget(isDefaultLang, copyContent);\r\n        });\r\n        return translationFile;\r\n    };\r\n    return Xliff2File;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nvar /**\r\n * Created by martin on 23.05.2017.\r\n * A Translation Unit in an XTB file.\r\n */\r\nXtbTransUnit = /** @class */ (function (_super) {\r\n    __extends(XtbTransUnit, _super);\r\n    function XtbTransUnit(_element, _id, _translationMessagesFile, _sourceTransUnitFromMaster) {\r\n        var _this = _super.call(this, _element, _id, _translationMessagesFile) || this;\r\n        _this._sourceTransUnitFromMaster = _sourceTransUnitFromMaster;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return content to translate.\r\n     */\r\n    /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} content to translate.\r\n     */\r\n    XtbTransUnit.prototype.sourceContent = /**\r\n     * Get content to translate.\r\n     * Source parts are excluded here.\r\n     * @return {?} content to translate.\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceContent();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetSourceContent = /**\r\n     * Test, wether setting of source content is supported.\r\n     * If not, setSourceContent in trans-unit will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param newContent the new content.\r\n     */\r\n    /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setSourceContent = /**\r\n     * Set new source content in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing changed source content.\r\n     * @param {?} newContent the new content.\r\n     * @return {?}\r\n     */\r\n    function (newContent) {\r\n        // xtb has no source content, they are part of the master\r\n    };\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     */\r\n    /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.messageParser = /**\r\n     * Return a parser used for normalized messages.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new XmbMessageParser(); // no typo!, Same as for Xmb\r\n    };\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     */\r\n    /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.createSourceContentNormalized = /**\r\n     * The original text value, that is to be translated, as normalized message.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.createSourceContentNormalized();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     */\r\n    /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.targetContent = /**\r\n     * the translated value (containing all markup, depends on the concrete format used).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return DOMUtilities.getXMLContent(this._element);\r\n    };\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     */\r\n    /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.targetContentNormalized = /**\r\n     * the translated value, but all placeholders are replaced with {{n}} (starting at 0)\r\n     * and all embedded html is replaced by direct html markup.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.messageParser().createNormalizedMessageFromXML(this._element, this.sourceContentNormalized());\r\n    };\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     */\r\n    /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.nativeTargetState = /**\r\n     * State of the translation.\r\n     * (not supported in xmb)\r\n     * If we have a master, we assumed it is translated if the content is not the same as the masters one.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            /** @type {?} */\r\n            var sourceContent = this._sourceTransUnitFromMaster.sourceContent();\r\n            if (!sourceContent || sourceContent === this.targetContent() || !this.targetContent()) {\r\n                return 'new';\r\n            }\r\n            else {\r\n                return 'final';\r\n            }\r\n        }\r\n        return null; // not supported in xmb\r\n    };\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @param state one of Constants.STATE...\r\n     * @returns a native state (depends on concrete format)\r\n     * @throws error, if state is invalid.\r\n     */\r\n    /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    XtbTransUnit.prototype.mapStateToNativeState = /**\r\n     * Map an abstract state (new, translated, final) to a concrete state used in the xml.\r\n     * Returns the state to be used in the xml.\r\n     * @throws error, if state is invalid.\r\n     * @param {?} state one of Constants.STATE...\r\n     * @return {?} a native state (depends on concrete format)\r\n     */\r\n    function (state) {\r\n        return state;\r\n    };\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.mapNativeStateToState = /**\r\n     * Map a native state (found in the document) to an abstract state (new, translated, final).\r\n     * Returns the abstract state.\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        return nativeState;\r\n    };\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param nativeState nativeState\r\n     */\r\n    /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setNativeTargetState = /**\r\n     * set state in xml.\r\n     * (not supported in xmb)\r\n     * @param {?} nativeState nativeState\r\n     * @return {?}\r\n     */\r\n    function (nativeState) {\r\n        // TODO some logic to store it anywhere\r\n    };\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     */\r\n    /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.sourceReferences = /**\r\n     * All the source elements in the trans unit.\r\n     * The source element is a reference to the original template.\r\n     * It contains the name of the template file and a line number with the position inside the template.\r\n     * It is just a help for translators to find the context for the translation.\r\n     * This is set when using Angular 4.0 or greater.\r\n     * Otherwise it just returns an empty array.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.sourceReferences();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetSourceReferences = /**\r\n     * Test, wether setting of source refs is supported.\r\n     * If not, setSourceReferences will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param sourceRefs the sourcerefs to set. Old ones are removed.\r\n     */\r\n    /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setSourceReferences = /**\r\n     * Set source ref elements in the transunit.\r\n     * Normally, this is done by ng-extract.\r\n     * Method only exists to allow xliffmerge to merge missing source refs.\r\n     * @param {?} sourceRefs the sourcerefs to set. Old ones are removed.\r\n     * @return {?}\r\n     */\r\n    function (sourceRefs) {\r\n        // xtb has no source refs, they are part of the master\r\n    };\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.description = /**\r\n     * The description set in the template as value of the i18n-attribute.\r\n     * e.g. i18n=\"mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.description();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     */\r\n    /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.meaning = /**\r\n     * The meaning (intent) set in the template as value of the i18n-attribute.\r\n     * This is the part in front of the | symbol.\r\n     * e.g. i18n=\"meaning|mydescription\".\r\n     * In xtb only the master stores it.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._sourceTransUnitFromMaster) {\r\n            return this._sourceTransUnitFromMaster.meaning();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetDescriptionAndMeaning = /**\r\n     * Test, wether setting of description and meaning is supported.\r\n     * If not, setDescription and setMeaning will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param description description\r\n     */\r\n    /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setDescription = /**\r\n     * Change description property of trans-unit.\r\n     * @param {?} description description\r\n     * @return {?}\r\n     */\r\n    function (description) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param meaning meaning\r\n     */\r\n    /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setMeaning = /**\r\n     * Change meaning property of trans-unit.\r\n     * @param {?} meaning meaning\r\n     * @return {?}\r\n     */\r\n    function (meaning) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     */\r\n    /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.notes = /**\r\n     * Get all notes of the trans-unit.\r\n     * There are NO notes in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     */\r\n    /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.supportsSetNotes = /**\r\n     * Test, wether setting of notes is supported.\r\n     * If not, setNotes will do nothing.\r\n     * xtb does not support this, all other formats do.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     */\r\n    /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.setNotes = /**\r\n     * Add notes to trans unit.\r\n     * @param {?} newNotes the notes to add.\r\n     * NOT Supported in xmb/xtb\r\n     * @return {?}\r\n     */\r\n    function (newNotes) {\r\n        // not supported, do nothing\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.cloneWithSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * Returns a changed copy of this trans unit.\r\n     * receiver is not changed.\r\n     * (internal usage only, a client should call importNewTransUnit on ITranslationMessageFile)\r\n     * In xtb there is nothing to do, because there is only a target, no source.\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @param {?} targetFile\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent, targetFile) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     */\r\n    /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.useSourceAsTarget = /**\r\n     * Copy source to target to use it as dummy translation.\r\n     * (internal usage only, a client should call createTranslationFileForLang on ITranslationMessageFile)\r\n     * @param {?} isDefaultLang\r\n     * @param {?} copyContent\r\n     * @return {?}\r\n     */\r\n    function (isDefaultLang, copyContent) {\r\n        // do nothing\r\n    };\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param translation translation\r\n     */\r\n    /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    XtbTransUnit.prototype.translateNative = /**\r\n     * Set the translation to a given string (including markup).\r\n     * @param {?} translation translation\r\n     * @return {?}\r\n     */\r\n    function (translation) {\r\n        /** @type {?} */\r\n        var target = this._element;\r\n        if (isNullOrUndefined(translation)) {\r\n            translation = '';\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(target, translation);\r\n    };\r\n    return XtbTransUnit;\r\n}(AbstractTransUnit));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nvar /**\r\n * Created by martin on 23.05.2017.\r\n * xtb-File access.\r\n * xtb is the translated counterpart to xmb.\r\n */\r\nXtbFile = /** @class */ (function (_super) {\r\n    __extends(XtbFile, _super);\r\n    /**\r\n     * Create an xmb-File from source.\r\n     * @param _translationMessageFileFactory factory to create a translation file (xtb) for the xmb file\r\n     * @param xmlString file content\r\n     * @param path Path to file\r\n     * @param encoding optional encoding of the xml.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * @return XmbFile\r\n     */\r\n    function XtbFile(_translationMessageFileFactory, xmlString, path, encoding, optionalMaster) {\r\n        var _this = _super.call(this) || this;\r\n        _this._translationMessageFileFactory = _translationMessageFileFactory;\r\n        _this._warnings = [];\r\n        _this._numberOfTransUnitsWithMissingId = 0;\r\n        _this.initializeFromContent(xmlString, path, encoding, optionalMaster);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @param {?=} optionalMaster\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.initializeFromContent = /**\r\n     * @param {?} xmlString\r\n     * @param {?} path\r\n     * @param {?} encoding\r\n     * @param {?=} optionalMaster\r\n     * @return {?}\r\n     */\r\n    function (xmlString, path, encoding, optionalMaster) {\r\n        this.parseContent(xmlString, path, encoding);\r\n        if (this._parsedDocument.getElementsByTagName('translationbundle').length !== 1) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', path));\r\n        }\r\n        if (optionalMaster) {\r\n            try {\r\n                this._masterFile = this._translationMessageFileFactory.createFileFromFileContent(FORMAT_XMB, optionalMaster.xmlContent, optionalMaster.path, optionalMaster.encoding);\r\n                // check, wether this can be the master ...\r\n                /** @type {?} */\r\n                var numberInMaster = this._masterFile.numberOfTransUnits();\r\n                /** @type {?} */\r\n                var myNumber = this.numberOfTransUnits();\r\n                if (numberInMaster !== myNumber) {\r\n                    this._warnings.push(format('%s trans units found in master, but this file has %s. Check if it is the correct master', numberInMaster, myNumber));\r\n                }\r\n            }\r\n            catch (error) {\r\n                throw new Error(format('File \"%s\" seems to be no xmb file. An xtb file needs xmb as master file.', optionalMaster.path));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.initializeTransUnits = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.transUnits = [];\r\n        /** @type {?} */\r\n        var transUnitsInFile = this._parsedDocument.getElementsByTagName('translation');\r\n        for (var i = 0; i < transUnitsInFile.length; i++) {\r\n            /** @type {?} */\r\n            var msg = transUnitsInFile.item(i);\r\n            /** @type {?} */\r\n            var id = msg.getAttribute('id');\r\n            if (!id) {\r\n                this._warnings.push(format('oops, msg without \"id\" found in master, please check file %s', this._filename));\r\n            }\r\n            /** @type {?} */\r\n            var masterUnit = null;\r\n            if (this._masterFile) {\r\n                masterUnit = this._masterFile.transUnitWithId(id);\r\n            }\r\n            this.transUnits.push(new XtbTransUnit(msg, id, this, (/** @type {?} */ (masterUnit))));\r\n        }\r\n    };\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     */\r\n    /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.i18nFormat = /**\r\n     * File format as it is used in config files.\r\n     * Currently 'xlf', 'xlf2', 'xmb', 'xtb'\r\n     * Returns one of the constants FORMAT_..\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FORMAT_XTB;\r\n    };\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     */\r\n    /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.fileType = /**\r\n     * File type.\r\n     * Here 'XTB'\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return FILETYPE_XTB;\r\n    };\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     */\r\n    /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.elementsWithMixedContent = /**\r\n     * return tag names of all elements that have mixed content.\r\n     * These elements will not be beautified.\r\n     * Typical candidates are source and target.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return ['translation'];\r\n    };\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return source language.\r\n     */\r\n    /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    XtbFile.prototype.sourceLanguage = /**\r\n     * Get source language.\r\n     * Unsupported in xmb/xtb.\r\n     * Try to guess it from master filename if any..\r\n     * @return {?} source language.\r\n     */\r\n    function () {\r\n        if (this._masterFile) {\r\n            return this._masterFile.sourceLanguage();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.setSourceLanguage = /**\r\n     * Edit the source language.\r\n     * Unsupported in xmb/xtb.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        // do nothing, xtb has no notation for this.\r\n    };\r\n    /**\r\n     * Get target language.\r\n     * @return target language.\r\n     */\r\n    /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    XtbFile.prototype.targetLanguage = /**\r\n     * Get target language.\r\n     * @return {?} target language.\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            return translationbundleElem.getAttribute('lang');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Edit the target language.\r\n     * @param language language\r\n     */\r\n    /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.setTargetLanguage = /**\r\n     * Edit the target language.\r\n     * @param {?} language language\r\n     * @return {?}\r\n     */\r\n    function (language) {\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (translationbundleElem) {\r\n            translationbundleElem.setAttribute('lang', language);\r\n        }\r\n    };\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @param foreignTransUnit the trans unit to be imported.\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return the newly imported trans unit (since version 1.7.0)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     */\r\n    /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    XtbFile.prototype.importNewTransUnit = /**\r\n     * Add a new trans-unit to this file.\r\n     * The trans unit stems from another file.\r\n     * It copies the source content of the tu to the target content too,\r\n     * depending on the values of isDefaultLang and copyContent.\r\n     * So the source can be used as a dummy translation.\r\n     * (used by xliffmerge)\r\n     * @throws an error if trans-unit with same id already is in the file.\r\n     * @param {?} foreignTransUnit the trans unit to be imported.\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @param {?=} importAfterElement optional (since 1.10) other transunit (part of this file), that should be used as ancestor.\r\n     * Newly imported trans unit is then inserted directly after this element.\r\n     * If not set or not part of this file, new unit will be imported at the end.\r\n     * If explicity set to null, new unit will be imported at the start.\r\n     * @return {?} the newly imported trans unit (since version 1.7.0)\r\n     */\r\n    function (foreignTransUnit, isDefaultLang, copyContent, importAfterElement) {\r\n        if (this.transUnitWithId(foreignTransUnit.id)) {\r\n            throw new Error(format('tu with id %s already exists in file, cannot import it', foreignTransUnit.id));\r\n        }\r\n        /** @type {?} */\r\n        var newMasterTu = ((/** @type {?} */ (foreignTransUnit))).cloneWithSourceAsTarget(isDefaultLang, copyContent, this);\r\n        /** @type {?} */\r\n        var translationbundleElem = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translationbundle');\r\n        if (!translationbundleElem) {\r\n            throw new Error(format('File \"%s\" seems to be no xtb file (should contain a translationbundle element)', this._filename));\r\n        }\r\n        /** @type {?} */\r\n        var translationElement = translationbundleElem.ownerDocument.createElement('translation');\r\n        translationElement.setAttribute('id', foreignTransUnit.id);\r\n        /** @type {?} */\r\n        var newContent = (copyContent || isDefaultLang) ? foreignTransUnit.sourceContent() : '';\r\n        if (!((/** @type {?} */ (foreignTransUnit))).isICUMessage(newContent)) {\r\n            newContent = this.getNewTransUnitTargetPraefix() + newContent + this.getNewTransUnitTargetSuffix();\r\n        }\r\n        DOMUtilities.replaceContentWithXMLContent(translationElement, newContent);\r\n        /** @type {?} */\r\n        var newTu = new XtbTransUnit(translationElement, foreignTransUnit.id, this, newMasterTu);\r\n        /** @type {?} */\r\n        var inserted = false;\r\n        /** @type {?} */\r\n        var isAfterElementPartOfFile = false;\r\n        if (!!importAfterElement) {\r\n            /** @type {?} */\r\n            var insertionPoint = this.transUnitWithId(importAfterElement.id);\r\n            if (!!insertionPoint) {\r\n                isAfterElementPartOfFile = true;\r\n            }\r\n        }\r\n        if (importAfterElement === undefined || (importAfterElement && !isAfterElementPartOfFile)) {\r\n            translationbundleElem.appendChild(newTu.asXmlElement());\r\n            inserted = true;\r\n        }\r\n        else if (importAfterElement === null) {\r\n            /** @type {?} */\r\n            var firstTranslationElement = DOMUtilities.getFirstElementByTagName(this._parsedDocument, 'translation');\r\n            if (firstTranslationElement) {\r\n                DOMUtilities.insertBefore(newTu.asXmlElement(), firstTranslationElement);\r\n                inserted = true;\r\n            }\r\n            else {\r\n                // no trans-unit, empty file, so add to bundle at end\r\n                translationbundleElem.appendChild(newTu.asXmlElement());\r\n                inserted = true;\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var refUnitElement = DOMUtilities.getElementByTagNameAndId(this._parsedDocument, 'translation', importAfterElement.id);\r\n            if (refUnitElement) {\r\n                DOMUtilities.insertAfter(newTu.asXmlElement(), refUnitElement);\r\n                inserted = true;\r\n            }\r\n        }\r\n        if (inserted) {\r\n            this.lazyInitializeTransUnits();\r\n            this.transUnits.push(newTu);\r\n            this.countNumbers();\r\n            return newTu;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param lang Language code\r\n     * @param filename expected filename to store file\r\n     * @param isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     */\r\n    /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    XtbFile.prototype.createTranslationFileForLang = /**\r\n     * Create a new translation file for this file for a given language.\r\n     * Normally, this is just a copy of the original one.\r\n     * But for XMB the translation file has format 'XTB'.\r\n     * @param {?} lang Language code\r\n     * @param {?} filename expected filename to store file\r\n     * @param {?} isDefaultLang Flag, wether file contains the default language.\r\n     * Then source and target are just equal.\r\n     * The content will be copied.\r\n     * State will be final.\r\n     * @param {?} copyContent Flag, wether to copy content or leave it empty.\r\n     * Wben true, content will be copied from source.\r\n     * When false, content will be left empty (if it is not the default language).\r\n     * @return {?}\r\n     */\r\n    function (lang, filename, isDefaultLang, copyContent) {\r\n        throw new Error(format('File \"%s\", xtb files are not translatable, they are already translations', filename));\r\n    };\r\n    return XtbFile;\r\n}(AbstractTranslationMessagesFile));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nvar  /**\r\n * Helper class to read translation files depending on format.\r\n * This is part of the public api\r\n */\r\nTranslationMessagesFileFactory = /** @class */ (function () {\r\n    function TranslationMessagesFileFactory() {\r\n    }\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.fromFileContent = /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromFileContent(i18nFormat, xmlContent, path, encoding, optionalMaster);\r\n    };\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.fromUnknownFormatFileContent = /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (xmlContent, path, encoding, optionalMaster) {\r\n        return new TranslationMessagesFileFactory().createFileFromUnknownFormatFileContent(xmlContent, path, encoding, optionalMaster);\r\n    };\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.prototype.createFileFromFileContent = /**\r\n     * Read file function, result depends on format, either XliffFile or XmbFile.\r\n     * @param {?} i18nFormat currently 'xlf' or 'xlf2' or 'xmb' or 'xtb' are supported\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (i18nFormat, xmlContent, path, encoding, optionalMaster) {\r\n        if (i18nFormat === FORMAT_XLIFF12) {\r\n            return new XliffFile(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XLIFF20) {\r\n            return new Xliff2File(xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XMB) {\r\n            return new XmbFile(this, xmlContent, path, encoding);\r\n        }\r\n        if (i18nFormat === FORMAT_XTB) {\r\n            return new XtbFile(this, xmlContent, path, encoding, optionalMaster);\r\n        }\r\n        throw new Error(format('oops, unsupported format \"%s\"', i18nFormat));\r\n    };\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param xmlContent the file content\r\n     * @param path the path of the file (only used to remember it)\r\n     * @param encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return either XliffFile or XmbFile\r\n     */\r\n    /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    TranslationMessagesFileFactory.prototype.createFileFromUnknownFormatFileContent = /**\r\n     * Read file function for any file with unknown format.\r\n     * This functions tries to guess the format based on the filename and the content of the file.\r\n     * Result depends on detected format, either XliffFile or XmbFile.\r\n     * @param {?} xmlContent the file content\r\n     * @param {?} path the path of the file (only used to remember it)\r\n     * @param {?} encoding utf-8, ... used to parse XML.\r\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\r\n     * @param {?=} optionalMaster in case of xmb the master file, that contains the original texts.\r\n     * (this is used to support state infos, that are based on comparing original with translated version)\r\n     * Ignored for other formats.\r\n     * @return {?} either XliffFile or XmbFile\r\n     */\r\n    function (xmlContent, path, encoding, optionalMaster) {\r\n        /** @type {?} */\r\n        var formatCandidates = [FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB];\r\n        if (path && path.endsWith('xmb')) {\r\n            formatCandidates = [FORMAT_XMB, FORMAT_XTB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        if (path && path.endsWith('xtb')) {\r\n            formatCandidates = [FORMAT_XTB, FORMAT_XMB, FORMAT_XLIFF12, FORMAT_XLIFF20];\r\n        }\r\n        // try all candidate formats to get the right one\r\n        for (var i = 0; i < formatCandidates.length; i++) {\r\n            /** @type {?} */\r\n            var formatCandidate = formatCandidates[i];\r\n            try {\r\n                /** @type {?} */\r\n                var translationFile = TranslationMessagesFileFactory.fromFileContent(formatCandidate, xmlContent, path, encoding, optionalMaster);\r\n                if (translationFile) {\r\n                    return translationFile;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // seams to be the wrong format\r\n            }\r\n        }\r\n        throw new Error(format('could not identify file format, it is neiter XLIFF (1.2 or 2.0) nor XMB/XTB'));\r\n    };\r\n    return TranslationMessagesFileFactory;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\r\n */\n\nexport { NgxI18nsupportLibModule, TranslationMessagesFileFactory, FORMAT_XLIFF12, FORMAT_XLIFF20, FORMAT_XMB, FORMAT_XTB, FILETYPE_XLIFF12, FILETYPE_XLIFF20, FILETYPE_XMB, FILETYPE_XTB, STATE_NEW, STATE_TRANSLATED, STATE_FINAL, NORMALIZATION_FORMAT_DEFAULT, NORMALIZATION_FORMAT_NGXTRANSLATE };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWkxOG5zdXBwb3J0LW5neC1pMThuc3VwcG9ydC1saWIuanMubWFwIiwic291cmNlcyI6WyJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9saWIvbmd4LWkxOG5zdXBwb3J0LWxpYi5tb2R1bGUudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9hcGkvY29uc3RhbnRzLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC9kb20tdXRpbGl0aWVzLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC94bWwtc2VyaWFsaXplci50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwvYWJzdHJhY3QtdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZS50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwvYWJzdHJhY3QtdHJhbnMtdW5pdC50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC10ZXh0LnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LXBsYWNlaG9sZGVyLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LXN0YXJ0LXRhZy50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC9pY3UtbWVzc2FnZS10b2tlbml6ZXIudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL2ljdS1tZXNzYWdlLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LWljdS1tZXNzYWdlLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC9wYXJzZWQtbWVzc2FnZS1wYXJ0LWljdS1tZXNzYWdlLXJlZi50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL3BhcnNlZC1tZXNzYWdlLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC9wYXJzZWQtbWVzc2FnZS10b2tlbml6ZXIudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL2Fic3RyYWN0LW1lc3NhZ2UtcGFyc2VyLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC90YWctbWFwcGluZy50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwveGxpZmYtbWVzc2FnZS1wYXJzZXIudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL3hsaWZmLXRyYW5zLXVuaXQudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL3hsaWZmLWZpbGUudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL3htYi1tZXNzYWdlLXBhcnNlci50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwveG1iLXRyYW5zLXVuaXQudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL3htYi1maWxlLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC94bGlmZjItbWVzc2FnZS1wYXJzZXIudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL3hsaWZmMi10cmFucy11bml0LnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvaW1wbC94bGlmZjItZmlsZS50cyIsIm5nOi8vQG5neC1pMThuc3VwcG9ydC9uZ3gtaTE4bnN1cHBvcnQtbGliL2ltcGwveHRiLXRyYW5zLXVuaXQudHMiLCJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi9pbXBsL3h0Yi1maWxlLnRzIiwibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvYXBpL3RyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtZmFjdG9yeS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgXSxcclxuICBkZWNsYXJhdGlvbnM6IFtdLFxyXG4gIGV4cG9ydHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hJMThuc3VwcG9ydExpYk1vZHVsZSB7IH1cclxuIiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMDguMDUuMjAxNy5cclxuICogU29tZSBjb25zdGFudCB2YWx1ZXMgdXNlZCBpbiB0aGUgQVBJLlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBzdXBwb3J0ZWQgZmlsZSBmb3JtYXRzXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRk9STUFUX1hMSUZGMTIgPSAneGxmJztcclxuZXhwb3J0IGNvbnN0IEZPUk1BVF9YTElGRjIwID0gJ3hsZjInO1xyXG5leHBvcnQgY29uc3QgRk9STUFUX1hNQiA9ICd4bWInO1xyXG5leHBvcnQgY29uc3QgRk9STUFUX1hUQiA9ICd4dGInO1xyXG5cclxuLyoqXHJcbiAqIEZpbGUgdHlwZXNcclxuICogKHJldHVybmVkIGJ5IGZpbGVUeXBlKCkgbWV0aG9kKVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEZJTEVUWVBFX1hMSUZGMTIgPSAnWExJRkYgMS4yJztcclxuZXhwb3J0IGNvbnN0IEZJTEVUWVBFX1hMSUZGMjAgPSAnWExJRkYgMi4wJztcclxuZXhwb3J0IGNvbnN0IEZJTEVUWVBFX1hNQiA9ICdYTUInO1xyXG5leHBvcnQgY29uc3QgRklMRVRZUEVfWFRCID0gJ1hUQic7XHJcblxyXG4vKipcclxuICogYWJzdHJhY3Qgc3RhdGUgdmFsdWUuXHJcbiAqIFRoZXJlIGFyZSBvbmx5IDMgc3VwcG9ydGVkIHN0YXRlIHZhbHVlcy5cclxuICovXHJcblxyXG4vKipcclxuICogU3RhdGUgTkVXLlxyXG4gKiBTaWduYWxzIGFuIHVudHJhbnNsYXRlZCB1bml0LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNUQVRFX05FVyA9ICduZXcnO1xyXG4vKipcclxuICogU3RhdGUgVFJBTlNMQVRFRC5cclxuICogU2lnbmFscyBhIHRyYW5zbGF0ZWQgdW5pdCwgdGhhdCBpcyBub3QgcmV2aWV3ZWQgdW50aWwgbm93LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNUQVRFX1RSQU5TTEFURUQgPSAndHJhbnNsYXRlZCc7XHJcbi8qKlxyXG4gKiBTdGF0ZSBGSU5BTC5cclxuICogU2lnbmFscyBhIHRyYW5zbGF0ZWQgdW5pdCwgdGhhdCBpcyByZXZpZXdlZCBhbmQgcmVhZHkgZm9yIHVzZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTVEFURV9GSU5BTCA9ICdmaW5hbCc7XHJcblxyXG4vKipcclxuICogTm9ybWFsaXphdG9uIG1lc3NhZ2UgZm9ybWF0cy5cclxuICovXHJcblxyXG4vKipcclxuICogRGVmYXVsdCBmb3JtYXQsIGNvbnRhaW5zIHBsYWNlaG9sZGVycywgaHRtbCBtYXJrdXAuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTk9STUFMSVpBVElPTl9GT1JNQVRfREVGQVVMVCA9ICdkZWZhdWx0JztcclxuXHJcbi8qKlxyXG4gKiBGb3JtYXQgZm9yIHVzYWdlIGluIG5neHRyYW5zbGF0ZSBtZXNzYWdlcy5cclxuICogUGxhY2Vob2xkZXIgYXJlIGluIHRoZSBmb3JtIHt7bn19LCBubyBodG1sIG1hcmt1cC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBOT1JNQUxJWkFUSU9OX0ZPUk1BVF9OR1hUUkFOU0xBVEUgPSAnbmd4dHJhbnNsYXRlJztcclxuIiwiaW1wb3J0IHtET01QYXJzZXIsIFhNTFNlcmlhbGl6ZXJ9IGZyb20gJ3htbGRvbSc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwMS4wNS4yMDE3LlxyXG4gKiBTb21lIFRvb2wgZnVuY3Rpb25zIGZvciBYTUwgSGFuZGxpbmcuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIERPTVV0aWxpdGllcyB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiByZXR1cm4gdGhlIGZpcnN0IHN1YmVsZW1lbnQgd2l0aCB0aGUgZ2l2ZW4gdGFnLlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnQgZWxlbWVudFxyXG4gICAgICogQHBhcmFtIHRhZ05hbWUgdGFnTmFtZVxyXG4gICAgICogQHJldHVybiBzdWJlbGVtZW50IG9yIG51bGwsIGlmIG5vdCBleGlzdGluZy5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBnZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUoZWxlbWVudDogRWxlbWVudCB8IERvY3VtZW50LCB0YWdOYW1lOiBzdHJpbmcpOiBFbGVtZW50IHtcclxuICAgICAgICBjb25zdCBtYXRjaGluZ0VsZW1lbnRzID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YWdOYW1lKTtcclxuICAgICAgICBpZiAobWF0Y2hpbmdFbGVtZW50cyAmJiBtYXRjaGluZ0VsZW1lbnRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoaW5nRWxlbWVudHMuaXRlbSgwKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiByZXR1cm4gYW4gZWxlbWVudCB3aXRoIHRoZSBnaXZlbiB0YWcgYW5kIGlkIGF0dHJpYnV0ZS5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50IGVsZW1lbnRcclxuICAgICAqIEBwYXJhbSB0YWdOYW1lIHRhZ05hbWVcclxuICAgICAqIEBwYXJhbSBpZCBpZFxyXG4gICAgICogQHJldHVybiBzdWJlbGVtZW50IG9yIG51bGwsIGlmIG5vdCBleGlzdGluZy5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBnZXRFbGVtZW50QnlUYWdOYW1lQW5kSWQoZWxlbWVudDogRWxlbWVudCB8IERvY3VtZW50LCB0YWdOYW1lOiBzdHJpbmcsIGlkOiBzdHJpbmcpOiBFbGVtZW50IHtcclxuICAgICAgICBjb25zdCBtYXRjaGluZ0VsZW1lbnRzID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YWdOYW1lKTtcclxuICAgICAgICBpZiAobWF0Y2hpbmdFbGVtZW50cyAmJiBtYXRjaGluZ0VsZW1lbnRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtYXRjaGluZ0VsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBub2RlOiBFbGVtZW50ID0gbWF0Y2hpbmdFbGVtZW50cy5pdGVtKGkpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKCdpZCcpID09PSBpZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IG5leHQgc2libGluZywgdGhhdCBpcyBhbiBlbGVtZW50LlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnQgZWxlbWVudFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEVsZW1lbnRGb2xsb3dpbmdTaWJsaW5nKGVsZW1lbnQ6IEVsZW1lbnQpOiBFbGVtZW50IHtcclxuICAgICAgICBpZiAoIWVsZW1lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBlID0gZWxlbWVudC5uZXh0U2libGluZztcclxuICAgICAgICB3aGlsZSAoZSkge1xyXG4gICAgICAgICAgICBpZiAoZS5ub2RlVHlwZSA9PT0gZS5FTEVNRU5UX05PREUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiA8RWxlbWVudD4gZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlID0gZS5uZXh0U2libGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgcHJldmlvdXMgc2libGluZywgdGhhdCBpcyBhbiBlbGVtZW50LlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnQgZWxlbWVudFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEVsZW1lbnRQcmVjZWRpbmdTaWJsaW5nKGVsZW1lbnQ6IEVsZW1lbnQpOiBFbGVtZW50IHtcclxuICAgICAgICBpZiAoIWVsZW1lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBlID0gZWxlbWVudC5wcmV2aW91c1NpYmxpbmc7XHJcbiAgICAgICAgd2hpbGUgKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUubm9kZVR5cGUgPT09IGUuRUxFTUVOVF9OT0RFKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gPEVsZW1lbnQ+IGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZSA9IGUucHJldmlvdXNTaWJsaW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHJldHVybiBjb250ZW50IG9mIGVsZW1lbnQgYXMgc3RyaW5nLCBpbmNsdWRpbmcgYWxsIG1hcmt1cC5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50IGVsZW1lbnRcclxuICAgICAqIEByZXR1cm4gY29udGVudCBvZiBlbGVtZW50IGFzIHN0cmluZywgaW5jbHVkaW5nIGFsbCBtYXJrdXAuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0WE1MQ29udGVudChlbGVtZW50OiBFbGVtZW50KTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIWVsZW1lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByZXN1bHQgPSBuZXcgWE1MU2VyaWFsaXplcigpLnNlcmlhbGl6ZVRvU3RyaW5nKGVsZW1lbnQpO1xyXG4gICAgICAgIGNvbnN0IHRhZ05hbWUgPSBlbGVtZW50Lm5vZGVOYW1lO1xyXG4gICAgICAgIGNvbnN0IHJlU3RhcnRNc2c6IFJlZ0V4cCA9IG5ldyBSZWdFeHAoJzwnICsgdGFnTmFtZSArICdbXj5dKj4nLCAnZycpO1xyXG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKHJlU3RhcnRNc2csICcnKTtcclxuICAgICAgICBjb25zdCByZUVuZE1zZzogUmVnRXhwID0gbmV3IFJlZ0V4cCgnPC8nICsgdGFnTmFtZSArICc+JywgJ2cnKTtcclxuICAgICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZShyZUVuZE1zZywgJycpO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiByZXR1cm4gUENEQVRBIGNvbnRlbnQgb2YgZWxlbWVudC5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50IGVsZW1lbnRcclxuICAgICAqIEByZXR1cm4gUENEQVRBIGNvbnRlbnQgb2YgZWxlbWVudC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBnZXRQQ0RBVEEoZWxlbWVudDogRWxlbWVudCk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKCFlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgcmVzdWx0ID0gJyc7XHJcbiAgICAgICAgY29uc3QgY2hpbGROb2RlcyA9IGVsZW1lbnQuY2hpbGROb2RlcztcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBjaGlsZE5vZGVzLml0ZW0oaSk7XHJcbiAgICAgICAgICAgIGlmIChjaGlsZC5ub2RlVHlwZSA9PT0gY2hpbGQuVEVYVF9OT0RFIHx8IGNoaWxkLm5vZGVUeXBlID09PSBjaGlsZC5DREFUQV9TRUNUSU9OX05PREUpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdCArIGNoaWxkLm5vZGVWYWx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA9PT0gMCA/IG51bGwgOiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiByZXBsYWNlIFBDREFUQSBjb250ZW50IHdpdGggYSBuZXcgb25lLlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnQgZWxlbWVudFxyXG4gICAgICogQHBhcmFtIHBjZGF0YSBwY2RhdGFcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZXBsYWNlQ29udGVudFdpdGhYTUxDb250ZW50KGVsZW1lbnQ6IEVsZW1lbnQsIHBjZGF0YTogc3RyaW5nKSB7XHJcbiAgICAgICAgLy8gcmVtb3ZlIGFsbCBjaGlsZHJlblxyXG4gICAgICAgIHdoaWxlIChlbGVtZW50LmZpcnN0Q2hpbGQpIHtcclxuICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBwYXJzZUlDVU1lc3NhZ2UgcGNkYXRhXHJcbiAgICAgICAgY29uc3QgcGNkYXRhRnJhZ21lbnQ6IERvY3VtZW50ID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZygnPGZyYWdtZW50PicgKyBwY2RhdGEgKyAnPC9mcmFnbWVudD4nLCAnYXBwbGljYXRpb24veG1sJyk7XHJcbiAgICAgICAgY29uc3QgbmV3Q2hpbGRyZW4gPSBwY2RhdGFGcmFnbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZnJhZ21lbnQnKS5pdGVtKDApLmNoaWxkTm9kZXM7XHJcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBuZXdDaGlsZHJlbi5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICBjb25zdCBuZXdDaGlsZCA9IG5ld0NoaWxkcmVuLml0ZW0oaik7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoZWxlbWVudC5vd25lckRvY3VtZW50LmltcG9ydE5vZGUobmV3Q2hpbGQsIHRydWUpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBmaW5kIHRoZSBwcmV2aW91cyBzaWJsaW5nIHRoYXQgaXMgYW4gZWxlbWVudC5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50IGVsZW1lbnRcclxuICAgICAqIEByZXR1cm4gdGhlIHByZXZpb3VzIHNpYmxpbmcgdGhhdCBpcyBhbiBlbGVtZW50IG9yIG51bGwuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0UHJldmlvdXNFbGVtZW50U2libGluZyhlbGVtZW50OiBOb2RlKTogRWxlbWVudCB7XHJcbiAgICAgICAgbGV0IG5vZGUgPSBlbGVtZW50LnByZXZpb3VzU2libGluZztcclxuICAgICAgICB3aGlsZSAobm9kZSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gbm9kZS5FTEVNRU5UX05PREUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiA8RWxlbWVudD4gbm9kZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBub2RlID0gbm9kZS5wcmV2aW91c1NpYmxpbmc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGFuIEVsZW1lbnQgTm9kZSB0aGF0IGlzIHRoZSBuZXh0IHNpYmxpbmcgb2YgYSBnaXZlbiBub2RlLlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnROYW1lVG9DcmVhdGUgZWxlbWVudE5hbWVUb0NyZWF0ZVxyXG4gICAgICogQHBhcmFtIHByZXZpb3VzU2libGluZyBwcmV2aW91c1NpYmxpbmdcclxuICAgICAqIEByZXR1cm4gbmV3IGVsZW1lbnRcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVGb2xsb3dpbmdTaWJsaW5nKGVsZW1lbnROYW1lVG9DcmVhdGU6IHN0cmluZywgcHJldmlvdXNTaWJsaW5nOiBOb2RlKTogRWxlbWVudCB7XHJcbiAgICAgICAgY29uc3QgbmV3RWxlbWVudCA9IHByZXZpb3VzU2libGluZy5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZWxlbWVudE5hbWVUb0NyZWF0ZSk7XHJcbiAgICAgICAgcmV0dXJuIDxFbGVtZW50PiBET01VdGlsaXRpZXMuaW5zZXJ0QWZ0ZXIobmV3RWxlbWVudCwgcHJldmlvdXNTaWJsaW5nKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEluc2VydCBuZXdFbGVtZW50IGRpcmVjdGx5IGFmdGVyIHByZXZpb3VzU2libGluZy5cclxuICAgICAqIEBwYXJhbSBuZXdFbGVtZW50IG5ld0VsZW1lbnRcclxuICAgICAqIEBwYXJhbSBwcmV2aW91c1NpYmxpbmcgcHJldmlvdXNTaWJsaW5nXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgaW5zZXJ0QWZ0ZXIobmV3RWxlbWVudDogTm9kZSwgcHJldmlvdXNTaWJsaW5nOiBOb2RlKTogTm9kZSB7XHJcbiAgICAgICAgaWYgKHByZXZpb3VzU2libGluZy5uZXh0U2libGluZyAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBwcmV2aW91c1NpYmxpbmcucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobmV3RWxlbWVudCwgcHJldmlvdXNTaWJsaW5nLm5leHRTaWJsaW5nKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBwcmV2aW91c1NpYmxpbmcucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChuZXdFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ld0VsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJbnNlcnQgbmV3RWxlbWVudCBkaXJlY3RseSBiZWZvcmUgbmV4dFNpYmxpbmcuXHJcbiAgICAgKiBAcGFyYW0gbmV3RWxlbWVudCBuZXdFbGVtZW50XHJcbiAgICAgKiBAcGFyYW0gbmV4dFNpYmxpbmcgbmV4dFNpYmxpbmdcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBpbnNlcnRCZWZvcmUobmV3RWxlbWVudDogTm9kZSwgbmV4dFNpYmxpbmc6IE5vZGUpOiBOb2RlIHtcclxuICAgICAgICBuZXh0U2libGluZy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuZXdFbGVtZW50LCBuZXh0U2libGluZyk7XHJcbiAgICAgICAgcmV0dXJuIG5ld0VsZW1lbnQ7XHJcbiAgICB9XHJcbn1cclxuIiwiLyoqXHJcbiAqIEFuIFhtbFNlcmlhbGl6ZXIgdGhhdCBzdXBwb3J0cyBmb3JtYXR0aW5nLlxyXG4gKiBPcmlnaW5hbCBjb2RlIGlzIGJhc2VkIG9uIFt4bWxkb21dKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3htbGRvbSlcclxuICogSXQgaXMgZXh0ZW5kZWQgdG8gc3VwcG9ydCBmb3JtYXR0aW5nIGluY2x1ZGluZyBoYW5kbGluZyBvZiBlbGVtZW50cyB3aXRoIG1peGVkIGNvbnRlbnQuXHJcbiAqIEV4YW1wbGUgZm9ybWF0dGVkIG91dHB1dDpcclxuICogPHByZT5cclxuICogICAgIDxkb2M+XHJcbiAqICAgICAgICAgPGVsZW1lbnQ+QW4gZWxlbWVudCB3aXRoXHJcbiAqICAgICAgICAgICAgIDxiPm1peGVkPC9iPlxyXG4gKiAgICAgICAgICAgICAgY29udGVudFxyXG4gKiAgICAgICAgIDwvZWxlbWVudD5cclxuICogICAgIDwvZG9jPlxyXG4gKiA8L3ByZT5cclxuICogU2FtZSB3aGVuIFwiZWxlbWVudFwiIGlzIGluZGljYXRlZCBhcyBcIm1peGVkQ29udGVudEVsZW1lbnRcIjpcclxuICogPHByZT5cclxuICogICAgIDxkb2M+XHJcbiAqICAgICAgICAgPGVsZW1lbnQ+QW4gZWxlbWVudCB3aXRoIDxiPm1peGVkPC9iPiBjb250ZW50PC9lbGVtZW50PlxyXG4gKiAgICAgPC9kb2M+XHJcbiAqIDwvcHJlPlxyXG4gKi9cclxuXHJcbmludGVyZmFjZSBOYW1lc3BhY2Uge1xyXG4gICAgcHJlZml4OiBzdHJpbmc7XHJcbiAgICBuYW1lc3BhY2U6IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIE9wdGlvbnMgdXNlZCB0byBjb250cm9sIHRoZSBmb3JtYXR0aW5nXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFhtbFNlcmlhbGl6ZXJPcHRpb25zIHtcclxuICAgIGJlYXV0aWZ5PzogYm9vbGVhbjsgLy8gc2V0IHRvIGFjdGl2YXRlIGJlYXV0aWZ5XHJcbiAgICBpbmRlbnRTdHJpbmc/OiBzdHJpbmc7IC8vIFNlcXVlbmNlIHVzZXMgZm9yIGluZGVudGF0aW9uLCBtdXN0IG9ubHkgY29udGFpbiB3aGl0ZSBzcGFjZSBjaGFycywgZS5nLiBcIiAgXCIgb3IgXCIgICAgXCIgb3IgXCJcXHRcIlxyXG4gICAgbWl4ZWRDb250ZW50RWxlbWVudHM/OiBzdHJpbmdbXTsgLy8gTmFtZXMgb2YgZWxlbWVudHMgY29udGFpbmluZyBtaXhlZCBjb250ZW50ICh0aGVzZSBhcmUgbm90IGJlYXV0aWZpZWQpXHJcbn1cclxuXHJcbmNvbnN0IERFRkFVTFRfSU5ERU5UX1NUUklORyA9ICcgICc7XHJcblxyXG5leHBvcnQgY2xhc3MgWG1sU2VyaWFsaXplciB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2VyaWFsemUgeG1sIGRvY3VtZW50IHRvIHN0cmluZy5cclxuICAgICAqIEBwYXJhbSBkb2N1bWVudCB0aGUgZG9jdW1lbnRcclxuICAgICAqIEBwYXJhbSBvcHRpb25zIGNhbiBiZSB1c2VkIHRvIGFjdGl2YXRlIGJlYXV0aWZ5aW5nLlxyXG4gICAgICovXHJcbiAgICBzZXJpYWxpemVUb1N0cmluZyhkb2N1bWVudDogRG9jdW1lbnQsIG9wdGlvbnM/OiBYbWxTZXJpYWxpemVyT3B0aW9ucyk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgYnVmID0gW107XHJcbiAgICAgICAgbGV0IHZpc2libGVOYW1lc3BhY2VzOiBOYW1lc3BhY2VbXSA9IFtdO1xyXG4gICAgICAgIGNvbnN0IHJlZk5vZGUgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XHJcbiAgICAgICAgbGV0IHByZWZpeCA9IHJlZk5vZGUucHJlZml4O1xyXG4gICAgICAgIGNvbnN0IHVyaSA9IHJlZk5vZGUubmFtZXNwYWNlVVJJO1xyXG5cclxuICAgICAgICBpZiAodXJpICYmIHByZWZpeCA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHByZWZpeCA9IHJlZk5vZGUubG9va3VwUHJlZml4KHVyaSk7XHJcbiAgICAgICAgICAgIGlmIChwcmVmaXggPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdmlzaWJsZU5hbWVzcGFjZXMgPSBbXHJcbiAgICAgICAgICAgICAgICAgICAge25hbWVzcGFjZTogdXJpLCBwcmVmaXg6IG51bGx9XHJcbiAgICAgICAgICAgICAgICAgICAgLy8ge25hbWVzcGFjZTp1cmkscHJlZml4OicnfVxyXG4gICAgICAgICAgICAgICAgXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIW9wdGlvbnMpIHtcclxuICAgICAgICAgICAgb3B0aW9ucyA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob3B0aW9ucy5pbmRlbnRTdHJpbmcpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmNvbnRhaW5zT25seVdoaXRlU3BhY2Uob3B0aW9ucy5pbmRlbnRTdHJpbmcpKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2luZGVudFN0cmluZyBtdXN0IG5vdCBjb250YWluIG5vbiB3aGl0ZSBjaGFyYWN0ZXJzJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5kb1NlcmlhbGl6ZVRvU3RyaW5nKGRvY3VtZW50LCBvcHRpb25zLCBidWYsIDAsIGZhbHNlLCB2aXNpYmxlTmFtZXNwYWNlcyk7XHJcbiAgICAgICAgcmV0dXJuIGJ1Zi5qb2luKCcnKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE1haW4gZm9ybWF0IG1ldGhvZCB0aGF0IGRvZXMgYWxsIHRoZSB3b3JrLlxyXG4gICAgICogT3V0cHV0cyBhIG5vZGUgdG8gdGhlIG91dHB1dGJ1ZmZlci5cclxuICAgICAqIEBwYXJhbSBub2RlIHRoZSBub2RlIHRvIGJlIGZvcm1hdHRlZC5cclxuICAgICAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbnNcclxuICAgICAqIEBwYXJhbSBidWYgb3V0cHV0YnVmZmVyLCBuZXcgb3V0cHV0IHdpbGwgYmUgYXBwZW5kZWQgdG8gdGhpcyBhcnJheS5cclxuICAgICAqIEBwYXJhbSBpbmRlbnRMZXZlbCBMZXZlciBvZiBpbmRlbnRhdGlvbiBmb3IgZm9ybWF0dGVkIG91dHB1dC5cclxuICAgICAqIEBwYXJhbSBwYXJ0T2ZNaXhlZENvbnRlbnQgdHJ1ZSwgaWYgbm9kZSBpcyBhIHN1YmVsZW1lbnQgb2YgYW4gZWxlbWVudCBjb250YWluaW5kIG1peGVkIGNvbnRlbnQuXHJcbiAgICAgKiBAcGFyYW0gdmlzaWJsZU5hbWVzcGFjZXMgdmlzaWJsZU5hbWVzcGFjZXNcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBkb1NlcmlhbGl6ZVRvU3RyaW5nKG5vZGU6IE5vZGUsIG9wdGlvbnM6IFhtbFNlcmlhbGl6ZXJPcHRpb25zLCBidWY6IHN0cmluZ1tdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGVudExldmVsOiBudW1iZXIsIHBhcnRPZk1peGVkQ29udGVudDogYm9vbGVhbiwgdmlzaWJsZU5hbWVzcGFjZXM6IE5hbWVzcGFjZVtdKSB7XHJcbiAgICAgICAgbGV0IGNoaWxkOiBOb2RlO1xyXG4gICAgICAgIHN3aXRjaCAobm9kZS5ub2RlVHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIG5vZGUuRUxFTUVOVF9OT0RFOlxyXG4gICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudE5vZGU6IEVsZW1lbnQgPSA8RWxlbWVudD4gbm9kZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGF0dHJzID0gZWxlbWVudE5vZGUuYXR0cmlidXRlcztcclxuICAgICAgICAgICAgICAgIGNvbnN0IGxlbiA9IGF0dHJzLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgIGNoaWxkID0gZWxlbWVudE5vZGUuZmlyc3RDaGlsZDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5vZGVOYW1lID0gZWxlbWVudE5vZGUudGFnTmFtZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRIYXNNaXhlZENvbnRlbnQgPSB0aGlzLmlzTWl4ZWRDb250ZW50RWxlbWVudChub2RlTmFtZSwgb3B0aW9ucyk7XHJcbiAgICAgICAgICAgICAgICBpZiAocGFydE9mTWl4ZWRDb250ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnVmLnB1c2goJzwnICwgbm9kZU5hbWUpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm91dHB1dEluZGVudGVkKG9wdGlvbnMsIGJ1ZiwgaW5kZW50TGV2ZWwsICc8JyAsIG5vZGVOYW1lKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYWRkIG5hbWVzcGFjZXMgZm9yIGF0dHJpYnV0ZXNcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhdHRyID0gYXR0cnMuaXRlbShpKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ci5wcmVmaXggPT09ICd4bWxucycpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJsZU5hbWVzcGFjZXMucHVzaCh7cHJlZml4OiBhdHRyLmxvY2FsTmFtZSwgbmFtZXNwYWNlOiBhdHRyLnZhbHVlfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhdHRyLm5vZGVOYW1lID09PSAneG1sbnMnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGVOYW1lc3BhY2VzLnB1c2goe3ByZWZpeDogJycsIG5hbWVzcGFjZTogYXR0ci52YWx1ZX0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhdHRyID0gYXR0cnMuaXRlbShpKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5uZWVkTmFtZXNwYWNlRGVmaW5lKGF0dHIsIHZpc2libGVOYW1lc3BhY2VzKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwcmVmaXggPSBhdHRyLnByZWZpeCB8fCAnJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJpID0gYXR0ci5uYW1lc3BhY2VVUkk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5zID0gcHJlZml4ID8gJyB4bWxuczonICsgcHJlZml4IDogJyB4bWxucyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1Zi5wdXNoKG5zLCAnPVwiJywgdXJpLCAnXCInKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJsZU5hbWVzcGFjZXMucHVzaCh7cHJlZml4OiBwcmVmaXgsIG5hbWVzcGFjZTogdXJpfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZG9TZXJpYWxpemVUb1N0cmluZyhhdHRyLCBvcHRpb25zLCBidWYsIGluZGVudExldmVsLCBmYWxzZSwgdmlzaWJsZU5hbWVzcGFjZXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gYWRkIG5hbWVzcGFjZSBmb3IgY3VycmVudCBub2RlXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5uZWVkTmFtZXNwYWNlRGVmaW5lKGVsZW1lbnROb2RlLCB2aXNpYmxlTmFtZXNwYWNlcykpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwcmVmaXggPSBlbGVtZW50Tm9kZS5wcmVmaXggfHwgJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJpID0gbm9kZS5uYW1lc3BhY2VVUkk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbnMgPSBwcmVmaXggPyAnIHhtbG5zOicgKyBwcmVmaXggOiAnIHhtbG5zJztcclxuICAgICAgICAgICAgICAgICAgICBidWYucHVzaChucywgJz1cIicsIHVyaSwgJ1wiJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZU5hbWVzcGFjZXMucHVzaCh7cHJlZml4OiBwcmVmaXgsIG5hbWVzcGFjZTogdXJpfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnVmLnB1c2goJz4nKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBpZiBpcyBjZGF0YSBjaGlsZCBub2RlXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGhhc0NvbXBsZXhDb250ZW50ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGNoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZC5ub2RlVHlwZSA9PT0gY2hpbGQuRUxFTUVOVF9OT0RFKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNDb21wbGV4Q29udGVudCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kb1NlcmlhbGl6ZVRvU3RyaW5nKGNoaWxkLCBvcHRpb25zLCBidWYsIGluZGVudExldmVsICsgMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRPZk1peGVkQ29udGVudCB8fCBlbGVtZW50SGFzTWl4ZWRDb250ZW50LCB2aXNpYmxlTmFtZXNwYWNlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkID0gY2hpbGQubmV4dFNpYmxpbmc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghcGFydE9mTWl4ZWRDb250ZW50ICYmICFlbGVtZW50SGFzTWl4ZWRDb250ZW50ICYmIGhhc0NvbXBsZXhDb250ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3V0cHV0SW5kZW50ZWQob3B0aW9ucywgYnVmLCBpbmRlbnRMZXZlbCwgJzwvJywgbm9kZU5hbWUsICc+Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnVmLnB1c2goJzwvJywgbm9kZU5hbWUsICc+Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBidWYucHVzaCgnLz4nKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgY2FzZSBub2RlLkRPQ1VNRU5UX05PREU6XHJcbiAgICAgICAgICAgIGNhc2Ugbm9kZS5ET0NVTUVOVF9GUkFHTUVOVF9OT0RFOlxyXG4gICAgICAgICAgICAgICAgY2hpbGQgPSBub2RlLmZpcnN0Q2hpbGQ7XHJcbiAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRvU2VyaWFsaXplVG9TdHJpbmcoY2hpbGQsIG9wdGlvbnMsIGJ1ZiwgaW5kZW50TGV2ZWwsIGZhbHNlLCB2aXNpYmxlTmFtZXNwYWNlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5uZXh0U2libGluZztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgY2FzZSBub2RlLkFUVFJJQlVURV9OT0RFOlxyXG4gICAgICAgICAgICAgICAgY29uc3QgYXR0ck5vZGUgPSA8QXR0cj4gbm9kZTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBidWYucHVzaCgnICcsIGF0dHJOb2RlLm5hbWUsICc9XCInLCBhdHRyTm9kZS52YWx1ZS5yZXBsYWNlKC9bPCZcIl0vZywgdGhpcy5feG1sRW5jb2RlciksICdcIicpO1xyXG4gICAgICAgICAgICBjYXNlIG5vZGUuVEVYVF9OT0RFOlxyXG4gICAgICAgICAgICAgICAgY29uc3QgdGV4dE5vZGUgPSA8VGV4dD4gbm9kZTtcclxuICAgICAgICAgICAgICAgIGlmICghb3B0aW9ucy5iZWF1dGlmeSB8fCBwYXJ0T2ZNaXhlZENvbnRlbnQgfHwgIXRoaXMuY29udGFpbnNPbmx5V2hpdGVTcGFjZSh0ZXh0Tm9kZS5kYXRhKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBidWYucHVzaCh0ZXh0Tm9kZS5kYXRhLnJlcGxhY2UoL1s8Jl0vZywgdGhpcy5feG1sRW5jb2RlcikpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBjYXNlIG5vZGUuQ0RBVEFfU0VDVElPTl9OT0RFOlxyXG4gICAgICAgICAgICAgICAgY29uc3QgY2RhdGFzZWN0aW9uTm9kZSA9IDxDREFUQVNlY3Rpb24+IG5vZGU7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYnVmLnB1c2goJzwhW0NEQVRBWycsIGNkYXRhc2VjdGlvbk5vZGUuZGF0YSwgJ11dPicpO1xyXG4gICAgICAgICAgICBjYXNlIG5vZGUuQ09NTUVOVF9OT0RFOlxyXG4gICAgICAgICAgICAgICAgY29uc3QgY29tbWVudE5vZGUgPSA8Q29tbWVudD4gbm9kZTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBidWYucHVzaCgnPCEtLScsIGNvbW1lbnROb2RlLmRhdGEsICctLT4nKTtcclxuICAgICAgICAgICAgY2FzZSBub2RlLkRPQ1VNRU5UX1RZUEVfTk9ERTpcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRvY3VtZW50dHlwZU5vZGUgPSA8RG9jdW1lbnRUeXBlPiBub2RlO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcHViaWQgPSBkb2N1bWVudHR5cGVOb2RlLnB1YmxpY0lkO1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc3lzaWQgPSBkb2N1bWVudHR5cGVOb2RlLnN5c3RlbUlkO1xyXG4gICAgICAgICAgICAgICAgYnVmLnB1c2goJzwhRE9DVFlQRSAnLCBkb2N1bWVudHR5cGVOb2RlLm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHB1YmlkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnVmLnB1c2goJyBQVUJMSUMgXCInLCBwdWJpZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN5c2lkICYmIHN5c2lkICE9PSAnLicpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnVmLnB1c2goJ1wiIFwiJywgc3lzaWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBidWYucHVzaCgnXCI+Jyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHN5c2lkICYmIHN5c2lkICE9PSAnLicpIHtcclxuICAgICAgICAgICAgICAgICAgICBidWYucHVzaCgnIFNZU1RFTSBcIicsIHN5c2lkLCAnXCI+Jyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1Zi5wdXNoKCc+Jyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIGNhc2Ugbm9kZS5QUk9DRVNTSU5HX0lOU1RSVUNUSU9OX05PREU6XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwaU5vZGUgPSA8UHJvY2Vzc2luZ0luc3RydWN0aW9uPiBub2RlO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJ1Zi5wdXNoKCAnPD8nLCBwaU5vZGUudGFyZ2V0LCAnICcsIHBpTm9kZS5kYXRhLCAnPz4nKTtcclxuICAgICAgICAgICAgY2FzZSBub2RlLkVOVElUWV9SRUZFUkVOQ0VfTk9ERTpcclxuICAgICAgICAgICAgICAgIHJldHVybiBidWYucHVzaCgnJicsIG5vZGUubm9kZU5hbWUsICc7Jyk7XHJcbiAgICAgICAgICAgIC8vIGNhc2UgRU5USVRZX05PREU6XHJcbiAgICAgICAgICAgIC8vIGNhc2UgTk9UQVRJT05fTk9ERTpcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJ1Zi5wdXNoKCc/PycsIG5vZGUubm9kZU5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG5lZWROYW1lc3BhY2VEZWZpbmUobm9kZTogRWxlbWVudCB8IEF0dHIsIHZpc2libGVOYW1lc3BhY2VzOiBOYW1lc3BhY2VbXSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGNvbnN0IHByZWZpeCA9IG5vZGUucHJlZml4IHx8ICcnO1xyXG4gICAgICAgIGNvbnN0IHVyaSA9IG5vZGUubmFtZXNwYWNlVVJJO1xyXG4gICAgICAgIGlmICghcHJlZml4ICYmICF1cmkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocHJlZml4ID09PSAneG1sJyAmJiB1cmkgPT09ICdodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2UnXHJcbiAgICAgICAgICAgIHx8IHVyaSA9PT0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvJykge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgaSA9IHZpc2libGVOYW1lc3BhY2VzLmxlbmd0aDtcclxuICAgICAgICB3aGlsZSAoaS0tKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5zID0gdmlzaWJsZU5hbWVzcGFjZXNbaV07XHJcbiAgICAgICAgICAgIC8vIGdldCBuYW1lc3BhY2UgcHJlZml4XHJcbiAgICAgICAgICAgIGlmIChucy5wcmVmaXggPT09IHByZWZpeCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5zLm5hbWVzcGFjZSAhPT0gdXJpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX3htbEVuY29kZXIoYzogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gYyA9PT0gJzwnICYmICcmbHQ7JyB8fFxyXG4gICAgICAgICAgICBjID09PSAnPicgJiYgJyZndDsnIHx8XHJcbiAgICAgICAgICAgIGMgPT09ICcmJyAmJiAnJmFtcDsnIHx8XHJcbiAgICAgICAgICAgIGMgPT09ICdcIicgJiYgJyZxdW90OycgfHxcclxuICAgICAgICAgICAgJyYjJyArIGMuY2hhckNvZGVBdCgwKSArICc7JztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG91dHB1dEluZGVudGVkKG9wdGlvbnM6IFhtbFNlcmlhbGl6ZXJPcHRpb25zLCBidWY6IHN0cmluZ1tdLCBpbmRlbnRMZXZlbDogbnVtYmVyLCAuLi5vdXRwdXRQYXJ0czogc3RyaW5nW10pIHtcclxuICAgICAgICBpZiAob3B0aW9ucy5iZWF1dGlmeSkge1xyXG4gICAgICAgICAgICBidWYucHVzaCgnXFxuJyk7XHJcbiAgICAgICAgICAgIGlmIChpbmRlbnRMZXZlbCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGJ1Zi5wdXNoKHRoaXMuaW5kZW50YXRpb25TdHJpbmcob3B0aW9ucywgaW5kZW50TGV2ZWwpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBidWYucHVzaCguLi5vdXRwdXRQYXJ0cyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbmRlbnRhdGlvblN0cmluZyhvcHRpb25zOiBYbWxTZXJpYWxpemVyT3B0aW9ucywgaW5kZW50TGV2ZWw6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgaW5kZW50ID0gKG9wdGlvbnMuaW5kZW50U3RyaW5nKSA/IG9wdGlvbnMuaW5kZW50U3RyaW5nIDogREVGQVVMVF9JTkRFTlRfU1RSSU5HO1xyXG4gICAgICAgIGxldCByZXN1bHQgPSAnJztcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGVudExldmVsOyBpKyspIHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0ICsgaW5kZW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHRhZ05hbWUgaXMgYW4gZWxlbWVudCBjb250YWluaW5nIG1peGVkIGNvbnRlbnQuXHJcbiAgICAgKiBAcGFyYW0gdGFnTmFtZSB0YWdOYW1lXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25zXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgaXNNaXhlZENvbnRlbnRFbGVtZW50KHRhZ05hbWU6IHN0cmluZywgb3B0aW9uczogWG1sU2VyaWFsaXplck9wdGlvbnMpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm1peGVkQ29udGVudEVsZW1lbnRzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAhIW9wdGlvbnMubWl4ZWRDb250ZW50RWxlbWVudHMuZmluZCgodGFnKSA9PiB0YWcgPT09IHRhZ05hbWUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBjb250YWluc09ubHlXaGl0ZVNwYWNlKHRleHQ6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBjID0gdGV4dC5jaGFyQXQoaSk7XHJcbiAgICAgICAgICAgIGlmICghKGMgPT09ICcgJyB8fCBjID09PSAnXFx0JyB8fCBjID09PSAnXFxyJyB8fCBjID09PSAnXFxuJykpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQge1NUQVRFX05FVywgU1RBVEVfVFJBTlNMQVRFRH0gZnJvbSAnLi4vYXBpL2NvbnN0YW50cyc7XHJcbmltcG9ydCB7SVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuaW1wb3J0IHtJTm9ybWFsaXplZE1lc3NhZ2V9IGZyb20gJy4uL2FwaS9pLW5vcm1hbGl6ZWQtbWVzc2FnZSc7XHJcbmltcG9ydCB7SVRyYW5zVW5pdH0gZnJvbSAnLi4vYXBpL2ktdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7aXNOdWxsT3JVbmRlZmluZWR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge0RPTVBhcnNlcn0gZnJvbSAneG1sZG9tJztcclxuaW1wb3J0IHtYbWxTZXJpYWxpemVyLCBYbWxTZXJpYWxpemVyT3B0aW9uc30gZnJvbSAnLi94bWwtc2VyaWFsaXplcic7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDA5LjA1LjIwMTcuXHJcbiAqIEFic3RyYWN0IHN1cGVyY2xhc3MgZm9yIGFsbCBpbXBsZW1lbnRhdGlvbnMgb2YgSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIGltcGxlbWVudHMgSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIHtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX2ZpbGVuYW1lOiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIF9lbmNvZGluZzogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBfcGFyc2VkRG9jdW1lbnQ6IERvY3VtZW50O1xyXG5cclxuICAgIHByb3RlY3RlZCBfZmlsZUVuZHNXaXRoRU9MOiBib29sZWFuO1xyXG5cclxuICAgIC8vIHRyYW5zLXVuaXQgZWxlbWVudHMgYW5kIHRoZWlyIGlkIGZyb20gdGhlIGZpbGVcclxuICAgIHByb3RlY3RlZCB0cmFuc1VuaXRzOiBJVHJhbnNVbml0W107XHJcblxyXG4gICAgcHJvdGVjdGVkIF93YXJuaW5nczogc3RyaW5nW107XHJcblxyXG4gICAgcHJvdGVjdGVkIF9udW1iZXJPZlRyYW5zVW5pdHNXaXRoTWlzc2luZ0lkOiBudW1iZXI7XHJcblxyXG4gICAgcHJvdGVjdGVkIF9udW1iZXJPZlVudHJhbnNsYXRlZFRyYW5zVW5pdHM6IG51bWJlcjtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX251bWJlck9mUmV2aWV3ZWRUcmFuc1VuaXRzOiBudW1iZXI7XHJcblxyXG4gICAgcHJvdGVjdGVkIHRhcmdldFByYWVmaXg6IHN0cmluZztcclxuXHJcbiAgICBwcm90ZWN0ZWQgdGFyZ2V0U3VmZml4OiBzdHJpbmc7XHJcblxyXG4gICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMudHJhbnNVbml0cyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fd2FybmluZ3MgPSBbXTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlIGZpbGUgY29udGVudC5cclxuICAgICAqIFNldHMgX3BhcnNlZERvY3VtZW50LCBsaW5lIGVuZGluZywgZW5jb2RpbmcsIGV0Yy5cclxuICAgICAqIEBwYXJhbSB4bWxTdHJpbmcgeG1sU3RyaW5nXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBwYXRoXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgZW5jb2RpbmdcclxuICAgICAqIEBwYXJhbSBvcHRpb25hbE1hc3RlciBvcHRpb25hbE1hc3RlclxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgcGFyc2VDb250ZW50KFxyXG4gICAgICAgIHhtbFN0cmluZzogc3RyaW5nLFxyXG4gICAgICAgIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IHN0cmluZyxcclxuICAgICAgICBvcHRpb25hbE1hc3Rlcj86IHsgeG1sQ29udGVudDogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcgfSlcclxuICAgICAgICA6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2ZpbGVuYW1lID0gcGF0aDtcclxuICAgICAgICB0aGlzLl9lbmNvZGluZyA9IGVuY29kaW5nO1xyXG4gICAgICAgIHRoaXMuX3BhcnNlZERvY3VtZW50ID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh4bWxTdHJpbmcsICd0ZXh0L3htbCcpO1xyXG4gICAgICAgIHRoaXMuX2ZpbGVFbmRzV2l0aEVPTCA9IHhtbFN0cmluZy5lbmRzV2l0aCgnXFxuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgYWJzdHJhY3QgaTE4bkZvcm1hdCgpOiBzdHJpbmc7XHJcblxyXG4gICAgYWJzdHJhY3QgZmlsZVR5cGUoKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogcmV0dXJuIHRhZyBuYW1lcyBvZiBhbGwgZWxlbWVudHMgdGhhdCBoYXZlIG1peGVkIGNvbnRlbnQuXHJcbiAgICAgKiBUaGVzZSBlbGVtZW50cyB3aWxsIG5vdCBiZSBiZWF1dGlmaWVkLlxyXG4gICAgICogVHlwaWNhbCBjYW5kaWRhdGVzIGFyZSBzb3VyY2UgYW5kIHRhcmdldC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGVsZW1lbnRzV2l0aE1peGVkQ29udGVudCgpOiBzdHJpbmdbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlYWQgYWxsIHRyYW5zIHVuaXRzIGZyb20geG1sIGNvbnRlbnQuXHJcbiAgICAgKiBQdXRzIHRoZSBmb3VuZCB1bml0cyBpbnRvIHRyYW5zVW5pdHMuXHJcbiAgICAgKiBQdXRzIHdhcm5pbmdzIGZvciBtaXNzaW5nIGlkcy5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGluaXRpYWxpemVUcmFuc1VuaXRzKCk7XHJcblxyXG4gICAgcHJvdGVjdGVkIGxhenlJbml0aWFsaXplVHJhbnNVbml0cygpIHtcclxuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQodGhpcy50cmFuc1VuaXRzKSkge1xyXG4gICAgICAgICAgICB0aGlzLmluaXRpYWxpemVUcmFuc1VuaXRzKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY291bnROdW1iZXJzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogY291bnQgdW5pdHMgYWZ0ZXIgY2hhbmdlcyBvZiB0cmFucyB1bml0c1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY291bnROdW1iZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX251bWJlck9mVHJhbnNVbml0c1dpdGhNaXNzaW5nSWQgPSAwO1xyXG4gICAgICAgIHRoaXMuX251bWJlck9mVW50cmFuc2xhdGVkVHJhbnNVbml0cyA9IDA7XHJcbiAgICAgICAgdGhpcy5fbnVtYmVyT2ZSZXZpZXdlZFRyYW5zVW5pdHMgPSAwO1xyXG4gICAgICAgIHRoaXMuZm9yRWFjaFRyYW5zVW5pdCgodHU6IElUcmFuc1VuaXQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKHR1LmlkKSB8fCB0dS5pZCA9PT0gJycpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX251bWJlck9mVHJhbnNVbml0c1dpdGhNaXNzaW5nSWQrKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBzdGF0ZSA9IHR1LnRhcmdldFN0YXRlKCk7XHJcbiAgICAgICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZChzdGF0ZSkgfHwgc3RhdGUgPT09IFNUQVRFX05FVykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbnVtYmVyT2ZVbnRyYW5zbGF0ZWRUcmFuc1VuaXRzKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHN0YXRlID09PSBTVEFURV9UUkFOU0xBVEVEKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9udW1iZXJPZlJldmlld2VkVHJhbnNVbml0cysrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHdhcm5pbmdzKCk6IHN0cmluZ1tdIHtcclxuICAgICAgICB0aGlzLmxhenlJbml0aWFsaXplVHJhbnNVbml0cygpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl93YXJuaW5ncztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRvdGFsIG51bWJlciBvZiB0cmFuc2xhdGlvbiB1bml0cyBmb3VuZCBpbiB0aGUgZmlsZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIG51bWJlck9mVHJhbnNVbml0cygpOiBudW1iZXIge1xyXG4gICAgICAgIHRoaXMubGF6eUluaXRpYWxpemVUcmFuc1VuaXRzKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNVbml0cy5sZW5ndGg7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBOdW1iZXIgb2YgdHJhbnNsYXRpb24gdW5pdHMgd2l0aG91dCB0cmFuc2xhdGlvbiBmb3VuZCBpbiB0aGUgZmlsZS5cclxuICAgICAqIFRoZXNlIHVuaXRzIGhhdmUgc3RhdGUgJ3RyYW5zbGF0ZWQnLlxyXG4gICAgICovXHJcbiAgICBudW1iZXJPZlVudHJhbnNsYXRlZFRyYW5zVW5pdHMoKTogbnVtYmVyIHtcclxuICAgICAgICB0aGlzLmxhenlJbml0aWFsaXplVHJhbnNVbml0cygpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9udW1iZXJPZlVudHJhbnNsYXRlZFRyYW5zVW5pdHM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBOdW1iZXIgb2YgdHJhbnNsYXRpb24gdW5pdHMgd2l0aCBzdGF0ZSAnZmluYWwnLlxyXG4gICAgICovXHJcbiAgICBudW1iZXJPZlJldmlld2VkVHJhbnNVbml0cygpOiBudW1iZXIge1xyXG4gICAgICAgIHRoaXMubGF6eUluaXRpYWxpemVUcmFuc1VuaXRzKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX251bWJlck9mUmV2aWV3ZWRUcmFuc1VuaXRzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTnVtYmVyIG9mIHRyYW5zbGF0aW9uIHVuaXRzIHdpdGhvdXQgdHJhbnNsYXRpb24gZm91bmQgaW4gdGhlIGZpbGUuXHJcbiAgICAgKiBUaGVzZSB1bml0cyBoYXZlIHN0YXRlICd0cmFuc2xhdGVkJy5cclxuICAgICAqL1xyXG4gICAgcHVibGljIG51bWJlck9mVHJhbnNVbml0c1dpdGhNaXNzaW5nSWQoKTogbnVtYmVyIHtcclxuICAgICAgICB0aGlzLmxhenlJbml0aWFsaXplVHJhbnNVbml0cygpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9udW1iZXJPZlRyYW5zVW5pdHNXaXRoTWlzc2luZ0lkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IHNvdXJjZSBsYW5ndWFnZS5cclxuICAgICAqIEByZXR1cm4gc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBzb3VyY2VMYW5ndWFnZSgpOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGFyZ2V0IGxhbmd1YWdlLlxyXG4gICAgICogQHJldHVybiB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHRhcmdldExhbmd1YWdlKCk6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIExvb3Agb3ZlciBhbGwgVHJhbnNsYXRpb24gVW5pdHMuXHJcbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgY2FsbGJhY2tcclxuICAgICAqL1xyXG4gICAgcHVibGljIGZvckVhY2hUcmFuc1VuaXQoY2FsbGJhY2s6ICgodHJhbnN1bml0OiBJVHJhbnNVbml0KSA9PiB2b2lkKSkge1xyXG4gICAgICAgIHRoaXMubGF6eUluaXRpYWxpemVUcmFuc1VuaXRzKCk7XHJcbiAgICAgICAgdGhpcy50cmFuc1VuaXRzLmZvckVhY2goKHR1KSA9PiBjYWxsYmFjayh0dSkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IHRyYW5zLXVuaXQgd2l0aCBnaXZlbiBpZC5cclxuICAgICAqIEBwYXJhbSBpZCBpZFxyXG4gICAgICogQHJldHVybiB0cmFucy11bml0IHdpdGggZ2l2ZW4gaWQuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0cmFuc1VuaXRXaXRoSWQoaWQ6IHN0cmluZyk6IElUcmFuc1VuaXQge1xyXG4gICAgICAgIHRoaXMubGF6eUluaXRpYWxpemVUcmFuc1VuaXRzKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNVbml0cy5maW5kKCh0dSkgPT4gdHUuaWQgPT09IGlkKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEVkaXQgZnVuY3Rpb25zIGZvbGxvd2luZyBoZXJcclxuICAgICAqL1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogRWRpdCB0aGUgc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICogQHBhcmFtIGxhbmd1YWdlIGxhbmd1YWdlXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHNldFNvdXJjZUxhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogRWRpdCB0aGUgdGFyZ2V0IGxhbmd1YWdlLlxyXG4gICAgICogQHBhcmFtIGxhbmd1YWdlIGxhbmd1YWdlXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHNldFRhcmdldExhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0IHRoZSBwcmFlZml4IHVzZWQgd2hlbiBjb3B5aW5nIHNvdXJjZSB0byB0YXJnZXQuXHJcbiAgICAgKiBUaGlzIGlzIHVzZWQgYnkgaW1wb3J0TmV3VHJhbnNVbml0IGFuZCBjcmVhdGVUcmFuc2xhdGlvbkZpbGVGb3JMYW5nIG1ldGhvZHMuXHJcbiAgICAgKiAoc2luY2UgMS44LjApXHJcbiAgICAgKiBAcGFyYW0gdGFyZ2V0UHJhZWZpeCB0YXJnZXRQcmFlZml4XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXROZXdUcmFuc1VuaXRUYXJnZXRQcmFlZml4KHRhcmdldFByYWVmaXg6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMudGFyZ2V0UHJhZWZpeCA9IHRhcmdldFByYWVmaXg7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGhlIHByYWVmaXggdXNlZCB3aGVuIGNvcHlpbmcgc291cmNlIHRvIHRhcmdldC5cclxuICAgICAqIChzaW5jZSAxLjguMClcclxuICAgICAqIEByZXR1cm4gdGhlIHByYWVmaXggdXNlZCB3aGVuIGNvcHlpbmcgc291cmNlIHRvIHRhcmdldC5cclxuICAgICAqL1xyXG4gICAgZ2V0TmV3VHJhbnNVbml0VGFyZ2V0UHJhZWZpeCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBpc051bGxPclVuZGVmaW5lZCh0aGlzLnRhcmdldFByYWVmaXgpID8gJycgOiB0aGlzLnRhcmdldFByYWVmaXg7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgdGhlIHN1ZmZpeCB1c2VkIHdoZW4gY29weWluZyBzb3VyY2UgdG8gdGFyZ2V0LlxyXG4gICAgICogVGhpcyBpcyB1c2VkIGJ5IGltcG9ydE5ld1RyYW5zVW5pdCBhbmQgY3JlYXRlVHJhbnNsYXRpb25GaWxlRm9yTGFuZyBtZXRob2RzLlxyXG4gICAgICogKHNpbmNlIDEuOC4wKVxyXG4gICAgICogQHBhcmFtIHRhcmdldFN1ZmZpeCB0YXJnZXRTdWZmaXhcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldE5ld1RyYW5zVW5pdFRhcmdldFN1ZmZpeCh0YXJnZXRTdWZmaXg6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMudGFyZ2V0U3VmZml4ID0gdGFyZ2V0U3VmZml4O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IHRoZSBzdWZmaXggdXNlZCB3aGVuIGNvcHlpbmcgc291cmNlIHRvIHRhcmdldC5cclxuICAgICAqIChzaW5jZSAxLjguMClcclxuICAgICAqIEByZXR1cm4gdGhlIHN1ZmZpeCB1c2VkIHdoZW4gY29weWluZyBzb3VyY2UgdG8gdGFyZ2V0LlxyXG4gICAgICovXHJcbiAgICBnZXROZXdUcmFuc1VuaXRUYXJnZXRTdWZmaXgoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gaXNOdWxsT3JVbmRlZmluZWQodGhpcy50YXJnZXRTdWZmaXgpID8gJycgOiB0aGlzLnRhcmdldFN1ZmZpeDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFkZCBhIG5ldyB0cmFucy11bml0IHRvIHRoaXMgZmlsZS5cclxuICAgICAqIFRoZSB0cmFucyB1bml0IHN0ZW1zIGZyb20gYW5vdGhlciBmaWxlLlxyXG4gICAgICogSXQgY29waWVzIHRoZSBzb3VyY2UgY29udGVudCBvZiB0aGUgdHUgdG8gdGhlIHRhcmdldCBjb250ZW50IHRvbyxcclxuICAgICAqIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIG9mIGlzRGVmYXVsdExhbmcgYW5kIGNvcHlDb250ZW50LlxyXG4gICAgICogU28gdGhlIHNvdXJjZSBjYW4gYmUgdXNlZCBhcyBhIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogKHVzZWQgYnkgeGxpZmZtZXJnZSlcclxuICAgICAqIEBwYXJhbSBmb3JlaWduVHJhbnNVbml0IHRoZSB0cmFucyB1bml0IHRvIGJlIGltcG9ydGVkLlxyXG4gICAgICogQHBhcmFtIGlzRGVmYXVsdExhbmcgRmxhZywgd2V0aGVyIGZpbGUgY29udGFpbnMgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBUaGVuIHNvdXJjZSBhbmQgdGFyZ2V0IGFyZSBqdXN0IGVxdWFsLlxyXG4gICAgICogVGhlIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQuXHJcbiAgICAgKiBTdGF0ZSB3aWxsIGJlIGZpbmFsLlxyXG4gICAgICogQHBhcmFtIGNvcHlDb250ZW50IEZsYWcsIHdldGhlciB0byBjb3B5IGNvbnRlbnQgb3IgbGVhdmUgaXQgZW1wdHkuXHJcbiAgICAgKiBXYmVuIHRydWUsIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQgZnJvbSBzb3VyY2UuXHJcbiAgICAgKiBXaGVuIGZhbHNlLCBjb250ZW50IHdpbGwgYmUgbGVmdCBlbXB0eSAoaWYgaXQgaXMgbm90IHRoZSBkZWZhdWx0IGxhbmd1YWdlKS5cclxuICAgICAqIEBwYXJhbSBpbXBvcnRBZnRlckVsZW1lbnQgb3B0aW9uYWwgKHNpbmNlIDEuMTApIG90aGVyIHRyYW5zdW5pdCAocGFydCBvZiB0aGlzIGZpbGUpLCB0aGF0IHNob3VsZCBiZSB1c2VkIGFzIGFuY2VzdG9yLlxyXG4gICAgICogTmV3bHkgaW1wb3J0ZWQgdHJhbnMgdW5pdCBpcyB0aGVuIGluc2VydGVkIGRpcmVjdGx5IGFmdGVyIHRoaXMgZWxlbWVudC5cclxuICAgICAqIElmIG5vdCBzZXQgb3Igbm90IHBhcnQgb2YgdGhpcyBmaWxlLCBuZXcgdW5pdCB3aWxsIGJlIGltcG9ydGVkIGF0IHRoZSBlbmQuXHJcbiAgICAgKiBJZiBleHBsaWNpdHkgc2V0IHRvIG51bGwsIG5ldyB1bml0IHdpbGwgYmUgaW1wb3J0ZWQgYXQgdGhlIHN0YXJ0LlxyXG4gICAgICogQHJldHVybiB0aGUgbmV3bHkgaW1wb3J0ZWQgdHJhbnMgdW5pdCAoc2luY2UgdmVyc2lvbiAxLjcuMClcclxuICAgICAqIEB0aHJvd3MgYW4gZXJyb3IgaWYgdHJhbnMtdW5pdCB3aXRoIHNhbWUgaWQgYWxyZWFkeSBpcyBpbiB0aGUgZmlsZS5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgaW1wb3J0TmV3VHJhbnNVbml0KGZvcmVpZ25UcmFuc1VuaXQ6IElUcmFuc1VuaXQsIGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuLCBpbXBvcnRBZnRlckVsZW1lbnQ/OiBJVHJhbnNVbml0KVxyXG4gICAgICAgIDogSVRyYW5zVW5pdDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSB0aGUgdHJhbnMtdW5pdCB3aXRoIHRoZSBnaXZlbiBpZC5cclxuICAgICAqIEBwYXJhbSBpZCBpZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcmVtb3ZlVHJhbnNVbml0V2l0aElkKGlkOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB0dU5vZGU6IE5vZGUgPSB0aGlzLl9wYXJzZWREb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XHJcbiAgICAgICAgaWYgKHR1Tm9kZSkge1xyXG4gICAgICAgICAgICB0dU5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0dU5vZGUpO1xyXG4gICAgICAgICAgICB0aGlzLmxhenlJbml0aWFsaXplVHJhbnNVbml0cygpO1xyXG4gICAgICAgICAgICB0aGlzLnRyYW5zVW5pdHMgPSB0aGlzLnRyYW5zVW5pdHMuZmlsdGVyKCh0dSkgPT4gdHUuaWQgIT09IGlkKTtcclxuICAgICAgICAgICAgdGhpcy5jb3VudE51bWJlcnMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZmlsZW5hbWUgd2hlcmUgdGhlIGRhdGEgaXMgcmVhZCBmcm9tLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZmlsZW5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZmlsZW5hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZW5jb2RpbmcgaWYgdGhlIHhtbCBjb250ZW50IChVVEYtOCwgSVNPLTg4NTktMSwgLi4uKVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZW5jb2RpbmcoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZW5jb2Rpbmc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgeG1sIGNvbnRlbnQgdG8gYmUgc2F2ZWQgYWZ0ZXIgY2hhbmdlcyBhcmUgbWFkZS5cclxuICAgICAqIEBwYXJhbSBiZWF1dGlmeU91dHB1dCBGbGFnIHdoZXRoZXIgdG8gdXNlIHByZXR0eS1kYXRhIHRvIGZvcm1hdCB0aGUgb3V0cHV0LlxyXG4gICAgICogWE1MU2VyaWFsaXplciBwcm9kdWNlcyBzb21lIGNvcnJlY3QgYnV0IHN0cmFuZ2VseSBmb3JtYXR0ZWQgb3V0cHV0LCB3aGljaCBwcmV0dHktZGF0YSBjYW4gY29ycmVjdC5cclxuICAgICAqIFNlZSBpc3N1ZSAjNjQgZm9yIGRldGFpbHMuXHJcbiAgICAgKiBEZWZhdWx0IGlzIGZhbHNlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZWRpdGVkQ29udGVudChiZWF1dGlmeU91dHB1dD86IGJvb2xlYW4pOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbnM6IFhtbFNlcmlhbGl6ZXJPcHRpb25zID0ge307XHJcbiAgICAgICAgaWYgKGJlYXV0aWZ5T3V0cHV0ID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgb3B0aW9ucy5iZWF1dGlmeSA9IHRydWU7XHJcbiAgICAgICAgICAgb3B0aW9ucy5pbmRlbnRTdHJpbmcgPSAnICAnO1xyXG4gICAgICAgICAgIG9wdGlvbnMubWl4ZWRDb250ZW50RWxlbWVudHMgPSB0aGlzLmVsZW1lbnRzV2l0aE1peGVkQ29udGVudCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgWG1sU2VyaWFsaXplcigpLnNlcmlhbGl6ZVRvU3RyaW5nKHRoaXMuX3BhcnNlZERvY3VtZW50LCBvcHRpb25zKTtcclxuICAgICAgICBpZiAodGhpcy5fZmlsZUVuZHNXaXRoRU9MKSB7XHJcbiAgICAgICAgICAgIC8vIGFkZCBlb2wgaWYgdGhlcmUgd2FzIGVvbCBpbiBvcmlnaW5hbCBzb3VyY2VcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICdcXG4nO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgbmV3IHRyYW5zbGF0aW9uIGZpbGUgZm9yIHRoaXMgZmlsZSBmb3IgYSBnaXZlbiBsYW5ndWFnZS5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGp1c3QgYSBjb3B5IG9mIHRoZSBvcmlnaW5hbCBvbmUuXHJcbiAgICAgKiBCdXQgZm9yIFhNQiB0aGUgdHJhbnNsYXRpb24gZmlsZSBoYXMgZm9ybWF0ICdYVEInLlxyXG4gICAgICogQHBhcmFtIGxhbmcgTGFuZ3VhZ2UgY29kZVxyXG4gICAgICogQHBhcmFtIGZpbGVuYW1lIGV4cGVjdGVkIGZpbGVuYW1lIHRvIHN0b3JlIGZpbGVcclxuICAgICAqIEBwYXJhbSBpc0RlZmF1bHRMYW5nIEZsYWcsIHdldGhlciBmaWxlIGNvbnRhaW5zIHRoZSBkZWZhdWx0IGxhbmd1YWdlLlxyXG4gICAgICogVGhlbiBzb3VyY2UgYW5kIHRhcmdldCBhcmUganVzdCBlcXVhbC5cclxuICAgICAqIFRoZSBjb250ZW50IHdpbGwgYmUgY29waWVkLlxyXG4gICAgICogU3RhdGUgd2lsbCBiZSBmaW5hbC5cclxuICAgICAqIEBwYXJhbSBjb3B5Q29udGVudCBGbGFnLCB3ZXRoZXIgdG8gY29weSBjb250ZW50IG9yIGxlYXZlIGl0IGVtcHR5LlxyXG4gICAgICogV2JlbiB0cnVlLCBjb250ZW50IHdpbGwgYmUgY29waWVkIGZyb20gc291cmNlLlxyXG4gICAgICogV2hlbiBmYWxzZSwgY29udGVudCB3aWxsIGJlIGxlZnQgZW1wdHkgKGlmIGl0IGlzIG5vdCB0aGUgZGVmYXVsdCBsYW5ndWFnZSkuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IGNyZWF0ZVRyYW5zbGF0aW9uRmlsZUZvckxhbmcobGFuZzogc3RyaW5nLCBmaWxlbmFtZTogc3RyaW5nLCBpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbilcclxuICAgICAgICA6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZTtcclxufVxyXG4iLCJpbXBvcnQge1NUQVRFX1RSQU5TTEFURUQsIElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSwgSU5vcm1hbGl6ZWRNZXNzYWdlLCBJVHJhbnNVbml0LCBJTm90ZX0gZnJvbSAnLi9pbnRlcm5hbGFwaSc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZX0gZnJvbSAnLi9hYnN0cmFjdC10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuaW1wb3J0IHtpc051bGxPclVuZGVmaW5lZCwgaXNTdHJpbmd9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2V9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UnO1xyXG5pbXBvcnQge0Fic3RyYWN0TWVzc2FnZVBhcnNlcn0gZnJvbSAnLi9hYnN0cmFjdC1tZXNzYWdlLXBhcnNlcic7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IHJvb2JtIG9uIDEwLjA1LjIwMTcuXHJcbiAqIEFic3RyYWN0IHN1cGVyY2xhc3MgZm9yIGFsbCBpbXBsZW1lbnRhdGlvbnMgb2YgSVRyYW5zVW5pdC5cclxuICovXHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RUcmFuc1VuaXQgaW1wbGVtZW50cyBJVHJhbnNVbml0IHtcclxuXHJcbiAgICBwcml2YXRlIF9zb3VyY2VDb250ZW50Tm9ybWFsaXplZDogUGFyc2VkTWVzc2FnZTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IocHJvdGVjdGVkIF9lbGVtZW50OiBFbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByb3RlY3RlZCBfaWQ6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgX3RyYW5zbGF0aW9uTWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpIHtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGlkKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGZpbGUgdGhlIHVuaXQgYmVsb25ncyB0by4sXHJcbiAgICAgKi9cclxuICAgIHRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKCk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYW5zbGF0aW9uTWVzc2FnZXNGaWxlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG9yaWdpbmFsIHRleHQgdmFsdWUsIHRoYXQgaXMgdG8gYmUgdHJhbnNsYXRlZC5cclxuICAgICAqIENvbnRhaW5zIGFsbCBtYXJrdXAsIGRlcGVuZHMgb24gdGhlIGNvbmNyZXRlIGZvcm1hdCB1c2VkLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBzb3VyY2VDb250ZW50KCk6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBzZXR0aW5nIG9mIHNvdXJjZSBjb250ZW50IGlzIHN1cHBvcnRlZC5cclxuICAgICAqIElmIG5vdCwgc2V0U291cmNlQ29udGVudCBpbiB0cmFucy11bml0IHdpbGwgZG8gbm90aGluZy5cclxuICAgICAqIHh0YiBkb2VzIG5vdCBzdXBwb3J0IHRoaXMsIGFsbCBvdGhlciBmb3JtYXRzIGRvLlxyXG4gICAgICovXHJcbiAgICBzdXBwb3J0c1NldFNvdXJjZUNvbnRlbnQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgbmV3IHNvdXJjZSBjb250ZW50IGluIHRoZSB0cmFuc3VuaXQuXHJcbiAgICAgKiBOb3JtYWxseSwgdGhpcyBpcyBkb25lIGJ5IG5nLWV4dHJhY3QuXHJcbiAgICAgKiBNZXRob2Qgb25seSBleGlzdHMgdG8gYWxsb3cgeGxpZmZtZXJnZSB0byBtZXJnZSBtaXNzaW5nIGNoYW5nZWQgc291cmNlIGNvbnRlbnQuXHJcbiAgICAgKiBAcGFyYW0gbmV3Q29udGVudCB0aGUgbmV3IGNvbnRlbnQuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHNldFNvdXJjZUNvbnRlbnQobmV3Q29udGVudDogc3RyaW5nKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBvcmlnaW5hbCB0ZXh0IHZhbHVlLCB0aGF0IGlzIHRvIGJlIHRyYW5zbGF0ZWQsIGFzIG5vcm1hbGl6ZWQgbWVzc2FnZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNvdXJjZUNvbnRlbnROb3JtYWxpemVkKCk6IFBhcnNlZE1lc3NhZ2Uge1xyXG4gICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZCh0aGlzLl9zb3VyY2VDb250ZW50Tm9ybWFsaXplZCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fc291cmNlQ29udGVudE5vcm1hbGl6ZWQgPSB0aGlzLmNyZWF0ZVNvdXJjZUNvbnRlbnROb3JtYWxpemVkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9zb3VyY2VDb250ZW50Tm9ybWFsaXplZDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBvcmlnaW5hbCB0ZXh0IHZhbHVlLCB0aGF0IGlzIHRvIGJlIHRyYW5zbGF0ZWQsIGFzIG5vcm1hbGl6ZWQgbWVzc2FnZS5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgY3JlYXRlU291cmNlQ29udGVudE5vcm1hbGl6ZWQoKTogUGFyc2VkTWVzc2FnZTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSB0cmFuc2xhdGVkIHZhbHVlLlxyXG4gICAgICogQ29udGFpbnMgYWxsIG1hcmt1cCwgZGVwZW5kcyBvbiB0aGUgY29uY3JldGUgZm9ybWF0IHVzZWQuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHRhcmdldENvbnRlbnQoKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHRyYW5zbGF0ZWQgdmFsdWUgYXMgbm9ybWFsaXplZCBtZXNzYWdlLlxyXG4gICAgICogQWxsIHBsYWNlaG9sZGVycyBhcmUgcmVwbGFjZWQgd2l0aCB7e259fSAoc3RhcnRpbmcgYXQgMClcclxuICAgICAqIGFuZCBhbGwgZW1iZWRkZWQgaHRtbCBpcyByZXBsYWNlZCBieSBkaXJlY3QgaHRtbCBtYXJrdXAuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHRhcmdldENvbnRlbnROb3JtYWxpemVkKCk6IElOb3JtYWxpemVkTWVzc2FnZTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0YXRlIG9mIHRoZSB0cmFuc2xhdGlvbiBhcyBzdG9yZWQgaW4gdGhlIHhtbC5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgbmF0aXZlVGFyZ2V0U3RhdGUoKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RhdGUgb2YgdGhlIHRyYW5zbGF0aW9uLlxyXG4gICAgICogKG9uIG9mIG5ldywgdHJhbnNsYXRlZCwgZmluYWwpXHJcbiAgICAgKiBSZXR1cm4gdmFsdWVzIGFyZSBkZWZpbmVkIGFzIENvbnN0YW50cyBTVEFURV8uLi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHRhcmdldFN0YXRlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgbmF0aXZlU3RhdGUgPSB0aGlzLm5hdGl2ZVRhcmdldFN0YXRlKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwTmF0aXZlU3RhdGVUb1N0YXRlKG5hdGl2ZVN0YXRlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE1hcCBhbiBhYnN0cmFjdCBzdGF0ZSAobmV3LCB0cmFuc2xhdGVkLCBmaW5hbCkgdG8gYSBjb25jcmV0ZSBzdGF0ZSB1c2VkIGluIHRoZSB4bWwuXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBzdGF0ZSB0byBiZSB1c2VkIGluIHRoZSB4bWwuXHJcbiAgICAgKiBAcGFyYW0gc3RhdGUgb25lIG9mIENvbnN0YW50cy5TVEFURS4uLlxyXG4gICAgICogQHJldHVybnMgYSBuYXRpdmUgc3RhdGUgKGRlcGVuZHMgb24gY29uY3JldGUgZm9ybWF0KVxyXG4gICAgICogQHRocm93cyBlcnJvciwgaWYgc3RhdGUgaXMgaW52YWxpZC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IG1hcFN0YXRlVG9OYXRpdmVTdGF0ZShzdGF0ZTogc3RyaW5nKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogTWFwIGEgbmF0aXZlIHN0YXRlIChmb3VuZCBpbiB0aGUgZG9jdW1lbnQpIHRvIGFuIGFic3RyYWN0IHN0YXRlIChuZXcsIHRyYW5zbGF0ZWQsIGZpbmFsKS5cclxuICAgICAqIFJldHVybnMgdGhlIGFic3RyYWN0IHN0YXRlLlxyXG4gICAgICogQHBhcmFtIG5hdGl2ZVN0YXRlIG5hdGl2ZVN0YXRlXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBtYXBOYXRpdmVTdGF0ZVRvU3RhdGUobmF0aXZlU3RhdGU6IHN0cmluZyk6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIHNldCBzdGF0ZSBpbiB4bWwuXHJcbiAgICAgKiBAcGFyYW0gbmF0aXZlU3RhdGUgbmF0aXZlU3RhdGVcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IHNldE5hdGl2ZVRhcmdldFN0YXRlKG5hdGl2ZVN0YXRlOiBzdHJpbmcpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogTW9kaWZ5IHRoZSB0YXJnZXQgc3RhdGUuXHJcbiAgICAgKiBAcGFyYW0gbmV3U3RhdGUgb25lIG9mIHRoZSAzIGFsbG93ZWQgdGFyZ2V0IHN0YXRlcyBuZXcsIHRyYW5zbGF0ZWQsIGZpbmFsLlxyXG4gICAgICogQ29uc3RhbnRzIFNUQVRFXy4uLlxyXG4gICAgICogSW52YWxpZCBzdGF0ZXMgdGhyb3cgYW4gZXJyb3IuXHJcbiAgICAgKi9cclxuICAgIHNldFRhcmdldFN0YXRlKG5ld1N0YXRlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLnNldE5hdGl2ZVRhcmdldFN0YXRlKHRoaXMubWFwU3RhdGVUb05hdGl2ZVN0YXRlKG5ld1N0YXRlKSk7XHJcbiAgICAgICAgaWYgKHRoaXMudHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUoKSBpbnN0YW5jZW9mIEFic3RyYWN0VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpIHtcclxuICAgICAgICAgICAgKDxBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlPiB0aGlzLnRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKCkpLmNvdW50TnVtYmVycygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFsbCB0aGUgc291cmNlIGVsZW1lbnRzIGluIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICogVGhlIHNvdXJjZSBlbGVtZW50IGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaW5hbCB0ZW1wbGF0ZS5cclxuICAgICAqIEl0IGNvbnRhaW5zIHRoZSBuYW1lIG9mIHRoZSB0ZW1wbGF0ZSBmaWxlIGFuZCBhIGxpbmUgbnVtYmVyIHdpdGggdGhlIHBvc2l0aW9uIGluc2lkZSB0aGUgdGVtcGxhdGUuXHJcbiAgICAgKiBJdCBpcyBqdXN0IGEgaGVscCBmb3IgdHJhbnNsYXRvcnMgdG8gZmluZCB0aGUgY29udGV4dCBmb3IgdGhlIHRyYW5zbGF0aW9uLlxyXG4gICAgICogVGhpcyBpcyBzZXQgd2hlbiB1c2luZyBBbmd1bGFyIDQuMCBvciBncmVhdGVyLlxyXG4gICAgICogT3RoZXJ3aXNlIGl0IGp1c3QgcmV0dXJucyBhbiBlbXB0eSBhcnJheS5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3Qgc291cmNlUmVmZXJlbmNlcygpOiB7c291cmNlZmlsZTogc3RyaW5nLCBsaW5lbnVtYmVyOiBudW1iZXJ9W107XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgc2V0dGluZyBvZiBzb3VyY2UgcmVmcyBpcyBzdXBwb3J0ZWQuXHJcbiAgICAgKiBJZiBub3QsIHNldFNvdXJjZVJlZmVyZW5jZXMgd2lsbCBkbyBub3RoaW5nLlxyXG4gICAgICogeHRiIGRvZXMgbm90IHN1cHBvcnQgdGhpcywgYWxsIG90aGVyIGZvcm1hdHMgZG8uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdXBwb3J0c1NldFNvdXJjZVJlZmVyZW5jZXMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgc291cmNlIHJlZiBlbGVtZW50cyBpbiB0aGUgdHJhbnN1bml0LlxyXG4gICAgICogTm9ybWFsbHksIHRoaXMgaXMgZG9uZSBieSBuZy1leHRyYWN0LlxyXG4gICAgICogTWV0aG9kIG9ubHkgZXhpc3RzIHRvIGFsbG93IHhsaWZmbWVyZ2UgdG8gbWVyZ2UgbWlzc2luZyBzb3VyY2UgcmVmcy5cclxuICAgICAqIEBwYXJhbSBzb3VyY2VSZWZzIHRoZSBzb3VyY2VyZWZzIHRvIHNldC4gT2xkIG9uZXMgYXJlIHJlbW92ZWQuXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHNldFNvdXJjZVJlZmVyZW5jZXMoc291cmNlUmVmczoge3NvdXJjZWZpbGU6IHN0cmluZywgbGluZW51bWJlcjogbnVtYmVyfVtdKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBkZXNjcmlwdGlvbiBzZXQgaW4gdGhlIHRlbXBsYXRlIGFzIHZhbHVlIG9mIHRoZSBpMThuLWF0dHJpYnV0ZS5cclxuICAgICAqIGUuZy4gaTE4bj1cIm15ZGVzY3JpcHRpb25cIi5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3QgZGVzY3JpcHRpb24oKTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1lYW5pbmcgKGludGVudCkgc2V0IGluIHRoZSB0ZW1wbGF0ZSBhcyB2YWx1ZSBvZiB0aGUgaTE4bi1hdHRyaWJ1dGUuXHJcbiAgICAgKiBUaGlzIGlzIHRoZSBwYXJ0IGluIGZyb250IG9mIHRoZSB8IHN5bWJvbC5cclxuICAgICAqIGUuZy4gaTE4bj1cIm1lYW5pbmd8bXlkZXNjcmlwdGlvblwiLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBtZWFuaW5nKCk6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBzZXR0aW5nIG9mIGRlc2NyaXB0aW9uIGFuZCBtZWFuaW5nIGlzIHN1cHBvcnRlZC5cclxuICAgICAqIElmIG5vdCwgc2V0RGVzY3JpcHRpb24gYW5kIHNldE1lYW5pbmcgd2lsbCBkbyBub3RoaW5nLlxyXG4gICAgICogeHRiIGRvZXMgbm90IHN1cHBvcnQgdGhpcywgYWxsIG90aGVyIGZvcm1hdHMgZG8uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdXBwb3J0c1NldERlc2NyaXB0aW9uQW5kTWVhbmluZygpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoYW5nZSBkZXNjcmlwdGlvbiBwcm9wZXJ0eSBvZiB0cmFucy11bml0LlxyXG4gICAgICogQHBhcmFtIGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHNldERlc2NyaXB0aW9uKGRlc2NyaXB0aW9uOiBzdHJpbmcpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlIG1lYW5pbmcgcHJvcGVydHkgb2YgdHJhbnMtdW5pdC5cclxuICAgICAqIEBwYXJhbSBtZWFuaW5nIG1lYW5pbmdcclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3Qgc2V0TWVhbmluZyhtZWFuaW5nOiBzdHJpbmcpO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGFsbCBub3RlcyBvZiB0aGUgdHJhbnMtdW5pdC5cclxuICAgICAqIE5vdGVzIGFyZSByZW1hcmtzIG1hZGUgYnkgYSB0cmFuc2xhdG9yLlxyXG4gICAgICogKGRlc2NyaXB0aW9uIGFuZCBtZWFuaW5nIGFyZSBub3QgaW5jbHVkZWQgaGVyZSEpXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IG5vdGVzKCk6IElOb3RlW107XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgc2V0dGluZyBvZiBub3RlcyBpcyBzdXBwb3J0ZWQuXHJcbiAgICAgKiBJZiBub3QsIHNldE5vdGVzIHdpbGwgZG8gbm90aGluZy5cclxuICAgICAqIHh0YiBkb2VzIG5vdCBzdXBwb3J0IHRoaXMsIGFsbCBvdGhlciBmb3JtYXRzIGRvLlxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBzdXBwb3J0c1NldE5vdGVzKCk6IGJvb2xlYW47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGQgbm90ZXMgdG8gdHJhbnMgdW5pdC5cclxuICAgICAqIEBwYXJhbSBuZXdOb3RlcyB0aGUgbm90ZXMgdG8gYWRkLlxyXG4gICAgICogQHRocm93cyBhbiBFcnJvciBpZiBhbnkgbm90ZSBjb250YWlucyBkZXNjcHJpcHRpb24gb3IgbWVhbmluZyBhcyBmcm9tIGF0dHJpYnV0ZS5cclxuICAgICAqL1xyXG4gICAgYWJzdHJhY3Qgc2V0Tm90ZXMobmV3Tm90ZXM6IElOb3RlW10pO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2sgbm90ZXNcclxuICAgICAqIEBwYXJhbSBuZXdOb3RlcyB0aGUgbm90ZXMgdG8gYWRkLlxyXG4gICAgICogQHRocm93cyBhbiBFcnJvciBpZiBhbnkgbm90ZSBjb250YWlucyBkZXNjcmlwdGlvbiBvciBtZWFuaW5nIGFzIGZyb20gYXR0cmlidXRlLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY2hlY2tOb3RlcyhuZXdOb3RlczogSU5vdGVbXSkge1xyXG4gICAgICAgIC8vIGNoZWNrIGZyb20gdmFsdWVzXHJcbiAgICAgICAgY29uc3QgZXJyb3JJbkZyb21Ob3RlID0gbmV3Tm90ZXMuZmluZCgobm90ZSkgPT4gbm90ZS5mcm9tID09PSAnZGVzY3JpcHRpb24nIHx8IG5vdGUuZnJvbSA9PT0gJ21lYW5pbmcnKTtcclxuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKGVycm9ySW5Gcm9tTm90ZSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdkZXNjcmlwdGlvbiBvciBtZWFuaW5nIGFyZSBub3QgYWxsb3dlZCBhcyBmcm9tIGF0dHRyaWJ1dGUnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgcmVhbCB4bWwgZWxlbWVudCB1c2VkIGZvciB0aGUgdHJhbnMgdW5pdC5cclxuICAgICAqIChpbnRlcm5hbCB1c2FnZSBvbmx5LCBhIGNsaWVudCBzaG91bGQgbmV2ZXIgbmVlZCB0aGlzKVxyXG4gICAgICogQHJldHVybiByZWFsIHhtbCBlbGVtZW50IHVzZWQgZm9yIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgYXNYbWxFbGVtZW50KCk6IEVsZW1lbnQge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29weSBzb3VyY2UgdG8gdGFyZ2V0IHRvIHVzZSBpdCBhcyBkdW1teSB0cmFuc2xhdGlvbi5cclxuICAgICAqIFJldHVybnMgYSBjaGFuZ2VkIGNvcHkgb2YgdGhpcyB0cmFucyB1bml0LlxyXG4gICAgICogcmVjZWl2ZXIgaXMgbm90IGNoYW5nZWQuXHJcbiAgICAgKiAoaW50ZXJuYWwgdXNhZ2Ugb25seSwgYSBjbGllbnQgc2hvdWxkIGNhbGwgaW1wb3J0TmV3VHJhbnNVbml0IG9uIElUcmFuc2xhdGlvbk1lc3NhZ2VGaWxlKVxyXG4gICAgICovXHJcbiAgICBhYnN0cmFjdCBjbG9uZVdpdGhTb3VyY2VBc1RhcmdldChpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbiwgdGFyZ2V0RmlsZTogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKTogQWJzdHJhY3RUcmFuc1VuaXQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3B5IHNvdXJjZSB0byB0YXJnZXQgdG8gdXNlIGl0IGFzIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogKGludGVybmFsIHVzYWdlIG9ubHksIGEgY2xpZW50IHNob3VsZCBjYWxsIGNyZWF0ZVRyYW5zbGF0aW9uRmlsZUZvckxhbmcgb24gSVRyYW5zbGF0aW9uTWVzc2FnZUZpbGUpXHJcbiAgICAgKi9cclxuICAgIGFic3RyYWN0IHVzZVNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zbGF0ZSB0aGUgdHJhbnMgdW5pdC5cclxuICAgICAqIEBwYXJhbSB0cmFuc2xhdGlvbiB0aGUgdHJhbnNsYXRlZCBzdHJpbmcgb3IgKHByZWZlcnJlZCkgYSBub3JtYWxpemVkIG1lc3NhZ2UuXHJcbiAgICAgKiBUaGUgcHVyZSBzdHJpbmcgY2FuIGNvbnRhaW4gYW55IG1hcmt1cCBhbmQgd2lsbCBub3QgYmUgY2hlY2tlZC5cclxuICAgICAqIFNvIGl0IGNhbiBkYW1hZ2UgdGhlIGRvY3VtZW50LlxyXG4gICAgICogQSBub3JtYWxpemVkIG1lc3NhZ2UgcHJldmVudHMgdGhpcy5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHRyYW5zbGF0ZSh0cmFuc2xhdGlvbjogc3RyaW5nIHwgSU5vcm1hbGl6ZWRNZXNzYWdlKSB7XHJcbiAgICAgICAgbGV0IHRyYW5zbGF0aW9uTmF0aXZlOiBzdHJpbmc7XHJcbiAgICAgICAgaWYgKGlzU3RyaW5nKHRyYW5zbGF0aW9uKSkge1xyXG4gICAgICAgICAgICB0cmFuc2xhdGlvbk5hdGl2ZSA9IDxzdHJpbmc+IHRyYW5zbGF0aW9uO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uTmF0aXZlID0gKDxJTm9ybWFsaXplZE1lc3NhZ2U+IHRyYW5zbGF0aW9uKS5hc05hdGl2ZVN0cmluZygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnRyYW5zbGF0ZU5hdGl2ZSh0cmFuc2xhdGlvbk5hdGl2ZSk7XHJcbiAgICAgICAgdGhpcy5zZXRUYXJnZXRTdGF0ZShTVEFURV9UUkFOU0xBVEVEKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiBhIHBhcnNlciB1c2VkIGZvciBub3JtYWxpemVkIG1lc3NhZ2VzLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgbWVzc2FnZVBhcnNlcigpOiBBYnN0cmFjdE1lc3NhZ2VQYXJzZXI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgbWVzc2FnZSBsb29rcyBsaWtlIElDVSBtZXNzYWdlLlxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgbWVzc2FnZVxyXG4gICAgICogQHJldHVybiB3ZXRoZXIgbWVzc2FnZSBsb29rcyBsaWtlIElDVSBtZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaXNJQ1VNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1lc3NhZ2VQYXJzZXIoKS5pc0lDVU1lc3NhZ2VTdGFydChtZXNzYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCB0aGUgdHJhbnNsYXRpb24gdG8gYSBnaXZlbiBzdHJpbmcgKGluY2x1ZGluZyBtYXJrdXApLlxyXG4gICAgICogQHBhcmFtIHRyYW5zbGF0aW9uIHRyYW5zbGF0aW9uXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBhYnN0cmFjdCB0cmFuc2xhdGVOYXRpdmUodHJhbnNsYXRpb246IHN0cmluZyk7XHJcbn1cclxuIiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgcGFydCBvZiBhIHBhcnNlZCBtZXNzYWdlLlxyXG4gKiBDYW4gYmUgYSB0ZXh0LCBhIHBsYWNlaG9sZGVyLCBhIHRhZ1xyXG4gKi9cclxuXHJcbmV4cG9ydCBlbnVtIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZSB7XHJcbiAgICBURVhULFxyXG4gICAgUExBQ0VIT0xERVIsXHJcbiAgICBTVEFSVF9UQUcsXHJcbiAgICBFTkRfVEFHLFxyXG4gICAgRU1QVFlfVEFHLFxyXG4gICAgSUNVX01FU1NBR0UsXHJcbiAgICBJQ1VfTUVTU0FHRV9SRUZcclxufVxyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdHlwZTogUGFyc2VkTWVzc2FnZVBhcnRUeXBlKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwYXJ0LlxyXG4gICAgICogQHBhcmFtIGZvcm1hdCBvcHRpb25hbCB3YXkgdG8gZGV0ZXJtaW5lIHRoZSBleGFjdCBzeW50YXguXHJcbiAgICAgKiBBbGxvd2VkIGZvcm1hdHMgYXJlIGRlZmluZWQgYXMgY29uc3RhbnRzIE5PUk1BTElaQVRJT05fRk9STUFULi4uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKTogc3RyaW5nO1xyXG5cclxufVxyXG4iLCJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNS4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgcGFydCBjb25zaXN0aW5nIG9mIGp1c3Qgc2ltcGxlIHRleHQuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0VGV4dCBleHRlbmRzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBwcml2YXRlIHRleHQ6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0ZXh0OiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuVEVYVCk7XHJcbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRleHQ7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG5pbXBvcnQge05PUk1BTElaQVRJT05fRk9STUFUX05HWFRSQU5TTEFURX0gZnJvbSAnLi4vYXBpL2NvbnN0YW50cyc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNS4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgcGFydCBjb25zaXN0aW5nIG9mIGEgcGxhY2Vob2xkZXIuXHJcbiAqIFBsYWNlaG9sZGVycyBhcmUgbnVtYmVyZWQgZnJvbSAwIHRvIG4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0UGxhY2Vob2xkZXIgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgLy8gaW5kZXggMCAuLiBuXHJcbiAgICBwcml2YXRlIF9pbmRleDogbnVtYmVyO1xyXG4gICAgLy8gb3B0aW9uYWwgZGlzcC1BdHRyaWJ1dGUgdmFsdWUsIGNvbnRhaW5zIHRoZSBvcmlnaW5hbCBleHByZXNzaW9uLlxyXG4gICAgcHJpdmF0ZSBfZGlzcD86IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpbmRleDogbnVtYmVyLCBkaXNwOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihQYXJzZWRNZXNzYWdlUGFydFR5cGUuUExBQ0VIT0xERVIpO1xyXG4gICAgICAgIHRoaXMuX2luZGV4ID0gaW5kZXg7XHJcbiAgICAgICAgdGhpcy5fZGlzcCA9IGRpc3A7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhmb3JtYXQ/OiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAoZm9ybWF0ID09PSBOT1JNQUxJWkFUSU9OX0ZPUk1BVF9OR1hUUkFOU0xBVEUpIHtcclxuICAgICAgICAgICAgcmV0dXJuICd7eycgKyB0aGlzLl9pbmRleCArICd9fSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiAne3snICsgdGhpcy5faW5kZXggKyAnfX0nO1xyXG4gICAgfVxyXG4gICAgcHVibGljIGluZGV4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBkaXNwKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc3A7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnQgY29uc2lzdGluZyBvZiBhbiBvcGVuaW5nIHRhZyBsaWtlIDxiPiBvciA8c3RyYW5nZT4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0U3RhcnRUYWcgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSBfdGFnbmFtZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaWRjb3VudGVyOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGFnbmFtZTogc3RyaW5nLCBpZGNvdW50ZXI6IG51bWJlcikge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5TVEFSVF9UQUcpO1xyXG4gICAgICAgIHRoaXMuX3RhZ25hbWUgPSB0YWduYW1lO1xyXG4gICAgICAgIHRoaXMuX2lkY291bnRlciA9IGlkY291bnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmICh0aGlzLl9pZGNvdW50ZXIgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnIGlkPVwiJyArIHRoaXMuX2lkY291bnRlci50b1N0cmluZygpICsgJ1wiPic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0YWdOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlkQ291bnRlcigpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZGNvdW50ZXI7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDUuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnQgY29uc2lzdGluZyBvZiBhIGNsb3NpbmcgdGFnIGxpa2UgPC9iPiBvciA8L3N0cmFuZ2U+LlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydEVuZFRhZyBleHRlbmRzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBwcml2YXRlIF90YWduYW1lOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGFnbmFtZTogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoUGFyc2VkTWVzc2FnZVBhcnRUeXBlLkVORF9UQUcpO1xyXG4gICAgICAgIHRoaXMuX3RhZ25hbWUgPSB0YWduYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuICc8LycgKyB0aGlzLl90YWduYW1lICsgJz4nO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0YWdOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RhZ25hbWU7XHJcbiAgICB9XHJcblxyXG59XHJcbiIsImltcG9ydCAqIGFzIFRva2VuaXpyIGZyb20gJ3Rva2VuaXpyJztcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNC4wNi4yMDE3LlxyXG4gKiBBIHRva2VuaXplciBmb3IgSUNVIG1lc3NhZ2VzLlxyXG4gKi9cclxuXHJcbi8vIFRva2Vuc1xyXG5leHBvcnQgY29uc3QgVEVYVCA9ICdURVhUJztcclxuZXhwb3J0IGNvbnN0IENVUkxZX0JSQUNFX09QRU4gPSAnQ1VSTFlfQlJBQ0VfT1BFTic7XHJcbmV4cG9ydCBjb25zdCBDVVJMWV9CUkFDRV9DTE9TRSA9ICdDVVJMWV9CUkFDRV9DTE9TRSc7XHJcbmV4cG9ydCBjb25zdCBDT01NQSA9ICdDT01NQSc7XHJcbmV4cG9ydCBjb25zdCBQTFVSQUwgPSAnUExVUkFMJztcclxuZXhwb3J0IGNvbnN0IFNFTEVDVCA9ICdTRUxFQ1QnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJQ1VUb2tlbiB7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICB2YWx1ZTogYW55O1xyXG59XHJcblxyXG4vLyBzdGF0ZXM6IGRlZmF1bHQgbm9ybWFsIGluX21lc3NhZ2VcclxuY29uc3QgU1RBVEVfREVGQVVMVCA9ICdkZWZhdWx0JztcclxuY29uc3QgU1RBVEVfTk9STUFMID0gJ25vcm1hbCc7XHJcbmNvbnN0IFNUQVRFX0lOX01FU1NBR0UgPSAnaW5fbWVzc2FnZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgSUNVTWVzc2FnZVRva2VuaXplciB7XHJcbiAgICBwcml2YXRlIGxleGVyOiBUb2tlbml6cjtcclxuXHJcbiAgICBwcml2YXRlIGdldExleGVyKCk6IFRva2VuaXpyIHtcclxuICAgICAgICBjb25zdCBsZXhlciA9IG5ldyBUb2tlbml6cigpO1xyXG4gICAgICAgIGxldCBwbGFpbnRleHQgPSAnJztcclxuICAgICAgICBsZXQgb3BlbmVkQ3VybHlCcmFjZXNJblRleHRDb3VudGVyID0gMDtcclxuICAgICAgICBsZXhlci5iZWZvcmUoKGN0eCwgbWF0Y2gsIHJ1bGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKHJ1bGUubmFtZSAhPT0gVEVYVCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29udGFpbnNOb25XaGl0ZVNwYWNlKHBsYWludGV4dCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjdHguYWNjZXB0KFRFWFQsIHBsYWludGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxhaW50ZXh0ID0gJyc7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5pZ25vcmUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxleGVyLmZpbmlzaCgoY3R4KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbnRhaW5zTm9uV2hpdGVTcGFjZShwbGFpbnRleHQpKSB7XHJcbiAgICAgICAgICAgICAgICBjdHguYWNjZXB0KFRFWFQsIHBsYWludGV4dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gY3VybHkgYnJhY2VcclxuICAgICAgICBsZXhlci5ydWxlKFNUQVRFX0RFRkFVTFQsIC97LywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChDVVJMWV9CUkFDRV9PUEVOLCBtYXRjaFswXSk7XHJcbiAgICAgICAgICAgIGN0eC5wdXNoKFNUQVRFX05PUk1BTCk7XHJcbiAgICAgICAgfSwgQ1VSTFlfQlJBQ0VfT1BFTik7XHJcbiAgICAgICAgbGV4ZXIucnVsZShTVEFURV9OT1JNQUwsIC97LywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChDVVJMWV9CUkFDRV9PUEVOLCBtYXRjaFswXSk7XHJcbiAgICAgICAgICAgIGN0eC5wdXNoKFNUQVRFX0lOX01FU1NBR0UpO1xyXG4gICAgICAgIH0sIENVUkxZX0JSQUNFX09QRU4pO1xyXG4gICAgICAgIGxleGVyLnJ1bGUoU1RBVEVfTk9STUFMLCAvfS8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5wb3AoKTtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChDVVJMWV9CUkFDRV9DTE9TRSwgbWF0Y2hbMF0pO1xyXG4gICAgICAgIH0sIENVUkxZX0JSQUNFX0NMT1NFKTtcclxuICAgICAgICAvLyBtYXNrZWQgJyB7IGFuZCB9XHJcbiAgICAgICAgbGV4ZXIucnVsZShTVEFURV9JTl9NRVNTQUdFLCAvJ1t7fV0/Jy8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChtYXRjaFswXSA9PT0gJ1xcJ1xcJycpIHtcclxuICAgICAgICAgICAgICAgIHBsYWludGV4dCArPSAnXFwnJztcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChtYXRjaFswXSA9PT0gJ1xcJ3tcXCcnKSB7XHJcbiAgICAgICAgICAgICAgICBwbGFpbnRleHQgKz0gJ3snO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG1hdGNoWzBdID09PSAnXFwnfVxcJycpIHtcclxuICAgICAgICAgICAgICAgIHBsYWludGV4dCArPSAnfSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY3R4Lmlnbm9yZSgpO1xyXG4gICAgICAgIH0sIFRFWFQpO1xyXG4gICAgICAgIGxleGVyLnJ1bGUoU1RBVEVfSU5fTUVTU0FHRSwgLy4vLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjaGFyID0gbWF0Y2hbMF07XHJcbiAgICAgICAgICAgIGlmIChjaGFyID09PSAneycpIHtcclxuICAgICAgICAgICAgICAgIG9wZW5lZEN1cmx5QnJhY2VzSW5UZXh0Q291bnRlcisrO1xyXG4gICAgICAgICAgICAgICAgcGxhaW50ZXh0ICs9IG1hdGNoWzBdO1xyXG4gICAgICAgICAgICAgICAgY3R4Lmlnbm9yZSgpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNoYXIgPT09ICd9Jykge1xyXG4gICAgICAgICAgICAgICAgaWYgKG9wZW5lZEN1cmx5QnJhY2VzSW5UZXh0Q291bnRlciA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBvcGVuZWRDdXJseUJyYWNlc0luVGV4dENvdW50ZXItLTtcclxuICAgICAgICAgICAgICAgICAgICBwbGFpbnRleHQgKz0gbWF0Y2hbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4Lmlnbm9yZSgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjdHgucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LmFjY2VwdChURVhULCBwbGFpbnRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYWludGV4dCA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5hY2NlcHQoQ1VSTFlfQlJBQ0VfQ0xPU0UsIG1hdGNoWzBdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHBsYWludGV4dCArPSBtYXRjaFswXTtcclxuICAgICAgICAgICAgICAgIGN0eC5pZ25vcmUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIFRFWFQpO1xyXG4gICAgICAgIC8vIGNvbW1hXHJcbiAgICAgICAgbGV4ZXIucnVsZShTVEFURV9OT1JNQUwsIC8sLywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChDT01NQSwgbWF0Y2hbMF0pO1xyXG4gICAgICAgIH0sIENPTU1BKTtcclxuICAgICAgICAvLyBrZXl3b3JkcyBwbHVyYWwgYW5kIHNlbGVjdFxyXG4gICAgICAgIGxleGVyLnJ1bGUoU1RBVEVfTk9STUFMLCAvcGx1cmFsLywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChQTFVSQUwsIG1hdGNoWzBdKTtcclxuICAgICAgICB9LCBQTFVSQUwpO1xyXG4gICAgICAgIGxleGVyLnJ1bGUoU1RBVEVfTk9STUFMLCAvc2VsZWN0LywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChTRUxFQ1QsIG1hdGNoWzBdKTtcclxuICAgICAgICB9LCBTRUxFQ1QpO1xyXG4gICAgICAgIC8vIHRleHRcclxuICAgICAgICBsZXhlci5ydWxlKC8uLywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgcGxhaW50ZXh0ICs9IG1hdGNoWzBdO1xyXG4gICAgICAgICAgICBjdHguaWdub3JlKCk7XHJcbiAgICAgICAgfSwgVEVYVCk7XHJcbiAgICAgICAgbGV4ZXIucnVsZSgvW1xcc10rLywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgcGxhaW50ZXh0ICs9IG1hdGNoWzBdO1xyXG4gICAgICAgICAgICBjdHguaWdub3JlKCk7XHJcbiAgICAgICAgfSwgVEVYVCk7XHJcbiAgICAgICAgcmV0dXJuIGxleGVyO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY29udGFpbnNOb25XaGl0ZVNwYWNlKHRleHQ6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoIS9cXHMvLnRlc3QodGV4dC5jaGFyQXQoaSkpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgdG9rZW5pemUobm9ybWFsaXplZE1lc3NhZ2U6IHN0cmluZyk6IElDVVRva2VuW10ge1xyXG4gICAgICAgIGNvbnN0IGxleGVyOiBUb2tlbml6ciA9IHRoaXMuZ2V0TGV4ZXIoKTtcclxuICAgICAgICBsZXhlci5pbnB1dChub3JtYWxpemVkTWVzc2FnZSk7XHJcbiAgICAgICAgcmV0dXJuIGxleGVyLnRva2VucygpO1xyXG4gICAgfVxyXG5cclxuICAgIGlucHV0KG5vcm1hbGl6ZWRNZXNzYWdlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLmxleGVyID0gdGhpcy5nZXRMZXhlcigpO1xyXG4gICAgICAgIHRoaXMubGV4ZXIuaW5wdXQobm9ybWFsaXplZE1lc3NhZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIG5leHQoKTogSUNVVG9rZW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxleGVyLnRva2VuKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcGVlaygpOiBJQ1VUb2tlbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubGV4ZXIucGVlaygpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7SUlDVU1lc3NhZ2UsIElJQ1VNZXNzYWdlQ2F0ZWdvcnksIElJQ1VNZXNzYWdlVHJhbnNsYXRpb24sIElOb3JtYWxpemVkTWVzc2FnZX0gZnJvbSAnLi4vYXBpL2luZGV4JztcclxuaW1wb3J0IHtmb3JtYXQsIGlzTnVsbE9yVW5kZWZpbmVkLCBpc1N0cmluZ30gZnJvbSAndXRpbCc7XHJcbmltcG9ydCB7SU1lc3NhZ2VQYXJzZXJ9IGZyb20gJy4vaS1tZXNzYWdlLXBhcnNlcic7XHJcblxyXG5jbGFzcyBNZXNzYWdlQ2F0ZWdvcnkgaW1wbGVtZW50cyBJSUNVTWVzc2FnZUNhdGVnb3J5IHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jYXRlZ29yeTogc3RyaW5nLCBwcml2YXRlIF9tZXNzYWdlOiBJTm9ybWFsaXplZE1lc3NhZ2UpIHt9XHJcblxyXG4gICAgcHVibGljIGdldENhdGVnb3J5KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhdGVnb3J5O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRNZXNzYWdlTm9ybWFsaXplZCgpOiBJTm9ybWFsaXplZE1lc3NhZ2Uge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9tZXNzYWdlO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICogSW1wbGVtZW50YXRpb24gb2YgYW4gSUNVIE1lc3NhZ2UuXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA2LjIwMTcuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSUNVTWVzc2FnZSBpbXBsZW1lbnRzIElJQ1VNZXNzYWdlIHtcclxuXHJcbiAgICBwcml2YXRlIF9pc1BsdXJhbE1lc3NhZ2U6IGJvb2xlYW47XHJcblxyXG4gICAgcHJpdmF0ZSBfY2F0ZWdvcmllczogSUlDVU1lc3NhZ2VDYXRlZ29yeVtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX3BhcnNlcjogSU1lc3NhZ2VQYXJzZXIsIGlzUGx1cmFsTWVzc2FnZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX2lzUGx1cmFsTWVzc2FnZSA9IGlzUGx1cmFsTWVzc2FnZTtcclxuICAgICAgICB0aGlzLl9jYXRlZ29yaWVzID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgYWRkQ2F0ZWdvcnkoY2F0ZWdvcnk6IHN0cmluZywgbWVzc2FnZTogSU5vcm1hbGl6ZWRNZXNzYWdlKSB7XHJcbiAgICAgICAgdGhpcy5fY2F0ZWdvcmllcy5wdXNoKG5ldyBNZXNzYWdlQ2F0ZWdvcnkoY2F0ZWdvcnksIG1lc3NhZ2UpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIElDVSBtZXNzYWdlIGFzIG5hdGl2ZSBzdHJpbmcuXHJcbiAgICAgKiBUaGlzIGlzLCBob3cgaXQgaXMgc3RvcmVkLCBzb21ldGhpbmcgbGlrZSAne3gsIHBsdXJhbCwgPTAgey4ufSdcclxuICAgICAqIEByZXR1cm4gSUNVIG1lc3NhZ2UgYXMgbmF0aXZlIHN0cmluZy5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGFzTmF0aXZlU3RyaW5nKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgdmFybmFtZSA9ICh0aGlzLmlzUGx1cmFsTWVzc2FnZSgpKSA/ICdWQVJfUExVUkFMJyA6ICdWQVJfU0VMRUNUJztcclxuICAgICAgICBjb25zdCB0eXBlID0gKHRoaXMuaXNQbHVyYWxNZXNzYWdlKCkpID8gJ3BsdXJhbCcgOiAnc2VsZWN0JztcclxuICAgICAgICBsZXQgY2hvaWNlU3RyaW5nID0gJyc7XHJcbiAgICAgICAgdGhpcy5fY2F0ZWdvcmllcy5mb3JFYWNoKChjYXRlZ29yeTogSUlDVU1lc3NhZ2VDYXRlZ29yeSkgPT4ge1xyXG4gICAgICAgICAgICBjaG9pY2VTdHJpbmcgPSBjaG9pY2VTdHJpbmcgKyBmb3JtYXQoJyAlcyB7JXN9JywgY2F0ZWdvcnkuZ2V0Q2F0ZWdvcnkoKSwgY2F0ZWdvcnkuZ2V0TWVzc2FnZU5vcm1hbGl6ZWQoKS5hc05hdGl2ZVN0cmluZygpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZm9ybWF0KCd7JXMsICVzLCVzfScsIHZhcm5hbWUsIHR5cGUsIGNob2ljZVN0cmluZyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBJcyBpdCBhIHBsdXJhbCBtZXNzYWdlP1xyXG4gICAgICovXHJcbiAgICBpc1BsdXJhbE1lc3NhZ2UoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzUGx1cmFsTWVzc2FnZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIElzIGl0IGEgc2VsZWN0IG1lc3NhZ2U/XHJcbiAgICAgKi9cclxuICAgIGlzU2VsZWN0TWVzc2FnZSgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gIXRoaXMuX2lzUGx1cmFsTWVzc2FnZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFsbCB0aGUgcGFydHMgb2YgdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBFLmcuIHRoZSBJQ1UgbWVzc2FnZSB7d29sdmVzLCBwbHVyYWwsID0wIHtubyB3b2x2ZXN9ID0xIHtvbmUgd29sZn0gPTIge3R3byB3b2x2ZXN9IG90aGVyIHthIHdvbGYgcGFja319XHJcbiAgICAgKiBoYXMgNCBjYXRlZ29yeSBvYmplY3RzIHdpdGggdGhlIGNhdGVnb3JpZXMgPTAsID0xLCA9Miwgb3RoZXIuXHJcbiAgICAgKi9cclxuICAgIGdldENhdGVnb3JpZXMoKTogSUlDVU1lc3NhZ2VDYXRlZ29yeVtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY2F0ZWdvcmllcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zbGF0ZSBtZXNzYWdlIGFuZCByZXR1cm4gYSBuZXcsIHRyYW5zbGF0ZWQgbWVzc2FnZVxyXG4gICAgICogQHBhcmFtIHRyYW5zbGF0aW9uIHRoZSB0cmFuc2xhdGlvbiAoaGFzaG1hcCBvZiBjYXRlZ29yaWVzIGFuZCB0cmFuc2xhdGlvbnMpLlxyXG4gICAgICogQHJldHVybiBuZXcgbWVzc2FnZSB3aXQgdHJhbnNsYXRlZCBjb250ZW50LlxyXG4gICAgICogQHRocm93cyBhbiBlcnJvciBpZiB0cmFuc2xhdGlvbiBkb2VzIG5vdCBtYXRjaCB0aGUgbWVzc2FnZS5cclxuICAgICAqIFRoaXMgaXMgdGhlIGNhc2UsIGlmIHRoZXJlIGFyZSBjYXRlZ29yaWVzIG5vdCBjb250YWluZWQgaW4gdGhlIG9yaWdpbmFsIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHRyYW5zbGF0ZSh0cmFuc2xhdGlvbjogSUlDVU1lc3NhZ2VUcmFuc2xhdGlvbik6IElJQ1VNZXNzYWdlIHtcclxuICAgICAgICBjb25zdCBtZXNzYWdlID0gbmV3IElDVU1lc3NhZ2UodGhpcy5fcGFyc2VyLCB0aGlzLmlzUGx1cmFsTWVzc2FnZSgpKTtcclxuICAgICAgICBjb25zdCB0cmFuc2xhdGVkQ2F0ZWdvcmllczogU2V0PHN0cmluZz4gPSBuZXcgU2V0PHN0cmluZz4oKTtcclxuICAgICAgICB0aGlzLl9jYXRlZ29yaWVzLmZvckVhY2goKGNhdGVnb3J5KSA9PiB7XHJcbiAgICAgICAgICAgIGxldCB0cmFuc2xhdGVkTWVzc2FnZTogSU5vcm1hbGl6ZWRNZXNzYWdlO1xyXG4gICAgICAgICAgICBjb25zdCB0cmFuc2xhdGlvbkZvckNhdGVnb3J5OiBzdHJpbmd8SUlDVU1lc3NhZ2VUcmFuc2xhdGlvbiA9IHRyYW5zbGF0aW9uW2NhdGVnb3J5LmdldENhdGVnb3J5KCldO1xyXG4gICAgICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQodHJhbnNsYXRpb25Gb3JDYXRlZ29yeSkpIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zbGF0ZWRNZXNzYWdlID0gY2F0ZWdvcnkuZ2V0TWVzc2FnZU5vcm1hbGl6ZWQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChpc1N0cmluZyh0cmFuc2xhdGlvbkZvckNhdGVnb3J5KSkge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRlZENhdGVnb3JpZXMuYWRkKGNhdGVnb3J5LmdldENhdGVnb3J5KCkpO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRlZE1lc3NhZ2UgPSB0aGlzLl9wYXJzZXIucGFyc2VOb3JtYWxpemVkU3RyaW5nKDxzdHJpbmc+IHRyYW5zbGF0aW9uRm9yQ2F0ZWdvcnksIG51bGwpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gVE9ETyBlbWJlZGRlZCBJQ1UgTWVzc2FnZVxyXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRlZE1lc3NhZ2UgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1lc3NhZ2UuYWRkQ2F0ZWdvcnkoY2F0ZWdvcnkuZ2V0Q2F0ZWdvcnkoKSwgdHJhbnNsYXRlZE1lc3NhZ2UpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIG5ldyBjYXRlZ29yaWVzLCB3aGljaCBhcmUgbm90IHBhcnQgb2YgdGhlIG9yaWdpbmFsIG1lc3NhZ2VcclxuICAgICAgICBPYmplY3Qua2V5cyh0cmFuc2xhdGlvbikuZm9yRWFjaCgoY2F0ZWdvcnlOYW1lKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdHJhbnNsYXRlZENhdGVnb3JpZXMuaGFzKGNhdGVnb3J5TmFtZSkpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzU2VsZWN0TWVzc2FnZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnYWRkaW5nIGEgbmV3IGNhdGVnb3J5IG5vdCBhbGxvd2VkIGZvciBzZWxlY3QgbWVzc2FnZXMgKFwiJXNcIiBpcyBub3QgcGFydCBvZiBtZXNzYWdlKScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5TmFtZSkpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoZWNrVmFsaWRQbHVyYWxDYXRlZ29yeShjYXRlZ29yeU5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFRPRE8gZW1iZWRkZWQgSUNVIE1lc3NhZ2VcclxuICAgICAgICAgICAgICAgICAgICBsZXQgdHJhbnNsYXRlZE1lc3NhZ2UgPSB0aGlzLl9wYXJzZXIucGFyc2VOb3JtYWxpemVkU3RyaW5nKDxzdHJpbmc+IHRyYW5zbGF0aW9uW2NhdGVnb3J5TmFtZV0sIG51bGwpO1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkQ2F0ZWdvcnkoY2F0ZWdvcnlOYW1lLCB0cmFuc2xhdGVkTWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gbWVzc2FnZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrLCB3ZXRoZXIgY2F0ZWdvcnkgaXMgdmFsaWQgcGx1cmFsIGNhdGVnb3J5LlxyXG4gICAgICogQWxsb3dlZCBhcmUgPW4sICd6ZXJvJywgJ29uZScsICd0d28nLCAnZmV3JywgJ21hbnknIGFuZCAnb3RoZXInXHJcbiAgICAgKiBAcGFyYW0gY2F0ZWdvcnlOYW1lIGNhdGVnb3J5XHJcbiAgICAgKiBAdGhyb3dzIGFuIGVycm9yLCBpZiBpdCBpcyBub3QgYSB2YWxpZCBjYXRlZ29yeSBuYW1lXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2hlY2tWYWxpZFBsdXJhbENhdGVnb3J5KGNhdGVnb3J5TmFtZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgYWxsb3dlZEtleXdvcmRzID0gWyd6ZXJvJywgJ29uZScsICd0d28nLCAnZmV3JywgJ21hbnknLCAnb3RoZXInXTtcclxuICAgICAgICBpZiAoY2F0ZWdvcnlOYW1lLm1hdGNoKC89XFxkKy8pKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGFsbG93ZWRLZXl3b3Jkcy5maW5kKChrZXkpID0+IGtleSA9PT0gY2F0ZWdvcnlOYW1lKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ2ludmFsaWQgcGx1cmFsIGNhdGVnb3J5IFwiJXNcIiwgYWxsb3dlZCBhcmUgPTxuPiBhbmQgJXMnLCBjYXRlZ29yeU5hbWUsIGFsbG93ZWRLZXl3b3JkcykpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuaW1wb3J0IHtJSUNVTWVzc2FnZSwgSU5vcm1hbGl6ZWRNZXNzYWdlfSBmcm9tICcuLi9hcGkvaW5kZXgnO1xyXG5pbXBvcnQge1xyXG4gICAgQ09NTUEsIENVUkxZX0JSQUNFX0NMT1NFLCBDVVJMWV9CUkFDRV9PUEVOLCBJQ1VNZXNzYWdlVG9rZW5pemVyLCBJQ1VUb2tlbiwgUExVUkFMLCBTRUxFQ1QsXHJcbiAgICBURVhUXHJcbn0gZnJvbSAnLi9pY3UtbWVzc2FnZS10b2tlbml6ZXInO1xyXG5pbXBvcnQge0lDVU1lc3NhZ2V9IGZyb20gJy4vaWN1LW1lc3NhZ2UnO1xyXG5pbXBvcnQge2Zvcm1hdH0gZnJvbSAndXRpbCc7XHJcbmltcG9ydCB7SU1lc3NhZ2VQYXJzZXJ9IGZyb20gJy4vaS1tZXNzYWdlLXBhcnNlcic7XHJcblxyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDIuMDYuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnQgY29uc2lzdGluZyBvZiBhbiBpY3UgbWVzc2FnZS5cclxuICogVGhlcmUgY2FuIG9ubHkgYmUgb25lIGljdSBtZXNzYWdlIGluIGEgcGFyc2VkIG1lc3NhZ2UuXHJcbiAqIFN5bnRheCBvZiBJQ1UgbWVzc2FnZSBpcyAneycgPGtleW5hbWU+ICcsJyAnc2VsZWN0J3wncGx1cmFsJyAnLCcgKDxjYXRlZ29yeT4gJ3snIHRleHQgJ30nKSsgJ30nXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZSBleHRlbmRzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBwcml2YXRlIF9tZXNzYWdlOiBJQ1VNZXNzYWdlO1xyXG4gICAgcHJpdmF0ZSBfbWVzc2FnZVRleHQ6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3Rva2VuaXplcjogSUNVTWVzc2FnZVRva2VuaXplcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpY3VNZXNzYWdlVGV4dDogc3RyaW5nLCBwcml2YXRlIF9wYXJzZXI6IElNZXNzYWdlUGFyc2VyKSB7XHJcbiAgICAgICAgc3VwZXIoUGFyc2VkTWVzc2FnZVBhcnRUeXBlLklDVV9NRVNTQUdFKTtcclxuICAgICAgICBpZiAoaWN1TWVzc2FnZVRleHQpIHtcclxuICAgICAgICAgICAgdGhpcy5wYXJzZUlDVU1lc3NhZ2UoaWN1TWVzc2FnZVRleHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3Qgd2V0aGVyIHRleHQgbWlnaHQgYmUgYW4gSUNVIG1lc3NhZ2UuXHJcbiAgICAgKiBTaG91bGQgYXQgbGVhc3Qgc3RhcnQgd2l0aCBzb21ldGhpbmcgbGlrZSAnezxuYW1lPiwgc2VsZWN0LCAuLicgb3IgJ3s8bmFtZT4sIHBsdXJhbCwgLi4uJ1xyXG4gICAgICogQHBhcmFtIGljdU1lc3NhZ2VUZXh0IGljdU1lc3NhZ2VUZXh0XHJcbiAgICAgKiBAcmV0dXJuIHdldGhlciB0ZXh0IG1pZ2h0IGJlIGFuIElDVSBtZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgbG9va3NMaWtlSUNVTWVzc2FnZShpY3VNZXNzYWdlVGV4dDogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3QgcGFydCA9IG5ldyBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2UobnVsbCwgbnVsbCk7XHJcbiAgICAgICAgcmV0dXJuIHBhcnQubG9va3NMaWtlSUNVTWVzc2FnZShpY3VNZXNzYWdlVGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhkaXNwbGF5Rm9ybWF0Pzogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuICc8SUNVLU1lc3NhZ2UvPic7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiByZXR1cm4gdGhlIHBhcnNlZCBtZXNzYWdlLlxyXG4gICAgICogQHJldHVybiBwYXJzZWQgbWVzc2FnZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0SUNVTWVzc2FnZSgpOiBJSUNVTWVzc2FnZSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21lc3NhZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQYXJzZSB0aGUgbWVzc2FnZS5cclxuICAgICAqIEBwYXJhbSB0ZXh0IG1lc3NhZ2UgdGV4dCB0byBwYXJzZVxyXG4gICAgICogQHRocm93cyBhbiBlcnJvciBpZiB0aGUgc3ludGF4IGlzIG5vdCBvayBpbiBhbnkgd2F5LlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHBhcnNlSUNVTWVzc2FnZSh0ZXh0OiBzdHJpbmcpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygnbWVzc2FnZSAnLCB0ZXh0KTtcclxuICAgICAgICAvLyBjb25zdCB0b2tlbnMgPSBuZXcgSUNVTWVzc2FnZVRva2VuaXplcigpLnRva2VuaXplKHRleHQpO1xyXG4gICAgICAgIC8vIHRva2Vucy5mb3JFYWNoKCh0b2spID0+IHtcclxuICAgICAgICAvLyAgICAgY29uc29sZS5sb2coJ1Rva2VuJywgdG9rLnR5cGUsIHRvay52YWx1ZSk7XHJcbiAgICAgICAgLy8gfSk7XHJcbiAgICAgICAgdGhpcy5fbWVzc2FnZVRleHQgPSB0ZXh0O1xyXG4gICAgICAgIHRoaXMuX3Rva2VuaXplciA9IG5ldyBJQ1VNZXNzYWdlVG9rZW5pemVyKCk7XHJcbiAgICAgICAgdGhpcy5fdG9rZW5pemVyLmlucHV0KHRleHQpO1xyXG4gICAgICAgIHRoaXMuZXhwZWN0TmV4dChDVVJMWV9CUkFDRV9PUEVOKTtcclxuICAgICAgICB0aGlzLmV4cGVjdE5leHQoVEVYVCk7IC8vIHZhcm5hbWUsIG5vdCB1c2VkIGN1cnJlbnRseSwgbmcgYWx3YXlzIHVzZWQgVkFSX1BMVVJBTCBvciBWQVJfU0VMRUNUXHJcbiAgICAgICAgdGhpcy5leHBlY3ROZXh0KENPTU1BKTtcclxuICAgICAgICBsZXQgdG9rZW46IElDVVRva2VuID0gdGhpcy5fdG9rZW5pemVyLm5leHQoKTtcclxuICAgICAgICBpZiAodG9rZW4udHlwZSA9PT0gUExVUkFMKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX21lc3NhZ2UgPSBuZXcgSUNVTWVzc2FnZSh0aGlzLl9wYXJzZXIsIHRydWUpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4udHlwZSA9PT0gU0VMRUNUKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX21lc3NhZ2UgPSBuZXcgSUNVTWVzc2FnZSh0aGlzLl9wYXJzZXIsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5leHBlY3ROZXh0KENPTU1BKTtcclxuICAgICAgICB0b2tlbiA9IHRoaXMuX3Rva2VuaXplci5wZWVrKCk7XHJcbiAgICAgICAgd2hpbGUgKHRva2VuLnR5cGUgIT09IENVUkxZX0JSQUNFX0NMT1NFKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNhdGVnb3J5ID0gdGhpcy5leHBlY3ROZXh0KFRFWFQpLnZhbHVlLnRyaW0oKTtcclxuICAgICAgICAgICAgdGhpcy5leHBlY3ROZXh0KENVUkxZX0JSQUNFX09QRU4pO1xyXG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5leHBlY3ROZXh0KFRFWFQpLnZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLl9tZXNzYWdlLmFkZENhdGVnb3J5KGNhdGVnb3J5LCB0aGlzLnBhcnNlTmF0aXZlU3ViTWVzc2FnZShtZXNzYWdlKSk7XHJcbiAgICAgICAgICAgIHRoaXMuZXhwZWN0TmV4dChDVVJMWV9CUkFDRV9DTE9TRSk7XHJcbiAgICAgICAgICAgIHRva2VuID0gdGhpcy5fdG9rZW5pemVyLnBlZWsoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5leHBlY3ROZXh0KENVUkxZX0JSQUNFX0NMT1NFKTtcclxuICAgICAgICB0aGlzLmV4cGVjdE5leHQoJ0VPRicpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2UgdGhlIG1lc3NhZ2UgdG8gY2hlY2ssIHdldGhlciBpdCBtaWdodCBiZSBhbiBJQ1UgbWVzc2FnZS5cclxuICAgICAqIFNob3VsZCBhdCBsZWFzdCBzdGFydCB3aXRoIHNvbWV0aGluZyBsaWtlICd7PG5hbWU+LCBzZWxlY3QsIC4uJyBvciAnezxuYW1lPiwgcGx1cmFsLCAuLi4nXHJcbiAgICAgKiBAcGFyYW0gdGV4dCBtZXNzYWdlIHRleHQgdG8gcGFyc2VcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBsb29rc0xpa2VJQ1VNZXNzYWdlKHRleHQ6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdtZXNzYWdlICcsIHRleHQpO1xyXG4gICAgICAgIC8vIGNvbnN0IHRva2VucyA9IG5ldyBJQ1VNZXNzYWdlVG9rZW5pemVyKCkudG9rZW5pemUodGV4dCk7XHJcbiAgICAgICAgLy8gdG9rZW5zLmZvckVhY2goKHRvaykgPT4ge1xyXG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZygnVG9rZW4nLCB0b2sudHlwZSwgdG9rLnZhbHVlKTtcclxuICAgICAgICAvLyB9KTtcclxuICAgICAgICB0aGlzLl90b2tlbml6ZXIgPSBuZXcgSUNVTWVzc2FnZVRva2VuaXplcigpO1xyXG4gICAgICAgIHRoaXMuX3Rva2VuaXplci5pbnB1dCh0ZXh0KTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICB0aGlzLmV4cGVjdE5leHQoQ1VSTFlfQlJBQ0VfT1BFTik7XHJcbiAgICAgICAgICAgIHRoaXMuZXhwZWN0TmV4dChURVhUKTsgLy8gdmFybmFtZSwgbm90IHVzZWQgY3VycmVudGx5LCBuZyBhbHdheXMgdXNlZCBWQVJfUExVUkFMIG9yIFZBUl9TRUxFQ1RcclxuICAgICAgICAgICAgdGhpcy5leHBlY3ROZXh0KENPTU1BKTtcclxuICAgICAgICAgICAgY29uc3QgdG9rZW46IElDVVRva2VuID0gdGhpcy5fdG9rZW5pemVyLm5leHQoKTtcclxuICAgICAgICAgICAgaWYgKHRva2VuLnR5cGUgIT09IFBMVVJBTCAmJiB0b2tlbi50eXBlICE9PSBTRUxFQ1QpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmV4cGVjdE5leHQoQ09NTUEpO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBuZXh0IHRva2VuIGFuZCBleHBlY3QsIHRoYXQgaXQgaXMgb2YgdGhlIGdpdmVuIHR5cGUuXHJcbiAgICAgKiBAcGFyYW0gdG9rZW50eXBlIGV4cGVjdGVkIHR5cGUuXHJcbiAgICAgKiBAcmV0dXJuIFRva2VuXHJcbiAgICAgKiBAdGhyb3dzIGVycm9yLCBpZiBuZXh0IHRva2VuIGhhcyB3cm9uZyB0eXBlLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGV4cGVjdE5leHQodG9rZW50eXBlOiBzdHJpbmcpOiBJQ1VUb2tlbiB7XHJcbiAgICAgICAgY29uc3QgdG9rZW4gPSB0aGlzLl90b2tlbml6ZXIubmV4dCgpO1xyXG4gICAgICAgIGlmICh0b2tlbi50eXBlICE9PSB0b2tlbnR5cGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnRXJyb3IgcGFyc2luZyBJQ1UgTWVzc2FnZTogZXhwZWN0ZWQgJXMsIGZvdW5kICVzICglcykgKG1lc3NhZ2UgJXMpJyxcclxuICAgICAgICAgICAgICAgIHRva2VudHlwZSwgdG9rZW4udHlwZSwgdG9rZW4udmFsdWUsIHRoaXMuX21lc3NhZ2VUZXh0KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0b2tlbjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlIFhNTCB0ZXh0IHRvIG5vcm1hbGl6ZWQgbWVzc2FnZS5cclxuICAgICAqIEBwYXJhbSBtZXNzYWdlIG1lc3NhZ2UgaW4gZm9ybWF0IGRlcGVuZGVudCB4bWwgc3ludGF4LlxyXG4gICAgICogQHJldHVybiBub3JtYWxpemVkIG1lc3NhZ2VcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBwYXJzZU5hdGl2ZVN1Yk1lc3NhZ2UobWVzc2FnZTogc3RyaW5nKTogSU5vcm1hbGl6ZWRNZXNzYWdlIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFyc2VyLmNyZWF0ZU5vcm1hbGl6ZWRNZXNzYWdlRnJvbVhNTFN0cmluZyhtZXNzYWdlLCBudWxsKTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0LCBQYXJzZWRNZXNzYWdlUGFydFR5cGV9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydCc7XHJcbmltcG9ydCB7Tk9STUFMSVpBVElPTl9GT1JNQVRfTkdYVFJBTlNMQVRFfSBmcm9tICcuLi9hcGkvY29uc3RhbnRzJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA1LjA1LjIwMTcuXHJcbiAqIEEgcmVmZXJlbmNlIHRvIGFuIElDVSBtZXNzYWdlXHJcbiAqIGljdSByZWZlcmVuY2VzIGFyZSBudW1iZXJlZCBmcm9tIDAgdG8gbi5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgUGFyc2VkTWVzc2FnZVBhcnRJQ1VNZXNzYWdlUmVmIGV4dGVuZHMgUGFyc2VkTWVzc2FnZVBhcnQge1xyXG5cclxuICAgIC8vIGluZGV4IDAgLi4gblxyXG4gICAgcHJpdmF0ZSBfaW5kZXg6IG51bWJlcjtcclxuICAgIC8vIG9wdGlvbmFsIGRpc3AtQXR0cmlidXRlIHZhbHVlLCBjb250YWlucyB0aGUgb3JpZ2luYWwgZXhwcmVzc2lvbi5cclxuICAgIHByaXZhdGUgX2Rpc3A/OiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IoaW5kZXg6IG51bWJlciwgZGlzcDogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoUGFyc2VkTWVzc2FnZVBhcnRUeXBlLklDVV9NRVNTQUdFX1JFRik7XHJcbiAgICAgICAgdGhpcy5faW5kZXggPSBpbmRleDtcclxuICAgICAgICB0aGlzLl9kaXNwID0gZGlzcDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiAnPElDVS1NZXNzYWdlLVJlZl8nICsgdGhpcy5faW5kZXggKyAnLz4nO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpbmRleCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbmRleDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZGlzcCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kaXNwO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDE0LjA2LjIwMTcuXHJcbiAqIEEgbWVzc2FnZSBwYXJ0IGNvbnNpc3Rpbmcgb2YgYW4gZW1wdHkgdGFnIGxpa2UgPGJyLz4uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWcgZXh0ZW5kcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgcHJpdmF0ZSBfdGFnbmFtZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaWRjb3VudGVyOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IodGFnbmFtZTogc3RyaW5nLCBpZGNvdW50ZXI6IG51bWJlcikge1xyXG4gICAgICAgIHN1cGVyKFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTVBUWV9UQUcpO1xyXG4gICAgICAgIHRoaXMuX3RhZ25hbWUgPSB0YWduYW1lO1xyXG4gICAgICAgIHRoaXMuX2lkY291bnRlciA9IGlkY291bnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZykge1xyXG4gICAgICAgIGlmICh0aGlzLl9pZGNvdW50ZXIgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnPic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICc8JyArIHRoaXMuX3RhZ25hbWUgKyAnIGlkPVwiJyArIHRoaXMuX2lkY291bnRlci50b1N0cmluZygpICsgJ1wiPic7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB0YWdOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RhZ25hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlkQ291bnRlcigpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZGNvdW50ZXI7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0VGV4dH0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXRleHQnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0UGxhY2Vob2xkZXJ9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1wbGFjZWhvbGRlcic7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZ30gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXN0YXJ0LXRhZyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRFbmRUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnJztcclxuaW1wb3J0IHtJTm9ybWFsaXplZE1lc3NhZ2UsIFZhbGlkYXRpb25FcnJvcnN9IGZyb20gJy4uL2FwaS9pLW5vcm1hbGl6ZWQtbWVzc2FnZSc7XHJcbmltcG9ydCB7RE9NVXRpbGl0aWVzfSBmcm9tICcuL2RvbS11dGlsaXRpZXMnO1xyXG5pbXBvcnQge0lNZXNzYWdlUGFyc2VyfSBmcm9tICcuL2ktbWVzc2FnZS1wYXJzZXInO1xyXG5pbXBvcnQge2Zvcm1hdCwgaXNOdWxsT3JVbmRlZmluZWR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge0lJQ1VNZXNzYWdlLCBJSUNVTWVzc2FnZVRyYW5zbGF0aW9ufSBmcm9tICcuLi9hcGkvaS1pY3UtbWVzc2FnZSc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRJQ1VNZXNzYWdlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtaWN1LW1lc3NhZ2UnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZn0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LWljdS1tZXNzYWdlLXJlZic7XHJcbmltcG9ydCB7SUNVTWVzc2FnZX0gZnJvbSAnLi9pY3UtbWVzc2FnZSc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZ30gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LWVtcHR5LXRhZyc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNS4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgdGV4dCByZWFkIGZyb20gYSB0cmFuc2xhdGlvbiBmaWxlLlxyXG4gKiBDYW4gY29udGFpbiBwbGFjZWhvbGRlcnMsIHRhZ3MsIHRleHQuXHJcbiAqIFRoaXMgY2xhc3MgaXMgYSByZXByZXNlbnRhdGlvbiBpbmRlcGVuZGVudCBvZiB0aGUgY29uY3JldGUgZm9ybWF0LlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFBhcnNlZE1lc3NhZ2UgaW1wbGVtZW50cyBJTm9ybWFsaXplZE1lc3NhZ2Uge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2VyIHRoYXQgY3JlYXRlZCB0aGlzIG1lc3NhZ2UgKGRldGVybWluZXMgdGhlIG5hdGl2ZSBmb3JtYXQpLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIF9wYXJzZXI6IElNZXNzYWdlUGFyc2VyO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1lc3NhZ2Ugd2hlcmUgdGhpcyBvbmUgc3RlbXMgZnJvbSBhcyB0cmFuc2xhdGlvbi5cclxuICAgICAqIE9wdGlvbmFsLCBzZXQgb25seSBmb3IgbWVzc2FnZXMgY3JlYXRlZCBieSBjYWxsaW5nIHRyYW5zbGF0ZS5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBzb3VyY2VNZXNzYWdlOiBQYXJzZWRNZXNzYWdlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHBhcnRzIG9mIHRoZSBtZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIF9wYXJ0czogUGFyc2VkTWVzc2FnZVBhcnRbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIG1lc3NhZ2VzIHhtbCByZXByZXNlbnRhdGlvbi5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBfeG1sUmVwcmVzZW50YXRpb246IEVsZW1lbnQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IocGFyc2VyOiBJTWVzc2FnZVBhcnNlciwgc291cmNlTWVzc2FnZTogUGFyc2VkTWVzc2FnZSkge1xyXG4gICAgICAgIHRoaXMuX3BhcnNlciA9IHBhcnNlcjtcclxuICAgICAgICB0aGlzLnNvdXJjZU1lc3NhZ2UgPSBzb3VyY2VNZXNzYWdlO1xyXG4gICAgICAgIHRoaXMuX3BhcnRzID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGhlIHBhcnNlciAoZm9yIHRlc3RzIG9ubHksIG5vdCBwYXJ0IG9mIEFQSSlcclxuICAgICAqIEByZXR1cm4gcGFyc2VyXHJcbiAgICAgKi9cclxuICAgIGdldFBhcnNlcigpOiBJTWVzc2FnZVBhcnNlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BhcnNlcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSBhIG5ldyBub3JtYWxpemVkIG1lc3NhZ2UgYXMgYSB0cmFuc2xhdGlvbiBvZiB0aGlzIG9uZS5cclxuICAgICAqIEBwYXJhbSBub3JtYWxpemVkU3RyaW5nIHRoZSB0cmFuc2xhdGlvbiBpbiBub3JtYWxpemVkIGZvcm0uXHJcbiAgICAgKiBJZiB0aGUgbWVzc2FnZSBpcyBhbiBJQ1VNZXNzYWdlIChnZXRJQ1VNZXNzYWdlIHJldHVybnMgYSB2YWx1ZSksIHVzZSB0cmFuc2xhdGVJQ1VNZXNzYWdlIGluc3RlYWQuXHJcbiAgICAgKiBAdGhyb3dzIGFuIGVycm9yIGlmIG5vcm1hbGl6ZWQgc3RyaW5nIGlzIG5vdCB3ZWxsIGZvcm1lZC5cclxuICAgICAqIFRocm93cyBhbiBlcnJvciB0b28sIGlmIHRoaXMgaXMgYW4gSUNVIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHRyYW5zbGF0ZShub3JtYWxpemVkU3RyaW5nOiBzdHJpbmcpOiBJTm9ybWFsaXplZE1lc3NhZ2Uge1xyXG4gICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZCh0aGlzLmdldElDVU1lc3NhZ2UoKSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3BhcnNlci5wYXJzZU5vcm1hbGl6ZWRTdHJpbmcoPHN0cmluZz4gbm9ybWFsaXplZFN0cmluZywgdGhpcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnY2Fubm90IHRyYW5zbGF0ZSBJQ1UgbWVzc2FnZSB3aXRoIHNpbXBsZSBzdHJpbmcsIHVzZSB0cmFuc2xhdGVJQ1VNZXNzYWdlKCkgaW5zdGVhZCAoXCIlc1wiLCBcIiVzXCIpJyxcclxuICAgICAgICAgICAgICAgIG5vcm1hbGl6ZWRTdHJpbmcsIHRoaXMuYXNOYXRpdmVTdHJpbmcoKSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSBhIG5ldyBub3JtYWxpemVkIGljdSBtZXNzYWdlIGFzIGEgdHJhbnNsYXRpb24gb2YgdGhpcyBvbmUuXHJcbiAgICAgKiBAcGFyYW0gaWN1VHJhbnNsYXRpb24gdGhlIHRyYW5zbGF0aW9uLCB0aGlzIGlzIHRoZSB0cmFuc2xhdGlvbiBvZiB0aGUgSUNVIG1lc3NhZ2UsXHJcbiAgICAgKiB3aGljaCBpcyBub3QgYSBzdHJpbmcsIGJ1dCBhIGNvbGxlY3Rpb25zIG9mIHRoZSB0cmFuc2xhdGlvbnMgb2YgdGhlIGRpZmZlcmVudCBjYXRlZ29yaWVzLlxyXG4gICAgICogVGhlIG1lc3NhZ2UgbXVzdCBiZSBhbiBJQ1VNZXNzYWdlIChnZXRJQ1VNZXNzYWdlIHJldHVybnMgYSB2YWx1ZSlcclxuICAgICAqIEB0aHJvd3MgYW4gZXJyb3IgaWYgbm9ybWFsaXplZCBzdHJpbmcgaXMgbm90IHdlbGwgZm9ybWVkLlxyXG4gICAgICogVGhyb3dzIGFuIGVycm9yIHRvbywgaWYgdGhpcyBpcyBub3QgYW4gSUNVIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHRyYW5zbGF0ZUlDVU1lc3NhZ2UoaWN1VHJhbnNsYXRpb246IElJQ1VNZXNzYWdlVHJhbnNsYXRpb24pOiBJTm9ybWFsaXplZE1lc3NhZ2Uge1xyXG4gICAgICAgIGNvbnN0IGljdU1lc3NhZ2U6IElJQ1VNZXNzYWdlID0gdGhpcy5nZXRJQ1VNZXNzYWdlKCk7XHJcbiAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKGljdU1lc3NhZ2UpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ3RoaXMgaXMgbm90IGFuIElDVSBtZXNzYWdlLCB1c2UgdHJhbnNsYXRlKCkgaW5zdGVhZCAoXCIlc1wiLCBcIiVzXCIpJyxcclxuICAgICAgICAgICAgICAgIGljdVRyYW5zbGF0aW9uLCAgdGhpcy5hc05hdGl2ZVN0cmluZygpKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgdHJhbnNsYXRlZElDVU1lc3NhZ2U6IElJQ1VNZXNzYWdlID0gaWN1TWVzc2FnZS50cmFuc2xhdGUoaWN1VHJhbnNsYXRpb24pO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcGFyc2VyLnBhcnNlSUNVTWVzc2FnZSh0cmFuc2xhdGVkSUNVTWVzc2FnZS5hc05hdGl2ZVN0cmluZygpLCB0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSBuZXcgbm9ybWFsaXplZCBtZXNzYWdlIGZyb20gYSBuYXRpdmUgeG1sIHN0cmluZyBhcyBhIHRyYW5zbGF0aW9uIG9mIHRoaXMgb25lLlxyXG4gICAgICogQHBhcmFtIG5hdGl2ZVN0cmluZyB4bWwgc3RyaW5nIGluIHRoZSBmb3JtYXQgb2YgdGhlIHVuZGVybHlpbmcgZmlsZSBmb3JtYXQuXHJcbiAgICAgKiBUaHJvd3MgYW4gZXJyb3IgaWYgbmF0aXZlIHN0cmluZyBpcyBub3QgYWNjZXB0YWJsZS5cclxuICAgICAqL1xyXG4gICAgdHJhbnNsYXRlTmF0aXZlU3RyaW5nKG5hdGl2ZVN0cmluZzogc3RyaW5nKTogSU5vcm1hbGl6ZWRNZXNzYWdlIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFyc2VyLmNyZWF0ZU5vcm1hbGl6ZWRNZXNzYWdlRnJvbVhNTFN0cmluZyhuYXRpdmVTdHJpbmcsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogbm9ybWFsaXplZCBtZXNzYWdlIGFzIHN0cmluZy5cclxuICAgICAqIEBwYXJhbSBkaXNwbGF5Rm9ybWF0IG9wdGlvbmFsIHdheSB0byBkZXRlcm1pbmUgdGhlIGV4YWN0IHN5bnRheC5cclxuICAgICAqIEFsbG93ZWQgZm9ybWF0cyBhcmUgZGVmaW5lZCBhcyBjb25zdGFudHMgTk9STUFMSVpBVElPTl9GT1JNQVQuLi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGFzRGlzcGxheVN0cmluZyhkaXNwbGF5Rm9ybWF0Pzogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BhcnRzLm1hcCgocGFydCkgPT4gcGFydC5hc0Rpc3BsYXlTdHJpbmcoZGlzcGxheUZvcm1hdCkpLmpvaW4oJycpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgbWVzc2FnZSBjb250ZW50IGFzIGZvcm1hdCBkZXBlbmRlbnQgbmF0aXZlIHN0cmluZy5cclxuICAgICAqIEluY2x1ZGVzIGFsbCBmb3JtYXQgc3BlY2lmaWMgbWFya3VwIGxpa2UgPHBoIGlkPVwiSU5URVJQT0xBVElPTlwiIC4uLz4gLi5cclxuICAgICAqL1xyXG4gICAgYXNOYXRpdmVTdHJpbmcoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQodGhpcy5nZXRJQ1VNZXNzYWdlKCkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBET01VdGlsaXRpZXMuZ2V0WE1MQ29udGVudCh0aGlzLl94bWxSZXByZXNlbnRhdGlvbik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0SUNVTWVzc2FnZSgpLmFzTmF0aXZlU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVmFsaWRhdGUgdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBAcmV0dXJuIG51bGwsIGlmIG9rLCBlcnJvciBvYmplY3Qgb3RoZXJ3aXNlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdmFsaWRhdGUoKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGwge1xyXG4gICAgICAgIGxldCBoYXNFcnJvcnMgPSBmYWxzZTtcclxuICAgICAgICBjb25zdCBlcnJvcnM6IFZhbGlkYXRpb25FcnJvcnMgPSB7fTtcclxuICAgICAgICBsZXQgZTtcclxuICAgICAgICBlID0gdGhpcy5jaGVja1BsYWNlaG9sZGVyQWRkZWQoKTtcclxuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKGUpKSB7XHJcbiAgICAgICAgICAgIGVycm9ycy5wbGFjZWhvbGRlckFkZGVkID0gZTtcclxuICAgICAgICAgICAgaGFzRXJyb3JzID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZSA9IHRoaXMuY2hlY2tJQ1VNZXNzYWdlUmVmUmVtb3ZlZCgpO1xyXG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoZSkpIHtcclxuICAgICAgICAgICAgZXJyb3JzLmljdU1lc3NhZ2VSZWZSZW1vdmVkID0gZTtcclxuICAgICAgICAgICAgaGFzRXJyb3JzID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZSA9IHRoaXMuY2hlY2tJQ1VNZXNzYWdlUmVmQWRkZWQoKTtcclxuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKGUpKSB7XHJcbiAgICAgICAgICAgIGVycm9ycy5pY3VNZXNzYWdlUmVmQWRkZWQgPSBlO1xyXG4gICAgICAgICAgICBoYXNFcnJvcnMgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaGFzRXJyb3JzID8gZXJyb3JzIDogbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFZhbGlkYXRlIHRoZSBtZXNzYWdlLCBjaGVjayBmb3Igd2FybmluZ3Mgb25seS5cclxuICAgICAqIEEgd2FybmluZyBzaG93cywgdGhhdCB0aGUgbWVzc2FnZSBpcyBhY2NlcHRhYmxlLCBidXQgbWlzc2VzIHNvbWV0aGluZy5cclxuICAgICAqIEUuZy4gaWYgeW91IHJlbW92ZSBhIHBsYWNlaG9sZGVyIG9yIGEgc3BlY2lhbCB0YWcgZnJvbSB0aGUgb3JpZ2luYWwgbWVzc2FnZSwgdGhpcyBnZW5lcmF0ZXMgYSB3YXJuaW5nLlxyXG4gICAgICogQHJldHVybiBudWxsLCBpZiBubyB3YXJuaW5nLCB3YXJuaW5ncyBhcyBlcnJvciBvYmplY3Qgb3RoZXJ3aXNlLlxyXG4gICAgICovXHJcbiAgICB2YWxpZGF0ZVdhcm5pbmdzKCk6IFZhbGlkYXRpb25FcnJvcnMgfCBudWxsIHtcclxuICAgICAgICBsZXQgaGFzV2FybmluZ3MgPSBmYWxzZTtcclxuICAgICAgICBjb25zdCB3YXJuaW5nczogVmFsaWRhdGlvbkVycm9ycyA9IHt9O1xyXG4gICAgICAgIGxldCB3O1xyXG4gICAgICAgIHcgPSB0aGlzLmNoZWNrUGxhY2Vob2xkZXJSZW1vdmVkKCk7XHJcbiAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZCh3KSkge1xyXG4gICAgICAgICAgICB3YXJuaW5ncy5wbGFjZWhvbGRlclJlbW92ZWQgPSB3O1xyXG4gICAgICAgICAgICBoYXNXYXJuaW5ncyA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHcgPSB0aGlzLmNoZWNrVGFnUmVtb3ZlZCgpO1xyXG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQodykpIHtcclxuICAgICAgICAgICAgd2FybmluZ3MudGFnUmVtb3ZlZCA9IHc7XHJcbiAgICAgICAgICAgIGhhc1dhcm5pbmdzID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdyA9IHRoaXMuY2hlY2tUYWdBZGRlZCgpO1xyXG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQodykpIHtcclxuICAgICAgICAgICAgd2FybmluZ3MudGFnQWRkZWQgPSB3O1xyXG4gICAgICAgICAgICBoYXNXYXJuaW5ncyA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBoYXNXYXJuaW5ncyA/IHdhcm5pbmdzIDogbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIElmIHRoaXMgbWVzc2FnZSBpcyBhbiBJQ1UgbWVzc2FnZSwgcmV0dXJucyBpdHMgc3RydWN0dXJlLlxyXG4gICAgICogT3RoZXJ3aXNlIHRoaXMgbWV0aG9kIHJldHVybnMgbnVsbC5cclxuICAgICAqIEByZXR1cm4gSUNVTWVzc2FnZSBvciBudWxsLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0SUNVTWVzc2FnZSgpOiBJSUNVTWVzc2FnZSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3BhcnRzLmxlbmd0aCA9PT0gMSAmJiB0aGlzLl9wYXJ0c1swXS50eXBlID09PSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuSUNVX01FU1NBR0UpIHtcclxuICAgICAgICAgICAgY29uc3QgaWN1UGFydCA9IDxQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2U+IHRoaXMuX3BhcnRzWzBdO1xyXG4gICAgICAgICAgICByZXR1cm4gaWN1UGFydC5nZXRJQ1VNZXNzYWdlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGZvciBhZGRlZCBwbGFjZWhvbGRlci5cclxuICAgICAqIEByZXR1cm4gbnVsbCBvciBtZXNzYWdlLCBpZiBmdWxmaWxsZWQuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2hlY2tQbGFjZWhvbGRlckFkZGVkKCk6IGFueSB7XHJcbiAgICAgICAgbGV0IGUgPSBudWxsO1xyXG4gICAgICAgIGNvbnN0IHN1c3BpY2lvdXNJbmRleGVzID0gW107XHJcbiAgICAgICAgaWYgKHRoaXMuc291cmNlTWVzc2FnZSkge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VQbGFjZWhvbGRlcnMgPSB0aGlzLnNvdXJjZU1lc3NhZ2UuYWxsUGxhY2Vob2xkZXJzKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG15UGxhY2Vob2xkZXJzID0gdGhpcy5hbGxQbGFjZWhvbGRlcnMoKTtcclxuICAgICAgICAgICAgbXlQbGFjZWhvbGRlcnMuZm9yRWFjaCgoaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghc291cmNlUGxhY2Vob2xkZXJzLmhhcyhpbmRleCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdXNwaWNpb3VzSW5kZXhlcy5wdXNoKGluZGV4KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChzdXNwaWNpb3VzSW5kZXhlcy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgZSA9ICdhZGRlZCBwbGFjZWhvbGRlciAnICsgc3VzcGljaW91c0luZGV4ZXNbMF0gKyAnLCB3aGljaCBpcyBub3QgaW4gb3JpZ2luYWwgbWVzc2FnZSc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChzdXNwaWNpb3VzSW5kZXhlcy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgIGxldCBhbGxTdXNwaWNpb3VzSW5kZXhlcyA9ICcnO1xyXG4gICAgICAgICAgICBsZXQgZmlyc3QgPSB0cnVlO1xyXG4gICAgICAgICAgICBzdXNwaWNpb3VzSW5kZXhlcy5mb3JFYWNoKChpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFmaXJzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFsbFN1c3BpY2lvdXNJbmRleGVzID0gYWxsU3VzcGljaW91c0luZGV4ZXMgKyAnLCAnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYWxsU3VzcGljaW91c0luZGV4ZXMgPSBhbGxTdXNwaWNpb3VzSW5kZXhlcyArIGluZGV4O1xyXG4gICAgICAgICAgICAgICAgZmlyc3QgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGUgPSAnYWRkZWQgcGxhY2Vob2xkZXJzICcgKyBhbGxTdXNwaWNpb3VzSW5kZXhlcyArICcsIHdoaWNoIGFyZSBub3QgaW4gb3JpZ2luYWwgbWVzc2FnZSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2sgZm9yIHJlbW92ZWQgcGxhY2Vob2xkZXIuXHJcbiAgICAgKiBAcmV0dXJuIG51bGwgb3IgbWVzc2FnZSwgaWYgZnVsZmlsbGVkLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNoZWNrUGxhY2Vob2xkZXJSZW1vdmVkKCk6IGFueSB7XHJcbiAgICAgICAgbGV0IHcgPSBudWxsO1xyXG4gICAgICAgIGNvbnN0IHN1c3BpY2lvdXNJbmRleGVzID0gW107XHJcbiAgICAgICAgaWYgKHRoaXMuc291cmNlTWVzc2FnZSkge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VQbGFjZWhvbGRlcnMgPSB0aGlzLnNvdXJjZU1lc3NhZ2UuYWxsUGxhY2Vob2xkZXJzKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG15UGxhY2Vob2xkZXJzID0gdGhpcy5hbGxQbGFjZWhvbGRlcnMoKTtcclxuICAgICAgICAgICAgc291cmNlUGxhY2Vob2xkZXJzLmZvckVhY2goKGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIW15UGxhY2Vob2xkZXJzLmhhcyhpbmRleCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdXNwaWNpb3VzSW5kZXhlcy5wdXNoKGluZGV4KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChzdXNwaWNpb3VzSW5kZXhlcy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgdyA9ICdyZW1vdmVkIHBsYWNlaG9sZGVyICcgKyBzdXNwaWNpb3VzSW5kZXhlc1swXSArICcgZnJvbSBvcmlnaW5hbCBtZXNzYWdlJztcclxuICAgICAgICB9IGVsc2UgaWYgKHN1c3BpY2lvdXNJbmRleGVzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgbGV0IGFsbFN1c3BpY2lvdXNJbmRleGVzID0gJyc7XHJcbiAgICAgICAgICAgIGxldCBmaXJzdCA9IHRydWU7XHJcbiAgICAgICAgICAgIHN1c3BpY2lvdXNJbmRleGVzLmZvckVhY2goKGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWZpcnN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxsU3VzcGljaW91c0luZGV4ZXMgPSBhbGxTdXNwaWNpb3VzSW5kZXhlcyArICcsICc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBhbGxTdXNwaWNpb3VzSW5kZXhlcyA9IGFsbFN1c3BpY2lvdXNJbmRleGVzICsgaW5kZXg7XHJcbiAgICAgICAgICAgICAgICBmaXJzdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdyA9ICdyZW1vdmVkIHBsYWNlaG9sZGVycyAnICsgYWxsU3VzcGljaW91c0luZGV4ZXMgKyAnIGZyb20gb3JpZ2luYWwgbWVzc2FnZSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB3O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2sgZm9yIGFkZGVkIElDVSBNZXNzYWdlIFJlZnMuXHJcbiAgICAgKiBAcmV0dXJuIG51bGwgb3IgbWVzc2FnZSwgaWYgZnVsZmlsbGVkLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNoZWNrSUNVTWVzc2FnZVJlZkFkZGVkKCk6IGFueSB7XHJcbiAgICAgICAgbGV0IGUgPSBudWxsO1xyXG4gICAgICAgIGNvbnN0IHN1c3BpY2lvdXNJbmRleGVzID0gW107XHJcbiAgICAgICAgaWYgKHRoaXMuc291cmNlTWVzc2FnZSkge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VJQ1VSZWZzID0gdGhpcy5zb3VyY2VNZXNzYWdlLmFsbElDVU1lc3NhZ2VSZWZzKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG15SUNVUmVmcyA9IHRoaXMuYWxsSUNVTWVzc2FnZVJlZnMoKTtcclxuICAgICAgICAgICAgbXlJQ1VSZWZzLmZvckVhY2goKGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXNvdXJjZUlDVVJlZnMuaGFzKGluZGV4KSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1c3BpY2lvdXNJbmRleGVzLnB1c2goaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHN1c3BpY2lvdXNJbmRleGVzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICBlID0gJ2FkZGVkIElDVSBtZXNzYWdlIHJlZmVyZW5jZSAnICsgc3VzcGljaW91c0luZGV4ZXNbMF0gKyAnLCB3aGljaCBpcyBub3QgaW4gb3JpZ2luYWwgbWVzc2FnZSc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChzdXNwaWNpb3VzSW5kZXhlcy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgIGxldCBhbGxTdXNwaWNpb3VzSW5kZXhlcyA9ICcnO1xyXG4gICAgICAgICAgICBsZXQgZmlyc3QgPSB0cnVlO1xyXG4gICAgICAgICAgICBzdXNwaWNpb3VzSW5kZXhlcy5mb3JFYWNoKChpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFmaXJzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFsbFN1c3BpY2lvdXNJbmRleGVzID0gYWxsU3VzcGljaW91c0luZGV4ZXMgKyAnLCAnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYWxsU3VzcGljaW91c0luZGV4ZXMgPSBhbGxTdXNwaWNpb3VzSW5kZXhlcyArIGluZGV4O1xyXG4gICAgICAgICAgICAgICAgZmlyc3QgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGUgPSAnYWRkZWQgSUNVIG1lc3NhZ2UgcmVmZXJlbmNlcyAnICsgYWxsU3VzcGljaW91c0luZGV4ZXMgKyAnLCB3aGljaCBhcmUgbm90IGluIG9yaWdpbmFsIG1lc3NhZ2UnO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGZvciByZW1vdmVkIElDVSBNZXNzYWdlIFJlZnMuXHJcbiAgICAgKiBAcmV0dXJuIG51bGwgb3IgbWVzc2FnZSwgaWYgZnVsZmlsbGVkLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNoZWNrSUNVTWVzc2FnZVJlZlJlbW92ZWQoKTogYW55IHtcclxuICAgICAgICBsZXQgZSA9IG51bGw7XHJcbiAgICAgICAgY29uc3Qgc3VzcGljaW91c0luZGV4ZXMgPSBbXTtcclxuICAgICAgICBpZiAodGhpcy5zb3VyY2VNZXNzYWdlKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNvdXJjZUlDVVJlZnMgPSB0aGlzLnNvdXJjZU1lc3NhZ2UuYWxsSUNVTWVzc2FnZVJlZnMoKTtcclxuICAgICAgICAgICAgY29uc3QgbXlJQ1VSZWZzID0gdGhpcy5hbGxJQ1VNZXNzYWdlUmVmcygpO1xyXG4gICAgICAgICAgICBzb3VyY2VJQ1VSZWZzLmZvckVhY2goKGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIW15SUNVUmVmcy5oYXMoaW5kZXgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3VzcGljaW91c0luZGV4ZXMucHVzaChpbmRleCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc3VzcGljaW91c0luZGV4ZXMubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgICAgIGUgPSAncmVtb3ZlZCBJQ1UgbWVzc2FnZSByZWZlcmVuY2UgJyArIHN1c3BpY2lvdXNJbmRleGVzWzBdICsgJyBmcm9tIG9yaWdpbmFsIG1lc3NhZ2UnO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoc3VzcGljaW91c0luZGV4ZXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICBsZXQgYWxsU3VzcGljaW91c0luZGV4ZXMgPSAnJztcclxuICAgICAgICAgICAgbGV0IGZpcnN0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgc3VzcGljaW91c0luZGV4ZXMuZm9yRWFjaCgoaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghZmlyc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbGxTdXNwaWNpb3VzSW5kZXhlcyA9IGFsbFN1c3BpY2lvdXNJbmRleGVzICsgJywgJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGFsbFN1c3BpY2lvdXNJbmRleGVzID0gYWxsU3VzcGljaW91c0luZGV4ZXMgKyBpbmRleDtcclxuICAgICAgICAgICAgICAgIGZpcnN0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBlID0gJ3JlbW92ZWQgSUNVIG1lc3NhZ2UgcmVmZXJlbmNlcyAnICsgYWxsU3VzcGljaW91c0luZGV4ZXMgKyAnIGZyb20gb3JpZ2luYWwgbWVzc2FnZSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGFsbCBpbmRleGVzIG9mIHBsYWNlaG9sZGVycyB1c2VkIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGFsbFBsYWNlaG9sZGVycygpOiBTZXQ8bnVtYmVyPiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IFNldDxudW1iZXI+KCk7XHJcbiAgICAgICAgdGhpcy5wYXJ0cygpLmZvckVhY2goKHBhcnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKHBhcnQudHlwZSA9PT0gUGFyc2VkTWVzc2FnZVBhcnRUeXBlLlBMQUNFSE9MREVSKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9ICg8UGFyc2VkTWVzc2FnZVBhcnRQbGFjZWhvbGRlcj4gcGFydCkuaW5kZXgoKTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5hZGQoaW5kZXgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiB0aGUgZGlzcC1BdHRyaWJ1dGUgb2YgcGxhY2Vob2xkZXJcclxuICAgICAqIEBwYXJhbSBpbmRleCBpbmRleCBvZiBwbGFjZWhvbGRlclxyXG4gICAgICogQHJldHVybiBkaXNwIG9yIG51bGxcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldFBsYWNlaG9sZGVyRGlzcChpbmRleDogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgcGxhY2VIb2xkZXI6IFBhcnNlZE1lc3NhZ2VQYXJ0UGxhY2Vob2xkZXIgPSBudWxsO1xyXG4gICAgICAgIHRoaXMucGFydHMoKS5mb3JFYWNoKChwYXJ0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChwYXJ0LnR5cGUgPT09IFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5QTEFDRUhPTERFUikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcGhQYXJ0OiBQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyID0gPFBhcnNlZE1lc3NhZ2VQYXJ0UGxhY2Vob2xkZXI+IHBhcnQ7XHJcbiAgICAgICAgICAgICAgICBpZiAocGhQYXJ0LmluZGV4KCkgPT09IGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2VIb2xkZXIgPSBwaFBhcnQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gcGxhY2VIb2xkZXIgPyBwbGFjZUhvbGRlci5kaXNwKCkgOiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGFsbCBpbmRleGVzIG9mIElDVSBtZXNzYWdlIHJlZnMgdXNlZCBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBhbGxJQ1VNZXNzYWdlUmVmcygpOiBTZXQ8bnVtYmVyPiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IFNldDxudW1iZXI+KCk7XHJcbiAgICAgICAgdGhpcy5wYXJ0cygpLmZvckVhY2goKHBhcnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKHBhcnQudHlwZSA9PT0gUGFyc2VkTWVzc2FnZVBhcnRUeXBlLklDVV9NRVNTQUdFX1JFRikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSAoPFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZj4gcGFydCkuaW5kZXgoKTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5hZGQoaW5kZXgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiB0aGUgZGlzcC1BdHRyaWJ1dGUgb2YgaWN1IG1lc3NhZ2UgcmVmXHJcbiAgICAgKiBAcGFyYW0gaW5kZXggb2YgcmVmXHJcbiAgICAgKiBAcmV0dXJuIGRpc3Agb3IgbnVsbFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0SUNVTWVzc2FnZVJlZkRpc3AoaW5kZXg6IG51bWJlcik6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IGljdU1lc3NhZ2VSZWZQYXJ0OiBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYgPSBudWxsO1xyXG4gICAgICAgIHRoaXMucGFydHMoKS5mb3JFYWNoKChwYXJ0KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChwYXJ0LnR5cGUgPT09IFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5JQ1VfTUVTU0FHRV9SRUYpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlZlBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZiA9IDxQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWY+IHBhcnQ7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVmUGFydC5pbmRleCgpID09PSBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGljdU1lc3NhZ2VSZWZQYXJ0ID0gcmVmUGFydDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBpY3VNZXNzYWdlUmVmUGFydCA/IGljdU1lc3NhZ2VSZWZQYXJ0LmRpc3AoKSA6IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayBmb3IgYWRkZWQgdGFncy5cclxuICAgICAqIEByZXR1cm4gbnVsbCBvciBtZXNzYWdlLCBpZiBmdWxmaWxsZWQuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2hlY2tUYWdBZGRlZCgpOiBhbnkge1xyXG4gICAgICAgIGxldCBlID0gbnVsbDtcclxuICAgICAgICBjb25zdCBzdXNwaWNpb3VzVGFncyA9IFtdO1xyXG4gICAgICAgIGlmICh0aGlzLnNvdXJjZU1lc3NhZ2UpIHtcclxuICAgICAgICAgICAgY29uc3Qgc291cmNlVGFncyA9IHRoaXMuc291cmNlTWVzc2FnZS5hbGxUYWdzKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG15VGFncyA9IHRoaXMuYWxsVGFncygpO1xyXG4gICAgICAgICAgICBteVRhZ3MuZm9yRWFjaCgodGFnTmFtZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFzb3VyY2VUYWdzLmhhcyh0YWdOYW1lKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1c3BpY2lvdXNUYWdzLnB1c2godGFnTmFtZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc3VzcGljaW91c1RhZ3MubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgICAgIGUgPSAnYWRkZWQgdGFnIDwnICsgc3VzcGljaW91c1RhZ3NbMF0gKyAnPiwgd2hpY2ggaXMgbm90IGluIG9yaWdpbmFsIG1lc3NhZ2UnO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoc3VzcGljaW91c1RhZ3MubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgICBsZXQgYWxsU3VzcGljaW91c1RhZ3MgPSAnJztcclxuICAgICAgICAgICAgbGV0IGZpcnN0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgc3VzcGljaW91c1RhZ3MuZm9yRWFjaCgodGFnKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWZpcnN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxsU3VzcGljaW91c1RhZ3MgPSBhbGxTdXNwaWNpb3VzVGFncyArICcsICc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBhbGxTdXNwaWNpb3VzVGFncyA9IGFsbFN1c3BpY2lvdXNUYWdzICsgJzwnICsgdGFnICsgJz4nO1xyXG4gICAgICAgICAgICAgICAgZmlyc3QgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGUgPSAnYWRkZWQgdGFncyAnICsgYWxsU3VzcGljaW91c1RhZ3MgKyAnLCB3aGljaCBhcmUgbm90IGluIG9yaWdpbmFsIG1lc3NhZ2UnO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGZvciByZW1vdmVkIHRhZ3MuXHJcbiAgICAgKiBAcmV0dXJuIG51bGwgb3IgbWVzc2FnZSwgaWYgZnVsZmlsbGVkLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNoZWNrVGFnUmVtb3ZlZCgpOiBhbnkge1xyXG4gICAgICAgIGxldCB3ID0gbnVsbDtcclxuICAgICAgICBjb25zdCBzdXNwaWNpb3VzVGFncyA9IFtdO1xyXG4gICAgICAgIGlmICh0aGlzLnNvdXJjZU1lc3NhZ2UpIHtcclxuICAgICAgICAgICAgY29uc3Qgc291cmNlVGFncyA9IHRoaXMuc291cmNlTWVzc2FnZS5hbGxUYWdzKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG15VGFncyA9IHRoaXMuYWxsVGFncygpO1xyXG4gICAgICAgICAgICBzb3VyY2VUYWdzLmZvckVhY2goKHRhZ05hbWUpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghbXlUYWdzLmhhcyh0YWdOYW1lKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1c3BpY2lvdXNUYWdzLnB1c2godGFnTmFtZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc3VzcGljaW91c1RhZ3MubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgICAgIHcgPSAncmVtb3ZlZCB0YWcgPCcgKyBzdXNwaWNpb3VzVGFnc1swXSArICc+IGZyb20gb3JpZ2luYWwgbWVzc2FnZSc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChzdXNwaWNpb3VzVGFncy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgIGxldCBhbGxTdXNwaWNpb3VzVGFncyA9ICcnO1xyXG4gICAgICAgICAgICBsZXQgZmlyc3QgPSB0cnVlO1xyXG4gICAgICAgICAgICBzdXNwaWNpb3VzVGFncy5mb3JFYWNoKCh0YWcpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghZmlyc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICBhbGxTdXNwaWNpb3VzVGFncyA9IGFsbFN1c3BpY2lvdXNUYWdzICsgJywgJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGFsbFN1c3BpY2lvdXNUYWdzID0gYWxsU3VzcGljaW91c1RhZ3MgKyAnPCcgKyB0YWcgKyAnPic7XHJcbiAgICAgICAgICAgICAgICBmaXJzdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdyA9ICdyZW1vdmVkIHRhZ3MgJyArIGFsbFN1c3BpY2lvdXNUYWdzICsgJyBmcm9tIG9yaWdpbmFsIG1lc3NhZ2UnO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCBhbGwgdGFnIG5hbWVzIHVzZWQgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYWxsVGFncygpOiBTZXQ8c3RyaW5nPiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IFNldDxzdHJpbmc+KCk7XHJcbiAgICAgICAgdGhpcy5wYXJ0cygpLmZvckVhY2goKHBhcnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKHBhcnQudHlwZSA9PT0gUGFyc2VkTWVzc2FnZVBhcnRUeXBlLlNUQVJUX1RBRyB8fCBwYXJ0LnR5cGUgPT09IFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTVBUWV9UQUcpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHRhZ05hbWUgPSAoPFBhcnNlZE1lc3NhZ2VQYXJ0U3RhcnRUYWc+IHBhcnQpLnRhZ05hbWUoKTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5hZGQodGFnTmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBwYXJ0cygpOiBQYXJzZWRNZXNzYWdlUGFydFtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFydHM7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0WG1sUmVwcmVzZW50YXRpb24oeG1sUmVwcmVzZW50YXRpb246IEVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl94bWxSZXByZXNlbnRhdGlvbiA9IHhtbFJlcHJlc2VudGF0aW9uO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZFRleHQodGV4dDogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fcGFydHMucHVzaChuZXcgUGFyc2VkTWVzc2FnZVBhcnRUZXh0KHRleHQpKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRQbGFjZWhvbGRlcihpbmRleDogbnVtYmVyLCBkaXNwOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9wYXJ0cy5wdXNoKG5ldyBQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyKGluZGV4LCBkaXNwKSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkU3RhcnRUYWcodGFnbmFtZTogc3RyaW5nLCBpZGNvdW50ZXI6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuX3BhcnRzLnB1c2gobmV3IFBhcnNlZE1lc3NhZ2VQYXJ0U3RhcnRUYWcodGFnbmFtZSwgaWRjb3VudGVyKSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRW5kVGFnKHRhZ25hbWU6IHN0cmluZykge1xyXG4gICAgICAgIC8vIGNoZWNrIGlmIHdlbGwgZm9ybWVkXHJcbiAgICAgICAgY29uc3Qgb3BlblRhZyA9IHRoaXMuY2FsY3VsYXRlT3BlblRhZ05hbWUoKTtcclxuICAgICAgICBpZiAoIW9wZW5UYWcgfHwgb3BlblRhZyAhPT0gdGFnbmFtZSkge1xyXG4gICAgICAgICAgICAvLyBvb3BzLCBub3Qgd2VsbCBmb3JtZWRcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgndW5leHBlY3RlZCBjbG9zZSB0YWcgJXMgKGN1cnJlbnRseSBvcGVuIGlzICVzLCBuYXRpdmUgeG1sIGlzIFwiJXNcIiknLFxyXG4gICAgICAgICAgICAgICAgdGFnbmFtZSwgb3BlblRhZywgdGhpcy5hc05hdGl2ZVN0cmluZygpKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3BhcnRzLnB1c2gobmV3IFBhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnKHRhZ25hbWUpKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFbXB0eVRhZyh0YWduYW1lOiBzdHJpbmcsIGlkY291bnRlcjogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5fcGFydHMucHVzaChuZXcgUGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZyh0YWduYW1lLCBpZGNvdW50ZXIpKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRJQ1VNZXNzYWdlUmVmKGluZGV4OiBudW1iZXIsIGRpc3ApIHtcclxuICAgICAgICB0aGlzLl9wYXJ0cy5wdXNoKG5ldyBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYoaW5kZXgsIGRpc3ApKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRJQ1VNZXNzYWdlKHRleHQ6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX3BhcnRzLnB1c2gobmV3IFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZSh0ZXh0LCB0aGlzLl9wYXJzZXIpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERldGVybWluZSwgd2V0aGVyIHRoZXJlIGlzIGFuIG9wZW4gdGFnLCB0aGF0IGlzIG5vdCBjbG9zZWQuXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBsYXRlc3Qgb25lIG9yIG51bGwsIGlmIHRoZXJlIGlzIG5vIG9wZW4gdGFnLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNhbGN1bGF0ZU9wZW5UYWdOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3Qgb3BlblRhZ3MgPSBbXTtcclxuICAgICAgICB0aGlzLl9wYXJ0cy5mb3JFYWNoKChwYXJ0KSA9PiB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAocGFydC50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5TVEFSVF9UQUc6XHJcbiAgICAgICAgICAgICAgICAgICAgb3BlblRhZ3MucHVzaCgoPFBhcnNlZE1lc3NhZ2VQYXJ0U3RhcnRUYWc+IHBhcnQpLnRhZ05hbWUoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTkRfVEFHOlxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhZ05hbWUgPSAoPFBhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnPiBwYXJ0KS50YWdOYW1lKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wZW5UYWdzLmxlbmd0aCA9PT0gMCB8fCBvcGVuVGFnc1tvcGVuVGFncy5sZW5ndGggLSAxXSAhPT0gdGFnTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBvb3BzLCBub3Qgd2VsbCBmb3JtZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3BlblRhZyA9IChvcGVuVGFncy5sZW5ndGggPT09IDApID8gJ25vdGhpbmcnIDogb3BlblRhZ3Nbb3BlblRhZ3MubGVuZ3RoIC0gMV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ3VuZXhwZWN0ZWQgY2xvc2UgdGFnICVzIChjdXJyZW50bHkgb3BlbiBpcyAlcywgbmF0aXZlIHhtbCBpcyBcIiVzXCIpJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhZ05hbWUsIG9wZW5UYWcsIHRoaXMuYXNOYXRpdmVTdHJpbmcoKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBvcGVuVGFncy5wb3AoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBvcGVuVGFncy5sZW5ndGggPT09IDAgPyBudWxsIDogb3BlblRhZ3Nbb3BlblRhZ3MubGVuZ3RoIC0gMV07XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0ICogYXMgVG9rZW5penIgZnJvbSAndG9rZW5penInO1xyXG5pbXBvcnQge2lzTnVsbE9yVW5kZWZpbmVkfSBmcm9tICd1dGlsJztcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAxNC4wNS4yMDE3LlxyXG4gKiBBIHRva2VuaXplciBmb3Igbm9ybWFsaXplZCBtZXNzYWdlcy5cclxuICovXHJcblxyXG4vLyBUb2tlbnNcclxuZXhwb3J0IGNvbnN0IFRFWFQgPSAnVEVYVCc7XHJcbmV4cG9ydCBjb25zdCBTVEFSVF9UQUcgPSAnU1RBUlRfVEFHJztcclxuZXhwb3J0IGNvbnN0IEVORF9UQUcgPSAnRU5EX1RBRyc7XHJcbmV4cG9ydCBjb25zdCBFTVBUWV9UQUcgPSAnRU1QVFlfVEFHJztcclxuZXhwb3J0IGNvbnN0IFBMQUNFSE9MREVSID0gJ1BMQUNFSE9MREVSJztcclxuZXhwb3J0IGNvbnN0IElDVV9NRVNTQUdFX1JFRiA9ICdJQ1VfTUVTU0FHRV9SRUYnO1xyXG5leHBvcnQgY29uc3QgSUNVX01FU1NBR0UgPSAnSUNVX01FU1NBR0UnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUb2tlbiB7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICB2YWx1ZTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUGFyc2VkTWVzYWdlVG9rZW5pemVyIHtcclxuXHJcbiAgICBwcml2YXRlIGdldExleGVyKCk6IFRva2VuaXpyIHtcclxuICAgICAgICBjb25zdCBsZXhlciA9IG5ldyBUb2tlbml6cigpO1xyXG4gICAgICAgIGxldCBwbGFpbnRleHQgPSAnJztcclxuICAgICAgICBsZXhlci5iZWZvcmUoKGN0eCwgbWF0Y2gsIHJ1bGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKHJ1bGUubmFtZSAhPT0gVEVYVCAmJiBwbGFpbnRleHQgIT09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICBjdHguYWNjZXB0KFRFWFQsIHt0ZXh0OiBwbGFpbnRleHR9KTtcclxuICAgICAgICAgICAgICAgIHBsYWludGV4dCA9ICcnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbGV4ZXIuZmluaXNoKChjdHgpID0+IHtcclxuICAgICAgICAgICAgaWYgKHBsYWludGV4dCAhPT0gJycpIHtcclxuICAgICAgICAgICAgICAgIGN0eC5hY2NlcHQoVEVYVCwge3RleHQ6IHBsYWludGV4dH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgIH0pO1xyXG4gICAgICAgIC8vIGVtcHR5IHRhZywgdGhlcmUgYXJlIG9ubHkgYSBmZXcgYWxsb3dlZCAoc2VlIHRhZy1tYXBwaW5ncyk6IFsnQlInLCAnSFInLCAnSU1HJywgJ0FSRUEnLCAnTElOSycsICdXQlInXVxyXG4gICAgICAgIC8vIGZvcm1hdCBpcyA8bmFtZSBpZD1cIm5yXCI+LCBuciBpc3Qgb3B0aW9uYWwsIHouQi4gPGltZz4gb2RlciA8aW1nIGlkPVwiMlwiPlxyXG4gICAgICAgIGxleGVyLnJ1bGUoLzwoYnJ8aHJ8aW1nfGFyZWF8bGlua3x3YnIpKCBpZD1cIihbMC05XSkqXCIpP1xcPi8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkY291bnQgPSBpc051bGxPclVuZGVmaW5lZChtYXRjaFszXSkgPyAwIDogcGFyc2VJbnQobWF0Y2hbM10sIDEwKTtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChFTVBUWV9UQUcsIHtuYW1lOiBtYXRjaFsxXSwgaWRjb3VudGVyOiBpZGNvdW50fSk7XHJcbiAgICAgICAgfSwgRU1QVFlfVEFHKTtcclxuICAgICAgICAvLyBzdGFydCB0YWcsIEZvcm1hdCA8bmFtZSBpZD1cIm5yXCI+LCBuciBpc3Qgb3B0aW9uYWwsIHouQi4gPG15dGFnPiBvZGVyIDxteXRhZyBpZD1cIjJcIj5cclxuICAgICAgICBsZXhlci5ydWxlKC88KFthLXpBLVpdW2EtekEtWi0wLTldKikoIGlkPVwiKFswLTldKilcIik/Pi8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkY291bnQgPSBpc051bGxPclVuZGVmaW5lZChtYXRjaFszXSkgPyAwIDogcGFyc2VJbnQobWF0Y2hbM10sIDEwKTtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChTVEFSVF9UQUcsIHtuYW1lOiBtYXRjaFsxXSwgaWRjb3VudGVyOiBpZGNvdW50fSk7XHJcbiAgICAgICAgfSwgU1RBUlRfVEFHKTtcclxuICAgICAgICAvLyBlbmQgdGFnXHJcbiAgICAgICAgbGV4ZXIucnVsZSgvPFxcLyhbYS16QS1aXVthLXpBLVotMC05XSopPi8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5hY2NlcHQoRU5EX1RBRywge25hbWU6IG1hdGNoWzFdfSk7XHJcbiAgICAgICAgfSwgRU5EX1RBRyk7XHJcbiAgICAgICAgLy8gcGxhY2Vob2xkZXJcclxuICAgICAgICBsZXhlci5ydWxlKC97eyhbMC05XSspfX0vLCAoY3R4LCBtYXRjaCkgPT4ge1xyXG4gICAgICAgICAgICBjdHguYWNjZXB0KFBMQUNFSE9MREVSLCB7aWRjb3VudGVyOiBwYXJzZUludChtYXRjaFsxXSwgMTApfSk7XHJcbiAgICAgICAgfSwgUExBQ0VIT0xERVIpO1xyXG4gICAgICAgIC8vIGljdSBtZXNzYWdlIHJlZlxyXG4gICAgICAgIGxleGVyLnJ1bGUoLzxJQ1UtTWVzc2FnZS1SZWZfKFswLTldKylcXC8+LywgKGN0eCwgbWF0Y2gpID0+IHtcclxuICAgICAgICAgICAgY3R4LmFjY2VwdChJQ1VfTUVTU0FHRV9SRUYsIHtpZGNvdW50ZXI6IHBhcnNlSW50KG1hdGNoWzFdLCAxMCl9KTtcclxuICAgICAgICB9LCBJQ1VfTUVTU0FHRV9SRUYpO1xyXG4gICAgICAgIC8vIGljdSBtZXNzYWdlXHJcbiAgICAgICAgbGV4ZXIucnVsZSgvPElDVS1NZXNzYWdlXFwvPi8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIGN0eC5hY2NlcHQoSUNVX01FU1NBR0UsIHttZXNzYWdlOiBtYXRjaFswXX0pO1xyXG4gICAgICAgIH0sIElDVV9NRVNTQUdFKTtcclxuICAgICAgICAvLyB0ZXh0XHJcbiAgICAgICAgbGV4ZXIucnVsZSgvLi8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIHBsYWludGV4dCArPSBtYXRjaFswXTtcclxuICAgICAgICAgICAgY3R4Lmlnbm9yZSgpO1xyXG4gICAgICAgIH0sIFRFWFQpO1xyXG4gICAgICAgIGxleGVyLnJ1bGUoL1tcXHRcXHJcXG5dKy8sIChjdHgsIG1hdGNoKSA9PiB7XHJcbiAgICAgICAgICAgIHBsYWludGV4dCArPSBtYXRjaFswXTtcclxuICAgICAgICAgICAgY3R4Lmlnbm9yZSgpO1xyXG4gICAgICAgIH0sIFRFWFQpO1xyXG4gICAgICAgIHJldHVybiBsZXhlcjtcclxuICAgIH1cclxuXHJcbiAgICB0b2tlbml6ZShub3JtYWxpemVkTWVzc2FnZTogc3RyaW5nKTogVG9rZW5bXSB7XHJcbiAgICAgICAgY29uc3QgbGV4ZXI6IFRva2VuaXpyID0gdGhpcy5nZXRMZXhlcigpO1xyXG4gICAgICAgIGxleGVyLnJlc2V0KCk7XHJcbiAgICAgICAgbGV4ZXIuaW5wdXQobm9ybWFsaXplZE1lc3NhZ2UpO1xyXG4gICAgICAgIHJldHVybiBsZXhlci50b2tlbnMoKTtcclxuICAgIH1cclxuXHJcbn1cclxuIiwiaW1wb3J0IHtQYXJzZWRNZXNzYWdlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlJztcclxuaW1wb3J0IHtcclxuICAgIEVNUFRZX1RBRyxcclxuICAgIEVORF9UQUcsIElDVV9NRVNTQUdFLCBJQ1VfTUVTU0FHRV9SRUYsIFBhcnNlZE1lc2FnZVRva2VuaXplciwgUExBQ0VIT0xERVIsIFNUQVJUX1RBRywgVEVYVCxcclxuICAgIFRva2VuXHJcbn0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS10b2tlbml6ZXInO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0VGV4dH0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXRleHQnO1xyXG5pbXBvcnQge0RPTVBhcnNlcn0gZnJvbSAneG1sZG9tJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtc3RhcnQtdGFnJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtcGxhY2Vob2xkZXInO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtZW5kLXRhZyc7XHJcbmltcG9ydCB7SU1lc3NhZ2VQYXJzZXJ9IGZyb20gJy4vaS1tZXNzYWdlLXBhcnNlcic7XHJcbmltcG9ydCB7Zm9ybWF0LCBpc051bGxPclVuZGVmaW5lZH0gZnJvbSAndXRpbCc7XHJcbmltcG9ydCB7RE9NVXRpbGl0aWVzfSBmcm9tICcuL2RvbS11dGlsaXRpZXMnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZn0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LWljdS1tZXNzYWdlLXJlZic7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRJQ1VNZXNzYWdlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtaWN1LW1lc3NhZ2UnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSByb29ibSBvbiAxMC4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgcGFyc2VyIGNhbiBwYXJzZSB0aGUgeG1sIGNvbnRlbnQgb2YgYSB0cmFuc2xhdGFibGUgbWVzc2FnZS5cclxuICogSXQgZ2VuZXJhdGVzIGEgUGFyc2VkTWVzc2FnZSBmcm9tIGl0LlxyXG4gKi9cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0TWVzc2FnZVBhcnNlciBpbXBsZW1lbnRzIElNZXNzYWdlUGFyc2VyIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlIFhNTCB0byBQYXJzZWRNZXNzYWdlLlxyXG4gICAgICogQHBhcmFtIHhtbEVsZW1lbnQgdGhlIHhtbCByZXByZXNlbnRhdGlvblxyXG4gICAgICogQHBhcmFtIHNvdXJjZU1lc3NhZ2Ugb3B0aW9uYWwgb3JpZ2luYWwgbWVzc2FnZSB0aGF0IHdpbGwgYmUgdHJhbnNsYXRlZCBieSBub3JtYWxpemVkIG5ldyBvbmVcclxuICAgICAqIFRocm93cyBhbiBlcnJvciBpZiBub3JtYWxpemVkIHhtbCBpcyBub3Qgd2VsbCBmb3JtZWQuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjcmVhdGVOb3JtYWxpemVkTWVzc2FnZUZyb21YTUwoeG1sRWxlbWVudDogRWxlbWVudCwgc291cmNlTWVzc2FnZTogUGFyc2VkTWVzc2FnZSk6IFBhcnNlZE1lc3NhZ2Uge1xyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2U6IFBhcnNlZE1lc3NhZ2UgPSBuZXcgUGFyc2VkTWVzc2FnZSh0aGlzLCBzb3VyY2VNZXNzYWdlKTtcclxuICAgICAgICBpZiAoeG1sRWxlbWVudCkge1xyXG4gICAgICAgICAgICBtZXNzYWdlLnNldFhtbFJlcHJlc2VudGF0aW9uKHhtbEVsZW1lbnQpO1xyXG4gICAgICAgICAgICB0aGlzLmFkZFBhcnRzT2ZOb2RlVG9NZXNzYWdlKHhtbEVsZW1lbnQsIG1lc3NhZ2UsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQYXJzZSBYTUwgc3RyaW5nIHRvIFBhcnNlZE1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0geG1sU3RyaW5nIHRoZSB4bWwgcmVwcmVzZW50YXRpb24gd2l0aG91dCByb290IGVsZW1lbnQsIGUuZy4gdGhpcyBpcyA8cGggeD48L3BoPiBhbiBleGFtcGxlLlxyXG4gICAgICogQHBhcmFtIHNvdXJjZU1lc3NhZ2Ugb3B0aW9uYWwgb3JpZ2luYWwgbWVzc2FnZSB0aGF0IHdpbGwgYmUgdHJhbnNsYXRlZCBieSBub3JtYWxpemVkIG5ldyBvbmVcclxuICAgICAqIFRocm93cyBhbiBlcnJvciBpZiBub3JtYWxpemVkIHhtbCBpcyBub3Qgd2VsbCBmb3JtZWQuXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZU5vcm1hbGl6ZWRNZXNzYWdlRnJvbVhNTFN0cmluZyh4bWxTdHJpbmc6IHN0cmluZywgc291cmNlTWVzc2FnZTogUGFyc2VkTWVzc2FnZSk6IFBhcnNlZE1lc3NhZ2Uge1xyXG4gICAgICAgIGNvbnN0IGRvYzogRG9jdW1lbnQgPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKCc8ZHVtbXk+JyArIHhtbFN0cmluZyArICc8L2R1bW15PicsICd0ZXh0L3htbCcpO1xyXG4gICAgICAgIGNvbnN0IHhtbEVsZW1lbnQ6IEVsZW1lbnQgPSA8RWxlbWVudD4gZG9jLmNoaWxkTm9kZXMuaXRlbSgwKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVOb3JtYWxpemVkTWVzc2FnZUZyb21YTUwoeG1sRWxlbWVudCwgc291cmNlTWVzc2FnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiByZWN1cnNpdmVseSBydW4gdGhyb3VnaCBhIG5vZGUgYW5kIGFkZCBhbGwgaWRlbnRpZmllZCBwYXJ0cyB0byB0aGUgbWVzc2FnZS5cclxuICAgICAqIEBwYXJhbSBub2RlIG5vZGVcclxuICAgICAqIEBwYXJhbSBtZXNzYWdlIG1lc3NhZ2UgdG8gYmUgZ2VuZXJhdGVkLlxyXG4gICAgICogQHBhcmFtIGluY2x1ZGVTZWxmIGlmIHRydWUsIGFkZCBub2RlIGJ5IGl0c2VsZiwgb3RoZXJ3aXNlIG9ubHkgY2hpbGRyZW4uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgYWRkUGFydHNPZk5vZGVUb01lc3NhZ2Uobm9kZTogTm9kZSwgbWVzc2FnZTogUGFyc2VkTWVzc2FnZSwgaW5jbHVkZVNlbGY6IGJvb2xlYW4pIHtcclxuICAgICAgICBsZXQgcHJvY2Vzc0NoaWxkcmVuID0gdHJ1ZTtcclxuICAgICAgICBpZiAoaW5jbHVkZVNlbGYpIHtcclxuICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IG5vZGUuVEVYVF9OT0RFKSB7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZFRleHQobm9kZS50ZXh0Q29udGVudCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IG5vZGUuRUxFTUVOVF9OT0RFKSB7XHJcbiAgICAgICAgICAgICAgICBwcm9jZXNzQ2hpbGRyZW4gPSB0aGlzLnByb2Nlc3NTdGFydEVsZW1lbnQoPEVsZW1lbnQ+IG5vZGUsIG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwcm9jZXNzQ2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgY29uc3QgaWN1TWVzc2FnZVRleHQgPSB0aGlzLmdldElDVU1lc3NhZ2VUZXh0KG5vZGUpO1xyXG4gICAgICAgICAgICBsZXQgaXNJQ1UgPSAhaXNOdWxsT3JVbmRlZmluZWQoaWN1TWVzc2FnZVRleHQpO1xyXG4gICAgICAgICAgICBpZiAoaXNJQ1UpIHtcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRJQ1VNZXNzYWdlKGljdU1lc3NhZ2VUZXh0KTtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgaXQgaXMgbm90IHBhcnNhYmxlLCBoYW5kbGUgaXQgYXMgbm9uIElDVVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdub24gSUNVIG1lc3NhZ2U6ICcsIGljdU1lc3NhZ2VUZXh0LCBlcnJvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgaXNJQ1UgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzSUNVKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjaGlsZHJlbiA9IG5vZGUuY2hpbGROb2RlcztcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFBhcnRzT2ZOb2RlVG9NZXNzYWdlKGNoaWxkcmVuLml0ZW0oaSksIG1lc3NhZ2UsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChub2RlLm5vZGVUeXBlID09PSBub2RlLkVMRU1FTlRfTk9ERSkge1xyXG4gICAgICAgICAgICB0aGlzLnByb2Nlc3NFbmRFbGVtZW50KDxFbGVtZW50PiBub2RlLCBtZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm4gdGhlIElDVSBtZXNzYWdlIGNvbnRlbnQgb2YgdGhlIG5vZGUsIGlmIGl0IGlzIGFuIElDVSBNZXNzYWdlLlxyXG4gICAgICogQHBhcmFtIG5vZGUgbm9kZVxyXG4gICAgICogQHJldHVybiBtZXNzYWdlIG9yIG51bGwsIGlmIGl0IGlzIG5vIElDVSBNZXNzYWdlLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgZ2V0SUNVTWVzc2FnZVRleHQobm9kZTogTm9kZSk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgY2hpbGRyZW4gPSBub2RlLmNoaWxkTm9kZXM7XHJcbiAgICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZmlyc3RDaGlsZCA9IGNoaWxkcmVuLml0ZW0oMCk7XHJcbiAgICAgICAgaWYgKGZpcnN0Q2hpbGQubm9kZVR5cGUgPT09IGZpcnN0Q2hpbGQuVEVYVF9OT0RFKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzSUNVTWVzc2FnZVN0YXJ0KGZpcnN0Q2hpbGQudGV4dENvbnRlbnQpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gRE9NVXRpbGl0aWVzLmdldFhNTENvbnRlbnQoPEVsZW1lbnQ+IG5vZGUpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgdGV4dCBpcyBiZWdpbm5pbmcgb2YgSUNVIE1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gdGV4dCB0ZXh0XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc0lDVU1lc3NhZ2VTdGFydCh0ZXh0OiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gUGFyc2VkTWVzc2FnZVBhcnRJQ1VNZXNzYWdlLmxvb2tzTGlrZUlDVU1lc3NhZ2UodGV4dCk7XHJcbi8vICAgICAgICByZXR1cm4gdGV4dC5zdGFydHNXaXRoKCd7VkFSX1BMVVJBTCcpIHx8IHRleHQuc3RhcnRzV2l0aCgne1ZBUl9TRUxFQ1QnKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSB0aGlzIG5vZGUuXHJcbiAgICAgKiBUaGlzIGlzIGNhbGxlZCBiZWZvcmUgdGhlIGNoaWxkcmVuIGFyZSBkb25lLlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnROb2RlIGVsZW1lbnROb2RlXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBtZXNzYWdlIHRvIGJlIGFsdGVyZWRcclxuICAgICAqIEByZXR1cm4gdHJ1ZSwgaWYgY2hpbGRyZW4gc2hvdWxkIGJlIHByb2Nlc3NlZCB0b28sIGZhbHNlIG90aGVyd2lzZSAoY2hpbGRyZW4gaWdub3JlZCB0aGVuKVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgcHJvY2Vzc1N0YXJ0RWxlbWVudChlbGVtZW50Tm9kZTogRWxlbWVudCwgbWVzc2FnZTogUGFyc2VkTWVzc2FnZSk6IGJvb2xlYW47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGUgZW5kIG9mIHRoaXMgbm9kZS5cclxuICAgICAqIFRoaXMgaXMgY2FsbGVkIGFmdGVyIGFsbCBjaGlsZHJlbiBhcmUgcHJvY2Vzc2VkLlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnROb2RlIGVsZW1lbnROb2RlXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBtZXNzYWdlIHRvIGJlIGFsdGVyZWRcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IHByb2Nlc3NFbmRFbGVtZW50KGVsZW1lbnROb2RlOiBFbGVtZW50LCBtZXNzYWdlOiBQYXJzZWRNZXNzYWdlKTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlIG5vcm1hbGl6ZWQgc3RyaW5nIHRvIFBhcnNlZE1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gbm9ybWFsaXplZFN0cmluZyBub3JtYWxpemVkIHN0cmluZ1xyXG4gICAgICogQHBhcmFtIHNvdXJjZU1lc3NhZ2Ugb3B0aW9uYWwgb3JpZ2luYWwgbWVzc2FnZSB0aGF0IHdpbGwgYmUgdHJhbnNsYXRlZCBieSBub3JtYWxpemVkIG5ldyBvbmVcclxuICAgICAqIEByZXR1cm4gYSBuZXcgcGFyc2VkIG1lc3NhZ2UuXHJcbiAgICAgKiBUaHJvd3MgYW4gZXJyb3IgaWYgbm9ybWFsaXplZCBzdHJpbmcgaXMgbm90IHdlbGwgZm9ybWVkLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgcGFyc2VOb3JtYWxpemVkU3RyaW5nKG5vcm1hbGl6ZWRTdHJpbmc6IHN0cmluZywgc291cmNlTWVzc2FnZTogUGFyc2VkTWVzc2FnZSk6IFBhcnNlZE1lc3NhZ2Uge1xyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2U6IFBhcnNlZE1lc3NhZ2UgPSBuZXcgUGFyc2VkTWVzc2FnZSh0aGlzLCBzb3VyY2VNZXNzYWdlKTtcclxuICAgICAgICBjb25zdCBvcGVuVGFncyA9IFtdO1xyXG4gICAgICAgIGxldCB0b2tlbnM6IFRva2VuW107XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdG9rZW5zID0gbmV3IFBhcnNlZE1lc2FnZVRva2VuaXplcigpLnRva2VuaXplKG5vcm1hbGl6ZWRTdHJpbmcpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ3VuZXhwZWN0ZWQgZXJyb3Igd2hpbGUgcGFyc2luZyBtZXNzYWdlOiBcIiVzXCIgKHBhcnNlZCBcIiVcIiknLCBlcnJvci5tZXNzYWdlLCBub3JtYWxpemVkU3RyaW5nKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRva2Vucy5mb3JFYWNoKCh0b2tlbjogVG9rZW4pID0+IHtcclxuICAgICAgICAgICAgbGV0IGRpc3A6IHN0cmluZyA9IG51bGw7XHJcbiAgICAgICAgICAgIHN3aXRjaCAodG9rZW4udHlwZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBURVhUOlxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkVGV4dCh0b2tlbi52YWx1ZS50ZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgU1RBUlRfVEFHOlxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkU3RhcnRUYWcodG9rZW4udmFsdWUubmFtZSwgdG9rZW4udmFsdWUuaWRjb3VudGVyKTtcclxuICAgICAgICAgICAgICAgICAgICBvcGVuVGFncy5wdXNoKHRva2VuLnZhbHVlLm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBFTkRfVEFHOlxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkRW5kVGFnKHRva2VuLnZhbHVlLm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcGVuVGFncy5sZW5ndGggPT09IDAgfHwgb3BlblRhZ3Nbb3BlblRhZ3MubGVuZ3RoIC0gMV0gIT09IHRva2VuLnZhbHVlLm5hbWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gb29wcywgbm90IHdlbGwgZm9ybWVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ3VuZXhwZWN0ZWQgY2xvc2UgdGFnIFwiJXNcIiAocGFyc2VkIFwiJXNcIiknLCB0b2tlbi52YWx1ZS5uYW1lLCBub3JtYWxpemVkU3RyaW5nKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIG9wZW5UYWdzLnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBFTVBUWV9UQUc6XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRFbXB0eVRhZyh0b2tlbi52YWx1ZS5uYW1lLCB0b2tlbi52YWx1ZS5pZGNvdW50ZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQTEFDRUhPTERFUjpcclxuICAgICAgICAgICAgICAgICAgICBkaXNwID0gKHNvdXJjZU1lc3NhZ2UpID8gc291cmNlTWVzc2FnZS5nZXRQbGFjZWhvbGRlckRpc3AodG9rZW4udmFsdWUuaWRjb3VudGVyKSA6IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRQbGFjZWhvbGRlcih0b2tlbi52YWx1ZS5pZGNvdW50ZXIsIGRpc3ApO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBJQ1VfTUVTU0FHRV9SRUY6XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcCA9IChzb3VyY2VNZXNzYWdlKSA/IHNvdXJjZU1lc3NhZ2UuZ2V0SUNVTWVzc2FnZVJlZkRpc3AodG9rZW4udmFsdWUuaWRjb3VudGVyKSA6IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRJQ1VNZXNzYWdlUmVmKHRva2VuLnZhbHVlLmlkY291bnRlciwgZGlzcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIElDVV9NRVNTQUdFOlxyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJzxJQ1VNZXNzYWdlLz4gbm90IGFsbG93ZWQgaGVyZSwgdXNlIHBhcnNlSUNVTWVzc2FnZSBpbnN0ZWFkIChwYXJzZWQgXCIlXCIpJywgbm9ybWFsaXplZFN0cmluZykpO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChvcGVuVGFncy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIC8vIG9vcHMsIG5vdCB3ZWxsIGNsb3NlZCB0YWdzXHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ21pc3NpbmcgY2xvc2UgdGFnIFwiJXNcIiAocGFyc2VkIFwiJXNcIiknLCBvcGVuVGFnc1tvcGVuVGFncy5sZW5ndGggLSAxXSwgbm9ybWFsaXplZFN0cmluZykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBtZXNzYWdlLnNldFhtbFJlcHJlc2VudGF0aW9uKHRoaXMuY3JlYXRlWG1sUmVwcmVzZW50YXRpb24obWVzc2FnZSkpO1xyXG4gICAgICAgIHJldHVybiBtZXNzYWdlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2UgYSBzdHJpbmcsIHRoYXQgaXMgYW4gSUNVIG1lc3NhZ2UsIHRvIFBhcnNlZE1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gaWN1TWVzc2FnZVN0cmluZyB0aGUgbWVzc2FnZSwgbGlrZSAne3gsIHBsdXJhbCwgPTAge25vdGhpbmd9ID0xIHtvbmV9IG90aGVyIHttYW55fX0nLlxyXG4gICAgICogQHBhcmFtIHNvdXJjZU1lc3NhZ2Ugb3B0aW9uYWwgb3JpZ2luYWwgbWVzc2FnZSB0aGF0IHdpbGwgYmUgdHJhbnNsYXRlZCBieSBub3JtYWxpemVkIG5ldyBvbmVcclxuICAgICAqIEByZXR1cm4gYSBuZXcgcGFyc2VkIG1lc3NhZ2UuXHJcbiAgICAgKiBUaHJvd3MgYW4gZXJyb3IgaWYgaWN1TWVzc2FnZVN0cmluZyBoYXMgbm90IHRoZSBjb3JyZWN0IHN5bnRheC5cclxuICAgICAqL1xyXG4gICAgcGFyc2VJQ1VNZXNzYWdlKGljdU1lc3NhZ2VTdHJpbmc6IHN0cmluZywgc291cmNlTWVzc2FnZTogUGFyc2VkTWVzc2FnZSk6IFBhcnNlZE1lc3NhZ2Uge1xyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2U6IFBhcnNlZE1lc3NhZ2UgPSBuZXcgUGFyc2VkTWVzc2FnZSh0aGlzLCBzb3VyY2VNZXNzYWdlKTtcclxuICAgICAgICBtZXNzYWdlLmFkZElDVU1lc3NhZ2UoaWN1TWVzc2FnZVN0cmluZyk7XHJcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgZnVuY3Rpb246IFBhcnNlIElEIGZyb20gYSBuYW1lLlxyXG4gICAgICogbmFtZSBvcHRpb25hbGx5IGVuZHMgd2l0aCBfPG51bWJlcj4uIFRoaXMgaXMgdGhlIGlkY291bnQuXHJcbiAgICAgKiBFLmcuIG5hbWU9XCJUQUdfSU1HXCIgcmV0dXJucyAwXHJcbiAgICAgKiBuYW1lID0gXCJUQUdfSU1HXzFcIiByZXR1cm5zIDFcclxuICAgICAqIEBwYXJhbSBuYW1lIG5hbWVcclxuICAgICAqIEByZXR1cm4gaWQgY291bnRcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIHBhcnNlSWRDb3VudEZyb21OYW1lKG5hbWU6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICAgICAgY29uc3QgcmVnZXggPSAvLipfKFswLTldKikvO1xyXG4gICAgICAgIGNvbnN0IG1hdGNoID0gcmVnZXguZXhlYyhuYW1lKTtcclxuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQobWF0Y2gpIHx8IG1hdGNoWzFdID09PSAnJykge1xyXG4gICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBudW0gPSBtYXRjaFsxXTtcclxuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KG51bSwgMTApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSB0aGUgbmF0aXZlIHhtbCBmb3IgYSBtZXNzYWdlLlxyXG4gICAgICogUGFydHMgYXJlIGFscmVhZHkgc2V0IGhlcmUuXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBtZXNzYWdlXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbihtZXNzYWdlOiBQYXJzZWRNZXNzYWdlKTogRWxlbWVudCB7XHJcbiAgICAgICAgY29uc3Qgcm9vdDogRG9jdW1lbnQgPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKCc8ZHVtbXkvPicsICd0ZXh0L3htbCcpO1xyXG4gICAgICAgIGNvbnN0IHJvb3RFbGVtOiBFbGVtZW50ID0gcm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZHVtbXknKS5pdGVtKDApO1xyXG4gICAgICAgIHRoaXMuYWRkWG1sUmVwcmVzZW50YXRpb25Ub1Jvb3QobWVzc2FnZSwgcm9vdEVsZW0pO1xyXG4gICAgICAgIHJldHVybiByb290RWxlbTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgYWRkWG1sUmVwcmVzZW50YXRpb25Ub1Jvb3QobWVzc2FnZTogUGFyc2VkTWVzc2FnZSwgcm9vdEVsZW06IEVsZW1lbnQpO1xyXG5cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mVGV4dFBhcnQocGFydDogUGFyc2VkTWVzc2FnZVBhcnRUZXh0LCByb290RWxlbTogRWxlbWVudCk6IE5vZGUge1xyXG4gICAgICAgIHJldHVybiByb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHBhcnQuYXNEaXNwbGF5U3RyaW5nKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHhtbCB1c2VkIGZvciBzdGFydCB0YWcgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqIEBwYXJhbSBpZCBpZCBudW1iZXIgaW4geGxpZmYyXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mU3RhcnRUYWdQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0U3RhcnRUYWcsIHJvb3RFbGVtOiBFbGVtZW50LCBpZD86IG51bWJlcik6IE5vZGU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGVuZCB0YWcgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZFbmRUYWdQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnLCByb290RWxlbTogRWxlbWVudCk6IE5vZGU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGVtcHR5IHRhZyBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICogQHBhcmFtIGlkIGlkIG51bWJlciBpbiB4bGlmZjJcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZFbXB0eVRhZ1BhcnQocGFydDogUGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZywgcm9vdEVsZW06IEVsZW1lbnQsIGlkPzogbnVtYmVyKTogTm9kZTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3IgcGxhY2Vob2xkZXIgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqIEBwYXJhbSBpZCBpZCBudW1iZXIgaW4geGxpZmYyXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mUGxhY2Vob2xkZXJQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0UGxhY2Vob2xkZXIsIHJvb3RFbGVtOiBFbGVtZW50LCBpZD86IG51bWJlcik6IE5vZGU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGljdSBtZXNzYWdlIHJlZnMgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZJQ1VNZXNzYWdlUmVmUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYsIHJvb3RFbGVtOiBFbGVtZW50KTogTm9kZTtcclxufVxyXG4iLCIvKipcclxuICogQ3JlYXRlZCBieSByb29ibSBvbiAxNi4wNS4yMDE3LlxyXG4gKiBNYXBwaW5nIGZyb20gbm9ybWFsaXplZCB0YWcgbmFtZXMgdG8gcGxhY2Vob2xkZXIgbmFtZXMuXHJcbiAqL1xyXG5cclxuLypcclxuY29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9ibG9iL21hc3Rlci9wYWNrYWdlcy9jb21waWxlci9zcmMvaTE4bi9zZXJpYWxpemVycy9wbGFjZWhvbGRlci50c1xyXG4gKi9cclxuY29uc3QgVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTOiB7W2s6IHN0cmluZ106IHN0cmluZ30gPSB7XHJcbiAgICAnQSc6ICdMSU5LJyxcclxuICAgICdCJzogJ0JPTERfVEVYVCcsXHJcbiAgICAnQlInOiAnTElORV9CUkVBSycsXHJcbiAgICAnRU0nOiAnRU1QSEFTSVNFRF9URVhUJyxcclxuICAgICdIMSc6ICdIRUFESU5HX0xFVkVMMScsXHJcbiAgICAnSDInOiAnSEVBRElOR19MRVZFTDInLFxyXG4gICAgJ0gzJzogJ0hFQURJTkdfTEVWRUwzJyxcclxuICAgICdINCc6ICdIRUFESU5HX0xFVkVMNCcsXHJcbiAgICAnSDUnOiAnSEVBRElOR19MRVZFTDUnLFxyXG4gICAgJ0g2JzogJ0hFQURJTkdfTEVWRUw2JyxcclxuICAgICdIUic6ICdIT1JJWk9OVEFMX1JVTEUnLFxyXG4gICAgJ0knOiAnSVRBTElDX1RFWFQnLFxyXG4gICAgJ0xJJzogJ0xJU1RfSVRFTScsXHJcbiAgICAnTElOSyc6ICdNRURJQV9MSU5LJyxcclxuICAgICdPTCc6ICdPUkRFUkVEX0xJU1QnLFxyXG4gICAgJ1AnOiAnUEFSQUdSQVBIJyxcclxuICAgICdRJzogJ1FVT1RBVElPTicsXHJcbiAgICAnUyc6ICdTVFJJS0VUSFJPVUdIX1RFWFQnLFxyXG4gICAgJ1NNQUxMJzogJ1NNQUxMX1RFWFQnLFxyXG4gICAgJ1NVQic6ICdTVUJTVFJJUFQnLFxyXG4gICAgJ1NVUCc6ICdTVVBFUlNDUklQVCcsXHJcbiAgICAnVEJPRFknOiAnVEFCTEVfQk9EWScsXHJcbiAgICAnVEQnOiAnVEFCTEVfQ0VMTCcsXHJcbiAgICAnVEZPT1QnOiAnVEFCTEVfRk9PVEVSJyxcclxuICAgICdUSCc6ICdUQUJMRV9IRUFERVJfQ0VMTCcsXHJcbiAgICAnVEhFQUQnOiAnVEFCTEVfSEVBREVSJyxcclxuICAgICdUUic6ICdUQUJMRV9ST1cnLFxyXG4gICAgJ1RUJzogJ01PTk9TUEFDRURfVEVYVCcsXHJcbiAgICAnVSc6ICdVTkRFUkxJTkVEX1RFWFQnLFxyXG4gICAgJ1VMJzogJ1VOT1JERVJFRF9MSVNUJyxcclxufTtcclxuXHJcbi8qKlxyXG4gKiBIVE1MIFRhZ3MgKGluIHVwcGVyY2FzZSkgdGhhdCBhcmUgZW1wdHksIHRoZXkgaGF2ZSBubyBjb250ZW50LCBidXQgZG8gbm90IG5lZWQgYSBjbG9zZSB0YWcsIGUuZy4gPGJyPiwgPGltZz4sIDxocj4uXHJcbiAqL1xyXG5jb25zdCBWT0lEX1RBR1MgPSBbJ0JSJywgJ0hSJywgJ0lNRycsICdBUkVBJywgJ0xJTksnLCAnV0JSJ107XHJcblxyXG5leHBvcnQgY2xhc3MgVGFnTWFwcGluZyB7XHJcblxyXG4gICAgcHVibGljIGdldFN0YXJ0VGFnUGxhY2Vob2xkZXJOYW1lKHRhZzogc3RyaW5nLCBpZDogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCB1cHBlclRhZyA9IHRhZy50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIGNvbnN0IGJhc2VOYW1lID0gVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTW3VwcGVyVGFnXSB8fCBgVEFHXyR7dXBwZXJUYWd9YDtcclxuICAgICAgICByZXR1cm4gYFNUQVJUXyR7YmFzZU5hbWV9YCArIHRoaXMuY291bnRlclN0cmluZyhpZCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldENsb3NlVGFnUGxhY2Vob2xkZXJOYW1lKHRhZzogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCB1cHBlclRhZyA9IHRhZy50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIGNvbnN0IGJhc2VOYW1lID0gVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTW3VwcGVyVGFnXSB8fCBgVEFHXyR7dXBwZXJUYWd9YDtcclxuICAgICAgICByZXR1cm4gYENMT1NFXyR7YmFzZU5hbWV9YDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0RW1wdHlUYWdQbGFjZWhvbGRlck5hbWUodGFnOiBzdHJpbmcsIGlkOiBudW1iZXIpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHVwcGVyVGFnID0gdGFnLnRvVXBwZXJDYXNlKCk7XHJcbiAgICAgICAgY29uc3QgYmFzZU5hbWUgPSAgVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTW3VwcGVyVGFnXSB8fCBgVEFHXyR7dXBwZXJUYWd9YDtcclxuICAgICAgICByZXR1cm4gYmFzZU5hbWUgKyB0aGlzLmNvdW50ZXJTdHJpbmcoaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRDdHlwZUZvclRhZyh0YWc6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgc3dpdGNoICh0YWcudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICAgICAgICBjYXNlICdicic6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2xiJztcclxuICAgICAgICAgICAgY2FzZSAnaW1nJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiAnaW1hZ2UnO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGB4LSR7dGFnfWA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRUYWduYW1lRnJvbVN0YXJ0VGFnUGxhY2Vob2xkZXJOYW1lKHBsYWNlaG9sZGVyTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAocGxhY2Vob2xkZXJOYW1lLnN0YXJ0c1dpdGgoJ1NUQVJUX1RBR18nKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lLnN1YnN0cmluZygnU1RBUlRfVEFHXycubGVuZ3RoKSkudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHBsYWNlaG9sZGVyTmFtZS5zdGFydHNXaXRoKCdTVEFSVF8nKSkge1xyXG4gICAgICAgICAgICBjb25zdCBwaCA9IHRoaXMuc3RyaXBDb3VudGVyKHBsYWNlaG9sZGVyTmFtZS5zdWJzdHJpbmcoJ1NUQVJUXycubGVuZ3RoKSk7XHJcbiAgICAgICAgICAgIGNvbnN0IG1hdGNoS2V5ID0gT2JqZWN0LmtleXMoVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTKS5maW5kKChrZXkpID0+IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1trZXldID09PSBwaCk7XHJcbiAgICAgICAgICAgIHJldHVybiBtYXRjaEtleSA/IG1hdGNoS2V5LnRvTG93ZXJDYXNlKCkgOiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0VGFnbmFtZUZyb21DbG9zZVRhZ1BsYWNlaG9sZGVyTmFtZShwbGFjZWhvbGRlck5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHBsYWNlaG9sZGVyTmFtZS5zdGFydHNXaXRoKCdDTE9TRV9UQUdfJykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RyaXBDb3VudGVyKHBsYWNlaG9sZGVyTmFtZS5zdWJzdHJpbmcoJ0NMT1NFX1RBR18nLmxlbmd0aCkpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChwbGFjZWhvbGRlck5hbWUuc3RhcnRzV2l0aCgnQ0xPU0VfJykpIHtcclxuICAgICAgICAgICAgY29uc3QgcGggPSB0aGlzLnN0cmlwQ291bnRlcihwbGFjZWhvbGRlck5hbWUuc3Vic3RyaW5nKCdDTE9TRV8nLmxlbmd0aCkpO1xyXG4gICAgICAgICAgICBjb25zdCBtYXRjaEtleSA9IE9iamVjdC5rZXlzKFRBR19UT19QTEFDRUhPTERFUl9OQU1FUykuZmluZCgoa2V5KSA9PiBUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVNba2V5XSA9PT0gcGgpO1xyXG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hLZXkgPyBtYXRjaEtleS50b0xvd2VyQ2FzZSgpIDogbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgcGxhY2Vob2xkZXIgbmFtZSBzdGFuZHMgZm9yIGVtcHR5IGh0bWwgdGFnLlxyXG4gICAgICogQHBhcmFtIHBsYWNlaG9sZGVyTmFtZSBjYW4gYmUgVEFHXzxuYW1lPiBvciBqdXN0IDxuYW1lPlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaXNFbXB0eVRhZ1BsYWNlaG9sZGVyTmFtZShwbGFjZWhvbGRlck5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGNvbnN0IHBoID0gdGhpcy5zdHJpcENvdW50ZXIocGxhY2Vob2xkZXJOYW1lKTtcclxuICAgICAgICBsZXQgbWF0Y2hLZXk7XHJcbiAgICAgICAgaWYgKHBoLnN0YXJ0c1dpdGgoJ1RBR18nKSkge1xyXG4gICAgICAgICAgICBtYXRjaEtleSA9IHBoLnN1YnN0cmluZyg0KS50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG1hdGNoS2V5ID0gT2JqZWN0LmtleXMoVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTKS5maW5kKChrZXkpID0+IFRBR19UT19QTEFDRUhPTERFUl9OQU1FU1trZXldID09PSBwaCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChtYXRjaEtleSkge1xyXG4gICAgICAgICAgICBpZiAoVk9JRF9UQUdTLmluZGV4T2YobWF0Y2hLZXkpID49IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRhZ25hbWUgb2YgZW1wdHkgdGFnIHBsYWNlaG9sZGVyLlxyXG4gICAgICogQHBhcmFtIHBsYWNlaG9sZGVyTmFtZSBjYW4gYmUgVEFHXzxuYW1lPiBvciBqdXN0IDxuYW1lPlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0VGFnbmFtZUZyb21FbXB0eVRhZ1BsYWNlaG9sZGVyTmFtZShwbGFjZWhvbGRlck5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgcGggPSB0aGlzLnN0cmlwQ291bnRlcihwbGFjZWhvbGRlck5hbWUpO1xyXG4gICAgICAgIGxldCBtYXRjaEtleTtcclxuICAgICAgICBpZiAocGguc3RhcnRzV2l0aCgnVEFHXycpKSB7XHJcbiAgICAgICAgICAgIG1hdGNoS2V5ID0gcGguc3Vic3RyaW5nKDQpLnRvVXBwZXJDYXNlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbWF0Y2hLZXkgPSBPYmplY3Qua2V5cyhUQUdfVE9fUExBQ0VIT0xERVJfTkFNRVMpLmZpbmQoKGtleSkgPT4gVEFHX1RPX1BMQUNFSE9MREVSX05BTUVTW2tleV0gPT09IHBoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG1hdGNoS2V5KSB7XHJcbiAgICAgICAgICAgIGlmIChWT0lEX1RBR1MuaW5kZXhPZihtYXRjaEtleSkgPj0gMCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoS2V5LnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIElmIHBsYWNlaG9sZGVyIGVuZHMgd2l0aCBfWzAtOV0rLCBzdHJpcCB0aGF0IG51bWJlci5cclxuICAgICAqIEBwYXJhbSBwbGFjZWhvbGRlck5hbWUgcGxhY2Vob2xkZXJOYW1lXHJcbiAgICAgKiBAcmV0dXJuIHBsYWNlaG9sZGVyTmFtZSB3aXRob3V0IGNvdW50ZXIgYXQgZW5kLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0cmlwQ291bnRlcihwbGFjZWhvbGRlck5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHBsYWNlaG9sZGVyTmFtZSkge1xyXG4gICAgICAgICAgICBjb25zdCByZSA9IC8oLiopX1swLTldKyQvO1xyXG4gICAgICAgICAgICBpZiAocGxhY2Vob2xkZXJOYW1lLm1hdGNoKHJlKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyTmFtZS5yZXBsYWNlKHJlLCAnJDEnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGxhY2Vob2xkZXJOYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RyaW5nIHN1ZmZpeCBmb3IgY291bnRlci5cclxuICAgICAqIElmIGNvdW50ZXIgaXMgMCwgaXQgaXMgZW1wdHksIG90aGVyd2lzZSBfPGlkPi5cclxuICAgICAqIEBwYXJhbSBpZCBpZFxyXG4gICAgICogQHJldHVybiBzdWZmaXggZm9yIGNvdW50ZXIuXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY291bnRlclN0cmluZyhpZDogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKGlkID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gJ18nICsgaWQudG9TdHJpbmcoMTApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQge0Fic3RyYWN0TWVzc2FnZVBhcnNlcn0gZnJvbSAnLi9hYnN0cmFjdC1tZXNzYWdlLXBhcnNlcic7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZSc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZ30gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXN0YXJ0LXRhZyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRFbmRUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtcGxhY2Vob2xkZXInO1xyXG5pbXBvcnQge1RhZ01hcHBpbmd9IGZyb20gJy4vdGFnLW1hcHBpbmcnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZn0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LWljdS1tZXNzYWdlLXJlZic7XHJcbmltcG9ydCB7aXNOdWxsT3JVbmRlZmluZWR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFRleHR9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC10ZXh0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMTAuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnNlciBmb3IgWExJRkYgMS4yXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgWGxpZmZNZXNzYWdlUGFyc2VyIGV4dGVuZHMgQWJzdHJhY3RNZXNzYWdlUGFyc2VyIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSB0aGlzIGVsZW1lbnQgbm9kZS5cclxuICAgICAqIFRoaXMgaXMgY2FsbGVkIGJlZm9yZSB0aGUgY2hpbGRyZW4gYXJlIGRvbmUuXHJcbiAgICAgKiBAcGFyYW0gZWxlbWVudE5vZGUgZWxlbWVudE5vZGVcclxuICAgICAqIEBwYXJhbSBtZXNzYWdlIG1lc3NhZ2UgdG8gYmUgYWx0ZXJlZFxyXG4gICAgICogQHJldHVybiB0cnVlLCBpZiBjaGlsZHJlbiBzaG91bGQgYmUgcHJvY2Vzc2VkIHRvbywgZmFsc2Ugb3RoZXJ3aXNlIChjaGlsZHJlbiBpZ25vcmVkIHRoZW4pXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBwcm9jZXNzU3RhcnRFbGVtZW50KGVsZW1lbnROb2RlOiBFbGVtZW50LCBtZXNzYWdlOiBQYXJzZWRNZXNzYWdlKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3QgdGFnTmFtZSA9IGVsZW1lbnROb2RlLnRhZ05hbWU7XHJcbiAgICAgICAgY29uc3QgdGFnTWFwcGluZyA9IG5ldyBUYWdNYXBwaW5nKCk7XHJcbiAgICAgICAgaWYgKHRhZ05hbWUgPT09ICd4Jykge1xyXG4gICAgICAgICAgICAvLyBwbGFjZWhvbGRlciBhcmUgbGlrZSA8eCBpZD1cIklOVEVSUE9MQVRJT05cIi8+IG9yIDx4IGlkPVwiSU5URVJQT0xBVElPTl8xXCI+XHJcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZWxlbWVudE5vZGUuZ2V0QXR0cmlidXRlKCdpZCcpO1xyXG4gICAgICAgICAgICBpZiAoIWlkKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47IC8vIHNob3VsZCBub3QgaGFwcGVuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGlkLnN0YXJ0c1dpdGgoJ0lOVEVSUE9MQVRJT04nKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnBhcnNlUGxhY2Vob2xkZXJJbmRleEZyb21JZChpZCk7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZFBsYWNlaG9sZGVyKGluZGV4LCBudWxsKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChpZC5zdGFydHNXaXRoKCdJQ1UnKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnBhcnNlSUNVTWVzc2FnZVJlZkluZGV4RnJvbUlkKGlkKTtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkSUNVTWVzc2FnZVJlZihpbmRleCwgbnVsbCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaWQuc3RhcnRzV2l0aCgnU1RBUlRfJykpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRUYWdOYW1lID0gdGFnTWFwcGluZy5nZXRUYWduYW1lRnJvbVN0YXJ0VGFnUGxhY2Vob2xkZXJOYW1lKGlkKTtcclxuICAgICAgICAgICAgICAgIGlmIChub3JtYWxpemVkVGFnTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkY291bnQgPSB0aGlzLnBhcnNlSWRDb3VudEZyb21OYW1lKGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZFN0YXJ0VGFnKG5vcm1hbGl6ZWRUYWdOYW1lLCBpZGNvdW50KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmIChpZC5zdGFydHNXaXRoKCdDTE9TRV8nKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgbm9ybWFsaXplZFRhZ05hbWUgPSB0YWdNYXBwaW5nLmdldFRhZ25hbWVGcm9tQ2xvc2VUYWdQbGFjZWhvbGRlck5hbWUoaWQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5vcm1hbGl6ZWRUYWdOYW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRFbmRUYWcobm9ybWFsaXplZFRhZ05hbWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRhZ01hcHBpbmcuaXNFbXB0eVRhZ1BsYWNlaG9sZGVyTmFtZShpZCkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRUYWdOYW1lID0gdGFnTWFwcGluZy5nZXRUYWduYW1lRnJvbUVtcHR5VGFnUGxhY2Vob2xkZXJOYW1lKGlkKTtcclxuICAgICAgICAgICAgICAgIGlmIChub3JtYWxpemVkVGFnTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkY291bnQgPSB0aGlzLnBhcnNlSWRDb3VudEZyb21OYW1lKGlkKTtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZEVtcHR5VGFnKG5vcm1hbGl6ZWRUYWdOYW1lLCBpZGNvdW50KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBlbmQgb2YgdGhpcyBlbGVtZW50IG5vZGUuXHJcbiAgICAgKiBUaGlzIGlzIGNhbGxlZCBhZnRlciBhbGwgY2hpbGRyZW4gYXJlIHByb2Nlc3NlZC5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50Tm9kZSBlbGVtZW50Tm9kZVxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgbWVzc2FnZSB0byBiZSBhbHRlcmVkXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBwcm9jZXNzRW5kRWxlbWVudChlbGVtZW50Tm9kZTogRWxlbWVudCwgbWVzc2FnZTogUGFyc2VkTWVzc2FnZSkge1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2UgaWQgYXR0cmlidXRlIG9mIHggZWxlbWVudCBhcyBwbGFjZWhvbGRlciBpbmRleC5cclxuICAgICAqIGlkIGNhbiBiZSBcIklOVEVSUE9MQVRJT05cIiBvciBcIklOVEVSUE9MQVRJT05fblwiXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gaW5kZXhcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBwYXJzZVBsYWNlaG9sZGVySW5kZXhGcm9tSWQoaWQ6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICAgICAgbGV0IGluZGV4U3RyaW5nID0gJyc7XHJcblxyXG4gICAgICAgIGlmIChpZCA9PT0gJ0lOVEVSUE9MQVRJT04nKSB7XHJcbiAgICAgICAgICAgIGluZGV4U3RyaW5nID0gJzAnO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGluZGV4U3RyaW5nID0gaWQuc3Vic3RyaW5nKCdJTlRFUlBPTEFUSU9OXycubGVuZ3RoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIE51bWJlci5wYXJzZUludChpbmRleFN0cmluZywgMTApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2UgaWQgYXR0cmlidXRlIG9mIHggZWxlbWVudCBhcyBwbGFjZWhvbGRlciBpbmRleC5cclxuICAgICAqIGlkIGNhbiBiZSBcIklOVEVSUE9MQVRJT05cIiBvciBcIklOVEVSUE9MQVRJT05fblwiXHJcbiAgICAgKiBAcGFyYW0gaWQgaWRcclxuICAgICAqIEByZXR1cm4gaWQgYXMgbnVtYmVyXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcGFyc2VJQ1VNZXNzYWdlUmVmSW5kZXhGcm9tSWQoaWQ6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICAgICAgbGV0IGluZGV4U3RyaW5nID0gJyc7XHJcblxyXG4gICAgICAgIGlmIChpZCA9PT0gJ0lDVScpIHtcclxuICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSAnMCc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSBpZC5zdWJzdHJpbmcoJ0lDVV8nLmxlbmd0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoaW5kZXhTdHJpbmcsIDEwKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgYWRkWG1sUmVwcmVzZW50YXRpb25Ub1Jvb3QobWVzc2FnZTogUGFyc2VkTWVzc2FnZSwgcm9vdEVsZW06IEVsZW1lbnQpIHtcclxuICAgICAgICBtZXNzYWdlLnBhcnRzKCkuZm9yRWFjaCgocGFydCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgY2hpbGQ6IE5vZGU7XHJcbiAgICAgICAgICAgIHN3aXRjaCAocGFydC50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5URVhUOlxyXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mVGV4dFBhcnQoPFBhcnNlZE1lc3NhZ2VQYXJ0VGV4dD4gcGFydCwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuU1RBUlRfVEFHOlxyXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mU3RhcnRUYWdQYXJ0KCg8UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZz5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuRU5EX1RBRzpcclxuICAgICAgICAgICAgICAgICAgICBjaGlsZCA9IHRoaXMuY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZkVuZFRhZ1BhcnQoKDxQYXJzZWRNZXNzYWdlUGFydEVuZFRhZz5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuRU1QVFlfVEFHOlxyXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mRW1wdHlUYWdQYXJ0KCg8UGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZz5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuUExBQ0VIT0xERVI6XHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLmNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZQbGFjZWhvbGRlclBhcnQoKDxQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyPnBhcnQpLCByb290RWxlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5JQ1VfTUVTU0FHRV9SRUY6XHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLmNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZJQ1VNZXNzYWdlUmVmUGFydCgoPFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZj5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjaGlsZCkge1xyXG4gICAgICAgICAgICAgICAgcm9vdEVsZW0uYXBwZW5kQ2hpbGQoY2hpbGQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIHN0YXJ0IHRhZyBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIFJldHVybnMgYW4gZW1wdHkgPHgvPi1FbGVtZW50IHdpdGggYXR0cmlidXRlcyBpZCBhbmQgY3R5cGVcclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZlN0YXJ0VGFnUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnLCByb290RWxlbTogRWxlbWVudCk6IE5vZGUge1xyXG4gICAgICAgIGNvbnN0IHhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCd4Jyk7XHJcbiAgICAgICAgY29uc3QgdGFnTWFwcGluZyA9IG5ldyBUYWdNYXBwaW5nKCk7XHJcbiAgICAgICAgY29uc3QgaWRBdHRyaWIgPSB0YWdNYXBwaW5nLmdldFN0YXJ0VGFnUGxhY2Vob2xkZXJOYW1lKHBhcnQudGFnTmFtZSgpLCBwYXJ0LmlkQ291bnRlcigpKTtcclxuICAgICAgICBjb25zdCBjdHlwZUF0dHJpYiA9IHRhZ01hcHBpbmcuZ2V0Q3R5cGVGb3JUYWcocGFydC50YWdOYW1lKCkpO1xyXG4gICAgICAgIGNvbnN0IGVxdWl2VGV4dEF0dHIgPSAnPCcgKyBwYXJ0LnRhZ05hbWUoKSArICc+JztcclxuICAgICAgICB4RWxlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgaWRBdHRyaWIpO1xyXG4gICAgICAgIHhFbGVtLnNldEF0dHJpYnV0ZSgnY3R5cGUnLCBjdHlwZUF0dHJpYik7XHJcbiAgICAgICAgeEVsZW0uc2V0QXR0cmlidXRlKCdlcXVpdi10ZXh0JywgZXF1aXZUZXh0QXR0cik7XHJcbiAgICAgICAgcmV0dXJuIHhFbGVtO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHhtbCB1c2VkIGZvciBlbmQgdGFnIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICogUmV0dXJucyBhbiBlbXB0eSA8eC8+LUVsZW1lbnQgd2l0aCBhdHRyaWJ1dGVzIGlkIGFuZCBjdHlwZVxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mRW5kVGFnUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydEVuZFRhZywgcm9vdEVsZW06IEVsZW1lbnQpOiBOb2RlIHtcclxuICAgICAgICBjb25zdCB4RWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgneCcpO1xyXG4gICAgICAgIGNvbnN0IHRhZ01hcHBpbmcgPSBuZXcgVGFnTWFwcGluZygpO1xyXG4gICAgICAgIGNvbnN0IGlkQXR0cmliID0gdGFnTWFwcGluZy5nZXRDbG9zZVRhZ1BsYWNlaG9sZGVyTmFtZShwYXJ0LnRhZ05hbWUoKSk7XHJcbiAgICAgICAgY29uc3QgY3R5cGVBdHRyaWIgPSAneC0nICsgcGFydC50YWdOYW1lKCk7XHJcbiAgICAgICAgeEVsZW0uc2V0QXR0cmlidXRlKCdpZCcsIGlkQXR0cmliKTtcclxuICAgICAgICB4RWxlbS5zZXRBdHRyaWJ1dGUoJ2N0eXBlJywgY3R5cGVBdHRyaWIpO1xyXG4gICAgICAgIHJldHVybiB4RWxlbTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3IgZW1wdHkgdGFnIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICogUmV0dXJucyBhbiBlbXB0eSA8eC8+LUVsZW1lbnQgd2l0aCBhdHRyaWJ1dGVzIGlkIGFuZCBjdHlwZVxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mRW1wdHlUYWdQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWcsIHJvb3RFbGVtOiBFbGVtZW50KTogTm9kZSB7XHJcbiAgICAgICAgY29uc3QgeEVsZW0gPSByb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3gnKTtcclxuICAgICAgICBjb25zdCB0YWdNYXBwaW5nID0gbmV3IFRhZ01hcHBpbmcoKTtcclxuICAgICAgICBjb25zdCBpZEF0dHJpYiA9IHRhZ01hcHBpbmcuZ2V0RW1wdHlUYWdQbGFjZWhvbGRlck5hbWUocGFydC50YWdOYW1lKCksIHBhcnQuaWRDb3VudGVyKCkpO1xyXG4gICAgICAgIGNvbnN0IGN0eXBlQXR0cmliID0gdGFnTWFwcGluZy5nZXRDdHlwZUZvclRhZyhwYXJ0LnRhZ05hbWUoKSk7XHJcbiAgICAgICAgY29uc3QgZXF1aXZUZXh0QXR0ciA9ICc8JyArIHBhcnQudGFnTmFtZSgpICsgJy8+JztcclxuICAgICAgICB4RWxlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgaWRBdHRyaWIpO1xyXG4gICAgICAgIHhFbGVtLnNldEF0dHJpYnV0ZSgnY3R5cGUnLCBjdHlwZUF0dHJpYik7XHJcbiAgICAgICAgeEVsZW0uc2V0QXR0cmlidXRlKCdlcXVpdi10ZXh0JywgZXF1aXZUZXh0QXR0cik7XHJcbiAgICAgICAgcmV0dXJuIHhFbGVtO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHhtbCB1c2VkIGZvciBwbGFjZWhvbGRlciBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIFJldHVybnMgYW4gZW1wdHkgPHgvPi1FbGVtZW50IHdpdGggYXR0cmlidXRlIGlkPVwiSU5URVJQT0xBVElPTlwiIG9yIGlkPVwiSU5URVJQT0xBVElPTl9uXCJcclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZlBsYWNlaG9sZGVyUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyLCByb290RWxlbTogRWxlbWVudCk6IE5vZGUge1xyXG4gICAgICAgIGNvbnN0IHhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCd4Jyk7XHJcbiAgICAgICAgbGV0IGlkQXR0cmliID0gJ0lOVEVSUE9MQVRJT04nO1xyXG4gICAgICAgIGlmIChwYXJ0LmluZGV4KCkgPiAwKSB7XHJcbiAgICAgICAgICAgIGlkQXR0cmliID0gJ0lOVEVSUE9MQVRJT05fJyArIHBhcnQuaW5kZXgoKS50b1N0cmluZygxMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGVxdWl2VGV4dEF0dHIgPSBwYXJ0LmRpc3AoKTtcclxuICAgICAgICB4RWxlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgaWRBdHRyaWIpO1xyXG4gICAgICAgIGlmIChlcXVpdlRleHRBdHRyKSB7XHJcbiAgICAgICAgICAgIHhFbGVtLnNldEF0dHJpYnV0ZSgnZXF1aXYtdGV4dCcsIGVxdWl2VGV4dEF0dHIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4geEVsZW07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGljdSBtZXNzYWdlIHJlZnMgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZJQ1VNZXNzYWdlUmVmUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYsIHJvb3RFbGVtOiBFbGVtZW50KTogTm9kZSB7XHJcbiAgICAgICAgY29uc3QgeEVsZW0gPSByb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3gnKTtcclxuICAgICAgICBsZXQgaWRBdHRyaWIgPSAnSUNVJztcclxuICAgICAgICBpZiAocGFydC5pbmRleCgpID4gMCkge1xyXG4gICAgICAgICAgICBpZEF0dHJpYiA9ICdJQ1VfJyArIHBhcnQuaW5kZXgoKS50b1N0cmluZygxMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHhFbGVtLnNldEF0dHJpYnV0ZSgnaWQnLCBpZEF0dHJpYik7XHJcbiAgICAgICAgcmV0dXJuIHhFbGVtO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCJpbXBvcnQge1NUQVRFX05FVywgU1RBVEVfVFJBTlNMQVRFRCwgU1RBVEVfRklOQUx9IGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG5pbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZX0gZnJvbSAnLi4vYXBpL2ktdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZSc7XHJcbmltcG9ydCB7SU5vcm1hbGl6ZWRNZXNzYWdlfSBmcm9tICcuLi9hcGkvaS1ub3JtYWxpemVkLW1lc3NhZ2UnO1xyXG5pbXBvcnQge0lUcmFuc1VuaXR9IGZyb20gJy4uL2FwaS9pLXRyYW5zLXVuaXQnO1xyXG5pbXBvcnQge0lOb3RlfSBmcm9tICcuLi9hcGkvaS1ub3RlJztcclxuaW1wb3J0IHtET01VdGlsaXRpZXN9IGZyb20gJy4vZG9tLXV0aWxpdGllcyc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc1VuaXR9IGZyb20gJy4vYWJzdHJhY3QtdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7WGxpZmZNZXNzYWdlUGFyc2VyfSBmcm9tICcuL3hsaWZmLW1lc3NhZ2UtcGFyc2VyJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlJztcclxuaW1wb3J0IHtBYnN0cmFjdE1lc3NhZ2VQYXJzZXJ9IGZyb20gJy4vYWJzdHJhY3QtbWVzc2FnZS1wYXJzZXInO1xyXG5pbXBvcnQge2lzTnVsbE9yVW5kZWZpbmVkfSBmcm9tICd1dGlsJztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDAxLjA1LjIwMTcuXHJcbiAqIEEgVHJhbnNsYXRpb24gVW5pdCBpbiBhbiBYTElGRiAxLjIgZmlsZS5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgWGxpZmZUcmFuc1VuaXQgZXh0ZW5kcyBBYnN0cmFjdFRyYW5zVW5pdCBpbXBsZW1lbnRzIElUcmFuc1VuaXQge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKF9lbGVtZW50OiBFbGVtZW50LCBfaWQ6IHN0cmluZywgX3RyYW5zbGF0aW9uTWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpIHtcclxuICAgICAgICBzdXBlcihfZWxlbWVudCwgX2lkLCBfdHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzb3VyY2VDb250ZW50KCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3Qgc291cmNlRWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3NvdXJjZScpO1xyXG4gICAgICAgIHJldHVybiBET01VdGlsaXRpZXMuZ2V0WE1MQ29udGVudChzb3VyY2VFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBuZXcgc291cmNlIGNvbnRlbnQgaW4gdGhlIHRyYW5zdW5pdC5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGRvbmUgYnkgbmctZXh0cmFjdC5cclxuICAgICAqIE1ldGhvZCBvbmx5IGV4aXN0cyB0byBhbGxvdyB4bGlmZm1lcmdlIHRvIG1lcmdlIG1pc3NpbmcgY2hhbmdlZCBzb3VyY2UgY29udGVudC5cclxuICAgICAqIEBwYXJhbSBuZXdDb250ZW50IHRoZSBuZXcgY29udGVudC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFNvdXJjZUNvbnRlbnQobmV3Q29udGVudDogc3RyaW5nKSB7XHJcbiAgICAgICAgbGV0IHNvdXJjZSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3NvdXJjZScpO1xyXG4gICAgICAgIGlmICghc291cmNlKSB7XHJcbiAgICAgICAgICAgIC8vIHNob3VsZCBub3QgaGFwcGVuLCB0aGVyZSBhbHdheXMgaGFzIHRvIGJlIGEgc291cmNlLCBidXQgd2hvIGtub3dzLi5cclxuICAgICAgICAgICAgc291cmNlID0gdGhpcy5fZWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc291cmNlJykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudChzb3VyY2UsIG5ld0NvbnRlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGEgcGFyc2VyIHVzZWQgZm9yIG5vcm1hbGl6ZWQgbWVzc2FnZXMuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBtZXNzYWdlUGFyc2VyKCk6IEFic3RyYWN0TWVzc2FnZVBhcnNlciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBYbGlmZk1lc3NhZ2VQYXJzZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBvcmlnaW5hbCB0ZXh0IHZhbHVlLCB0aGF0IGlzIHRvIGJlIHRyYW5zbGF0ZWQsIGFzIG5vcm1hbGl6ZWQgbWVzc2FnZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGNyZWF0ZVNvdXJjZUNvbnRlbnROb3JtYWxpemVkKCk6IFBhcnNlZE1lc3NhZ2Uge1xyXG4gICAgICAgIGNvbnN0IHNvdXJjZUVsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdzb3VyY2UnKTtcclxuICAgICAgICBpZiAoc291cmNlRWxlbWVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlUGFyc2VyKCkuY3JlYXRlTm9ybWFsaXplZE1lc3NhZ2VGcm9tWE1MKHNvdXJjZUVsZW1lbnQsIG51bGwpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB0cmFuc2xhdGVkIHZhbHVlIChjb250YWluaW5nIGFsbCBtYXJrdXAsIGRlcGVuZHMgb24gdGhlIGNvbmNyZXRlIGZvcm1hdCB1c2VkKS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHRhcmdldENvbnRlbnQoKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9lbGVtZW50LCAndGFyZ2V0Jyk7XHJcbiAgICAgICAgcmV0dXJuIERPTVV0aWxpdGllcy5nZXRYTUxDb250ZW50KHRhcmdldEVsZW1lbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHRyYW5zbGF0ZWQgdmFsdWUsIGJ1dCBhbGwgcGxhY2Vob2xkZXJzIGFyZSByZXBsYWNlZCB3aXRoIHt7bn19IChzdGFydGluZyBhdCAwKVxyXG4gICAgICogYW5kIGFsbCBlbWJlZGRlZCBodG1sIGlzIHJlcGxhY2VkIGJ5IGRpcmVjdCBodG1sIG1hcmt1cC5cclxuICAgICAqL1xyXG4gICAgdGFyZ2V0Q29udGVudE5vcm1hbGl6ZWQoKTogSU5vcm1hbGl6ZWRNZXNzYWdlIHtcclxuICAgICAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9lbGVtZW50LCAndGFyZ2V0Jyk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBYbGlmZk1lc3NhZ2VQYXJzZXIoKS5jcmVhdGVOb3JtYWxpemVkTWVzc2FnZUZyb21YTUwodGFyZ2V0RWxlbWVudCwgdGhpcy5zb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0YXRlIG9mIHRoZSB0cmFuc2xhdGlvbiBhcyBzdG9yZWQgaW4gdGhlIHhtbC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIG5hdGl2ZVRhcmdldFN0YXRlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3RhcmdldCcpO1xyXG4gICAgICAgIGlmICh0YXJnZXRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXRFbGVtZW50LmdldEF0dHJpYnV0ZSgnc3RhdGUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBzZXQgc3RhdGUgaW4geG1sLlxyXG4gICAgICogQHBhcmFtIG5hdGl2ZVN0YXRlIG5hdGl2ZVN0YXRlXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBzZXROYXRpdmVUYXJnZXRTdGF0ZShuYXRpdmVTdGF0ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3RhcmdldCcpO1xyXG4gICAgICAgIGlmICh0YXJnZXRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHRhcmdldEVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdGF0ZScsIG5hdGl2ZVN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNYXAgYW4gYWJzdHJhY3Qgc3RhdGUgKG5ldywgdHJhbnNsYXRlZCwgZmluYWwpIHRvIGEgY29uY3JldGUgc3RhdGUgdXNlZCBpbiB0aGUgeG1sLlxyXG4gICAgICogUmV0dXJucyB0aGUgc3RhdGUgdG8gYmUgdXNlZCBpbiB0aGUgeG1sLlxyXG4gICAgICogQHBhcmFtIHN0YXRlIG9uZSBvZiBDb25zdGFudHMuU1RBVEUuLi5cclxuICAgICAqIEByZXR1cm5zIGEgbmF0aXZlIHN0YXRlIChkZXBlbmRzIG9uIGNvbmNyZXRlIGZvcm1hdClcclxuICAgICAqIEB0aHJvd3MgZXJyb3IsIGlmIHN0YXRlIGlzIGludmFsaWQuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBtYXBTdGF0ZVRvTmF0aXZlU3RhdGUoc3RhdGU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgc3dpdGNoICggc3RhdGUpIHtcclxuICAgICAgICAgICAgY2FzZSBTVEFURV9ORVc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ25ldyc7XHJcbiAgICAgICAgICAgIGNhc2UgU1RBVEVfVFJBTlNMQVRFRDpcclxuICAgICAgICAgICAgICAgIHJldHVybiAndHJhbnNsYXRlZCc7XHJcbiAgICAgICAgICAgIGNhc2UgU1RBVEVfRklOQUw6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2ZpbmFsJztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBzdGF0ZSAnICsgIHN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNYXAgYSBuYXRpdmUgc3RhdGUgKGZvdW5kIGluIHRoZSBkb2N1bWVudCkgdG8gYW4gYWJzdHJhY3Qgc3RhdGUgKG5ldywgdHJhbnNsYXRlZCwgZmluYWwpLlxyXG4gICAgICogUmV0dXJucyB0aGUgYWJzdHJhY3Qgc3RhdGUuXHJcbiAgICAgKiBAcGFyYW0gbmF0aXZlU3RhdGUgbmF0aXZlU3RhdGVcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIG1hcE5hdGl2ZVN0YXRlVG9TdGF0ZShuYXRpdmVTdGF0ZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBzd2l0Y2ggKCBuYXRpdmVTdGF0ZSkge1xyXG4gICAgICAgICAgICBjYXNlICduZXcnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNUQVRFX05FVztcclxuICAgICAgICAgICAgY2FzZSAnbmVlZHMtdHJhbnNsYXRpb24nOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNUQVRFX05FVztcclxuICAgICAgICAgICAgY2FzZSAndHJhbnNsYXRlZCc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfVFJBTlNMQVRFRDtcclxuICAgICAgICAgICAgY2FzZSAnbmVlZHMtYWRhcHRhdGlvbic6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfVFJBTlNMQVRFRDtcclxuICAgICAgICAgICAgY2FzZSAnbmVlZHMtbDEwbic6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfVFJBTlNMQVRFRDtcclxuICAgICAgICAgICAgY2FzZSAnbmVlZHMtcmV2aWV3LWFkYXB0YXRpb24nOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNUQVRFX1RSQU5TTEFURUQ7XHJcbiAgICAgICAgICAgIGNhc2UgJ25lZWRzLXJldmlldy1sMTBuJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBTVEFURV9UUkFOU0xBVEVEO1xyXG4gICAgICAgICAgICBjYXNlICduZWVkcy1yZXZpZXctdHJhbnNsYXRpb24nOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNUQVRFX1RSQU5TTEFURUQ7XHJcbiAgICAgICAgICAgIGNhc2UgJ2ZpbmFsJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBTVEFURV9GSU5BTDtcclxuICAgICAgICAgICAgY2FzZSAnc2lnbmVkLW9mZic6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfRklOQUw7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfTkVXO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFsbCB0aGUgc291cmNlIGVsZW1lbnRzIGluIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICogVGhlIHNvdXJjZSBlbGVtZW50IGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaW5hbCB0ZW1wbGF0ZS5cclxuICAgICAqIEl0IGNvbnRhaW5zIHRoZSBuYW1lIG9mIHRoZSB0ZW1wbGF0ZSBmaWxlIGFuZCBhIGxpbmUgbnVtYmVyIHdpdGggdGhlIHBvc2l0aW9uIGluc2lkZSB0aGUgdGVtcGxhdGUuXHJcbiAgICAgKiBJdCBpcyBqdXN0IGEgaGVscCBmb3IgdHJhbnNsYXRvcnMgdG8gZmluZCB0aGUgY29udGV4dCBmb3IgdGhlIHRyYW5zbGF0aW9uLlxyXG4gICAgICogVGhpcyBpcyBzZXQgd2hlbiB1c2luZyBBbmd1bGFyIDQuMCBvciBncmVhdGVyLlxyXG4gICAgICogT3RoZXJ3aXNlIGl0IGp1c3QgcmV0dXJucyBhbiBlbXB0eSBhcnJheS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNvdXJjZVJlZmVyZW5jZXMoKToge3NvdXJjZWZpbGU6IHN0cmluZywgbGluZW51bWJlcjogbnVtYmVyfVtdIHtcclxuICAgICAgICBjb25zdCBzb3VyY2VFbGVtZW50cyA9IHRoaXMuX2VsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2NvbnRleHQtZ3JvdXAnKTtcclxuICAgICAgICBjb25zdCBzb3VyY2VSZWZzOiB7IHNvdXJjZWZpbGU6IHN0cmluZywgbGluZW51bWJlcjogbnVtYmVyIH1bXSA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc291cmNlRWxlbWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZWxlbSA9IHNvdXJjZUVsZW1lbnRzLml0ZW0oaSk7XHJcbiAgICAgICAgICAgIGlmIChlbGVtLmdldEF0dHJpYnV0ZSgncHVycG9zZScpID09PSAnbG9jYXRpb24nKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb250ZXh0RWxlbWVudHMgPSBlbGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdjb250ZXh0Jyk7XHJcbiAgICAgICAgICAgICAgICBsZXQgc291cmNlZmlsZSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICBsZXQgbGluZW51bWJlciA9IDA7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGNvbnRleHRFbGVtZW50cy5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRleHRFbGVtID0gY29udGV4dEVsZW1lbnRzLml0ZW0oaik7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRleHRFbGVtLmdldEF0dHJpYnV0ZSgnY29udGV4dC10eXBlJykgPT09ICdzb3VyY2VmaWxlJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2VmaWxlID0gRE9NVXRpbGl0aWVzLmdldFBDREFUQShjb250ZXh0RWxlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb250ZXh0RWxlbS5nZXRBdHRyaWJ1dGUoJ2NvbnRleHQtdHlwZScpID09PSAnbGluZW51bWJlcicpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZW51bWJlciA9IE51bWJlci5wYXJzZUludChET01VdGlsaXRpZXMuZ2V0UENEQVRBKGNvbnRleHRFbGVtKSwgMTApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHNvdXJjZVJlZnMucHVzaCh7c291cmNlZmlsZTogc291cmNlZmlsZSwgbGluZW51bWJlcjogbGluZW51bWJlcn0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzb3VyY2VSZWZzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0IHNvdXJjZSByZWYgZWxlbWVudHMgaW4gdGhlIHRyYW5zdW5pdC5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGRvbmUgYnkgbmctZXh0cmFjdC5cclxuICAgICAqIE1ldGhvZCBvbmx5IGV4aXN0cyB0byBhbGxvdyB4bGlmZm1lcmdlIHRvIG1lcmdlIG1pc3Npbmcgc291cmNlIHJlZnMuXHJcbiAgICAgKiBAcGFyYW0gc291cmNlUmVmcyB0aGUgc291cmNlcmVmcyB0byBzZXQuIE9sZCBvbmVzIGFyZSByZW1vdmVkLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0U291cmNlUmVmZXJlbmNlcyhzb3VyY2VSZWZzOiB7c291cmNlZmlsZTogc3RyaW5nLCBsaW5lbnVtYmVyOiBudW1iZXJ9W10pIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUFsbFNvdXJjZVJlZmVyZW5jZXMoKTtcclxuICAgICAgICBzb3VyY2VSZWZzLmZvckVhY2goKHJlZikgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjb250ZXh0R3JvdXAgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY29udGV4dC1ncm91cCcpO1xyXG4gICAgICAgICAgICBjb250ZXh0R3JvdXAuc2V0QXR0cmlidXRlKCdwdXJwb3NlJywgJ2xvY2F0aW9uJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbnRleHRTb3VyY2UgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY29udGV4dCcpO1xyXG4gICAgICAgICAgICBjb250ZXh0U291cmNlLnNldEF0dHJpYnV0ZSgnY29udGV4dC10eXBlJywgJ3NvdXJjZWZpbGUnKTtcclxuICAgICAgICAgICAgY29udGV4dFNvdXJjZS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocmVmLnNvdXJjZWZpbGUpKTtcclxuICAgICAgICAgICAgY29uc3QgY29udGV4dExpbmUgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY29udGV4dCcpO1xyXG4gICAgICAgICAgICBjb250ZXh0TGluZS5zZXRBdHRyaWJ1dGUoJ2NvbnRleHQtdHlwZScsICdsaW5lbnVtYmVyJyk7XHJcbiAgICAgICAgICAgIGNvbnRleHRMaW5lLmFwcGVuZENoaWxkKHRoaXMuX2VsZW1lbnQub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShyZWYubGluZW51bWJlci50b1N0cmluZygxMCkpKTtcclxuICAgICAgICAgICAgY29udGV4dEdyb3VwLmFwcGVuZENoaWxkKGNvbnRleHRTb3VyY2UpO1xyXG4gICAgICAgICAgICBjb250ZXh0R3JvdXAuYXBwZW5kQ2hpbGQoY29udGV4dExpbmUpO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmFwcGVuZENoaWxkKGNvbnRleHRHcm91cCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSByZW1vdmVBbGxTb3VyY2VSZWZlcmVuY2VzKCkge1xyXG4gICAgICAgIGNvbnN0IHNvdXJjZUVsZW1lbnRzID0gdGhpcy5fZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnY29udGV4dC1ncm91cCcpO1xyXG4gICAgICAgIGNvbnN0IHRvQmVSZW1vdmVkID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzb3VyY2VFbGVtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBlbGVtID0gc291cmNlRWxlbWVudHMuaXRlbShpKTtcclxuICAgICAgICAgICAgaWYgKGVsZW0uZ2V0QXR0cmlidXRlKCdwdXJwb3NlJykgPT09ICdsb2NhdGlvbicpIHtcclxuICAgICAgICAgICAgICAgIHRvQmVSZW1vdmVkLnB1c2goZWxlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdG9CZVJlbW92ZWQuZm9yRWFjaCgoZWxlbSkgPT4ge2VsZW0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtKTsgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZGVzY3JpcHRpb24gc2V0IGluIHRoZSB0ZW1wbGF0ZSBhcyB2YWx1ZSBvZiB0aGUgaTE4bi1hdHRyaWJ1dGUuXHJcbiAgICAgKiBlLmcuIGkxOG49XCJteWRlc2NyaXB0aW9uXCIuXHJcbiAgICAgKiBJbiB4bGlmZiB0aGlzIGlzIHN0b3JlZCBhcyBhIG5vdGUgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZSBmcm9tPVwiZGVzY3JpcHRpb25cIi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGRlc2NyaXB0aW9uKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW0gPSB0aGlzLmZpbmROb3RlRWxlbWVudFdpdGhGcm9tQXR0cmlidXRlKCdkZXNjcmlwdGlvbicpO1xyXG4gICAgICAgIGlmIChub3RlRWxlbSkge1xyXG4gICAgICAgICAgICByZXR1cm4gRE9NVXRpbGl0aWVzLmdldFBDREFUQShub3RlRWxlbSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlIGRlc2NyaXB0aW9uIHByb3BlcnR5IG9mIHRyYW5zLXVuaXQuXHJcbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gZGVzY3JpcHRpb25cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldERlc2NyaXB0aW9uKGRlc2NyaXB0aW9uOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgbm90ZUVsZW0gPSB0aGlzLmZpbmROb3RlRWxlbWVudFdpdGhGcm9tQXR0cmlidXRlKCdkZXNjcmlwdGlvbicpO1xyXG4gICAgICAgIGlmIChkZXNjcmlwdGlvbikge1xyXG4gICAgICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZChub3RlRWxlbSkpIHtcclxuICAgICAgICAgICAgICAgLy8gY3JlYXRlIGl0XHJcbiAgICAgICAgICAgICAgIG5vdGVFbGVtID0gdGhpcy5jcmVhdGVOb3RlRWxlbWVudFdpdGhGcm9tQXR0cmlidXRlKCdkZXNjcmlwdGlvbicsIGRlc2NyaXB0aW9uKTtcclxuICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudChub3RlRWxlbSwgZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKG5vdGVFbGVtKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gcmVtb3ZlIG5vZGVcclxuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlTm90ZUVsZW1lbnRXaXRoRnJvbUF0dHJpYnV0ZSgnZGVzY3JpcHRpb24nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZpbmQgYSBub3RlIGVsZW1lbnQgd2l0aCBhdHRyaWJ1dGUgZnJvbT0nPGF0dHJWYWx1ZT4nXHJcbiAgICAgKiBAcGFyYW0gYXR0clZhbHVlIGF0dHJWYWx1ZVxyXG4gICAgICogQHJldHVybiBlbGVtZW50IG9yIG51bGwgaXMgYWJzZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZmluZE5vdGVFbGVtZW50V2l0aEZyb21BdHRyaWJ1dGUoYXR0clZhbHVlOiBzdHJpbmcpOiBFbGVtZW50IHtcclxuICAgICAgICBjb25zdCBub3RlRWxlbWVudHMgPSB0aGlzLl9lbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdub3RlJyk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub3RlRWxlbWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3Qgbm90ZUVsZW0gPSBub3RlRWxlbWVudHMuaXRlbShpKTtcclxuICAgICAgICAgICAgaWYgKG5vdGVFbGVtLmdldEF0dHJpYnV0ZSgnZnJvbScpID09PSBhdHRyVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBub3RlRWxlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCBhbGwgbm90ZSBlbGVtZW50cyB3aGVyZSBmcm9tIGF0dHJpYnV0ZSBpcyBub3QgZGVzY3JpcHRpb24gb3IgbWVhbmluZ1xyXG4gICAgICogQHJldHVybiBlbGVtZW50c1xyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGZpbmRBbGxBZGRpdGlvbmFsTm90ZUVsZW1lbnRzKCk6IEVsZW1lbnRbXSB7XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbnRzID0gdGhpcy5fZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbm90ZScpO1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdDogRWxlbWVudFtdID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub3RlRWxlbWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3Qgbm90ZUVsZW0gPSBub3RlRWxlbWVudHMuaXRlbShpKTtcclxuICAgICAgICAgICAgY29uc3QgZnJvbUF0dHJpYnV0ZSA9IG5vdGVFbGVtLmdldEF0dHJpYnV0ZSgnZnJvbScpO1xyXG4gICAgICAgICAgICBpZiAoZnJvbUF0dHJpYnV0ZSAhPT0gJ2Rlc2NyaXB0aW9uJyAmJiBmcm9tQXR0cmlidXRlICE9PSAnbWVhbmluZycpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5vdGVFbGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgbmV3IG5vdGUgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZSBmcm9tPSc8YXR0clZhbHVlPidcclxuICAgICAqIEBwYXJhbSBmcm9tQXR0clZhbHVlIHZhbHVlIG9mIFwiZnJvbVwiIGF0dHJpYnV0ZVxyXG4gICAgICogQHBhcmFtIGNvbnRlbnQgdGV4dCB2YWx1ZSBvZiBub3RlIGVsZW1lbnRcclxuICAgICAqIEByZXR1cm4gdGhlIG5ldyBjcmVhdGVkIGVsZW1lbnRcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjcmVhdGVOb3RlRWxlbWVudFdpdGhGcm9tQXR0cmlidXRlKGZyb21BdHRyVmFsdWU6IHN0cmluZywgY29udGVudDogc3RyaW5nKTogRWxlbWVudCB7XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbnQgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbm90ZScpO1xyXG4gICAgICAgIGlmIChmcm9tQXR0clZhbHVlKSB7XHJcbiAgICAgICAgICAgIG5vdGVFbGVtZW50LnNldEF0dHJpYnV0ZSgnZnJvbScsIGZyb21BdHRyVmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBub3RlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3ByaW9yaXR5JywgJzEnKTtcclxuICAgICAgICBpZiAoY29udGVudCkge1xyXG4gICAgICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudChub3RlRWxlbWVudCwgY29udGVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQuYXBwZW5kQ2hpbGQobm90ZUVsZW1lbnQpO1xyXG4gICAgICAgIHJldHVybiBub3RlRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSBub3RlIGVsZW1lbnQgd2l0aCBhdHRyaWJ1dGUgZnJvbT0nPGF0dHJWYWx1ZT4nXHJcbiAgICAgKiBAcGFyYW0gYXR0clZhbHVlIGF0dHJWYWx1ZVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlbW92ZU5vdGVFbGVtZW50V2l0aEZyb21BdHRyaWJ1dGUoYXR0clZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBub3RlRWxlbWVudCA9IHRoaXMuZmluZE5vdGVFbGVtZW50V2l0aEZyb21BdHRyaWJ1dGUoYXR0clZhbHVlKTtcclxuICAgICAgICBpZiAobm90ZUVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVDaGlsZChub3RlRWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlIGFsbCBub3RlIGVsZW1lbnRzIHdoZXJlIGF0dHJpYnV0ZSBcImZyb21cIiBpcyBub3QgZGVzY3JpcHRpb24gb3IgbWVhbmluZy5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSByZW1vdmVBbGxBZGRpdGlvbmFsTm90ZUVsZW1lbnRzKCkge1xyXG4gICAgICAgIGNvbnN0IG5vdGVFbGVtZW50cyA9IHRoaXMuZmluZEFsbEFkZGl0aW9uYWxOb3RlRWxlbWVudHMoKTtcclxuICAgICAgICBub3RlRWxlbWVudHMuZm9yRWFjaCgobm90ZUVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVDaGlsZChub3RlRWxlbWVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbWVhbmluZyAoaW50ZW50KSBzZXQgaW4gdGhlIHRlbXBsYXRlIGFzIHZhbHVlIG9mIHRoZSBpMThuLWF0dHJpYnV0ZS5cclxuICAgICAqIFRoaXMgaXMgdGhlIHBhcnQgaW4gZnJvbnQgb2YgdGhlIHwgc3ltYm9sLlxyXG4gICAgICogZS5nLiBpMThuPVwibWVhbmluZ3xteWRlc2NyaXB0aW9uXCIuXHJcbiAgICAgKiBJbiB4bGlmZiB0aGlzIGlzIHN0b3JlZCBhcyBhIG5vdGUgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZSBmcm9tPVwibWVhbmluZ1wiLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbWVhbmluZygpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IG5vdGVFbGVtID0gdGhpcy5maW5kTm90ZUVsZW1lbnRXaXRoRnJvbUF0dHJpYnV0ZSgnbWVhbmluZycpO1xyXG4gICAgICAgIGlmIChub3RlRWxlbSkge1xyXG4gICAgICAgICAgICByZXR1cm4gRE9NVXRpbGl0aWVzLmdldFBDREFUQShub3RlRWxlbSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlIG1lYW5pbmcgcHJvcGVydHkgb2YgdHJhbnMtdW5pdC5cclxuICAgICAqIEBwYXJhbSAgbWVhbmluZyBtZWFuaW5nXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXRNZWFuaW5nKG1lYW5pbmc6IHN0cmluZykge1xyXG4gICAgICAgIGxldCBub3RlRWxlbSA9IHRoaXMuZmluZE5vdGVFbGVtZW50V2l0aEZyb21BdHRyaWJ1dGUoJ21lYW5pbmcnKTtcclxuICAgICAgICBpZiAobWVhbmluZykge1xyXG4gICAgICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQobm90ZUVsZW0pKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBjcmVhdGUgaXRcclxuICAgICAgICAgICAgICAgIG5vdGVFbGVtID0gdGhpcy5jcmVhdGVOb3RlRWxlbWVudFdpdGhGcm9tQXR0cmlidXRlKCdtZWFuaW5nJywgbWVhbmluZyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudChub3RlRWxlbSwgbWVhbmluZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKG5vdGVFbGVtKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gcmVtb3ZlIG5vZGVcclxuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlTm90ZUVsZW1lbnRXaXRoRnJvbUF0dHJpYnV0ZSgnbWVhbmluZycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGFsbCBub3RlcyBvZiB0aGUgdHJhbnMtdW5pdC5cclxuICAgICAqIE5vdGVzIGFyZSByZW1hcmtzIG1hZGUgYnkgYSB0cmFuc2xhdG9yLlxyXG4gICAgICogKGRlc2NyaXB0aW9uIGFuZCBtZWFuaW5nIGFyZSBub3QgaW5jbHVkZWQgaGVyZSEpXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBub3RlcygpOiBJTm90ZVtdIHtcclxuICAgICAgICBjb25zdCBub3RlRWxlbWVtdHM6IEVsZW1lbnRbXSA9IHRoaXMuZmluZEFsbEFkZGl0aW9uYWxOb3RlRWxlbWVudHMoKTtcclxuICAgICAgICByZXR1cm4gbm90ZUVsZW1lbXRzLm1hcChlbGVtID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGZyb206IGVsZW0uZ2V0QXR0cmlidXRlKCdmcm9tJyksXHJcbiAgICAgICAgICAgICAgICB0ZXh0OiBET01VdGlsaXRpZXMuZ2V0UENEQVRBKGVsZW0pXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfSk7XHJcbiAgICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHNldHRpbmcgb2Ygbm90ZXMgaXMgc3VwcG9ydGVkLlxyXG4gICAgICogSWYgbm90LCBzZXROb3RlcyB3aWxsIGRvIG5vdGhpbmcuXHJcbiAgICAgKiB4dGIgZG9lcyBub3Qgc3VwcG9ydCB0aGlzLCBhbGwgb3RoZXIgZm9ybWF0cyBkby5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHN1cHBvcnRzU2V0Tm90ZXMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGQgbm90ZXMgdG8gdHJhbnMgdW5pdC5cclxuICAgICAqIEBwYXJhbSBuZXdOb3RlcyB0aGUgbm90ZXMgdG8gYWRkLlxyXG4gICAgICogQHRocm93cyBhbiBFcnJvciBpZiBhbnkgbm90ZSBjb250YWlucyBkZXNjcmlwdGlvbiBvciBtZWFuaW5nIGFzIGZyb20gYXR0cmlidXRlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0Tm90ZXMobmV3Tm90ZXM6IElOb3RlW10pIHtcclxuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKG5ld05vdGVzKSkge1xyXG4gICAgICAgICAgICB0aGlzLmNoZWNrTm90ZXMobmV3Tm90ZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnJlbW92ZUFsbEFkZGl0aW9uYWxOb3RlRWxlbWVudHMoKTtcclxuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKG5ld05vdGVzKSkge1xyXG4gICAgICAgICAgICBuZXdOb3Rlcy5mb3JFYWNoKChub3RlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBub3RlRWxlbSA9IHRoaXMuY3JlYXRlTm90ZUVsZW1lbnRXaXRoRnJvbUF0dHJpYnV0ZShub3RlLmZyb20sIG5vdGUudGV4dCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCB0aGUgdHJhbnNsYXRpb24gdG8gYSBnaXZlbiBzdHJpbmcgKGluY2x1ZGluZyBtYXJrdXApLlxyXG4gICAgICogQHBhcmFtIHRyYW5zbGF0aW9uIHRyYW5zbGF0aW9uXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCB0cmFuc2xhdGVOYXRpdmUodHJhbnNsYXRpb246IHN0cmluZykge1xyXG4gICAgICAgIGxldCB0YXJnZXQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICd0YXJnZXQnKTtcclxuICAgICAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2UgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdzb3VyY2UnKTtcclxuICAgICAgICAgICAgdGFyZ2V0ID0gRE9NVXRpbGl0aWVzLmNyZWF0ZUZvbGxvd2luZ1NpYmxpbmcoJ3RhcmdldCcsIHNvdXJjZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIERPTVV0aWxpdGllcy5yZXBsYWNlQ29udGVudFdpdGhYTUxDb250ZW50KHRhcmdldCwgPHN0cmluZz4gdHJhbnNsYXRpb24pO1xyXG4gICAgICAgIHRoaXMuc2V0VGFyZ2V0U3RhdGUoU1RBVEVfVFJBTlNMQVRFRCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3B5IHNvdXJjZSB0byB0YXJnZXQgdG8gdXNlIGl0IGFzIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogUmV0dXJucyBhIGNoYW5nZWQgY29weSBvZiB0aGlzIHRyYW5zIHVuaXQuXHJcbiAgICAgKiByZWNlaXZlciBpcyBub3QgY2hhbmdlZC5cclxuICAgICAqIChpbnRlcm5hbCB1c2FnZSBvbmx5LCBhIGNsaWVudCBzaG91bGQgY2FsbCBpbXBvcnROZXdUcmFuc1VuaXQgb24gSVRyYW5zbGF0aW9uTWVzc2FnZUZpbGUpXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjbG9uZVdpdGhTb3VyY2VBc1RhcmdldChpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbiwgdGFyZ2V0RmlsZTogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKTogQWJzdHJhY3RUcmFuc1VuaXQge1xyXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSA8RWxlbWVudD4gdGhpcy5fZWxlbWVudC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAgICAgY29uc3QgY2xvbmUgPSBuZXcgWGxpZmZUcmFuc1VuaXQoZWxlbWVudCwgdGhpcy5faWQsIHRhcmdldEZpbGUpO1xyXG4gICAgICAgIGNsb25lLnVzZVNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmcsIGNvcHlDb250ZW50KTtcclxuICAgICAgICByZXR1cm4gY2xvbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3B5IHNvdXJjZSB0byB0YXJnZXQgdG8gdXNlIGl0IGFzIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogKGludGVybmFsIHVzYWdlIG9ubHksIGEgY2xpZW50IHNob3VsZCBjYWxsIGNyZWF0ZVRyYW5zbGF0aW9uRmlsZUZvckxhbmcgb24gSVRyYW5zbGF0aW9uTWVzc2FnZUZpbGUpXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB1c2VTb3VyY2VBc1RhcmdldChpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbikge1xyXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3NvdXJjZScpO1xyXG4gICAgICAgIGxldCB0YXJnZXQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICd0YXJnZXQnKTtcclxuICAgICAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgICAgICB0YXJnZXQgPSBET01VdGlsaXRpZXMuY3JlYXRlRm9sbG93aW5nU2libGluZygndGFyZ2V0Jywgc291cmNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlzRGVmYXVsdExhbmcgfHwgY29weUNvbnRlbnQpIHtcclxuICAgICAgICAgICAgY29uc3Qgc291cmNlU3RyaW5nID0gRE9NVXRpbGl0aWVzLmdldFhNTENvbnRlbnQoc291cmNlKTtcclxuICAgICAgICAgICAgbGV0IG5ld1RhcmdldFN0cmluZyA9IHNvdXJjZVN0cmluZztcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmlzSUNVTWVzc2FnZShzb3VyY2VTdHJpbmcpKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdUYXJnZXRTdHJpbmcgPSB0aGlzLnRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKCkuZ2V0TmV3VHJhbnNVbml0VGFyZ2V0UHJhZWZpeCgpXHJcbiAgICAgICAgICAgICAgICAgICAgKyBzb3VyY2VTdHJpbmdcclxuICAgICAgICAgICAgICAgICAgICArIHRoaXMudHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUoKS5nZXROZXdUcmFuc1VuaXRUYXJnZXRTdWZmaXgoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudCh0YXJnZXQsIG5ld1RhcmdldFN0cmluZyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgRE9NVXRpbGl0aWVzLnJlcGxhY2VDb250ZW50V2l0aFhNTENvbnRlbnQodGFyZ2V0LCAnJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpc0RlZmF1bHRMYW5nKSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5zZXRBdHRyaWJ1dGUoJ3N0YXRlJywgdGhpcy5tYXBTdGF0ZVRvTmF0aXZlU3RhdGUoU1RBVEVfRklOQUwpKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0YXJnZXQuc2V0QXR0cmlidXRlKCdzdGF0ZScsIHRoaXMubWFwU3RhdGVUb05hdGl2ZVN0YXRlKFNUQVRFX05FVykpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQge2Zvcm1hdH0gZnJvbSAndXRpbCc7XHJcbmltcG9ydCB7SVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuaW1wb3J0IHtJVHJhbnNVbml0fSBmcm9tICcuLi9hcGkvaS10cmFucy11bml0JztcclxuaW1wb3J0IHtGT1JNQVRfWExJRkYxMiwgRklMRVRZUEVfWExJRkYxMn0gZnJvbSAnLi4vYXBpL2NvbnN0YW50cyc7XHJcbmltcG9ydCB7RE9NVXRpbGl0aWVzfSBmcm9tICcuL2RvbS11dGlsaXRpZXMnO1xyXG5pbXBvcnQge1hsaWZmVHJhbnNVbml0fSBmcm9tICcuL3hsaWZmLXRyYW5zLXVuaXQnO1xyXG5pbXBvcnQge0Fic3RyYWN0VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGV9IGZyb20gJy4vYWJzdHJhY3QtdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZSc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc1VuaXR9IGZyb20gJy4vYWJzdHJhY3QtdHJhbnMtdW5pdCc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAyMy4wMi4yMDE3LlxyXG4gKiBBYiB4bGlmZiBmaWxlIHJlYWQgZnJvbSBhIHNvdXJjZSBmaWxlLlxyXG4gKiBEZWZpbmVzIHNvbWUgcmVsZXZhbnQgZ2V0IGFuZCBzZXQgbWV0aG9kIGZvciByZWFkaW5nIGFuZCBtb2RpZnlpbmcgc3VjaCBhIGZpbGUuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFhsaWZmRmlsZSBleHRlbmRzIEFic3RyYWN0VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUgaW1wbGVtZW50cyBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGFuIHhsZi1GaWxlIGZyb20gc291cmNlLlxyXG4gICAgICogQHBhcmFtIHhtbFN0cmluZyBzb3VyY2UgcmVhZCBmcm9tIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBQYXRoIHRvIGZpbGVcclxuICAgICAqIEBwYXJhbSBlbmNvZGluZyBvcHRpb25hbCBlbmNvZGluZyBvZiB0aGUgeG1sLlxyXG4gICAgICogVGhpcyBpcyByZWFkIGZyb20gdGhlIGZpbGUsIGJ1dCBpZiB5b3Uga25vdyBpdCBiZWZvcmUsIHlvdSBjYW4gYXZvaWQgcmVhZGluZyB0aGUgZmlsZSB0d2ljZS5cclxuICAgICAqIEByZXR1cm4gWGxpZmZGaWxlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHhtbFN0cmluZzogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuX3dhcm5pbmdzID0gW107XHJcbiAgICAgICAgdGhpcy5fbnVtYmVyT2ZUcmFuc1VuaXRzV2l0aE1pc3NpbmdJZCA9IDA7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsaXplRnJvbUNvbnRlbnQoeG1sU3RyaW5nLCBwYXRoLCBlbmNvZGluZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplRnJvbUNvbnRlbnQoeG1sU3RyaW5nOiBzdHJpbmcsIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IHN0cmluZyk6IFhsaWZmRmlsZSB7XHJcbiAgICAgICAgdGhpcy5wYXJzZUNvbnRlbnQoeG1sU3RyaW5nLCBwYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgY29uc3QgeGxpZmZMaXN0ID0gdGhpcy5fcGFyc2VkRG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3hsaWZmJyk7XHJcbiAgICAgICAgaWYgKHhsaWZmTGlzdC5sZW5ndGggIT09IDEpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnRmlsZSBcIiVzXCIgc2VlbXMgdG8gYmUgbm8geGxpZmYgZmlsZSAoc2hvdWxkIGNvbnRhaW4gYW4geGxpZmYgZWxlbWVudCknLCBwYXRoKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgdmVyc2lvbiA9IHhsaWZmTGlzdC5pdGVtKDApLmdldEF0dHJpYnV0ZSgndmVyc2lvbicpO1xyXG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZFZlcnNpb24gPSAnMS4yJztcclxuICAgICAgICAgICAgaWYgKHZlcnNpb24gIT09IGV4cGVjdGVkVmVyc2lvbikge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnRmlsZSBcIiVzXCIgc2VlbXMgdG8gYmUgbm8geGxpZmYgMS4yIGZpbGUsIHZlcnNpb24gc2hvdWxkIGJlICVzLCBmb3VuZCAlcycsXHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aCwgZXhwZWN0ZWRWZXJzaW9uLCB2ZXJzaW9uKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGaWxlIGZvcm1hdCBhcyBpdCBpcyB1c2VkIGluIGNvbmZpZyBmaWxlcy5cclxuICAgICAqIEN1cnJlbnRseSAneGxmJywgJ3htYicsICd4bWIyJ1xyXG4gICAgICogUmV0dXJucyBvbmUgb2YgdGhlIGNvbnN0YW50cyBGT1JNQVRfLi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGkxOG5Gb3JtYXQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gRk9STUFUX1hMSUZGMTI7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGaWxlIHR5cGUuXHJcbiAgICAgKiBIZXJlICdYTElGRiAxLjInXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBmaWxlVHlwZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBGSUxFVFlQRV9YTElGRjEyO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogcmV0dXJuIHRhZyBuYW1lcyBvZiBhbGwgZWxlbWVudHMgdGhhdCBoYXZlIG1peGVkIGNvbnRlbnQuXHJcbiAgICAgKiBUaGVzZSBlbGVtZW50cyB3aWxsIG5vdCBiZSBiZWF1dGlmaWVkLlxyXG4gICAgICogVHlwaWNhbCBjYW5kaWRhdGVzIGFyZSBzb3VyY2UgYW5kIHRhcmdldC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGVsZW1lbnRzV2l0aE1peGVkQ29udGVudCgpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgcmV0dXJuIFsnc291cmNlJywgJ3RhcmdldCcsICd0b29sJywgJ3NlZy1zb3VyY2UnLCAnZycsICdwaCcsICdicHQnLCAnZXB0JywgJ2l0JywgJ3N1YicsICdtcmsnXTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgaW5pdGlhbGl6ZVRyYW5zVW5pdHMoKSB7XHJcbiAgICAgICAgdGhpcy50cmFuc1VuaXRzID0gW107XHJcbiAgICAgICAgY29uc3QgdHJhbnNVbml0c0luRmlsZSA9IHRoaXMuX3BhcnNlZERvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0cmFucy11bml0Jyk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmFuc1VuaXRzSW5GaWxlLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zdW5pdCA9IHRyYW5zVW5pdHNJbkZpbGUuaXRlbShpKTtcclxuICAgICAgICAgICAgY29uc3QgaWQgPSB0cmFuc3VuaXQuZ2V0QXR0cmlidXRlKCdpZCcpO1xyXG4gICAgICAgICAgICBpZiAoIWlkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl93YXJuaW5ncy5wdXNoKGZvcm1hdCgnb29wcywgdHJhbnMtdW5pdCB3aXRob3V0IFwiaWRcIiBmb3VuZCBpbiBtYXN0ZXIsIHBsZWFzZSBjaGVjayBmaWxlICVzJywgdGhpcy5fZmlsZW5hbWUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnRyYW5zVW5pdHMucHVzaChuZXcgWGxpZmZUcmFuc1VuaXQodHJhbnN1bml0LCBpZCwgdGhpcykpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCBzb3VyY2UgbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcmV0dXJuIHNvdXJjZSBsYW5ndWFnZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNvdXJjZUxhbmd1YWdlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgZmlsZUVsZW0gPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAnZmlsZScpO1xyXG4gICAgICAgIGlmIChmaWxlRWxlbSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmlsZUVsZW0uZ2V0QXR0cmlidXRlKCdzb3VyY2UtbGFuZ3VhZ2UnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFZGl0IHRoZSBzb3VyY2UgbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2UgbGFuZ3VhZ2VcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFNvdXJjZUxhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBmaWxlRWxlbSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fcGFyc2VkRG9jdW1lbnQsICdmaWxlJyk7XHJcbiAgICAgICAgaWYgKGZpbGVFbGVtKSB7XHJcbiAgICAgICAgICAgIGZpbGVFbGVtLnNldEF0dHJpYnV0ZSgnc291cmNlLWxhbmd1YWdlJywgbGFuZ3VhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcmV0dXJuIHRhcmdldCBsYW5ndWFnZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHRhcmdldExhbmd1YWdlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgZmlsZUVsZW0gPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAnZmlsZScpO1xyXG4gICAgICAgIGlmIChmaWxlRWxlbSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmlsZUVsZW0uZ2V0QXR0cmlidXRlKCd0YXJnZXQtbGFuZ3VhZ2UnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFZGl0IHRoZSB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2UgbGFuZ3VhZ2VcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFRhcmdldExhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBmaWxlRWxlbSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fcGFyc2VkRG9jdW1lbnQsICdmaWxlJyk7XHJcbiAgICAgICAgaWYgKGZpbGVFbGVtKSB7XHJcbiAgICAgICAgICAgIGZpbGVFbGVtLnNldEF0dHJpYnV0ZSgndGFyZ2V0LWxhbmd1YWdlJywgbGFuZ3VhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFkZCBhIG5ldyB0cmFucy11bml0IHRvIHRoaXMgZmlsZS5cclxuICAgICAqIFRoZSB0cmFucyB1bml0IHN0ZW1zIGZyb20gYW5vdGhlciBmaWxlLlxyXG4gICAgICogSXQgY29waWVzIHRoZSBzb3VyY2UgY29udGVudCBvZiB0aGUgdHUgdG8gdGhlIHRhcmdldCBjb250ZW50IHRvbyxcclxuICAgICAqIGRlcGVuZGluZyBvbiB0aGUgdmFsdWVzIG9mIGlzRGVmYXVsdExhbmcgYW5kIGNvcHlDb250ZW50LlxyXG4gICAgICogU28gdGhlIHNvdXJjZSBjYW4gYmUgdXNlZCBhcyBhIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogKHVzZWQgYnkgeGxpZmZtZXJnZSlcclxuICAgICAqIEBwYXJhbSBmb3JlaWduVHJhbnNVbml0IHRoZSB0cmFucyB1bml0IHRvIGJlIGltcG9ydGVkLlxyXG4gICAgICogQHBhcmFtIGlzRGVmYXVsdExhbmcgRmxhZywgd2V0aGVyIGZpbGUgY29udGFpbnMgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBUaGVuIHNvdXJjZSBhbmQgdGFyZ2V0IGFyZSBqdXN0IGVxdWFsLlxyXG4gICAgICogVGhlIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQuXHJcbiAgICAgKiBTdGF0ZSB3aWxsIGJlIGZpbmFsLlxyXG4gICAgICogQHBhcmFtIGNvcHlDb250ZW50IEZsYWcsIHdldGhlciB0byBjb3B5IGNvbnRlbnQgb3IgbGVhdmUgaXQgZW1wdHkuXHJcbiAgICAgKiBXYmVuIHRydWUsIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQgZnJvbSBzb3VyY2UuXHJcbiAgICAgKiBXaGVuIGZhbHNlLCBjb250ZW50IHdpbGwgYmUgbGVmdCBlbXB0eSAoaWYgaXQgaXMgbm90IHRoZSBkZWZhdWx0IGxhbmd1YWdlKS5cclxuICAgICAqIEBwYXJhbSBpbXBvcnRBZnRlckVsZW1lbnQgb3B0aW9uYWwgKHNpbmNlIDEuMTApIG90aGVyIHRyYW5zdW5pdCAocGFydCBvZiB0aGlzIGZpbGUpLCB0aGF0IHNob3VsZCBiZSB1c2VkIGFzIGFuY2VzdG9yLlxyXG4gICAgICogTmV3bHkgaW1wb3J0ZWQgdHJhbnMgdW5pdCBpcyB0aGVuIGluc2VydGVkIGRpcmVjdGx5IGFmdGVyIHRoaXMgZWxlbWVudC5cclxuICAgICAqIElmIG5vdCBzZXQgb3Igbm90IHBhcnQgb2YgdGhpcyBmaWxlLCBuZXcgdW5pdCB3aWxsIGJlIGltcG9ydGVkIGF0IHRoZSBlbmQuXHJcbiAgICAgKiBJZiBleHBsaWNpdHkgc2V0IHRvIG51bGwsIG5ldyB1bml0IHdpbGwgYmUgaW1wb3J0ZWQgYXQgdGhlIHN0YXJ0LlxyXG4gICAgICogQHJldHVybiB0aGUgbmV3bHkgaW1wb3J0ZWQgdHJhbnMgdW5pdCAoc2luY2UgdmVyc2lvbiAxLjcuMClcclxuICAgICAqIEB0aHJvd3MgYW4gZXJyb3IgaWYgdHJhbnMtdW5pdCB3aXRoIHNhbWUgaWQgYWxyZWFkeSBpcyBpbiB0aGUgZmlsZS5cclxuICAgICAqL1xyXG4gICAgaW1wb3J0TmV3VHJhbnNVbml0KGZvcmVpZ25UcmFuc1VuaXQ6IElUcmFuc1VuaXQsIGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuLCBpbXBvcnRBZnRlckVsZW1lbnQ/OiBJVHJhbnNVbml0KVxyXG4gICAgICAgIDogSVRyYW5zVW5pdCB7XHJcbiAgICAgICAgaWYgKHRoaXMudHJhbnNVbml0V2l0aElkKGZvcmVpZ25UcmFuc1VuaXQuaWQpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ3R1IHdpdGggaWQgJXMgYWxyZWFkeSBleGlzdHMgaW4gZmlsZSwgY2Fubm90IGltcG9ydCBpdCcsIGZvcmVpZ25UcmFuc1VuaXQuaWQpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgbmV3VHUgPSAoPEFic3RyYWN0VHJhbnNVbml0PiBmb3JlaWduVHJhbnNVbml0KS5jbG9uZVdpdGhTb3VyY2VBc1RhcmdldChpc0RlZmF1bHRMYW5nLCBjb3B5Q29udGVudCwgdGhpcyk7XHJcbiAgICAgICAgY29uc3QgYm9keUVsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAnYm9keScpO1xyXG4gICAgICAgIGlmICghYm9keUVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnRmlsZSBcIiVzXCIgc2VlbXMgdG8gYmUgbm8geGxpZmYgMS4yIGZpbGUgKHNob3VsZCBjb250YWluIGEgYm9keSBlbGVtZW50KScsIHRoaXMuX2ZpbGVuYW1lKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBpbnNlcnRlZCA9IGZhbHNlO1xyXG4gICAgICAgIGxldCBpc0FmdGVyRWxlbWVudFBhcnRPZkZpbGUgPSBmYWxzZTtcclxuICAgICAgICBpZiAoISFpbXBvcnRBZnRlckVsZW1lbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgaW5zZXJ0aW9uUG9pbnQgPSB0aGlzLnRyYW5zVW5pdFdpdGhJZChpbXBvcnRBZnRlckVsZW1lbnQuaWQpO1xyXG4gICAgICAgICAgICBpZiAoISFpbnNlcnRpb25Qb2ludCkge1xyXG4gICAgICAgICAgICAgICAgaXNBZnRlckVsZW1lbnRQYXJ0T2ZGaWxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW1wb3J0QWZ0ZXJFbGVtZW50ID09PSB1bmRlZmluZWQgfHwgKGltcG9ydEFmdGVyRWxlbWVudCAmJiAhaXNBZnRlckVsZW1lbnRQYXJ0T2ZGaWxlKSkge1xyXG4gICAgICAgICAgICBib2R5RWxlbWVudC5hcHBlbmRDaGlsZChuZXdUdS5hc1htbEVsZW1lbnQoKSk7XHJcbiAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2UgaWYgKGltcG9ydEFmdGVyRWxlbWVudCA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICBjb25zdCBmaXJzdFVuaXRFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ3RyYW5zLXVuaXQnKTtcclxuICAgICAgICAgICAgaWYgKGZpcnN0VW5pdEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIERPTVV0aWxpdGllcy5pbnNlcnRCZWZvcmUobmV3VHUuYXNYbWxFbGVtZW50KCksIGZpcnN0VW5pdEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgaW5zZXJ0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gbm8gdHJhbnMtdW5pdCwgZW1wdHkgZmlsZSwgc28gYWRkIHRvIGJvZHlcclxuICAgICAgICAgICAgICAgIGJvZHlFbGVtZW50LmFwcGVuZENoaWxkKG5ld1R1LmFzWG1sRWxlbWVudCgpKTtcclxuICAgICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlZlVuaXRFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEVsZW1lbnRCeVRhZ05hbWVBbmRJZCh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ3RyYW5zLXVuaXQnLCBpbXBvcnRBZnRlckVsZW1lbnQuaWQpO1xyXG4gICAgICAgICAgICBpZiAocmVmVW5pdEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIERPTVV0aWxpdGllcy5pbnNlcnRBZnRlcihuZXdUdS5hc1htbEVsZW1lbnQoKSwgcmVmVW5pdEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgaW5zZXJ0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpbnNlcnRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmxhenlJbml0aWFsaXplVHJhbnNVbml0cygpO1xyXG4gICAgICAgICAgICB0aGlzLnRyYW5zVW5pdHMucHVzaChuZXdUdSk7XHJcbiAgICAgICAgICAgIHRoaXMuY291bnROdW1iZXJzKCk7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXdUdTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSBuZXcgdHJhbnNsYXRpb24gZmlsZSBmb3IgdGhpcyBmaWxlIGZvciBhIGdpdmVuIGxhbmd1YWdlLlxyXG4gICAgICogTm9ybWFsbHksIHRoaXMgaXMganVzdCBhIGNvcHkgb2YgdGhlIG9yaWdpbmFsIG9uZS5cclxuICAgICAqIEJ1dCBmb3IgWE1CIHRoZSB0cmFuc2xhdGlvbiBmaWxlIGhhcyBmb3JtYXQgJ1hUQicuXHJcbiAgICAgKiBAcGFyYW0gbGFuZyBMYW5ndWFnZSBjb2RlXHJcbiAgICAgKiBAcGFyYW0gZmlsZW5hbWUgZXhwZWN0ZWQgZmlsZW5hbWUgdG8gc3RvcmUgZmlsZVxyXG4gICAgICogQHBhcmFtIGlzRGVmYXVsdExhbmcgRmxhZywgd2V0aGVyIGZpbGUgY29udGFpbnMgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBUaGVuIHNvdXJjZSBhbmQgdGFyZ2V0IGFyZSBqdXN0IGVxdWFsLlxyXG4gICAgICogVGhlIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQuXHJcbiAgICAgKiBTdGF0ZSB3aWxsIGJlIGZpbmFsLlxyXG4gICAgICogQHBhcmFtIGNvcHlDb250ZW50IEZsYWcsIHdldGhlciB0byBjb3B5IGNvbnRlbnQgb3IgbGVhdmUgaXQgZW1wdHkuXHJcbiAgICAgKiBXYmVuIHRydWUsIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQgZnJvbSBzb3VyY2UuXHJcbiAgICAgKiBXaGVuIGZhbHNlLCBjb250ZW50IHdpbGwgYmUgbGVmdCBlbXB0eSAoaWYgaXQgaXMgbm90IHRoZSBkZWZhdWx0IGxhbmd1YWdlKS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGNyZWF0ZVRyYW5zbGF0aW9uRmlsZUZvckxhbmcobGFuZzogc3RyaW5nLCBmaWxlbmFtZTogc3RyaW5nLCBpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbilcclxuICAgICAgICA6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgdHJhbnNsYXRpb25GaWxlID0gbmV3IFhsaWZmRmlsZSh0aGlzLmVkaXRlZENvbnRlbnQoKSwgZmlsZW5hbWUsIHRoaXMuZW5jb2RpbmcoKSk7XHJcbiAgICAgICAgdHJhbnNsYXRpb25GaWxlLnNldE5ld1RyYW5zVW5pdFRhcmdldFByYWVmaXgodGhpcy50YXJnZXRQcmFlZml4KTtcclxuICAgICAgICB0cmFuc2xhdGlvbkZpbGUuc2V0TmV3VHJhbnNVbml0VGFyZ2V0U3VmZml4KHRoaXMudGFyZ2V0U3VmZml4KTtcclxuICAgICAgICB0cmFuc2xhdGlvbkZpbGUuc2V0VGFyZ2V0TGFuZ3VhZ2UobGFuZyk7XHJcbiAgICAgICAgdHJhbnNsYXRpb25GaWxlLmZvckVhY2hUcmFuc1VuaXQoKHRyYW5zVW5pdDogSVRyYW5zVW5pdCkgPT4ge1xyXG4gICAgICAgICAgICAoPEFic3RyYWN0VHJhbnNVbml0PiB0cmFuc1VuaXQpLnVzZVNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmcsIGNvcHlDb250ZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdHJhbnNsYXRpb25GaWxlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7QWJzdHJhY3RNZXNzYWdlUGFyc2VyfSBmcm9tICcuL2Fic3RyYWN0LW1lc3NhZ2UtcGFyc2VyJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlJztcclxuaW1wb3J0IHtET01VdGlsaXRpZXN9IGZyb20gJy4vZG9tLXV0aWxpdGllcyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZ30gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXN0YXJ0LXRhZyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRFbmRUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtcGxhY2Vob2xkZXInO1xyXG5pbXBvcnQge1RhZ01hcHBpbmd9IGZyb20gJy4vdGFnLW1hcHBpbmcnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZn0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LWljdS1tZXNzYWdlLXJlZic7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnQsIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFRleHR9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC10ZXh0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgcm9vYm0gb24gMTAuMDUuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnNlciBmb3IgWE1CXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgWG1iTWVzc2FnZVBhcnNlciBleHRlbmRzIEFic3RyYWN0TWVzc2FnZVBhcnNlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGUgdGhpcyBlbGVtZW50IG5vZGUuXHJcbiAgICAgKiBUaGlzIGlzIGNhbGxlZCBiZWZvcmUgdGhlIGNoaWxkcmVuIGFyZSBkb25lLlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnROb2RlIGVsZW1lbnROb2RlXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBtZXNzYWdlIHRvIGJlIGFsdGVyZWRcclxuICAgICAqIEByZXR1cm4gdHJ1ZSwgaWYgY2hpbGRyZW4gc2hvdWxkIGJlIHByb2Nlc3NlZCB0b28sIGZhbHNlIG90aGVyd2lzZSAoY2hpbGRyZW4gaWdub3JlZCB0aGVuKVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgcHJvY2Vzc1N0YXJ0RWxlbWVudChlbGVtZW50Tm9kZTogRWxlbWVudCwgbWVzc2FnZTogUGFyc2VkTWVzc2FnZSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGNvbnN0IHRhZ05hbWUgPSBlbGVtZW50Tm9kZS50YWdOYW1lO1xyXG4gICAgICAgIGlmICh0YWdOYW1lID09PSAncGgnKSB7XHJcbiAgICAgICAgICAgIC8vIFRoZXJlIGFyZSA0IGRpZmZlcmVudCB1c2FnZXMgb2YgcGggZWxlbWVudDpcclxuICAgICAgICAgICAgLy8gMS4gcGxhY2Vob2xkZXJzIGFyZSBsaWtlIDxwaCBuYW1lPVwiSU5URVJQT0xBVElPTlwiPjxleD5JTlRFUlBPTEFUSU9OPC9leD48L3BoPlxyXG4gICAgICAgICAgICAvLyBvciA8cGggbmFtZT1cIklOVEVSUE9MQVRJT05fMVwiPjxleD5JTlRFUlBPTEFUSU9OXzE8L2V4PjwvcGg+XHJcbiAgICAgICAgICAgIC8vIDIuIHN0YXJ0IHRhZ3M6XHJcbiAgICAgICAgICAgIC8vIDxwaCBuYW1lPVwiU1RBUlRfTElOS1wiPjxleD4mbHQ7YSZndDs8L2V4PjwvcGg+XHJcbiAgICAgICAgICAgIC8vIDMuIGVtcHR5IHRhZ3M6XHJcbiAgICAgICAgICAgIC8vIDxwaCBuYW1lPVwiVEFHX0lNR1wiPjxleD4mbHQ7aW1nJmd0OzwvZXg+PC9waD5cclxuICAgICAgICAgICAgLy8gNC4gSUNVOlxyXG4gICAgICAgICAgICAvLyA8cGggbmFtZT1cIklDVVwiPjxleD5JQ1U8L2V4PjwvcGg+XHJcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBlbGVtZW50Tm9kZS5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcclxuICAgICAgICAgICAgaWYgKCFuYW1lKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gc2hvdWxkIG5vdCBoYXBwZW5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobmFtZS5zdGFydHNXaXRoKCdJTlRFUlBPTEFUSU9OJykpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5wYXJzZVBsYWNlaG9sZGVySW5kZXhGcm9tTmFtZShuYW1lKTtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2UuYWRkUGxhY2Vob2xkZXIoaW5kZXgsIG51bGwpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBpZ25vcmUgY2hpbGRyZW5cclxuICAgICAgICAgICAgfSBlbHNlIGlmIChuYW1lLnN0YXJ0c1dpdGgoJ1NUQVJUXycpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0YWcgPSB0aGlzLnBhcnNlVGFnbmFtZUZyb21QaEVsZW1lbnQoZWxlbWVudE5vZGUpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaWRjb3VudGVyID0gdGhpcy5wYXJzZUlkQ291bnRGcm9tTmFtZShuYW1lKTtcclxuICAgICAgICAgICAgICAgIGlmICh0YWcpIHtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZFN0YXJ0VGFnKHRhZywgaWRjb3VudGVyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gaWdub3JlIGNoaWxkcmVuXHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobmFtZS5zdGFydHNXaXRoKCdDTE9TRV8nKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdGFnID0gdGhpcy5wYXJzZVRhZ25hbWVGcm9tUGhFbGVtZW50KGVsZW1lbnROb2RlKTtcclxuICAgICAgICAgICAgICAgIGlmICh0YWcpIHtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZEVuZFRhZyh0YWcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBpZ25vcmUgY2hpbGRyZW5cclxuICAgICAgICAgICAgfSBlbHNlIGlmIChuZXcgVGFnTWFwcGluZygpLmlzRW1wdHlUYWdQbGFjZWhvbGRlck5hbWUobmFtZSkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGVtcHR5VGFnTmFtZSA9IG5ldyBUYWdNYXBwaW5nKCkuZ2V0VGFnbmFtZUZyb21FbXB0eVRhZ1BsYWNlaG9sZGVyTmFtZShuYW1lKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGlkY291bnRlciA9IHRoaXMucGFyc2VJZENvdW50RnJvbU5hbWUobmFtZSk7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZEVtcHR5VGFnKGVtcHR5VGFnTmFtZSwgaWRjb3VudGVyKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gaWdub3JlIGNoaWxkcmVuXHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobmFtZS5zdGFydHNXaXRoKCdJQ1UnKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnBhcnNlSUNVTWVzc2FnZUluZGV4RnJvbU5hbWUobmFtZSk7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZElDVU1lc3NhZ2VSZWYoaW5kZXgsIG51bGwpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBpZ25vcmUgY2hpbGRyZW5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAodGFnTmFtZSA9PT0gJ3NvdXJjZScpIHtcclxuICAgICAgICAgICAgLy8gaWdub3JlIHNvdXJjZVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIHRoZSBJQ1UgbWVzc2FnZSBjb250ZW50IG9mIHRoZSBub2RlLCBpZiBpdCBpcyBhbiBJQ1UgTWVzc2FnZS5cclxuICAgICAqIEBwYXJhbSBub2RlIG5vZGVcclxuICAgICAqIEByZXR1cm4gbWVzc2FnZSBvciBudWxsLCBpZiBpdCBpcyBubyBJQ1UgTWVzc2FnZS5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGdldElDVU1lc3NhZ2VUZXh0KG5vZGU6IE5vZGUpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGNoaWxkcmVuID0gbm9kZS5jaGlsZE5vZGVzO1xyXG4gICAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBmaXJzdENoaWxkID0gbnVsbDtcclxuICAgICAgICAvLyBmaW5kIGZpcnN0IGNoaWxkIHRoYXQgaXMgbm8gc291cmNlIGVsZW1lbnQuXHJcbiAgICAgICAgbGV0IGk7XHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gY2hpbGRyZW4uaXRlbShpKTtcclxuICAgICAgICAgICAgaWYgKGNoaWxkLm5vZGVUeXBlICE9PSBjaGlsZC5FTEVNRU5UX05PREUgfHwgKDxFbGVtZW50PiBjaGlsZCkudGFnTmFtZSAhPT0gJ3NvdXJjZScpIHtcclxuICAgICAgICAgICAgICAgIGZpcnN0Q2hpbGQgPSBjaGlsZDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChmaXJzdENoaWxkICYmIGZpcnN0Q2hpbGQubm9kZVR5cGUgPT09IGZpcnN0Q2hpbGQuVEVYVF9OT0RFKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzSUNVTWVzc2FnZVN0YXJ0KGZpcnN0Q2hpbGQudGV4dENvbnRlbnQpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlVGV4dCA9IERPTVV0aWxpdGllcy5nZXRYTUxDb250ZW50KDxFbGVtZW50PiBub2RlKTtcclxuICAgICAgICAgICAgICAgIGlmIChpID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGRyb3AgPHNvdXJjZT4gZWxlbWVudHNcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCByZVNvdXJjZTogUmVnRXhwID0gbmV3IFJlZ0V4cCgnPHNvdXJjZVtePl0qPi4qPC9zb3VyY2U+JywgJ2cnKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWVzc2FnZVRleHQucmVwbGFjZShyZVNvdXJjZSwgJycpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWVzc2FnZVRleHQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBlbmQgb2YgdGhpcyBlbGVtZW50IG5vZGUuXHJcbiAgICAgKiBUaGlzIGlzIGNhbGxlZCBhZnRlciBhbGwgY2hpbGRyZW4gYXJlIHByb2Nlc3NlZC5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50Tm9kZSBlbGVtZW50Tm9kZVxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgbWVzc2FnZSB0byBiZSBhbHRlcmVkXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBwcm9jZXNzRW5kRWxlbWVudChlbGVtZW50Tm9kZTogRWxlbWVudCwgbWVzc2FnZTogUGFyc2VkTWVzc2FnZSkge1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2UgaWQgYXR0cmlidXRlIG9mIHggZWxlbWVudCBhcyBwbGFjZWhvbGRlciBpbmRleC5cclxuICAgICAqIGlkIGNhbiBiZSBcIklOVEVSUE9MQVRJT05cIiBvciBcIklOVEVSUE9MQVRJT05fblwiXHJcbiAgICAgKiBAcGFyYW0gbmFtZSBuYW1lXHJcbiAgICAgKiBAcmV0dXJuIGlkIGFzIG51bWJlclxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHBhcnNlUGxhY2Vob2xkZXJJbmRleEZyb21OYW1lKG5hbWU6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICAgICAgbGV0IGluZGV4U3RyaW5nID0gJyc7XHJcblxyXG4gICAgICAgIGlmIChuYW1lID09PSAnSU5URVJQT0xBVElPTicpIHtcclxuICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSAnMCc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSBuYW1lLnN1YnN0cmluZygnSU5URVJQT0xBVElPTl8nLmxlbmd0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoaW5kZXhTdHJpbmcsIDEwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlIGlkIGF0dHJpYnV0ZSBvZiB4IGVsZW1lbnQgYXMgSUNVIG1lc3NhZ2UgcmVmIGluZGV4LlxyXG4gICAgICogaWQgY2FuIGJlIFwiSUNVXCIgb3IgXCJJQ1VfblwiXHJcbiAgICAgKiBAcGFyYW0gbmFtZSBuYW1lXHJcbiAgICAgKiBAcmV0dXJuIGlkIGFzIG51bWJlclxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHBhcnNlSUNVTWVzc2FnZUluZGV4RnJvbU5hbWUobmFtZTogc3RyaW5nKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgaW5kZXhTdHJpbmcgPSAnJztcclxuXHJcbiAgICAgICAgaWYgKG5hbWUgPT09ICdJQ1UnKSB7XHJcbiAgICAgICAgICAgIGluZGV4U3RyaW5nID0gJzAnO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGluZGV4U3RyaW5nID0gbmFtZS5zdWJzdHJpbmcoJ0lDVV8nLmxlbmd0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoaW5kZXhTdHJpbmcsIDEwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFBhcnNlIHRoZSB0YWcgbmFtZSBmcm9tIGEgcGggZWxlbWVudC5cclxuICAgICAqIEl0IGNvbnRhaW5lZCBpbiB0aGUgPGV4PiBzdWJlbGVtZW50cyB2YWx1ZSBhbmQgZW5jbG9zZWQgaW4gPD4uXHJcbiAgICAgKiBFeGFtcGxlOiA8cGggbmFtZT1cIlNUQVJUX0JPTERfVEVYVFwiPjxleD4mbHQ7YiZndDs8L2V4PjwvcGg+XHJcbiAgICAgKiBAcGFyYW0gcGhFbGVtZW50IHBoRWxlbWVudFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHBhcnNlVGFnbmFtZUZyb21QaEVsZW1lbnQocGhFbGVtZW50OiBFbGVtZW50KTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBleEVsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHBoRWxlbWVudCwgJ2V4Jyk7XHJcbiAgICAgICAgaWYgKGV4RWxlbWVudCkge1xyXG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IERPTVV0aWxpdGllcy5nZXRQQ0RBVEEoZXhFbGVtZW50KTtcclxuICAgICAgICAgICAgaWYgKCF2YWx1ZSB8fCAhdmFsdWUuc3RhcnRzV2l0aCgnPCcpIHx8ICF2YWx1ZS5lbmRzV2l0aCgnPicpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBvb3BzXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodmFsdWUuY2hhckF0KDEpID09PSAnLycpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5zdWJzdHJpbmcoMiwgdmFsdWUubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUuc3Vic3RyaW5nKDEsIHZhbHVlLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBhZGRYbWxSZXByZXNlbnRhdGlvblRvUm9vdChtZXNzYWdlOiBQYXJzZWRNZXNzYWdlLCByb290RWxlbTogRWxlbWVudCkge1xyXG4gICAgICAgIG1lc3NhZ2UucGFydHMoKS5mb3JFYWNoKChwYXJ0KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mUGFydChwYXJ0LCByb290RWxlbSk7XHJcbiAgICAgICAgICAgIGlmIChjaGlsZCkge1xyXG4gICAgICAgICAgICAgICAgcm9vdEVsZW0uYXBwZW5kQ2hpbGQoY2hpbGQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0LCByb290RWxlbTogRWxlbWVudCk6IE5vZGUge1xyXG4gICAgICAgIHN3aXRjaCAocGFydC50eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgUGFyc2VkTWVzc2FnZVBhcnRUeXBlLlRFWFQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mVGV4dFBhcnQoPFBhcnNlZE1lc3NhZ2VQYXJ0VGV4dD4gcGFydCwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5TVEFSVF9UQUc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mU3RhcnRUYWdQYXJ0KCg8UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZz5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTkRfVEFHOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZkVuZFRhZ1BhcnQoKDxQYXJzZWRNZXNzYWdlUGFydEVuZFRhZz5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5FTVBUWV9UQUc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mRW1wdHlUYWdQYXJ0KCg8UGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZz5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5QTEFDRUhPTERFUjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZQbGFjZWhvbGRlclBhcnQoKDxQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyPnBhcnQpLCByb290RWxlbSk7XHJcbiAgICAgICAgICAgIGNhc2UgUGFyc2VkTWVzc2FnZVBhcnRUeXBlLklDVV9NRVNTQUdFX1JFRjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZJQ1VNZXNzYWdlUmVmUGFydCgoPFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZj5wYXJ0KSwgcm9vdEVsZW0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3Igc3RhcnQgdGFnIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICogUmV0dXJucyBhbiA8cGg+LUVsZW1lbnQgd2l0aCBhdHRyaWJ1dGUgbmFtZSBhbmQgc3ViZWxlbWVudCBleFxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mU3RhcnRUYWdQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0U3RhcnRUYWcsIHJvb3RFbGVtOiBFbGVtZW50KTogTm9kZSB7XHJcbiAgICAgICAgY29uc3QgcGhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwaCcpO1xyXG4gICAgICAgIGNvbnN0IHRhZ01hcHBpbmcgPSBuZXcgVGFnTWFwcGluZygpO1xyXG4gICAgICAgIGNvbnN0IG5hbWVBdHRyaWIgPSB0YWdNYXBwaW5nLmdldFN0YXJ0VGFnUGxhY2Vob2xkZXJOYW1lKHBhcnQudGFnTmFtZSgpLCBwYXJ0LmlkQ291bnRlcigpKTtcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCduYW1lJywgbmFtZUF0dHJpYik7XHJcbiAgICAgICAgY29uc3QgZXhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdleCcpO1xyXG4gICAgICAgIGV4RWxlbS5hcHBlbmRDaGlsZChyb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCc8JyArIHBhcnQudGFnTmFtZSgpICsgJz4nKSk7XHJcbiAgICAgICAgcGhFbGVtLmFwcGVuZENoaWxkKGV4RWxlbSk7XHJcbiAgICAgICAgcmV0dXJuIHBoRWxlbTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3IgZW5kIHRhZyBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIFJldHVybnMgYW4gPHBoPi1FbGVtZW50IHdpdGggYXR0cmlidXRlIG5hbWUgYW5kIHN1YmVsZW1lbnQgZXhcclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZkVuZFRhZ1BhcnQocGFydDogUGFyc2VkTWVzc2FnZVBhcnRFbmRUYWcsIHJvb3RFbGVtOiBFbGVtZW50KTogTm9kZSB7XHJcbiAgICAgICAgY29uc3QgcGhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwaCcpO1xyXG4gICAgICAgIGNvbnN0IHRhZ01hcHBpbmcgPSBuZXcgVGFnTWFwcGluZygpO1xyXG4gICAgICAgIGNvbnN0IG5hbWVBdHRyaWIgPSB0YWdNYXBwaW5nLmdldENsb3NlVGFnUGxhY2Vob2xkZXJOYW1lKHBhcnQudGFnTmFtZSgpKTtcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCduYW1lJywgbmFtZUF0dHJpYik7XHJcbiAgICAgICAgY29uc3QgZXhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdleCcpO1xyXG4gICAgICAgIGV4RWxlbS5hcHBlbmRDaGlsZChyb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCc8LycgKyBwYXJ0LnRhZ05hbWUoKSArICc+JykpO1xyXG4gICAgICAgIHBoRWxlbS5hcHBlbmRDaGlsZChleEVsZW0pO1xyXG4gICAgICAgIHJldHVybiBwaEVsZW07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGVtcHR5IHRhZyBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIFJldHVybnMgYW4gPHBoPi1FbGVtZW50IHdpdGggYXR0cmlidXRlIG5hbWUgYW5kIHN1YmVsZW1lbnQgZXhcclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZkVtcHR5VGFnUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydEVtcHR5VGFnLCByb290RWxlbTogRWxlbWVudCk6IE5vZGUge1xyXG4gICAgICAgIGNvbnN0IHBoRWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGgnKTtcclxuICAgICAgICBjb25zdCB0YWdNYXBwaW5nID0gbmV3IFRhZ01hcHBpbmcoKTtcclxuICAgICAgICBjb25zdCBuYW1lQXR0cmliID0gdGFnTWFwcGluZy5nZXRFbXB0eVRhZ1BsYWNlaG9sZGVyTmFtZShwYXJ0LnRhZ05hbWUoKSwgcGFydC5pZENvdW50ZXIoKSk7XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnbmFtZScsIG5hbWVBdHRyaWIpO1xyXG4gICAgICAgIGNvbnN0IGV4RWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZXgnKTtcclxuICAgICAgICBleEVsZW0uYXBwZW5kQ2hpbGQocm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnPCcgKyBwYXJ0LnRhZ05hbWUoKSArICc+JykpO1xyXG4gICAgICAgIHBoRWxlbS5hcHBlbmRDaGlsZChleEVsZW0pO1xyXG4gICAgICAgIHJldHVybiBwaEVsZW07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIHBsYWNlaG9sZGVyIGluIHRoZSBtZXNzYWdlLlxyXG4gICAgICogUmV0dXJucyBhbiA8cGg+LUVsZW1lbnQgd2l0aCBhdHRyaWJ1dGUgbmFtZSBhbmQgc3ViZWxlbWVudCBleFxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mUGxhY2Vob2xkZXJQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0UGxhY2Vob2xkZXIsIHJvb3RFbGVtOiBFbGVtZW50KTogTm9kZSB7XHJcbiAgICAgICAgY29uc3QgcGhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwaCcpO1xyXG4gICAgICAgIGxldCBuYW1lQXR0cmliID0gJ0lOVEVSUE9MQVRJT04nO1xyXG4gICAgICAgIGlmIChwYXJ0LmluZGV4KCkgPiAwKSB7XHJcbiAgICAgICAgICAgIG5hbWVBdHRyaWIgPSAnSU5URVJQT0xBVElPTl8nICsgcGFydC5pbmRleCgpLnRvU3RyaW5nKDEwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnbmFtZScsIG5hbWVBdHRyaWIpO1xyXG4gICAgICAgIGNvbnN0IGV4RWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZXgnKTtcclxuICAgICAgICBleEVsZW0uYXBwZW5kQ2hpbGQocm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuYW1lQXR0cmliKSk7XHJcbiAgICAgICAgcGhFbGVtLmFwcGVuZENoaWxkKGV4RWxlbSk7XHJcbiAgICAgICAgcmV0dXJuIHBoRWxlbTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3IgaWN1IG1lc3NhZ2UgcmVmcyBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIEBwYXJhbSBwYXJ0IHBhcnRcclxuICAgICAqIEBwYXJhbSByb290RWxlbSByb290RWxlbVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZklDVU1lc3NhZ2VSZWZQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZiwgcm9vdEVsZW06IEVsZW1lbnQpOiBOb2RlIHtcclxuICAgICAgICBjb25zdCBwaEVsZW0gPSByb290RWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3BoJyk7XHJcbiAgICAgICAgbGV0IG5hbWVBdHRyaWIgPSAnSUNVJztcclxuICAgICAgICBpZiAocGFydC5pbmRleCgpID4gMCkge1xyXG4gICAgICAgICAgICBuYW1lQXR0cmliID0gJ0lDVV8nICsgcGFydC5pbmRleCgpLnRvU3RyaW5nKDEwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnbmFtZScsIG5hbWVBdHRyaWIpO1xyXG4gICAgICAgIGNvbnN0IGV4RWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZXgnKTtcclxuICAgICAgICBleEVsZW0uYXBwZW5kQ2hpbGQocm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuYW1lQXR0cmliKSk7XHJcbiAgICAgICAgcGhFbGVtLmFwcGVuZENoaWxkKGV4RWxlbSk7XHJcbiAgICAgICAgcmV0dXJuIHBoRWxlbTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZX0gZnJvbSAnLi4vYXBpL2ktdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZSc7XHJcbmltcG9ydCB7SU5vcm1hbGl6ZWRNZXNzYWdlfSBmcm9tICcuLi9hcGkvaS1ub3JtYWxpemVkLW1lc3NhZ2UnO1xyXG5pbXBvcnQge0lUcmFuc1VuaXR9IGZyb20gJy4uL2FwaS9pLXRyYW5zLXVuaXQnO1xyXG5pbXBvcnQge0lOb3RlfSBmcm9tICcuLi9hcGkvaS1ub3RlJztcclxuaW1wb3J0IHtET01VdGlsaXRpZXN9IGZyb20gJy4vZG9tLXV0aWxpdGllcyc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc1VuaXR9IGZyb20gJy4vYWJzdHJhY3QtdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7WG1iTWVzc2FnZVBhcnNlcn0gZnJvbSAnLi94bWItbWVzc2FnZS1wYXJzZXInO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2V9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UnO1xyXG5pbXBvcnQge0Fic3RyYWN0TWVzc2FnZVBhcnNlcn0gZnJvbSAnLi9hYnN0cmFjdC1tZXNzYWdlLXBhcnNlcic7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwMS4wNS4yMDE3LlxyXG4gKiBBIFRyYW5zbGF0aW9uIFVuaXQgaW4gYW4gWE1CIGZpbGUuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFhtYlRyYW5zVW5pdCBleHRlbmRzIEFic3RyYWN0VHJhbnNVbml0IGltcGxlbWVudHMgSVRyYW5zVW5pdCB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoX2VsZW1lbnQ6IEVsZW1lbnQsIF9pZDogc3RyaW5nLCBfdHJhbnNsYXRpb25NZXNzYWdlc0ZpbGU6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSkge1xyXG4gICAgICAgIHN1cGVyKF9lbGVtZW50LCBfaWQsIF90cmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQYXJzZXMgc29tZXRoaW5nIGxpa2UgJ2M6XFx4eHg6NycgYW5kIHJldHVybnMgc291cmNlIGFuZCBsaW5lbnVtYmVyLlxyXG4gICAgICogQHBhcmFtIHNvdXJjZUFuZFBvcyBzb21ldGhpbmcgbGlrZSAnYzpcXHh4eDo3JywgbGFzdCBjb2xvbiBpcyB0aGUgc2VwYXJhdG9yXHJcbiAgICAgKiBAcmV0dXJuIHNvdXJjZSBhbmQgbGluZW51bWJlclxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBwYXJzZVNvdXJjZUFuZFBvcyhzb3VyY2VBbmRQb3M6IHN0cmluZyk6IHsgc291cmNlZmlsZTogc3RyaW5nLCBsaW5lbnVtYmVyIH0ge1xyXG4gICAgICAgIGNvbnN0IGluZGV4ID0gc291cmNlQW5kUG9zLmxhc3RJbmRleE9mKCc6Jyk7XHJcbiAgICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgc291cmNlZmlsZTogc291cmNlQW5kUG9zLFxyXG4gICAgICAgICAgICAgICAgbGluZW51bWJlcjogMFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBzb3VyY2VmaWxlOiBzb3VyY2VBbmRQb3Muc3Vic3RyaW5nKDAsIGluZGV4KSxcclxuICAgICAgICAgICAgICAgIGxpbmVudW1iZXI6IFhtYlRyYW5zVW5pdC5wYXJzZUxpbmVOdW1iZXIoc291cmNlQW5kUG9zLnN1YnN0cmluZyhpbmRleCArIDEpKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBwYXJzZUxpbmVOdW1iZXIobGluZU51bWJlclN0cmluZzogc3RyaW5nKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KGxpbmVOdW1iZXJTdHJpbmcsIDEwKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCBjb250ZW50IHRvIHRyYW5zbGF0ZS5cclxuICAgICAqIFNvdXJjZSBwYXJ0cyBhcmUgZXhjbHVkZWQgaGVyZS5cclxuICAgICAqIEByZXR1cm4gc291cmNlIGNvbnRlbnRcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNvdXJjZUNvbnRlbnQoKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgbXNnQ29udGVudCA9IERPTVV0aWxpdGllcy5nZXRYTUxDb250ZW50KHRoaXMuX2VsZW1lbnQpO1xyXG4gICAgICAgIGNvbnN0IHJlU291cmNlRWxlbTogUmVnRXhwID0gLzxzb3VyY2U+Lio8XFwvc291cmNlPi9nO1xyXG4gICAgICAgIG1zZ0NvbnRlbnQgPSBtc2dDb250ZW50LnJlcGxhY2UocmVTb3VyY2VFbGVtLCAnJyk7XHJcbiAgICAgICAgcmV0dXJuIG1zZ0NvbnRlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgc2V0dGluZyBvZiBzb3VyY2UgY29udGVudCBpcyBzdXBwb3J0ZWQuXHJcbiAgICAgKiBJZiBub3QsIHNldFNvdXJjZUNvbnRlbnQgaW4gdHJhbnMtdW5pdCB3aWxsIGRvIG5vdGhpbmcuXHJcbiAgICAgKiB4dGIgZG9lcyBub3Qgc3VwcG9ydCB0aGlzLCBhbGwgb3RoZXIgZm9ybWF0cyBkby5cclxuICAgICAqL1xyXG4gICAgc3VwcG9ydHNTZXRTb3VyY2VDb250ZW50KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBuZXcgc291cmNlIGNvbnRlbnQgaW4gdGhlIHRyYW5zdW5pdC5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGRvbmUgYnkgbmctZXh0cmFjdC5cclxuICAgICAqIE1ldGhvZCBvbmx5IGV4aXN0cyB0byBhbGxvdyB4bGlmZm1lcmdlIHRvIG1lcmdlIG1pc3NpbmcgY2hhbmdlZCBzb3VyY2UgY29udGVudC5cclxuICAgICAqIEBwYXJhbSBuZXdDb250ZW50IHRoZSBuZXcgY29udGVudC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFNvdXJjZUNvbnRlbnQobmV3Q29udGVudDogc3RyaW5nKSB7XHJcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZFxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGEgcGFyc2VyIHVzZWQgZm9yIG5vcm1hbGl6ZWQgbWVzc2FnZXMuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBtZXNzYWdlUGFyc2VyKCk6IEFic3RyYWN0TWVzc2FnZVBhcnNlciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBYbWJNZXNzYWdlUGFyc2VyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgb3JpZ2luYWwgdGV4dCB2YWx1ZSwgdGhhdCBpcyB0byBiZSB0cmFuc2xhdGVkLCBhcyBub3JtYWxpemVkIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjcmVhdGVTb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpOiBQYXJzZWRNZXNzYWdlIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlUGFyc2VyKCkuY3JlYXRlTm9ybWFsaXplZE1lc3NhZ2VGcm9tWE1MKHRoaXMuX2VsZW1lbnQsIG51bGwpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHRyYW5zbGF0ZWQgdmFsdWUgKGNvbnRhaW5pbmcgYWxsIG1hcmt1cCwgZGVwZW5kcyBvbiB0aGUgY29uY3JldGUgZm9ybWF0IHVzZWQpLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdGFyZ2V0Q29udGVudCgpOiBzdHJpbmcge1xyXG4gICAgICAgIC8vIGluIGZhY3QsIHRhcmdldCBhbmQgc291cmNlIGFyZSBqdXN0IHRoZSBzYW1lIGluIHhtYlxyXG4gICAgICAgIHJldHVybiB0aGlzLnNvdXJjZUNvbnRlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB0cmFuc2xhdGVkIHZhbHVlLCBidXQgYWxsIHBsYWNlaG9sZGVycyBhcmUgcmVwbGFjZWQgd2l0aCB7e259fSAoc3RhcnRpbmcgYXQgMClcclxuICAgICAqIGFuZCBhbGwgZW1iZWRkZWQgaHRtbCBpcyByZXBsYWNlZCBieSBkaXJlY3QgaHRtbCBtYXJrdXAuXHJcbiAgICAgKi9cclxuICAgIHRhcmdldENvbnRlbnROb3JtYWxpemVkKCk6IElOb3JtYWxpemVkTWVzc2FnZSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBYbWJNZXNzYWdlUGFyc2VyKCkuY3JlYXRlTm9ybWFsaXplZE1lc3NhZ2VGcm9tWE1MKHRoaXMuX2VsZW1lbnQsIHRoaXMuc291cmNlQ29udGVudE5vcm1hbGl6ZWQoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTdGF0ZSBvZiB0aGUgdHJhbnNsYXRpb24uXHJcbiAgICAgKiAobm90IHN1cHBvcnRlZCBpbiB4bWIpXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBuYXRpdmVUYXJnZXRTdGF0ZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBudWxsOyAvLyBub3Qgc3VwcG9ydGVkIGluIHhtYlxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTWFwIGFuIGFic3RyYWN0IHN0YXRlIChuZXcsIHRyYW5zbGF0ZWQsIGZpbmFsKSB0byBhIGNvbmNyZXRlIHN0YXRlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIFJldHVybnMgdGhlIHN0YXRlIHRvIGJlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIEBwYXJhbSBzdGF0ZSBvbmUgb2YgQ29uc3RhbnRzLlNUQVRFLi4uXHJcbiAgICAgKiBAcmV0dXJucyBhIG5hdGl2ZSBzdGF0ZSAoZGVwZW5kcyBvbiBjb25jcmV0ZSBmb3JtYXQpXHJcbiAgICAgKiBAdGhyb3dzIGVycm9yLCBpZiBzdGF0ZSBpcyBpbnZhbGlkLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbWFwU3RhdGVUb05hdGl2ZVN0YXRlKHN0YXRlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE1hcCBhIG5hdGl2ZSBzdGF0ZSAoZm91bmQgaW4gdGhlIGRvY3VtZW50KSB0byBhbiBhYnN0cmFjdCBzdGF0ZSAobmV3LCB0cmFuc2xhdGVkLCBmaW5hbCkuXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBhYnN0cmFjdCBzdGF0ZS5cclxuICAgICAqIEBwYXJhbSBuYXRpdmVTdGF0ZSBuYXRpdmVTdGF0ZVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbWFwTmF0aXZlU3RhdGVUb1N0YXRlKG5hdGl2ZVN0YXRlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBuYXRpdmVTdGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHNldCBzdGF0ZSBpbiB4bWwuXHJcbiAgICAgKiAobm90IHN1cHBvcnRlZCBpbiB4bWIpXHJcbiAgICAgKiBAcGFyYW0gbmF0aXZlU3RhdGUgbmF0aXZlU3RhdGVcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIHNldE5hdGl2ZVRhcmdldFN0YXRlKG5hdGl2ZVN0YXRlOiBzdHJpbmcpIHtcclxuICAgICAgICAvLyBub3Qgc3VwcG9ydGVkIGZvciB4bWJcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFsbCB0aGUgc291cmNlIGVsZW1lbnRzIGluIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICogVGhlIHNvdXJjZSBlbGVtZW50IGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaW5hbCB0ZW1wbGF0ZS5cclxuICAgICAqIEl0IGNvbnRhaW5zIHRoZSBuYW1lIG9mIHRoZSB0ZW1wbGF0ZSBmaWxlIGFuZCBhIGxpbmUgbnVtYmVyIHdpdGggdGhlIHBvc2l0aW9uIGluc2lkZSB0aGUgdGVtcGxhdGUuXHJcbiAgICAgKiBJdCBpcyBqdXN0IGEgaGVscCBmb3IgdHJhbnNsYXRvcnMgdG8gZmluZCB0aGUgY29udGV4dCBmb3IgdGhlIHRyYW5zbGF0aW9uLlxyXG4gICAgICogVGhpcyBpcyBzZXQgd2hlbiB1c2luZyBBbmd1bGFyIDQuMCBvciBncmVhdGVyLlxyXG4gICAgICogT3RoZXJ3aXNlIGl0IGp1c3QgcmV0dXJucyBhbiBlbXB0eSBhcnJheS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNvdXJjZVJlZmVyZW5jZXMoKTogeyBzb3VyY2VmaWxlOiBzdHJpbmcsIGxpbmVudW1iZXI6IG51bWJlciB9W10ge1xyXG4gICAgICAgIGNvbnN0IHNvdXJjZUVsZW1lbnRzID0gdGhpcy5fZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc291cmNlJyk7XHJcbiAgICAgICAgY29uc3Qgc291cmNlUmVmczogeyBzb3VyY2VmaWxlOiBzdHJpbmcsIGxpbmVudW1iZXI6IG51bWJlciB9W10gPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNvdXJjZUVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVsZW0gPSBzb3VyY2VFbGVtZW50cy5pdGVtKGkpO1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VBbmRQb3M6IHN0cmluZyA9IERPTVV0aWxpdGllcy5nZXRQQ0RBVEEoZWxlbSk7XHJcbiAgICAgICAgICAgIHNvdXJjZVJlZnMucHVzaChYbWJUcmFuc1VuaXQucGFyc2VTb3VyY2VBbmRQb3Moc291cmNlQW5kUG9zKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzb3VyY2VSZWZzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0IHNvdXJjZSByZWYgZWxlbWVudHMgaW4gdGhlIHRyYW5zdW5pdC5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGRvbmUgYnkgbmctZXh0cmFjdC5cclxuICAgICAqIE1ldGhvZCBvbmx5IGV4aXN0cyB0byBhbGxvdyB4bGlmZm1lcmdlIHRvIG1lcmdlIG1pc3Npbmcgc291cmNlIHJlZnMuXHJcbiAgICAgKiBAcGFyYW0gc291cmNlUmVmcyB0aGUgc291cmNlcmVmcyB0byBzZXQuIE9sZCBvbmVzIGFyZSByZW1vdmVkLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0U291cmNlUmVmZXJlbmNlcyhzb3VyY2VSZWZzOiB7c291cmNlZmlsZTogc3RyaW5nLCBsaW5lbnVtYmVyOiBudW1iZXJ9W10pIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUFsbFNvdXJjZVJlZmVyZW5jZXMoKTtcclxuICAgICAgICBsZXQgaW5zZXJ0UG9zaXRpb24gPSB0aGlzLl9lbGVtZW50LmNoaWxkTm9kZXMuaXRlbSgwKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gc291cmNlUmVmcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICAgICAgICBjb25zdCByZWYgPSBzb3VyY2VSZWZzW2ldO1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2UgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc291cmNlJyk7XHJcbiAgICAgICAgICAgIHNvdXJjZS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocmVmLnNvdXJjZWZpbGUgKyAnOicgKyByZWYubGluZW51bWJlci50b1N0cmluZygxMCkpKTtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5pbnNlcnRCZWZvcmUoc291cmNlLCBpbnNlcnRQb3NpdGlvbik7XHJcbiAgICAgICAgICAgIGluc2VydFBvc2l0aW9uID0gc291cmNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJlbW92ZUFsbFNvdXJjZVJlZmVyZW5jZXMoKSB7XHJcbiAgICAgICAgY29uc3Qgc291cmNlRWxlbWVudHMgPSB0aGlzLl9lbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzb3VyY2UnKTtcclxuICAgICAgICBjb25zdCB0b0JlUmVtb3ZlZCA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc291cmNlRWxlbWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZWxlbSA9IHNvdXJjZUVsZW1lbnRzLml0ZW0oaSk7XHJcbiAgICAgICAgICAgIHRvQmVSZW1vdmVkLnB1c2goZWxlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRvQmVSZW1vdmVkLmZvckVhY2goKGVsZW0pID0+IHtlbGVtLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWxlbSk7IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRlc2NyaXB0aW9uIHNldCBpbiB0aGUgdGVtcGxhdGUgYXMgdmFsdWUgb2YgdGhlIGkxOG4tYXR0cmlidXRlLlxyXG4gICAgICogZS5nLiBpMThuPVwibXlkZXNjcmlwdGlvblwiLlxyXG4gICAgICogSW4geG1iIHRoaXMgaXMgc3RvcmVkIGluIHRoZSBhdHRyaWJ1dGUgXCJkZXNjXCIuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBkZXNjcmlwdGlvbigpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGVzYycpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1lYW5pbmcgKGludGVudCkgc2V0IGluIHRoZSB0ZW1wbGF0ZSBhcyB2YWx1ZSBvZiB0aGUgaTE4bi1hdHRyaWJ1dGUuXHJcbiAgICAgKiBUaGlzIGlzIHRoZSBwYXJ0IGluIGZyb250IG9mIHRoZSB8IHN5bWJvbC5cclxuICAgICAqIGUuZy4gaTE4bj1cIm1lYW5pbmd8bXlkZXNjcmlwdGlvblwiLlxyXG4gICAgICogSW4geG1iIHRoaXMgaXMgc3RvcmVkIGluIHRoZSBhdHRyaWJ1dGUgXCJtZWFuaW5nXCIuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBtZWFuaW5nKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQuZ2V0QXR0cmlidXRlKCdtZWFuaW5nJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgc2V0dGluZyBvZiBkZXNjcmlwdGlvbiBhbmQgbWVhbmluZyBpcyBzdXBwb3J0ZWQuXHJcbiAgICAgKiBJZiBub3QsIHNldERlc2NyaXB0aW9uIGFuZCBzZXRNZWFuaW5nIHdpbGwgZG8gbm90aGluZy5cclxuICAgICAqIHh0YiBkb2VzIG5vdCBzdXBwb3J0IHRoaXMsIGFsbCBvdGhlciBmb3JtYXRzIGRvLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3VwcG9ydHNTZXREZXNjcmlwdGlvbkFuZE1lYW5pbmcoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlIGRlc2NyaXB0aW9uIHByb3BlcnR5IG9mIHRyYW5zLXVuaXQuXHJcbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gZGVzY3JpcHRpb25cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldERlc2NyaXB0aW9uKGRlc2NyaXB0aW9uOiBzdHJpbmcpIHtcclxuICAgICAgICAvLyBub3Qgc3VwcG9ydGVkLCBkbyBub3RoaW5nXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGFuZ2UgbWVhbmluZyBwcm9wZXJ0eSBvZiB0cmFucy11bml0LlxyXG4gICAgICogQHBhcmFtIG1lYW5pbmcgbWVhbmluZ1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0TWVhbmluZyhtZWFuaW5nOiBzdHJpbmcpIHtcclxuICAgICAgICAvLyBub3Qgc3VwcG9ydGVkLCBkbyBub3RoaW5nXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgYWxsIG5vdGVzIG9mIHRoZSB0cmFucy11bml0LlxyXG4gICAgICogVGhlcmUgYXJlIE5PIG5vdGVzIGluIHhtYi94dGJcclxuICAgICAqL1xyXG4gICAgcHVibGljIG5vdGVzKCk6IElOb3RlW10ge1xyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBzZXR0aW5nIG9mIG5vdGVzIGlzIHN1cHBvcnRlZC5cclxuICAgICAqIElmIG5vdCwgc2V0Tm90ZXMgd2lsbCBkbyBub3RoaW5nLlxyXG4gICAgICogeHRiIGRvZXMgbm90IHN1cHBvcnQgdGhpcywgYWxsIG90aGVyIGZvcm1hdHMgZG8uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdXBwb3J0c1NldE5vdGVzKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFkZCBub3RlcyB0byB0cmFucyB1bml0LlxyXG4gICAgICogQHBhcmFtIG5ld05vdGVzIHRoZSBub3RlcyB0byBhZGQuXHJcbiAgICAgKiBOT1QgU3VwcG9ydGVkIGluIHhtYi94dGJcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldE5vdGVzKG5ld05vdGVzOiBJTm90ZVtdKSB7XHJcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZCwgZG8gbm90aGluZ1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29weSBzb3VyY2UgdG8gdGFyZ2V0IHRvIHVzZSBpdCBhcyBkdW1teSB0cmFuc2xhdGlvbi5cclxuICAgICAqIFJldHVybnMgYSBjaGFuZ2VkIGNvcHkgb2YgdGhpcyB0cmFucyB1bml0LlxyXG4gICAgICogcmVjZWl2ZXIgaXMgbm90IGNoYW5nZWQuXHJcbiAgICAgKiAoaW50ZXJuYWwgdXNhZ2Ugb25seSwgYSBjbGllbnQgc2hvdWxkIGNhbGwgaW1wb3J0TmV3VHJhbnNVbml0IG9uIElUcmFuc2xhdGlvbk1lc3NhZ2VGaWxlKVxyXG4gICAgICogSW4geG1iIHRoZXJlIGlzIG5vdGhpbmcgdG8gZG8sIGJlY2F1c2UgdGhlcmUgaXMgb25seSBhIHRhcmdldCwgbm8gc291cmNlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY2xvbmVXaXRoU291cmNlQXNUYXJnZXQoaXNEZWZhdWx0TGFuZzogYm9vbGVhbiwgY29weUNvbnRlbnQ6IGJvb2xlYW4sIHRhcmdldEZpbGU6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSk6IEFic3RyYWN0VHJhbnNVbml0IHtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvcHkgc291cmNlIHRvIHRhcmdldCB0byB1c2UgaXQgYXMgZHVtbXkgdHJhbnNsYXRpb24uXHJcbiAgICAgKiAoaW50ZXJuYWwgdXNhZ2Ugb25seSwgYSBjbGllbnQgc2hvdWxkIGNhbGwgY3JlYXRlVHJhbnNsYXRpb25GaWxlRm9yTGFuZyBvbiBJVHJhbnNsYXRpb25NZXNzYWdlRmlsZSlcclxuICAgICAqL1xyXG4gICAgcHVibGljIHVzZVNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuKSB7XHJcbiAgICAgICAgLy8gZG8gbm90aGluZ1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0IHRoZSB0cmFuc2xhdGlvbiB0byBhIGdpdmVuIHN0cmluZyAoaW5jbHVkaW5nIG1hcmt1cCkuXHJcbiAgICAgKiBJbiBmYWN0LCB4bWIgY2Fubm90IGJlIHRyYW5zbGF0ZWQuXHJcbiAgICAgKiBTbyB0aGlzIHRocm93cyBhbiBlcnJvci5cclxuICAgICAqIEBwYXJhbSB0cmFuc2xhdGlvbiB0cmFuc2xhdGlvblxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgdHJhbnNsYXRlTmF0aXZlKHRyYW5zbGF0aW9uOiBzdHJpbmcpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBjYW5ub3QgdHJhbnNsYXRlIHhtYiBmaWxlcywgdXNlIHh0YiBpbnN0ZWFkLicpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCJpbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3Rvcnl9IGZyb20gJy4uL2FwaS9pLXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUtZmFjdG9yeSc7XHJcbmltcG9ydCB7SVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuaW1wb3J0IHtJVHJhbnNVbml0fSBmcm9tICcuLi9hcGkvaS10cmFucy11bml0JztcclxuaW1wb3J0IHtGT1JNQVRfWE1CLCBGSUxFVFlQRV9YTUIsIEZPUk1BVF9YVEJ9IGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG5pbXBvcnQge2Zvcm1hdH0gZnJvbSAndXRpbCc7XHJcbmltcG9ydCB7WG1iVHJhbnNVbml0fSBmcm9tICcuL3htYi10cmFucy11bml0JztcclxuaW1wb3J0IHtBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuL2Fic3RyYWN0LXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDEwLjAzLjIwMTcuXHJcbiAqIHhtYi1GaWxlIGFjY2Vzcy5cclxuICovXHJcblxyXG4vKipcclxuICogRG9jdHlwZSBvZiB4dGIgdHJhbnNsYXRpb24gZmlsZSBjb3JyZXNwb25kaW5nIHdpdGggdGhvcyB4bWIgZmlsZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBYVEJfRE9DVFlQRSA9IGA8IURPQ1RZUEUgdHJhbnNsYXRpb25idW5kbGUgW1xyXG4gIDwhRUxFTUVOVCB0cmFuc2xhdGlvbmJ1bmRsZSAodHJhbnNsYXRpb24pKj5cclxuICA8IUFUVExJU1QgdHJhbnNsYXRpb25idW5kbGUgbGFuZyBDREFUQSAjUkVRVUlSRUQ+XHJcbiAgPCFFTEVNRU5UIHRyYW5zbGF0aW9uICgjUENEQVRBfHBoKSo+XHJcbiAgPCFBVFRMSVNUIHRyYW5zbGF0aW9uIGlkIENEQVRBICNSRVFVSVJFRD5cclxuICA8IUVMRU1FTlQgcGggRU1QVFk+XHJcbiAgPCFBVFRMSVNUIHBoIG5hbWUgQ0RBVEEgI1JFUVVJUkVEPlxyXG5dPmA7XHJcblxyXG5leHBvcnQgY2xhc3MgWG1iRmlsZSBleHRlbmRzIEFic3RyYWN0VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUgaW1wbGVtZW50cyBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGFuIHhtYi1GaWxlIGZyb20gc291cmNlLlxyXG4gICAgICogQHBhcmFtIF90cmFuc2xhdGlvbk1lc3NhZ2VGaWxlRmFjdG9yeSBmYWN0b3J5IHRvIGNyZWF0ZSBhIHRyYW5zbGF0aW9uIGZpbGUgKHh0YikgZm9yIHRoZSB4bWIgZmlsZVxyXG4gICAgICogQHBhcmFtIHhtbFN0cmluZyBmaWxlIGNvbnRlbnRcclxuICAgICAqIEBwYXJhbSBwYXRoIFBhdGggdG8gZmlsZVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIG9wdGlvbmFsIGVuY29kaW5nIG9mIHRoZSB4bWwuXHJcbiAgICAgKiBUaGlzIGlzIHJlYWQgZnJvbSB0aGUgZmlsZSwgYnV0IGlmIHlvdSBrbm93IGl0IGJlZm9yZSwgeW91IGNhbiBhdm9pZCByZWFkaW5nIHRoZSBmaWxlIHR3aWNlLlxyXG4gICAgICogQHJldHVybiBYbWJGaWxlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgX3RyYW5zbGF0aW9uTWVzc2FnZUZpbGVGYWN0b3J5OiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5LFxyXG4gICAgICAgIHhtbFN0cmluZzogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcpIHtcclxuXHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLl93YXJuaW5ncyA9IFtdO1xyXG4gICAgICAgIHRoaXMuX251bWJlck9mVHJhbnNVbml0c1dpdGhNaXNzaW5nSWQgPSAwO1xyXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZUZyb21Db250ZW50KHhtbFN0cmluZywgcGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaW5pdGlhbGl6ZUZyb21Db250ZW50KHhtbFN0cmluZzogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcpOiBYbWJGaWxlIHtcclxuICAgICAgICB0aGlzLnBhcnNlQ29udGVudCh4bWxTdHJpbmcsIHBhdGgsIGVuY29kaW5nKTtcclxuICAgICAgICBpZiAodGhpcy5fcGFyc2VkRG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ21lc3NhZ2VidW5kbGUnKS5sZW5ndGggIT09IDEpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnRmlsZSBcIiVzXCIgc2VlbXMgdG8gYmUgbm8geG1iIGZpbGUgKHNob3VsZCBjb250YWluIGEgbWVzc2FnZWJ1bmRsZSBlbGVtZW50KScsIHBhdGgpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGluaXRpYWxpemVUcmFuc1VuaXRzKCkge1xyXG4gICAgICAgIHRoaXMudHJhbnNVbml0cyA9IFtdO1xyXG4gICAgICAgIGNvbnN0IHRyYW5zVW5pdHNJbkZpbGUgPSB0aGlzLl9wYXJzZWREb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbXNnJyk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmFuc1VuaXRzSW5GaWxlLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1zZyA9IHRyYW5zVW5pdHNJbkZpbGUuaXRlbShpKTtcclxuICAgICAgICAgICAgY29uc3QgaWQgPSBtc2cuZ2V0QXR0cmlidXRlKCdpZCcpO1xyXG4gICAgICAgICAgICBpZiAoIWlkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl93YXJuaW5ncy5wdXNoKGZvcm1hdCgnb29wcywgbXNnIHdpdGhvdXQgXCJpZFwiIGZvdW5kIGluIG1hc3RlciwgcGxlYXNlIGNoZWNrIGZpbGUgJXMnLCB0aGlzLl9maWxlbmFtZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMudHJhbnNVbml0cy5wdXNoKG5ldyBYbWJUcmFuc1VuaXQobXNnLCBpZCwgdGhpcykpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZpbGUgZm9ybWF0IGFzIGl0IGlzIHVzZWQgaW4gY29uZmlnIGZpbGVzLlxyXG4gICAgICogQ3VycmVudGx5ICd4bGYnLCAneG1iJywgJ3htYjInXHJcbiAgICAgKiBSZXR1cm5zIG9uZSBvZiB0aGUgY29uc3RhbnRzIEZPUk1BVF8uLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaTE4bkZvcm1hdCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBGT1JNQVRfWE1CO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRmlsZSB0eXBlLlxyXG4gICAgICogSGVyZSAnWE1CJ1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZmlsZVR5cGUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gRklMRVRZUEVfWE1CO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogcmV0dXJuIHRhZyBuYW1lcyBvZiBhbGwgZWxlbWVudHMgdGhhdCBoYXZlIG1peGVkIGNvbnRlbnQuXHJcbiAgICAgKiBUaGVzZSBlbGVtZW50cyB3aWxsIG5vdCBiZSBiZWF1dGlmaWVkLlxyXG4gICAgICogVHlwaWNhbCBjYW5kaWRhdGVzIGFyZSBzb3VyY2UgYW5kIHRhcmdldC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGVsZW1lbnRzV2l0aE1peGVkQ29udGVudCgpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgcmV0dXJuIFsnbWVzc2FnZSddO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR3Vlc3MgbGFuZ3VhZ2UgZnJvbSBmaWxlbmFtZS5cclxuICAgICAqIElmIGZpbGVuYW1lIGlzIGZvby54eS54bWIsIHRoYW4gbGFuZ3VhZ2UgaXMgYXNzdW1lZCB0byBiZSB4eS5cclxuICAgICAqIEByZXR1cm4gTGFuZ3VhZ2Ugb3IgbnVsbFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGd1ZXNzTGFuZ3VhZ2VGcm9tRmlsZW5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5fZmlsZW5hbWUpIHtcclxuICAgICAgICAgICAgY29uc3QgcGFydHM6IHN0cmluZ1tdID0gdGhpcy5fZmlsZW5hbWUuc3BsaXQoJy4nKTtcclxuICAgICAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA+IDIgJiYgcGFydHNbcGFydHMubGVuZ3RoIC0gMV0udG9Mb3dlckNhc2UoKSA9PT0gJ3htYicpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJ0c1twYXJ0cy5sZW5ndGggLSAyXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCBzb3VyY2UgbGFuZ3VhZ2UuXHJcbiAgICAgKiBVbnN1cHBvcnRlZCBpbiB4bWIuXHJcbiAgICAgKiBUcnkgdG8gZ3Vlc3MgaXQgZnJvbSBmaWxlbmFtZSBpZiBhbnkuLlxyXG4gICAgICogQHJldHVybiBzb3VyY2UgbGFuZ3VhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzb3VyY2VMYW5ndWFnZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmd1ZXNzTGFuZ3VhZ2VGcm9tRmlsZW5hbWUoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEVkaXQgdGhlIHNvdXJjZSBsYW5ndWFnZS5cclxuICAgICAqIFVuc3VwcG9ydGVkIGluIHhtYi5cclxuICAgICAqIEBwYXJhbSBsYW5ndWFnZSBsYW5ndWFnZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0U291cmNlTGFuZ3VhZ2UobGFuZ3VhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIC8vIGRvIG5vdGhpbmcsIHhtYiBoYXMgbm8gbm90YXRpb24gZm9yIHRoaXMuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGFyZ2V0IGxhbmd1YWdlLlxyXG4gICAgICogVW5zdXBwb3J0ZWQgaW4geG1iLlxyXG4gICAgICogVHJ5IHRvIGd1ZXNzIGl0IGZyb20gZmlsZW5hbWUgaWYgYW55Li5cclxuICAgICAqIEByZXR1cm4gdGFyZ2V0IGxhbmd1YWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdGFyZ2V0TGFuZ3VhZ2UoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ndWVzc0xhbmd1YWdlRnJvbUZpbGVuYW1lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFZGl0IHRoZSB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBVbnN1cHBvcnRlZCBpbiB4bWIuXHJcbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2UgbGFuZ3VhZ2VcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFRhcmdldExhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcpIHtcclxuICAgICAgICAvLyBkbyBub3RoaW5nLCB4bWIgaGFzIG5vIG5vdGF0aW9uIGZvciB0aGlzLlxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkIGEgbmV3IHRyYW5zLXVuaXQgdG8gdGhpcyBmaWxlLlxyXG4gICAgICogVGhlIHRyYW5zIHVuaXQgc3RlbXMgZnJvbSBhbm90aGVyIGZpbGUuXHJcbiAgICAgKiBJdCBjb3BpZXMgdGhlIHNvdXJjZSBjb250ZW50IG9mIHRoZSB0dSB0byB0aGUgdGFyZ2V0IGNvbnRlbnQgdG9vLFxyXG4gICAgICogZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgb2YgaXNEZWZhdWx0TGFuZyBhbmQgY29weUNvbnRlbnQuXHJcbiAgICAgKiBTbyB0aGUgc291cmNlIGNhbiBiZSB1c2VkIGFzIGEgZHVtbXkgdHJhbnNsYXRpb24uXHJcbiAgICAgKiAodXNlZCBieSB4bGlmZm1lcmdlKVxyXG4gICAgICogQHBhcmFtIGZvcmVpZ25UcmFuc1VuaXQgdGhlIHRyYW5zIHVuaXQgdG8gYmUgaW1wb3J0ZWQuXHJcbiAgICAgKiBAcGFyYW0gaXNEZWZhdWx0TGFuZyBGbGFnLCB3ZXRoZXIgZmlsZSBjb250YWlucyB0aGUgZGVmYXVsdCBsYW5ndWFnZS5cclxuICAgICAqIFRoZW4gc291cmNlIGFuZCB0YXJnZXQgYXJlIGp1c3QgZXF1YWwuXHJcbiAgICAgKiBUaGUgY29udGVudCB3aWxsIGJlIGNvcGllZC5cclxuICAgICAqIFN0YXRlIHdpbGwgYmUgZmluYWwuXHJcbiAgICAgKiBAcGFyYW0gY29weUNvbnRlbnQgRmxhZywgd2V0aGVyIHRvIGNvcHkgY29udGVudCBvciBsZWF2ZSBpdCBlbXB0eS5cclxuICAgICAqIFdiZW4gdHJ1ZSwgY29udGVudCB3aWxsIGJlIGNvcGllZCBmcm9tIHNvdXJjZS5cclxuICAgICAqIFdoZW4gZmFsc2UsIGNvbnRlbnQgd2lsbCBiZSBsZWZ0IGVtcHR5IChpZiBpdCBpcyBub3QgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UpLlxyXG4gICAgICogQHBhcmFtIGltcG9ydEFmdGVyRWxlbWVudCBvcHRpb25hbCAoc2luY2UgMS4xMCkgb3RoZXIgdHJhbnN1bml0IChwYXJ0IG9mIHRoaXMgZmlsZSksIHRoYXQgc2hvdWxkIGJlIHVzZWQgYXMgYW5jZXN0b3IuXHJcbiAgICAgKiBOZXdseSBpbXBvcnRlZCB0cmFucyB1bml0IGlzIHRoZW4gaW5zZXJ0ZWQgZGlyZWN0bHkgYWZ0ZXIgdGhpcyBlbGVtZW50LlxyXG4gICAgICogSWYgbm90IHNldCBvciBub3QgcGFydCBvZiB0aGlzIGZpbGUsIG5ldyB1bml0IHdpbGwgYmUgaW1wb3J0ZWQgYXQgdGhlIGVuZC5cclxuICAgICAqIElmIGV4cGxpY2l0eSBzZXQgdG8gbnVsbCwgbmV3IHVuaXQgd2lsbCBiZSBpbXBvcnRlZCBhdCB0aGUgc3RhcnQuXHJcbiAgICAgKiBAcmV0dXJuIHRoZSBuZXdseSBpbXBvcnRlZCB0cmFucyB1bml0IChzaW5jZSB2ZXJzaW9uIDEuNy4wKVxyXG4gICAgICogQHRocm93cyBhbiBlcnJvciBpZiB0cmFucy11bml0IHdpdGggc2FtZSBpZCBhbHJlYWR5IGlzIGluIHRoZSBmaWxlLlxyXG4gICAgICovXHJcbiAgICBpbXBvcnROZXdUcmFuc1VuaXQoZm9yZWlnblRyYW5zVW5pdDogSVRyYW5zVW5pdCwgaXNEZWZhdWx0TGFuZzogYm9vbGVhbiwgY29weUNvbnRlbnQ6IGJvb2xlYW4sIGltcG9ydEFmdGVyRWxlbWVudD86IElUcmFuc1VuaXQpXHJcbiAgICAgICAgOiBJVHJhbnNVbml0IHtcclxuICAgICAgICB0aHJvdyBFcnJvcigneG1iIGZpbGUgY2Fubm90IGJlIHVzZWQgdG8gc3RvcmUgdHJhbnNsYXRpb25zLCB1c2UgeHRiIGZpbGUnKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSBhIG5ldyB0cmFuc2xhdGlvbiBmaWxlIGZvciB0aGlzIGZpbGUgZm9yIGEgZ2l2ZW4gbGFuZ3VhZ2UuXHJcbiAgICAgKiBOb3JtYWxseSwgdGhpcyBpcyBqdXN0IGEgY29weSBvZiB0aGUgb3JpZ2luYWwgb25lLlxyXG4gICAgICogQnV0IGZvciBYTUIgdGhlIHRyYW5zbGF0aW9uIGZpbGUgaGFzIGZvcm1hdCAnWFRCJy5cclxuICAgICAqIEBwYXJhbSBsYW5nIExhbmd1YWdlIGNvZGVcclxuICAgICAqIEBwYXJhbSBmaWxlbmFtZSBleHBlY3RlZCBmaWxlbmFtZSB0byBzdG9yZSBmaWxlXHJcbiAgICAgKiBAcGFyYW0gaXNEZWZhdWx0TGFuZyBGbGFnLCB3ZXRoZXIgZmlsZSBjb250YWlucyB0aGUgZGVmYXVsdCBsYW5ndWFnZS5cclxuICAgICAqIFRoZW4gc291cmNlIGFuZCB0YXJnZXQgYXJlIGp1c3QgZXF1YWwuXHJcbiAgICAgKiBUaGUgY29udGVudCB3aWxsIGJlIGNvcGllZC5cclxuICAgICAqIFN0YXRlIHdpbGwgYmUgZmluYWwuXHJcbiAgICAgKiBAcGFyYW0gY29weUNvbnRlbnQgRmxhZywgd2V0aGVyIHRvIGNvcHkgY29udGVudCBvciBsZWF2ZSBpdCBlbXB0eS5cclxuICAgICAqIFdiZW4gdHJ1ZSwgY29udGVudCB3aWxsIGJlIGNvcGllZCBmcm9tIHNvdXJjZS5cclxuICAgICAqIFdoZW4gZmFsc2UsIGNvbnRlbnQgd2lsbCBiZSBsZWZ0IGVtcHR5IChpZiBpdCBpcyBub3QgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UpLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY3JlYXRlVHJhbnNsYXRpb25GaWxlRm9yTGFuZyhsYW5nOiBzdHJpbmcsIGZpbGVuYW1lOiBzdHJpbmcsIGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuKVxyXG4gICAgICAgIDogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIHtcclxuICAgICAgICBjb25zdCB0cmFuc2xhdGlvbmJ1bmRsZVhNTFNvdXJjZSA9XHJcbiAgICAgICAgICAgICc8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz5cXG4nICsgWFRCX0RPQ1RZUEUgKyAnXFxuPHRyYW5zbGF0aW9uYnVuZGxlPlxcbjwvdHJhbnNsYXRpb25idW5kbGU+XFxuJztcclxuICAgICAgICBjb25zdCB0cmFuc2xhdGlvbkZpbGUgPSB0aGlzLl90cmFuc2xhdGlvbk1lc3NhZ2VGaWxlRmFjdG9yeS5jcmVhdGVGaWxlRnJvbUZpbGVDb250ZW50KFxyXG4gICAgICAgICAgICBGT1JNQVRfWFRCLFxyXG4gICAgICAgICAgICB0cmFuc2xhdGlvbmJ1bmRsZVhNTFNvdXJjZSwgZmlsZW5hbWUsIHRoaXMuZW5jb2RpbmcoKSxcclxuICAgICAgICAgICAge3htbENvbnRlbnQ6IHRoaXMuZWRpdGVkQ29udGVudCgpLCBwYXRoOiB0aGlzLmZpbGVuYW1lKCksIGVuY29kaW5nOiB0aGlzLmVuY29kaW5nKCl9KTtcclxuICAgICAgICB0cmFuc2xhdGlvbkZpbGUuc2V0TmV3VHJhbnNVbml0VGFyZ2V0UHJhZWZpeCh0aGlzLnRhcmdldFByYWVmaXgpO1xyXG4gICAgICAgIHRyYW5zbGF0aW9uRmlsZS5zZXROZXdUcmFuc1VuaXRUYXJnZXRTdWZmaXgodGhpcy50YXJnZXRTdWZmaXgpO1xyXG4gICAgICAgIHRyYW5zbGF0aW9uRmlsZS5zZXRUYXJnZXRMYW5ndWFnZShsYW5nKTtcclxuICAgICAgICB0cmFuc2xhdGlvbkZpbGUuc2V0TmV3VHJhbnNVbml0VGFyZ2V0UHJhZWZpeCh0aGlzLmdldE5ld1RyYW5zVW5pdFRhcmdldFByYWVmaXgoKSk7XHJcbiAgICAgICAgdHJhbnNsYXRpb25GaWxlLnNldE5ld1RyYW5zVW5pdFRhcmdldFN1ZmZpeCh0aGlzLmdldE5ld1RyYW5zVW5pdFRhcmdldFN1ZmZpeCgpKTtcclxuICAgICAgICB0aGlzLmZvckVhY2hUcmFuc1VuaXQoKHR1KSA9PiB7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uRmlsZS5pbXBvcnROZXdUcmFuc1VuaXQodHUsIGlzRGVmYXVsdExhbmcsIGNvcHlDb250ZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdHJhbnNsYXRpb25GaWxlO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCJpbXBvcnQge0Fic3RyYWN0TWVzc2FnZVBhcnNlcn0gZnJvbSAnLi9hYnN0cmFjdC1tZXNzYWdlLXBhcnNlcic7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZSc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRTdGFydFRhZ30gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXN0YXJ0LXRhZyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZVBhcnRFbmRUYWd9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1lbmQtdGFnJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtcGxhY2Vob2xkZXInO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0VGV4dH0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0LXRleHQnO1xyXG5pbXBvcnQge1BhcnNlZE1lc3NhZ2VQYXJ0VHlwZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZS1wYXJ0JztcclxuaW1wb3J0IHtUYWdNYXBwaW5nfSBmcm9tICcuL3RhZy1tYXBwaW5nJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydEVtcHR5VGFnfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQtZW1wdHktdGFnJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWZ9IGZyb20gJy4vcGFyc2VkLW1lc3NhZ2UtcGFydC1pY3UtbWVzc2FnZS1yZWYnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSByb29ibSBvbiAxMC4wNS4yMDE3LlxyXG4gKiBBIG1lc3NhZ2UgcGFyc2VyIGZvciBYTElGRiAyLjBcclxuICovXHJcbmV4cG9ydCBjbGFzcyBYbGlmZjJNZXNzYWdlUGFyc2VyIGV4dGVuZHMgQWJzdHJhY3RNZXNzYWdlUGFyc2VyIHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSB0aGlzIGVsZW1lbnQgbm9kZS5cclxuICAgICAqIFRoaXMgaXMgY2FsbGVkIGJlZm9yZSB0aGUgY2hpbGRyZW4gYXJlIGRvbmUuXHJcbiAgICAgKiBAcGFyYW0gZWxlbWVudE5vZGUgZWxlbWVudE5vZGVcclxuICAgICAqIEBwYXJhbSBtZXNzYWdlIG1lc3NhZ2UgdG8gYmUgYWx0ZXJlZFxyXG4gICAgICogQHJldHVybiB0cnVlLCBpZiBjaGlsZHJlbiBzaG91bGQgYmUgcHJvY2Vzc2VkIHRvbywgZmFsc2Ugb3RoZXJ3aXNlIChjaGlsZHJlbiBpZ25vcmVkIHRoZW4pXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBwcm9jZXNzU3RhcnRFbGVtZW50KGVsZW1lbnROb2RlOiBFbGVtZW50LCBtZXNzYWdlOiBQYXJzZWRNZXNzYWdlKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3QgdGFnTmFtZSA9IGVsZW1lbnROb2RlLnRhZ05hbWU7XHJcbiAgICAgICAgaWYgKHRhZ05hbWUgPT09ICdwaCcpIHtcclxuICAgICAgICAgICAgLy8gcGxhY2Vob2xkZXIgYXJlIGxpa2UgPHBoIGlkPVwiMFwiIGVxdWl2PVwiSU5URVJQT0xBVElPTlwiIGRpc3A9XCJ7e251bWJlcigpfX1cIi8+XHJcbiAgICAgICAgICAgIC8vIFRoZXkgY29udGFpbiB0aGUgaWQgYW5kIGFsc28gYSBuYW1lIChudW1iZXIgaW4gdGhlIGV4YW1wbGUpXHJcbiAgICAgICAgICAgIC8vIFRPRE8gbWFrZSBzb21lIHVzZSBvZiB0aGUgbmFtZSAoYnV0IGl0IGlzIG5vdCBhdmFpbGFibGUgaW4gWExJRkYgMS4yKVxyXG4gICAgICAgICAgICAvLyBJQ1UgbWVzc2FnZSBhcmUgaGFuZGxlZCB3aXRoIHRoZSBzYW1lIHRhZ1xyXG4gICAgICAgICAgICAvLyBCZWZvcmUgNC4zLjIgdGhleSBkaWQgbm90IGhhdmUgYW4gZXF1aXYgYW5kIGRpc3AgKEJ1ZyAjMTczNDQpOlxyXG4gICAgICAgICAgICAvLyBlLmcuIDxwaCBpZD1cIjBcIi8+XHJcbiAgICAgICAgICAgIC8vIEJlZ2lubmluZyB3aXRoIDQuMy4yIHRoZXkgZG8gaGF2ZSBhbiBlcXVpdiBJQ1UgYW5kIGRpc3A6XHJcbiAgICAgICAgICAgIC8vIGUuZy4gPHBoIGlkPVwiMFwiIGVxdWl2PVwiSUNVXCIgZGlzcD1cIntjb3VudCwgcGx1cmFsLCA9MCB7Li4ufSA9MSB7Li4ufSBvdGhlciB7Li4ufX1cIi8+XHJcbiAgICAgICAgICAgIC8vIGFuZCBlbXB0eSB0YWdzIGhhdmUgZXF1aXYgb3RoZXIgdGhlbiBJTlRFUlBPTEFUSU9OOlxyXG4gICAgICAgICAgICAvLyBlLmcuIDxwaCBpZD1cIjNcIiBlcXVpdj1cIlRBR19JTUdcIiB0eXBlPVwiaW1hZ2VcIiBkaXNwPVwiJmx0O2ltZy8+XCIvPlxyXG4gICAgICAgICAgICAvLyBvciA8cGggZXF1aXY9XCJMSU5FX0JSRUFLXCIgdHlwZT1cImxiXCIgZGlzcD1cIiZsdDtici8+XCIvPlxyXG4gICAgICAgICAgICBsZXQgaXNJbnRlcnBvbGF0aW9uID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGxldCBpc0lDVSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgaXNFbXB0eVRhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBjb25zdCBlcXVpdiA9IGVsZW1lbnROb2RlLmdldEF0dHJpYnV0ZSgnZXF1aXYnKTtcclxuICAgICAgICAgICAgY29uc3QgZGlzcCA9IGVsZW1lbnROb2RlLmdldEF0dHJpYnV0ZSgnZGlzcCcpO1xyXG4gICAgICAgICAgICBsZXQgaW5kZXhTdHJpbmcgPSBudWxsO1xyXG4gICAgICAgICAgICBsZXQgaW5kZXggPSAwO1xyXG4gICAgICAgICAgICBsZXQgZW1wdHlUYWdOYW1lID0gbnVsbDtcclxuICAgICAgICAgICAgaWYgKCFlcXVpdikge1xyXG4gICAgICAgICAgICAgICAgLy8gb2xkIElDVSBzeW50YXgsIGZpeGVkIHdpdGggIzE3MzQ0XHJcbiAgICAgICAgICAgICAgICBpc0lDVSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBpbmRleFN0cmluZyA9IGVsZW1lbnROb2RlLmdldEF0dHJpYnV0ZSgnaWQnKTtcclxuICAgICAgICAgICAgICAgIGluZGV4ID0gTnVtYmVyLnBhcnNlSW50KGluZGV4U3RyaW5nLCAxMCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZXF1aXYuc3RhcnRzV2l0aCgnSUNVJykpIHtcclxuICAgICAgICAgICAgICAgIC8vIG5ldyBJQ1Ugc3ludGF4LCBmaXhlZCB3aXRoICMxNzM0NFxyXG4gICAgICAgICAgICAgICAgaXNJQ1UgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGVxdWl2ID09PSAnSUNVJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGluZGV4U3RyaW5nID0gJzAnO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBpbmRleFN0cmluZyA9IGVxdWl2LnN1YnN0cmluZygnSUNVXycubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGluZGV4ID0gTnVtYmVyLnBhcnNlSW50KGluZGV4U3RyaW5nLCAxMCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZXF1aXYuc3RhcnRzV2l0aCgnSU5URVJQT0xBVElPTicpKSB7XHJcbiAgICAgICAgICAgICAgICBpc0ludGVycG9sYXRpb24gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGVxdWl2ID09PSAnSU5URVJQT0xBVElPTicpIHtcclxuICAgICAgICAgICAgICAgICAgICBpbmRleFN0cmluZyA9ICcwJztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhTdHJpbmcgPSBlcXVpdi5zdWJzdHJpbmcoJ0lOVEVSUE9MQVRJT05fJy5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaW5kZXggPSBOdW1iZXIucGFyc2VJbnQoaW5kZXhTdHJpbmcsIDEwKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChuZXcgVGFnTWFwcGluZygpLmlzRW1wdHlUYWdQbGFjZWhvbGRlck5hbWUoZXF1aXYpKSB7XHJcbiAgICAgICAgICAgICAgICBpc0VtcHR5VGFnID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGVtcHR5VGFnTmFtZSA9IG5ldyBUYWdNYXBwaW5nKCkuZ2V0VGFnbmFtZUZyb21FbXB0eVRhZ1BsYWNlaG9sZGVyTmFtZShlcXVpdik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoaXNJbnRlcnBvbGF0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZFBsYWNlaG9sZGVyKGluZGV4LCBkaXNwKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChpc0lDVSkge1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRJQ1VNZXNzYWdlUmVmKGluZGV4LCBkaXNwKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChpc0VtcHR5VGFnKSB7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlLmFkZEVtcHR5VGFnKGVtcHR5VGFnTmFtZSwgdGhpcy5wYXJzZUlkQ291bnRGcm9tTmFtZShlcXVpdikpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmICh0YWdOYW1lID09PSAncGMnKSB7XHJcbiAgICAgICAgICAgIC8vIHBjIGV4YW1wbGU6IDxwYyBpZD1cIjBcIiBlcXVpdlN0YXJ0PVwiU1RBUlRfQk9MRF9URVhUXCIgZXF1aXZFbmQ9XCJDTE9TRV9CT0xEX1RFWFRcIiB0eXBlPVwiZm10XCJcclxuICAgICAgICAgICAgLy8gZGlzcFN0YXJ0PVwiJmx0O2ImZ3Q7XCIgZGlzcEVuZD1cIiZsdDsvYiZndDtcIj5JTVBPUlRBTlQ8L3BjPlxyXG4gICAgICAgICAgICBjb25zdCBlbWJlZGRlZFRhZ05hbWUgPSB0aGlzLnRhZ05hbWVGcm9tUENFbGVtZW50KGVsZW1lbnROb2RlKTtcclxuICAgICAgICAgICAgaWYgKGVtYmVkZGVkVGFnTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRTdGFydFRhZyhlbWJlZGRlZFRhZ05hbWUsIHRoaXMucGFyc2VJZENvdW50RnJvbU5hbWUoZWxlbWVudE5vZGUuZ2V0QXR0cmlidXRlKCdlcXVpdlN0YXJ0JykpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEhhbmRsZSBlbmQgb2YgdGhpcyBlbGVtZW50IG5vZGUuXHJcbiAgICAgKiBUaGlzIGlzIGNhbGxlZCBhZnRlciBhbGwgY2hpbGRyZW4gYXJlIHByb2Nlc3NlZC5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50Tm9kZSBlbGVtZW50Tm9kZVxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgbWVzc2FnZSB0byBiZSBhbHRlcmVkXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBwcm9jZXNzRW5kRWxlbWVudChlbGVtZW50Tm9kZTogRWxlbWVudCwgbWVzc2FnZTogUGFyc2VkTWVzc2FnZSkge1xyXG4gICAgICAgIGNvbnN0IHRhZ05hbWUgPSBlbGVtZW50Tm9kZS50YWdOYW1lO1xyXG4gICAgICAgIGlmICh0YWdOYW1lID09PSAncGMnKSB7XHJcbiAgICAgICAgICAgIC8vIHBjIGV4YW1wbGU6IDxwYyBpZD1cIjBcIiBlcXVpdlN0YXJ0PVwiU1RBUlRfQk9MRF9URVhUXCIgZXF1aXZFbmQ9XCJDTE9TRV9CT0xEX1RFWFRcIiB0eXBlPVwiZm10XCJcclxuICAgICAgICAgICAgLy8gZGlzcFN0YXJ0PVwiJmx0O2ImZ3Q7XCIgZGlzcEVuZD1cIiZsdDsvYiZndDtcIj5JTVBPUlRBTlQ8L3BjPlxyXG4gICAgICAgICAgICBjb25zdCBlbWJlZGRlZFRhZ05hbWUgPSB0aGlzLnRhZ05hbWVGcm9tUENFbGVtZW50KGVsZW1lbnROb2RlKTtcclxuICAgICAgICAgICAgaWYgKGVtYmVkZGVkVGFnTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZS5hZGRFbmRUYWcoZW1iZWRkZWRUYWdOYW1lKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdGFnTmFtZUZyb21QQ0VsZW1lbnQocGNOb2RlOiBFbGVtZW50KTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgZGlzcFN0YXJ0ID0gcGNOb2RlLmdldEF0dHJpYnV0ZSgnZGlzcFN0YXJ0Jyk7XHJcbiAgICAgICAgaWYgKGRpc3BTdGFydC5zdGFydHNXaXRoKCc8JykpIHtcclxuICAgICAgICAgICAgZGlzcFN0YXJ0ID0gZGlzcFN0YXJ0LnN1YnN0cmluZygxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGRpc3BTdGFydC5lbmRzV2l0aCgnPicpKSB7XHJcbiAgICAgICAgICAgIGRpc3BTdGFydCA9IGRpc3BTdGFydC5zdWJzdHJpbmcoMCwgZGlzcFN0YXJ0Lmxlbmd0aCAtIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGlzcFN0YXJ0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogcmVpbXBsZW1lbnRlZCBoZXJlLCBiZWNhdXNlIFhMSUZGIDIuMCB1c2VzIGEgZGVlcGVyIHhtbCBtb2RlbC5cclxuICAgICAqIFNvIHdlIGNhbm5vdCBzaW1wbHkgcmVwbGFjZSB0aGUgbWVzc2FnZSBwYXJ0cyBieSB4bWwgcGFydHMuXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBtZXNzYWdlXHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFkZFhtbFJlcHJlc2VudGF0aW9uVG9Sb290KG1lc3NhZ2U6IFBhcnNlZE1lc3NhZ2UsIHJvb3RFbGVtOiBFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3Qgc3RhY2sgPSBbe2VsZW1lbnQ6IHJvb3RFbGVtLCB0YWdOYW1lOiAncm9vdCd9XTtcclxuICAgICAgICBsZXQgaWQgPSAwO1xyXG4gICAgICAgIG1lc3NhZ2UucGFydHMoKS5mb3JFYWNoKChwYXJ0KSA9PiB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAocGFydC50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5URVhUOlxyXG4gICAgICAgICAgICAgICAgICAgIHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdLmVsZW1lbnQuYXBwZW5kQ2hpbGQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZlRleHRQYXJ0KDxQYXJzZWRNZXNzYWdlUGFydFRleHQ+IHBhcnQsIHJvb3RFbGVtKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5QTEFDRUhPTERFUjpcclxuICAgICAgICAgICAgICAgICAgICBzdGFja1tzdGFjay5sZW5ndGggLSAxXS5lbGVtZW50LmFwcGVuZENoaWxkKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZQbGFjZWhvbGRlclBhcnQoPFBhcnNlZE1lc3NhZ2VQYXJ0UGxhY2Vob2xkZXI+IHBhcnQsIHJvb3RFbGVtLCBpZCsrKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZS5JQ1VfTUVTU0FHRV9SRUY6XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhY2tbc3RhY2subGVuZ3RoIC0gMV0uZWxlbWVudC5hcHBlbmRDaGlsZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mSUNVTWVzc2FnZVJlZlBhcnQoPFBhcnNlZE1lc3NhZ2VQYXJ0SUNVTWVzc2FnZVJlZj4gcGFydCwgcm9vdEVsZW0pKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgUGFyc2VkTWVzc2FnZVBhcnRUeXBlLlNUQVJUX1RBRzpcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdUYWdFbGVtID0gdGhpcy5jcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mU3RhcnRUYWdQYXJ0KDxQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnPiBwYXJ0LCByb290RWxlbSwgaWQrKyk7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhY2tbc3RhY2subGVuZ3RoIC0gMV0uZWxlbWVudC5hcHBlbmRDaGlsZChuZXdUYWdFbGVtKTtcclxuICAgICAgICAgICAgICAgICAgICBzdGFjay5wdXNoKHtlbGVtZW50OiA8RWxlbWVudD4gbmV3VGFnRWxlbSwgdGFnTmFtZTogKDxQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnPiBwYXJ0KS50YWdOYW1lKCl9KTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgUGFyc2VkTWVzc2FnZVBhcnRUeXBlLkVORF9UQUc6XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xvc2VUYWdOYW1lID0gKDxQYXJzZWRNZXNzYWdlUGFydEVuZFRhZz4gcGFydCkudGFnTmFtZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFjay5sZW5ndGggPD0gMSB8fCBzdGFja1tzdGFjay5sZW5ndGggLSAxXS50YWdOYW1lICE9PSBjbG9zZVRhZ05hbWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gb29wcywgbm90IHdlbGwgZm9ybWVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndW5leHBlY3RlZCBjbG9zZSB0YWcgJyArIGNsb3NlVGFnTmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHN0YWNrLnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQYXJzZWRNZXNzYWdlUGFydFR5cGUuRU1QVFlfVEFHOlxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVtcHR5VGFnRWxlbSA9IHRoaXMuY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZkVtcHR5VGFnUGFydCg8UGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZz4gcGFydCwgcm9vdEVsZW0sIGlkKyspO1xyXG4gICAgICAgICAgICAgICAgICAgIHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdLmVsZW1lbnQuYXBwZW5kQ2hpbGQoZW1wdHlUYWdFbGVtKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChzdGFjay5sZW5ndGggIT09IDEpIHtcclxuICAgICAgICAgICAgLy8gb29wcywgbm90IHdlbGwgY2xvc2VkIHRhZ3NcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdtaXNzaW5nIGNsb3NlIHRhZyAnICsgc3RhY2tbc3RhY2subGVuZ3RoIC0gMV0udGFnTmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogdGhlIHhtbCB1c2VkIGZvciBzdGFydCB0YWcgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBSZXR1cm5zIGFuIGVtcHR5IHBjLUVsZW1lbnQuXHJcbiAgICAgKiBlLmcuIDxwYyBpZD1cIjBcIiBlcXVpdlN0YXJ0PVwiU1RBUlRfQk9MRF9URVhUXCIgZXF1aXZFbmQ9XCJDTE9TRV9CT0xEX1RFWFRcIiB0eXBlPVwiZm10XCIgZGlzcFN0YXJ0PVwiJmx0O2ImZ3Q7XCIgZGlzcEVuZD1cIiZsdDsvYiZndDtcIj5cclxuICAgICAqIFRleHQgY29udGVudCB3aWxsIGJlIGFkZGVkIGxhdGVyLlxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKiBAcGFyYW0gaWQgaWQgbnVtYmVyIGluIHhsaWZmMlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZlN0YXJ0VGFnUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydFN0YXJ0VGFnLCByb290RWxlbTogRWxlbWVudCwgaWQ6IG51bWJlcik6IE5vZGUge1xyXG4gICAgICAgIGNvbnN0IHRhZ01hcHBpbmcgPSBuZXcgVGFnTWFwcGluZygpO1xyXG4gICAgICAgIGNvbnN0IHBjRWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGMnKTtcclxuICAgICAgICBjb25zdCB0YWdOYW1lID0gcGFydC50YWdOYW1lKCk7XHJcbiAgICAgICAgY29uc3QgZXF1aXZTdGFydCA9IHRhZ01hcHBpbmcuZ2V0U3RhcnRUYWdQbGFjZWhvbGRlck5hbWUodGFnTmFtZSwgcGFydC5pZENvdW50ZXIoKSk7XHJcbiAgICAgICAgY29uc3QgZXF1aXZFbmQgPSB0YWdNYXBwaW5nLmdldENsb3NlVGFnUGxhY2Vob2xkZXJOYW1lKHRhZ05hbWUpO1xyXG4gICAgICAgIGNvbnN0IGRpc3BTdGFydCA9ICc8JyArIHRhZ05hbWUgKyAnPic7XHJcbiAgICAgICAgY29uc3QgZGlzcEVuZCA9ICc8LycgKyB0YWdOYW1lICsgJz4nO1xyXG4gICAgICAgIHBjRWxlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQudG9TdHJpbmcoMTApKTtcclxuICAgICAgICBwY0VsZW0uc2V0QXR0cmlidXRlKCdlcXVpdlN0YXJ0JywgZXF1aXZTdGFydCk7XHJcbiAgICAgICAgcGNFbGVtLnNldEF0dHJpYnV0ZSgnZXF1aXZFbmQnLCBlcXVpdkVuZCk7XHJcbiAgICAgICAgcGNFbGVtLnNldEF0dHJpYnV0ZSgndHlwZScsIHRoaXMuZ2V0VHlwZUZvclRhZyh0YWdOYW1lKSk7XHJcbiAgICAgICAgcGNFbGVtLnNldEF0dHJpYnV0ZSgnZGlzcFN0YXJ0JywgZGlzcFN0YXJ0KTtcclxuICAgICAgICBwY0VsZW0uc2V0QXR0cmlidXRlKCdkaXNwRW5kJywgZGlzcEVuZCk7XHJcbiAgICAgICAgcmV0dXJuIHBjRWxlbTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3IgZW5kIHRhZyBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIE5vdCB1c2VkIGhlcmUsIGJlY2F1c2UgY29udGVudCBpcyBjaGlsZCBvZiBzdGFydCB0YWcuXHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZFbmRUYWdQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0RW5kVGFnLCByb290RWxlbTogRWxlbWVudCk6IE5vZGUge1xyXG4gICAgICAgIC8vIG5vdCB1c2VkXHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGVtcHR5IHRhZyBpbiB0aGUgbWVzc2FnZS5cclxuICAgICAqIFJldHVybnMgYW4gZW1wdHkgcGgtRWxlbWVudC5cclxuICAgICAqIGUuZy4gPHBoIGlkPVwiM1wiIGVxdWl2PVwiVEFHX0lNR1wiIHR5cGU9XCJpbWFnZVwiIGRpc3A9XCImbHQ7aW1nLz5cIi8+XHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqIEBwYXJhbSBpZCBpZCBudW1iZXIgaW4geGxpZmYyXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjcmVhdGVYbWxSZXByZXNlbnRhdGlvbk9mRW1wdHlUYWdQYXJ0KHBhcnQ6IFBhcnNlZE1lc3NhZ2VQYXJ0RW1wdHlUYWcsIHJvb3RFbGVtOiBFbGVtZW50LCBpZDogbnVtYmVyKTogTm9kZSB7XHJcbiAgICAgICAgY29uc3QgdGFnTWFwcGluZyA9IG5ldyBUYWdNYXBwaW5nKCk7XHJcbiAgICAgICAgY29uc3QgcGhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwaCcpO1xyXG4gICAgICAgIGNvbnN0IHRhZ05hbWUgPSBwYXJ0LnRhZ05hbWUoKTtcclxuICAgICAgICBjb25zdCBlcXVpdiA9IHRhZ01hcHBpbmcuZ2V0RW1wdHlUYWdQbGFjZWhvbGRlck5hbWUodGFnTmFtZSwgcGFydC5pZENvdW50ZXIoKSk7XHJcbiAgICAgICAgY29uc3QgZGlzcCA9ICc8JyArIHRhZ05hbWUgKyAnLz4nO1xyXG4gICAgICAgIHBoRWxlbS5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQudG9TdHJpbmcoMTApKTtcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCdlcXVpdicsIGVxdWl2KTtcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCd0eXBlJywgdGhpcy5nZXRUeXBlRm9yVGFnKHRhZ05hbWUpKTtcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCdkaXNwJywgZGlzcCk7XHJcbiAgICAgICAgcmV0dXJuIHBoRWxlbTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldFR5cGVGb3JUYWcodGFnOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHN3aXRjaCAodGFnLnRvTG93ZXJDYXNlKCkpIHtcclxuICAgICAgICAgICAgY2FzZSAnYnInOlxyXG4gICAgICAgICAgICBjYXNlICdiJzpcclxuICAgICAgICAgICAgY2FzZSAnaSc6XHJcbiAgICAgICAgICAgIGNhc2UgJ3UnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdmbXQnO1xyXG4gICAgICAgICAgICBjYXNlICdpbWcnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdpbWFnZSc7XHJcbiAgICAgICAgICAgIGNhc2UgJ2EnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdsaW5rJztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHJldHVybiAnb3RoZXInO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB4bWwgdXNlZCBmb3IgcGxhY2Vob2xkZXIgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBSZXR1cm5zIGUuZy4gPHBoIGlkPVwiMVwiIGVxdWl2PVwiSU5URVJQT0xBVElPTl8xXCIgZGlzcD1cInt7dG90YWwoKX19XCIvPlxyXG4gICAgICogQHBhcmFtIHBhcnQgcGFydFxyXG4gICAgICogQHBhcmFtIHJvb3RFbGVtIHJvb3RFbGVtXHJcbiAgICAgKiBAcGFyYW0gaWQgaWQgbnVtYmVyIGluIHhsaWZmMlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlWG1sUmVwcmVzZW50YXRpb25PZlBsYWNlaG9sZGVyUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydFBsYWNlaG9sZGVyLCByb290RWxlbTogRWxlbWVudCwgaWQ6IG51bWJlcik6IE5vZGUge1xyXG4gICAgICAgIGNvbnN0IHBoRWxlbSA9IHJvb3RFbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGgnKTtcclxuICAgICAgICBsZXQgZXF1aXZBdHRyaWIgPSAnSU5URVJQT0xBVElPTic7XHJcbiAgICAgICAgaWYgKHBhcnQuaW5kZXgoKSA+IDApIHtcclxuICAgICAgICAgICAgZXF1aXZBdHRyaWIgPSAnSU5URVJQT0xBVElPTl8nICsgcGFydC5pbmRleCgpLnRvU3RyaW5nKDEwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnaWQnLCBpZC50b1N0cmluZygxMCkpO1xyXG4gICAgICAgIHBoRWxlbS5zZXRBdHRyaWJ1dGUoJ2VxdWl2JywgZXF1aXZBdHRyaWIpO1xyXG4gICAgICAgIGNvbnN0IGRpc3AgPSBwYXJ0LmRpc3AoKTtcclxuICAgICAgICBpZiAoZGlzcCkge1xyXG4gICAgICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCdkaXNwJywgZGlzcCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwaEVsZW07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgeG1sIHVzZWQgZm9yIGljdSBtZXNzYWdlIHJlZnMgaW4gdGhlIG1lc3NhZ2UuXHJcbiAgICAgKiBAcGFyYW0gcGFydCBwYXJ0XHJcbiAgICAgKiBAcGFyYW0gcm9vdEVsZW0gcm9vdEVsZW1cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZVhtbFJlcHJlc2VudGF0aW9uT2ZJQ1VNZXNzYWdlUmVmUGFydChwYXJ0OiBQYXJzZWRNZXNzYWdlUGFydElDVU1lc3NhZ2VSZWYsIHJvb3RFbGVtOiBFbGVtZW50KTogTm9kZSB7XHJcbiAgICAgICAgY29uc3QgcGhFbGVtID0gcm9vdEVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwaCcpO1xyXG4gICAgICAgIGxldCBlcXVpdkF0dHJpYiA9ICdJQ1UnO1xyXG4gICAgICAgIGlmIChwYXJ0LmluZGV4KCkgPiAwKSB7XHJcbiAgICAgICAgICAgIGVxdWl2QXR0cmliID0gJ0lDVV8nICsgcGFydC5pbmRleCgpLnRvU3RyaW5nKDEwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnaWQnLCBwYXJ0LmluZGV4KCkudG9TdHJpbmcoMTApKTtcclxuICAgICAgICBwaEVsZW0uc2V0QXR0cmlidXRlKCdlcXVpdicsIGVxdWl2QXR0cmliKTtcclxuICAgICAgICBjb25zdCBkaXNwID0gcGFydC5kaXNwKCk7XHJcbiAgICAgICAgaWYgKGRpc3ApIHtcclxuICAgICAgICAgICAgcGhFbGVtLnNldEF0dHJpYnV0ZSgnZGlzcCcsIGRpc3ApO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGhFbGVtO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCJpbXBvcnQge1NUQVRFX05FVywgU1RBVEVfVFJBTlNMQVRFRCwgU1RBVEVfRklOQUx9IGZyb20gJy4uL2FwaS9jb25zdGFudHMnO1xyXG5pbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZX0gZnJvbSAnLi4vYXBpL2ktdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZSc7XHJcbmltcG9ydCB7SU5vcm1hbGl6ZWRNZXNzYWdlfSBmcm9tICcuLi9hcGkvaS1ub3JtYWxpemVkLW1lc3NhZ2UnO1xyXG5pbXBvcnQge0lUcmFuc1VuaXR9IGZyb20gJy4uL2FwaS9pLXRyYW5zLXVuaXQnO1xyXG5pbXBvcnQge0lOb3RlfSBmcm9tICcuLi9hcGkvaS1ub3RlJztcclxuaW1wb3J0IHtET01VdGlsaXRpZXN9IGZyb20gJy4vZG9tLXV0aWxpdGllcyc7XHJcbmltcG9ydCB7UGFyc2VkTWVzc2FnZX0gZnJvbSAnLi9wYXJzZWQtbWVzc2FnZSc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc1VuaXR9IGZyb20gJy4vYWJzdHJhY3QtdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7WGxpZmYyTWVzc2FnZVBhcnNlcn0gZnJvbSAnLi94bGlmZjItbWVzc2FnZS1wYXJzZXInO1xyXG5pbXBvcnQge0Fic3RyYWN0TWVzc2FnZVBhcnNlcn0gZnJvbSAnLi9hYnN0cmFjdC1tZXNzYWdlLXBhcnNlcic7XHJcbmltcG9ydCB7aXNOdWxsT3JVbmRlZmluZWR9IGZyb20gJ3V0aWwnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMDQuMDUuMjAxNy5cclxuICogQSBUcmFuc2xhdGlvbiBVbml0IGluIGFuIFhMSUZGIDIuMCBmaWxlLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBYbGlmZjJUcmFuc1VuaXQgZXh0ZW5kcyBBYnN0cmFjdFRyYW5zVW5pdCAgaW1wbGVtZW50cyBJVHJhbnNVbml0IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihfZWxlbWVudDogRWxlbWVudCwgX2lkOiBzdHJpbmcsIF90cmFuc2xhdGlvbk1lc3NhZ2VzRmlsZTogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKSB7XHJcbiAgICAgICAgc3VwZXIoX2VsZW1lbnQsIF9pZCwgX3RyYW5zbGF0aW9uTWVzc2FnZXNGaWxlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc291cmNlQ29udGVudCgpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHNvdXJjZUVsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdzb3VyY2UnKTtcclxuICAgICAgICByZXR1cm4gRE9NVXRpbGl0aWVzLmdldFhNTENvbnRlbnQoc291cmNlRWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgbmV3IHNvdXJjZSBjb250ZW50IGluIHRoZSB0cmFuc3VuaXQuXHJcbiAgICAgKiBOb3JtYWxseSwgdGhpcyBpcyBkb25lIGJ5IG5nLWV4dHJhY3QuXHJcbiAgICAgKiBNZXRob2Qgb25seSBleGlzdHMgdG8gYWxsb3cgeGxpZmZtZXJnZSB0byBtZXJnZSBtaXNzaW5nIGNoYW5nZWQgc291cmNlIGNvbnRlbnQuXHJcbiAgICAgKiBAcGFyYW0gbmV3Q29udGVudCB0aGUgbmV3IGNvbnRlbnQuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXRTb3VyY2VDb250ZW50KG5ld0NvbnRlbnQ6IHN0cmluZykge1xyXG4gICAgICAgIGxldCBzb3VyY2UgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdzb3VyY2UnKTtcclxuICAgICAgICBpZiAoIXNvdXJjZSkge1xyXG4gICAgICAgICAgICAvLyBzaG91bGQgbm90IGhhcHBlbiwgdGhlcmUgYWx3YXlzIGhhcyB0byBiZSBhIHNvdXJjZSwgYnV0IHdobyBrbm93cy4uXHJcbiAgICAgICAgICAgIGNvbnN0IHNlZ21lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdzZWdtZW50Jyk7XHJcbiAgICAgICAgICAgIHNvdXJjZSA9IHNlZ21lbnQucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc291cmNlJykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudChzb3VyY2UsIG5ld0NvbnRlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGEgcGFyc2VyIHVzZWQgZm9yIG5vcm1hbGl6ZWQgbWVzc2FnZXMuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBtZXNzYWdlUGFyc2VyKCk6IEFic3RyYWN0TWVzc2FnZVBhcnNlciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBYbGlmZjJNZXNzYWdlUGFyc2VyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgb3JpZ2luYWwgdGV4dCB2YWx1ZSwgdGhhdCBpcyB0byBiZSB0cmFuc2xhdGVkLCBhcyBub3JtYWxpemVkIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjcmVhdGVTb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpOiBQYXJzZWRNZXNzYWdlIHtcclxuICAgICAgICBjb25zdCBzb3VyY2VFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9lbGVtZW50LCAnc291cmNlJyk7XHJcbiAgICAgICAgaWYgKHNvdXJjZUVsZW1lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZVBhcnNlcigpLmNyZWF0ZU5vcm1hbGl6ZWRNZXNzYWdlRnJvbVhNTChzb3VyY2VFbGVtZW50LCBudWxsKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgdHJhbnNsYXRlZCB2YWx1ZSAoY29udGFpbmluZyBhbGwgbWFya3VwLCBkZXBlbmRzIG9uIHRoZSBjb25jcmV0ZSBmb3JtYXQgdXNlZCkuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0YXJnZXRDb250ZW50KCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3RhcmdldCcpO1xyXG4gICAgICAgIHJldHVybiBET01VdGlsaXRpZXMuZ2V0WE1MQ29udGVudCh0YXJnZXRFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB0cmFuc2xhdGVkIHZhbHVlLCBidXQgYWxsIHBsYWNlaG9sZGVycyBhcmUgcmVwbGFjZWQgd2l0aCB7e259fSAoc3RhcnRpbmcgYXQgMClcclxuICAgICAqIGFuZCBhbGwgZW1iZWRkZWQgaHRtbCBpcyByZXBsYWNlZCBieSBkaXJlY3QgaHRtbCBtYXJrdXAuXHJcbiAgICAgKi9cclxuICAgIHRhcmdldENvbnRlbnROb3JtYWxpemVkKCk6IElOb3JtYWxpemVkTWVzc2FnZSB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3RhcmdldCcpO1xyXG4gICAgICAgIHJldHVybiBuZXcgWGxpZmYyTWVzc2FnZVBhcnNlcigpLmNyZWF0ZU5vcm1hbGl6ZWRNZXNzYWdlRnJvbVhNTCh0YXJnZXRFbGVtZW50LCB0aGlzLnNvdXJjZUNvbnRlbnROb3JtYWxpemVkKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU3RhdGUgb2YgdGhlIHRyYW5zbGF0aW9uIGFzIHN0b3JlZCBpbiB0aGUgeG1sLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbmF0aXZlVGFyZ2V0U3RhdGUoKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBzZWdtZW50RWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3NlZ21lbnQnKTtcclxuICAgICAgICBpZiAoc2VnbWVudEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHNlZ21lbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgnc3RhdGUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBzZXQgc3RhdGUgaW4geG1sLlxyXG4gICAgICogQHBhcmFtIG5hdGl2ZVN0YXRlIG5hdGl2ZVN0YXRlXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBzZXROYXRpdmVUYXJnZXRTdGF0ZShuYXRpdmVTdGF0ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3Qgc2VnbWVudEVsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdzZWdtZW50Jyk7XHJcbiAgICAgICAgaWYgKHNlZ21lbnRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHNlZ21lbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnc3RhdGUnLCBuYXRpdmVTdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTWFwIGFuIGFic3RyYWN0IHN0YXRlIChuZXcsIHRyYW5zbGF0ZWQsIGZpbmFsKSB0byBhIGNvbmNyZXRlIHN0YXRlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIFJldHVybnMgdGhlIHN0YXRlIHRvIGJlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIEBwYXJhbSBzdGF0ZSBvbmUgb2YgQ29uc3RhbnRzLlNUQVRFLi4uXHJcbiAgICAgKiBAcmV0dXJucyBhIG5hdGl2ZSBzdGF0ZSAoZGVwZW5kcyBvbiBjb25jcmV0ZSBmb3JtYXQpXHJcbiAgICAgKiBAdGhyb3dzIGVycm9yLCBpZiBzdGF0ZSBpcyBpbnZhbGlkLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbWFwU3RhdGVUb05hdGl2ZVN0YXRlKHN0YXRlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHN3aXRjaCAoIHN0YXRlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgU1RBVEVfTkVXOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICdpbml0aWFsJztcclxuICAgICAgICAgICAgY2FzZSBTVEFURV9UUkFOU0xBVEVEOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuICd0cmFuc2xhdGVkJztcclxuICAgICAgICAgICAgY2FzZSBTVEFURV9GSU5BTDpcclxuICAgICAgICAgICAgICAgIHJldHVybiAnZmluYWwnO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bmtub3duIHN0YXRlICcgKyAgc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE1hcCBhIG5hdGl2ZSBzdGF0ZSAoZm91bmQgaW4gdGhlIGRvY3VtZW50KSB0byBhbiBhYnN0cmFjdCBzdGF0ZSAobmV3LCB0cmFuc2xhdGVkLCBmaW5hbCkuXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBhYnN0cmFjdCBzdGF0ZS5cclxuICAgICAqIEBwYXJhbSBuYXRpdmVTdGF0ZSBuYXRpdmVTdGF0ZVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbWFwTmF0aXZlU3RhdGVUb1N0YXRlKG5hdGl2ZVN0YXRlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHN3aXRjaCAoIG5hdGl2ZVN0YXRlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ2luaXRpYWwnOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFNUQVRFX05FVztcclxuICAgICAgICAgICAgY2FzZSAndHJhbnNsYXRlZCc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfVFJBTlNMQVRFRDtcclxuICAgICAgICAgICAgY2FzZSAncmV2aWV3ZWQnOiAvLyBzYW1lIGFzIHRyYW5zbGF0ZWRcclxuICAgICAgICAgICAgICAgIHJldHVybiBTVEFURV9UUkFOU0xBVEVEO1xyXG4gICAgICAgICAgICBjYXNlICdmaW5hbCc6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfRklOQUw7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gU1RBVEVfTkVXO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFsbCB0aGUgc291cmNlIGVsZW1lbnRzIGluIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICogVGhlIHNvdXJjZSBlbGVtZW50IGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaW5hbCB0ZW1wbGF0ZS5cclxuICAgICAqIEl0IGNvbnRhaW5zIHRoZSBuYW1lIG9mIHRoZSB0ZW1wbGF0ZSBmaWxlIGFuZCBhIGxpbmUgbnVtYmVyIHdpdGggdGhlIHBvc2l0aW9uIGluc2lkZSB0aGUgdGVtcGxhdGUuXHJcbiAgICAgKiBJdCBpcyBqdXN0IGEgaGVscCBmb3IgdHJhbnNsYXRvcnMgdG8gZmluZCB0aGUgY29udGV4dCBmb3IgdGhlIHRyYW5zbGF0aW9uLlxyXG4gICAgICogVGhpcyBpcyBzZXQgd2hlbiB1c2luZyBBbmd1bGFyIDQuMCBvciBncmVhdGVyLlxyXG4gICAgICogT3RoZXJ3aXNlIGl0IGp1c3QgcmV0dXJucyBhbiBlbXB0eSBhcnJheS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNvdXJjZVJlZmVyZW5jZXMoKToge3NvdXJjZWZpbGU6IHN0cmluZywgbGluZW51bWJlcjogbnVtYmVyfVtdIHtcclxuICAgICAgICAvLyBTb3VyY2UgaXMgZm91bmQgYXMgPGZpbGU+OjxsaW5lPiBpbiA8bm90ZSBjYXRlZ29yeT1cImxvY2F0aW9uXCI+Li4uXHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbnRzID0gdGhpcy5fZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbm90ZScpO1xyXG4gICAgICAgIGNvbnN0IHNvdXJjZVJlZnM6IHsgc291cmNlZmlsZTogc3RyaW5nLCBsaW5lbnVtYmVyOiBudW1iZXIgfVtdID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub3RlRWxlbWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3Qgbm90ZUVsZW0gPSBub3RlRWxlbWVudHMuaXRlbShpKTtcclxuICAgICAgICAgICAgaWYgKG5vdGVFbGVtLmdldEF0dHJpYnV0ZSgnY2F0ZWdvcnknKSA9PT0gJ2xvY2F0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc291cmNlQW5kUG9zOiBzdHJpbmcgPSBET01VdGlsaXRpZXMuZ2V0UENEQVRBKG5vdGVFbGVtKTtcclxuICAgICAgICAgICAgICAgIHNvdXJjZVJlZnMucHVzaCh0aGlzLnBhcnNlU291cmNlQW5kUG9zKHNvdXJjZUFuZFBvcykpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzb3VyY2VSZWZzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2VzIHNvbWV0aGluZyBsaWtlICdjOlxceHh4OjcnIGFuZCByZXR1cm5zIHNvdXJjZSBhbmQgbGluZW51bWJlci5cclxuICAgICAqIEBwYXJhbSBzb3VyY2VBbmRQb3Mgc29tZXRoaW5nIGxpa2UgJ2M6XFx4eHg6NycsIGxhc3QgY29sb24gaXMgdGhlIHNlcGFyYXRvclxyXG4gICAgICogQHJldHVybiBzb3VyY2UgYW5kIGxpbmUgbnVtYmVyXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgcGFyc2VTb3VyY2VBbmRQb3Moc291cmNlQW5kUG9zOiBzdHJpbmcpOiB7IHNvdXJjZWZpbGU6IHN0cmluZywgbGluZW51bWJlciB9IHtcclxuICAgICAgICBjb25zdCBpbmRleCA9IHNvdXJjZUFuZFBvcy5sYXN0SW5kZXhPZignOicpO1xyXG4gICAgICAgIGlmIChpbmRleCA8IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHNvdXJjZWZpbGU6IHNvdXJjZUFuZFBvcyxcclxuICAgICAgICAgICAgICAgIGxpbmVudW1iZXI6IDBcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgc291cmNlZmlsZTogc291cmNlQW5kUG9zLnN1YnN0cmluZygwLCBpbmRleCksXHJcbiAgICAgICAgICAgICAgICBsaW5lbnVtYmVyOiB0aGlzLnBhcnNlTGluZU51bWJlcihzb3VyY2VBbmRQb3Muc3Vic3RyaW5nKGluZGV4ICsgMSkpXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcGFyc2VMaW5lTnVtYmVyKGxpbmVOdW1iZXJTdHJpbmc6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIE51bWJlci5wYXJzZUludChsaW5lTnVtYmVyU3RyaW5nLCAxMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXQgc291cmNlIHJlZiBlbGVtZW50cyBpbiB0aGUgdHJhbnN1bml0LlxyXG4gICAgICogTm9ybWFsbHksIHRoaXMgaXMgZG9uZSBieSBuZy1leHRyYWN0LlxyXG4gICAgICogTWV0aG9kIG9ubHkgZXhpc3RzIHRvIGFsbG93IHhsaWZmbWVyZ2UgdG8gbWVyZ2UgbWlzc2luZyBzb3VyY2UgcmVmcy5cclxuICAgICAqIEBwYXJhbSBzb3VyY2VSZWZzIHRoZSBzb3VyY2VyZWZzIHRvIHNldC4gT2xkIG9uZXMgYXJlIHJlbW92ZWQuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXRTb3VyY2VSZWZlcmVuY2VzKHNvdXJjZVJlZnM6IHtzb3VyY2VmaWxlOiBzdHJpbmcsIGxpbmVudW1iZXI6IG51bWJlcn1bXSkge1xyXG4gICAgICAgIHRoaXMucmVtb3ZlQWxsU291cmNlUmVmZXJlbmNlcygpO1xyXG4gICAgICAgIGxldCBub3Rlc0VsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdub3RlcycpO1xyXG4gICAgICAgIGlmIChzb3VyY2VSZWZzLmxlbmd0aCA9PT0gMCAmJiAhaXNOdWxsT3JVbmRlZmluZWQobm90ZXNFbGVtZW50KSAmJiBub3Rlc0VsZW1lbnQuY2hpbGROb2Rlcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgLy8gcmVtb3ZlIGVtcHR5IG5vdGVzIGVsZW1lbnRcclxuICAgICAgICAgICAgbm90ZXNFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm90ZXNFbGVtZW50KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQobm90ZXNFbGVtZW50KSkge1xyXG4gICAgICAgICAgICBub3Rlc0VsZW1lbnQgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbm90ZXMnKTtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5pbnNlcnRCZWZvcmUobm90ZXNFbGVtZW50LCB0aGlzLl9lbGVtZW50LmNoaWxkTm9kZXMuaXRlbSgwKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNvdXJjZVJlZnMuZm9yRWFjaCgocmVmKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vdGUgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbm90ZScpO1xyXG4gICAgICAgICAgICBub3RlLnNldEF0dHJpYnV0ZSgnY2F0ZWdvcnknLCAnbG9jYXRpb24nKTtcclxuICAgICAgICAgICAgbm90ZS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocmVmLnNvdXJjZWZpbGUgKyAnOicgKyByZWYubGluZW51bWJlci50b1N0cmluZygxMCkpKTtcclxuICAgICAgICAgICAgbm90ZXNFbGVtZW50LmFwcGVuZENoaWxkKG5vdGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcmVtb3ZlQWxsU291cmNlUmVmZXJlbmNlcygpIHtcclxuICAgICAgICBjb25zdCBub3RlRWxlbWVudHMgPSB0aGlzLl9lbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdub3RlJyk7XHJcbiAgICAgICAgY29uc3QgdG9CZVJlbW92ZWQgPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vdGVFbGVtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBlbGVtID0gbm90ZUVsZW1lbnRzLml0ZW0oaSk7XHJcbiAgICAgICAgICAgIGlmIChlbGVtLmdldEF0dHJpYnV0ZSgnY2F0ZWdvcnknKSA9PT0gJ2xvY2F0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgdG9CZVJlbW92ZWQucHVzaChlbGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0b0JlUmVtb3ZlZC5mb3JFYWNoKChlbGVtKSA9PiB7ZWxlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsZW0pOyB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBkZXNjcmlwdGlvbiBzZXQgaW4gdGhlIHRlbXBsYXRlIGFzIHZhbHVlIG9mIHRoZSBpMThuLWF0dHJpYnV0ZS5cclxuICAgICAqIGUuZy4gaTE4bj1cIm15ZGVzY3JpcHRpb25cIi5cclxuICAgICAqIEluIHhsaWZmIDIuMCB0aGlzIGlzIHN0b3JlZCBhcyBhIG5vdGUgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZSBjYXRlZ29yeT1cImRlc2NyaXB0aW9uXCIuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBkZXNjcmlwdGlvbigpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IG5vdGVFbGVtID0gdGhpcy5maW5kTm90ZUVsZW1lbnRXaXRoQ2F0ZWdvcnlBdHRyaWJ1dGUoJ2Rlc2NyaXB0aW9uJyk7XHJcbiAgICAgICAgaWYgKG5vdGVFbGVtKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBET01VdGlsaXRpZXMuZ2V0UENEQVRBKG5vdGVFbGVtKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGFuZ2UgZGVzY3JpcHRpb24gcHJvcGVydHkgb2YgdHJhbnMtdW5pdC5cclxuICAgICAqIEBwYXJhbSBkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0RGVzY3JpcHRpb24oZGVzY3JpcHRpb246IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IG5vdGVFbGVtID0gdGhpcy5maW5kTm90ZUVsZW1lbnRXaXRoQ2F0ZWdvcnlBdHRyaWJ1dGUoJ2Rlc2NyaXB0aW9uJyk7XHJcbiAgICAgICAgaWYgKGRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZChub3RlRWxlbSkpIHtcclxuICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBpdFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVOb3RlRWxlbWVudFdpdGhDYXRlZ29yeUF0dHJpYnV0ZSgnZGVzY3JpcHRpb24nLCBkZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudChub3RlRWxlbSwgZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChub3RlRWxlbSkpIHtcclxuICAgICAgICAgICAgICAgIC8vIHJlbW92ZSBub2RlXHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZU5vdGVFbGVtZW50V2l0aENhdGVnb3J5QXR0cmlidXRlKCdkZXNjcmlwdGlvbicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRmluZCBhIG5vdGUgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZSBjYXRlZ29yeT0nPGF0dHJWYWx1ZT4nXHJcbiAgICAgKiBAcGFyYW0gYXR0clZhbHVlIHZhbHVlIG9mIGNhdGVnb3J5IGF0dHJpYnV0ZVxyXG4gICAgICogQHJldHVybiBlbGVtZW50IG9yIG51bGwgaXMgYWJzZW50XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZmluZE5vdGVFbGVtZW50V2l0aENhdGVnb3J5QXR0cmlidXRlKGF0dHJWYWx1ZTogc3RyaW5nKTogRWxlbWVudCB7XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbnRzID0gdGhpcy5fZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbm90ZScpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm90ZUVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vdGVFbGVtID0gbm90ZUVsZW1lbnRzLml0ZW0oaSk7XHJcbiAgICAgICAgICAgIGlmIChub3RlRWxlbS5nZXRBdHRyaWJ1dGUoJ2NhdGVnb3J5JykgPT09IGF0dHJWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vdGVFbGVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGFsbCBub3RlIGVsZW1lbnRzIHdoZXJlIGZyb20gYXR0cmlidXRlIGlzIG5vdCBkZXNjcmlwdGlvbiBvciBtZWFuaW5nXHJcbiAgICAgKiBAcmV0dXJuIGVsZW1lbnRzXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZmluZEFsbEFkZGl0aW9uYWxOb3RlRWxlbWVudHMoKTogRWxlbWVudFtdIHtcclxuICAgICAgICBjb25zdCBub3RlRWxlbWVudHMgPSB0aGlzLl9lbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdub3RlJyk7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0OiBFbGVtZW50W10gPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vdGVFbGVtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBub3RlRWxlbSA9IG5vdGVFbGVtZW50cy5pdGVtKGkpO1xyXG4gICAgICAgICAgICBjb25zdCBmcm9tQXR0cmlidXRlID0gbm90ZUVsZW0uZ2V0QXR0cmlidXRlKCdjYXRlZ29yeScpO1xyXG4gICAgICAgICAgICBpZiAoZnJvbUF0dHJpYnV0ZSAhPT0gJ2Rlc2NyaXB0aW9uJyAmJiBmcm9tQXR0cmlidXRlICE9PSAnbWVhbmluZycpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG5vdGVFbGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgbmV3IG5vdGUgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZSBmcm9tPSc8YXR0clZhbHVlPidcclxuICAgICAqIEBwYXJhbSBhdHRyVmFsdWUgY2F0ZWdvcnkgYXR0cmlidXRlIHZhbHVlXHJcbiAgICAgKiBAcGFyYW0gY29udGVudCBjb250ZW50IG9mIG5vdGUgZWxlbWVudFxyXG4gICAgICogQHJldHVybiB0aGUgbmV3IGNyZWF0ZWQgZWxlbWVudFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGNyZWF0ZU5vdGVFbGVtZW50V2l0aENhdGVnb3J5QXR0cmlidXRlKGF0dHJWYWx1ZTogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiBFbGVtZW50IHtcclxuICAgICAgICBsZXQgbm90ZXNFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9lbGVtZW50LCAnbm90ZXMnKTtcclxuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQobm90ZXNFbGVtZW50KSkge1xyXG4gICAgICAgICAgICAvLyBjcmVhdGUgaXRcclxuICAgICAgICAgICAgbm90ZXNFbGVtZW50ID0gdGhpcy5fZWxlbWVudC5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25vdGVzJyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQuYXBwZW5kQ2hpbGQobm90ZXNFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbnQgPSB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbm90ZScpO1xyXG4gICAgICAgIGlmIChhdHRyVmFsdWUpIHtcclxuICAgICAgICAgICAgbm90ZUVsZW1lbnQuc2V0QXR0cmlidXRlKCdjYXRlZ29yeScsIGF0dHJWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjb250ZW50KSB7XHJcbiAgICAgICAgICAgIERPTVV0aWxpdGllcy5yZXBsYWNlQ29udGVudFdpdGhYTUxDb250ZW50KG5vdGVFbGVtZW50LCBjb250ZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbm90ZXNFbGVtZW50LmFwcGVuZENoaWxkKG5vdGVFbGVtZW50KTtcclxuICAgICAgICByZXR1cm4gbm90ZUVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSByZW1vdmVOb3Rlc0VsZW1lbnRJZkVtcHR5KCkge1xyXG4gICAgICAgIGNvbnN0IG5vdGVzRWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ25vdGVzJyk7XHJcbiAgICAgICAgaWYgKG5vdGVzRWxlbWVudCkge1xyXG4gICAgICAgICAgICBjb25zdCBjaGlsZE5vdGUgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdub3RlJyk7XHJcbiAgICAgICAgICAgIGlmICghY2hpbGROb3RlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgbm90ZXMgZWxlbWVudFxyXG4gICAgICAgICAgICAgICAgbm90ZXNFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm90ZXNFbGVtZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSBub3RlIGVsZW1lbnQgd2l0aCBhdHRyaWJ1dGUgZnJvbT0nPGF0dHJWYWx1ZT4nXHJcbiAgICAgKiBAcGFyYW0gYXR0clZhbHVlIGF0dHJWYWx1ZVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlbW92ZU5vdGVFbGVtZW50V2l0aENhdGVnb3J5QXR0cmlidXRlKGF0dHJWYWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbnQgPSB0aGlzLmZpbmROb3RlRWxlbWVudFdpdGhDYXRlZ29yeUF0dHJpYnV0ZShhdHRyVmFsdWUpO1xyXG4gICAgICAgIGlmIChub3RlRWxlbWVudCkge1xyXG4gICAgICAgICAgICBub3RlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vdGVFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5yZW1vdmVOb3Rlc0VsZW1lbnRJZkVtcHR5KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmUgYWxsIG5vdGUgZWxlbWVudHMgd2hlcmUgYXR0cmlidXRlIFwiZnJvbVwiIGlzIG5vdCBkZXNjcmlwdGlvbiBvciBtZWFuaW5nLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHJlbW92ZUFsbEFkZGl0aW9uYWxOb3RlRWxlbWVudHMoKSB7XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbnRzID0gdGhpcy5maW5kQWxsQWRkaXRpb25hbE5vdGVFbGVtZW50cygpO1xyXG4gICAgICAgIG5vdGVFbGVtZW50cy5mb3JFYWNoKChub3RlRWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICBub3RlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vdGVFbGVtZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnJlbW92ZU5vdGVzRWxlbWVudElmRW1wdHkoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoZSBtZWFuaW5nIChpbnRlbnQpIHNldCBpbiB0aGUgdGVtcGxhdGUgYXMgdmFsdWUgb2YgdGhlIGkxOG4tYXR0cmlidXRlLlxyXG4gICAgICogVGhpcyBpcyB0aGUgcGFydCBpbiBmcm9udCBvZiB0aGUgfCBzeW1ib2wuXHJcbiAgICAgKiBlLmcuIGkxOG49XCJtZWFuaW5nfG15ZGVzY3JpcHRpb25cIi5cclxuICAgICAqIEluIHhsaWZmIDIuMCB0aGlzIGlzIHN0b3JlZCBhcyBhIG5vdGUgZWxlbWVudCB3aXRoIGF0dHJpYnV0ZSBjYXRlZ29yeT1cIm1lYW5pbmdcIi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIG1lYW5pbmcoKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBub3RlRWxlbSA9IHRoaXMuZmluZE5vdGVFbGVtZW50V2l0aENhdGVnb3J5QXR0cmlidXRlKCdtZWFuaW5nJyk7XHJcbiAgICAgICAgaWYgKG5vdGVFbGVtKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBET01VdGlsaXRpZXMuZ2V0UENEQVRBKG5vdGVFbGVtKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGFuZ2UgbWVhbmluZyBwcm9wZXJ0eSBvZiB0cmFucy11bml0LlxyXG4gICAgICogQHBhcmFtIG1lYW5pbmcgbWVhbmluZ1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0TWVhbmluZyhtZWFuaW5nOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBub3RlRWxlbSA9IHRoaXMuZmluZE5vdGVFbGVtZW50V2l0aENhdGVnb3J5QXR0cmlidXRlKCdtZWFuaW5nJyk7XHJcbiAgICAgICAgaWYgKG1lYW5pbmcpIHtcclxuICAgICAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKG5vdGVFbGVtKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gY3JlYXRlIGl0XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZU5vdGVFbGVtZW50V2l0aENhdGVnb3J5QXR0cmlidXRlKCdtZWFuaW5nJywgbWVhbmluZyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudChub3RlRWxlbSwgbWVhbmluZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKG5vdGVFbGVtKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gcmVtb3ZlIG5vZGVcclxuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlTm90ZUVsZW1lbnRXaXRoQ2F0ZWdvcnlBdHRyaWJ1dGUoJ21lYW5pbmcnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCBhbGwgbm90ZXMgb2YgdGhlIHRyYW5zLXVuaXQuXHJcbiAgICAgKiBOb3RlcyBhcmUgcmVtYXJrcyBtYWRlIGJ5IGEgdHJhbnNsYXRvci5cclxuICAgICAqIChkZXNjcmlwdGlvbiBhbmQgbWVhbmluZyBhcmUgbm90IGluY2x1ZGVkIGhlcmUhKVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbm90ZXMoKTogSU5vdGVbXSB7XHJcbiAgICAgICAgY29uc3Qgbm90ZUVsZW1lbXRzOiBFbGVtZW50W10gPSB0aGlzLmZpbmRBbGxBZGRpdGlvbmFsTm90ZUVsZW1lbnRzKCk7XHJcbiAgICAgICAgcmV0dXJuIG5vdGVFbGVtZW10cy5tYXAoZWxlbSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBmcm9tOiBlbGVtLmdldEF0dHJpYnV0ZSgnY2F0ZWdvcnknKSxcclxuICAgICAgICAgICAgICAgIHRleHQ6IERPTVV0aWxpdGllcy5nZXRQQ0RBVEEoZWxlbSlcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBzZXR0aW5nIG9mIG5vdGVzIGlzIHN1cHBvcnRlZC5cclxuICAgICAqIElmIG5vdCwgc2V0Tm90ZXMgd2lsbCBkbyBub3RoaW5nLlxyXG4gICAgICogeHRiIGRvZXMgbm90IHN1cHBvcnQgdGhpcywgYWxsIG90aGVyIGZvcm1hdHMgZG8uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdXBwb3J0c1NldE5vdGVzKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkIG5vdGVzIHRvIHRyYW5zIHVuaXQuXHJcbiAgICAgKiBAcGFyYW0gbmV3Tm90ZXMgdGhlIG5vdGVzIHRvIGFkZC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldE5vdGVzKG5ld05vdGVzOiBJTm90ZVtdKSB7XHJcbiAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChuZXdOb3RlcykpIHtcclxuICAgICAgICAgICAgdGhpcy5jaGVja05vdGVzKG5ld05vdGVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5yZW1vdmVBbGxBZGRpdGlvbmFsTm90ZUVsZW1lbnRzKCk7XHJcbiAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChuZXdOb3RlcykpIHtcclxuICAgICAgICAgICAgbmV3Tm90ZXMuZm9yRWFjaCgobm90ZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVOb3RlRWxlbWVudFdpdGhDYXRlZ29yeUF0dHJpYnV0ZShub3RlLmZyb20sIG5vdGUudGV4dCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCB0aGUgdHJhbnNsYXRpb24gdG8gYSBnaXZlbiBzdHJpbmcgKGluY2x1ZGluZyBtYXJrdXApLlxyXG4gICAgICogQHBhcmFtIHRyYW5zbGF0aW9uIHRyYW5zbGF0aW9uXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCB0cmFuc2xhdGVOYXRpdmUodHJhbnNsYXRpb246IHN0cmluZykge1xyXG4gICAgICAgIGxldCB0YXJnZXQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICd0YXJnZXQnKTtcclxuICAgICAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2UgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICdzb3VyY2UnKTtcclxuICAgICAgICAgICAgdGFyZ2V0ID0gc291cmNlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodGhpcy5fZWxlbWVudC5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RhcmdldCcpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgRE9NVXRpbGl0aWVzLnJlcGxhY2VDb250ZW50V2l0aFhNTENvbnRlbnQodGFyZ2V0LCA8c3RyaW5nPiB0cmFuc2xhdGlvbik7XHJcbiAgICAgICAgdGhpcy5zZXRUYXJnZXRTdGF0ZShTVEFURV9UUkFOU0xBVEVEKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvcHkgc291cmNlIHRvIHRhcmdldCB0byB1c2UgaXQgYXMgZHVtbXkgdHJhbnNsYXRpb24uXHJcbiAgICAgKiBSZXR1cm5zIGEgY2hhbmdlZCBjb3B5IG9mIHRoaXMgdHJhbnMgdW5pdC5cclxuICAgICAqIHJlY2VpdmVyIGlzIG5vdCBjaGFuZ2VkLlxyXG4gICAgICogKGludGVybmFsIHVzYWdlIG9ubHksIGEgY2xpZW50IHNob3VsZCBjYWxsIGltcG9ydE5ld1RyYW5zVW5pdCBvbiBJVHJhbnNsYXRpb25NZXNzYWdlRmlsZSlcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNsb25lV2l0aFNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuLCB0YXJnZXRGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpOiBBYnN0cmFjdFRyYW5zVW5pdCB7XHJcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxFbGVtZW50PiB0aGlzLl9lbGVtZW50LmNsb25lTm9kZSh0cnVlKTtcclxuICAgICAgICBjb25zdCBjbG9uZSA9IG5ldyBYbGlmZjJUcmFuc1VuaXQoZWxlbWVudCwgdGhpcy5faWQsIHRhcmdldEZpbGUpO1xyXG4gICAgICAgIGNsb25lLnVzZVNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmcsIGNvcHlDb250ZW50KTtcclxuICAgICAgICByZXR1cm4gY2xvbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3B5IHNvdXJjZSB0byB0YXJnZXQgdG8gdXNlIGl0IGFzIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogKGludGVybmFsIHVzYWdlIG9ubHksIGEgY2xpZW50IHNob3VsZCBjYWxsIGNyZWF0ZVRyYW5zbGF0aW9uRmlsZUZvckxhbmcgb24gSVRyYW5zbGF0aW9uTWVzc2FnZUZpbGUpXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB1c2VTb3VyY2VBc1RhcmdldChpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbikge1xyXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3NvdXJjZScpO1xyXG4gICAgICAgIGxldCB0YXJnZXQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX2VsZW1lbnQsICd0YXJnZXQnKTtcclxuICAgICAgICBpZiAoIXRhcmdldCkge1xyXG4gICAgICAgICAgICB0YXJnZXQgPSBzb3VyY2UucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGFyZ2V0JykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNEZWZhdWx0TGFuZyB8fCBjb3B5Q29udGVudCkge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VTdHJpbmcgPSBET01VdGlsaXRpZXMuZ2V0WE1MQ29udGVudChzb3VyY2UpO1xyXG4gICAgICAgICAgICBsZXQgbmV3VGFyZ2V0U3RyaW5nID0gc291cmNlU3RyaW5nO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNJQ1VNZXNzYWdlKHNvdXJjZVN0cmluZykpIHtcclxuICAgICAgICAgICAgICAgIG5ld1RhcmdldFN0cmluZyA9IHRoaXMudHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUoKS5nZXROZXdUcmFuc1VuaXRUYXJnZXRQcmFlZml4KClcclxuICAgICAgICAgICAgICAgICAgICArIHNvdXJjZVN0cmluZ1xyXG4gICAgICAgICAgICAgICAgICAgICsgdGhpcy50cmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSgpLmdldE5ld1RyYW5zVW5pdFRhcmdldFN1ZmZpeCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIERPTVV0aWxpdGllcy5yZXBsYWNlQ29udGVudFdpdGhYTUxDb250ZW50KHRhcmdldCwgbmV3VGFyZ2V0U3RyaW5nKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudCh0YXJnZXQsICcnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgc2VnbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fZWxlbWVudCwgJ3NlZ21lbnQnKTtcclxuICAgICAgICBpZiAoc2VnbWVudCkge1xyXG4gICAgICAgICAgICBpZiAoaXNEZWZhdWx0TGFuZykge1xyXG4gICAgICAgICAgICAgICAgc2VnbWVudC5zZXRBdHRyaWJ1dGUoJ3N0YXRlJywgdGhpcy5tYXBTdGF0ZVRvTmF0aXZlU3RhdGUoU1RBVEVfRklOQUwpKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNlZ21lbnQuc2V0QXR0cmlidXRlKCdzdGF0ZScsIHRoaXMubWFwU3RhdGVUb05hdGl2ZVN0YXRlKFNUQVRFX05FVykpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iLCJpbXBvcnQge2Zvcm1hdH0gZnJvbSAndXRpbCc7XHJcbmltcG9ydCB7SVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuaW1wb3J0IHtJVHJhbnNVbml0fSBmcm9tICcuLi9hcGkvaS10cmFucy11bml0JztcclxuaW1wb3J0IHtGT1JNQVRfWExJRkYyMCwgRklMRVRZUEVfWExJRkYyMH0gZnJvbSAnLi4vYXBpL2NvbnN0YW50cyc7XHJcbmltcG9ydCB7RE9NVXRpbGl0aWVzfSBmcm9tICcuL2RvbS11dGlsaXRpZXMnO1xyXG5pbXBvcnQge1hsaWZmMlRyYW5zVW5pdH0gZnJvbSAnLi94bGlmZjItdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZX0gZnJvbSAnLi9hYnN0cmFjdC10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuaW1wb3J0IHtBYnN0cmFjdFRyYW5zVW5pdH0gZnJvbSAnLi9hYnN0cmFjdC10cmFucy11bml0JztcclxuLyoqXHJcbiAqIENyZWF0ZWQgYnkgbWFydGluIG9uIDA0LjA1LjIwMTcuXHJcbiAqIEFuIFhMSUZGIDIuMCBmaWxlIHJlYWQgZnJvbSBhIHNvdXJjZSBmaWxlLlxyXG4gKiBGb3JtYXQgZGVmaW5pdGlvbiBpczogaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcveGxpZmYveGxpZmYtY29yZS92Mi4wL29zL3hsaWZmLWNvcmUtdjIuMC1vcy5odG1sXHJcbiAqXHJcbiAqIERlZmluZXMgc29tZSByZWxldmFudCBnZXQgYW5kIHNldCBtZXRob2QgZm9yIHJlYWRpbmcgYW5kIG1vZGlmeWluZyBzdWNoIGEgZmlsZS5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgWGxpZmYyRmlsZSBleHRlbmRzIEFic3RyYWN0VHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUgaW1wbGVtZW50cyBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGFuIFhMSUZGIDIuMC1GaWxlIGZyb20gc291cmNlLlxyXG4gICAgICogQHBhcmFtIHhtbFN0cmluZyBzb3VyY2UgcmVhZCBmcm9tIGZpbGUuXHJcbiAgICAgKiBAcGFyYW0gcGF0aCBQYXRoIHRvIGZpbGVcclxuICAgICAqIEBwYXJhbSBlbmNvZGluZyBvcHRpb25hbCBlbmNvZGluZyBvZiB0aGUgeG1sLlxyXG4gICAgICogVGhpcyBpcyByZWFkIGZyb20gdGhlIGZpbGUsIGJ1dCBpZiB5b3Uga25vdyBpdCBiZWZvcmUsIHlvdSBjYW4gYXZvaWQgcmVhZGluZyB0aGUgZmlsZSB0d2ljZS5cclxuICAgICAqIEByZXR1cm4geGxpZmYgZmlsZVxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcih4bWxTdHJpbmc6IHN0cmluZywgcGF0aDogc3RyaW5nLCBlbmNvZGluZzogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLl93YXJuaW5ncyA9IFtdO1xyXG4gICAgICAgIHRoaXMuX251bWJlck9mVHJhbnNVbml0c1dpdGhNaXNzaW5nSWQgPSAwO1xyXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZUZyb21Db250ZW50KHhtbFN0cmluZywgcGF0aCwgZW5jb2RpbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaW5pdGlhbGl6ZUZyb21Db250ZW50KHhtbFN0cmluZzogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcpOiBYbGlmZjJGaWxlIHtcclxuICAgICAgICB0aGlzLnBhcnNlQ29udGVudCh4bWxTdHJpbmcsIHBhdGgsIGVuY29kaW5nKTtcclxuICAgICAgICBjb25zdCB4bGlmZkxpc3QgPSB0aGlzLl9wYXJzZWREb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgneGxpZmYnKTtcclxuICAgICAgICBpZiAoeGxpZmZMaXN0Lmxlbmd0aCAhPT0gMSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0KCdGaWxlIFwiJXNcIiBzZWVtcyB0byBiZSBubyB4bGlmZiBmaWxlIChzaG91bGQgY29udGFpbiBhbiB4bGlmZiBlbGVtZW50KScsIHBhdGgpKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCB2ZXJzaW9uID0geGxpZmZMaXN0Lml0ZW0oMCkuZ2V0QXR0cmlidXRlKCd2ZXJzaW9uJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkVmVyc2lvbiA9ICcyLjAnO1xyXG4gICAgICAgICAgICBpZiAodmVyc2lvbiAhPT0gZXhwZWN0ZWRWZXJzaW9uKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0KCdGaWxlIFwiJXNcIiBzZWVtcyB0byBiZSBubyB4bGlmZiAyIGZpbGUsIHZlcnNpb24gc2hvdWxkIGJlICVzLCBmb3VuZCAlcycsXHJcbiAgICAgICAgICAgICAgICAgICAgcGF0aCwgZXhwZWN0ZWRWZXJzaW9uLCB2ZXJzaW9uKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGaWxlIGZvcm1hdCBhcyBpdCBpcyB1c2VkIGluIGNvbmZpZyBmaWxlcy5cclxuICAgICAqIEN1cnJlbnRseSAneGxmJywgJ3htYicsICd4bWIyJ1xyXG4gICAgICogUmV0dXJucyBvbmUgb2YgdGhlIGNvbnN0YW50cyBGT1JNQVRfLi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGkxOG5Gb3JtYXQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gRk9STUFUX1hMSUZGMjA7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBGaWxlIHR5cGUuXHJcbiAgICAgKiBIZXJlICdYTElGRiAyLjAnXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBmaWxlVHlwZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBGSUxFVFlQRV9YTElGRjIwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogcmV0dXJuIHRhZyBuYW1lcyBvZiBhbGwgZWxlbWVudHMgdGhhdCBoYXZlIG1peGVkIGNvbnRlbnQuXHJcbiAgICAgKiBUaGVzZSBlbGVtZW50cyB3aWxsIG5vdCBiZSBiZWF1dGlmaWVkLlxyXG4gICAgICogVHlwaWNhbCBjYW5kaWRhdGVzIGFyZSBzb3VyY2UgYW5kIHRhcmdldC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGVsZW1lbnRzV2l0aE1peGVkQ29udGVudCgpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgcmV0dXJuIFsnc2tlbGV0b24nLCAnbm90ZScsICdkYXRhJywgJ3NvdXJjZScsICd0YXJnZXQnLCAncGMnLCAnbXJrJ107XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGluaXRpYWxpemVUcmFuc1VuaXRzKCkge1xyXG4gICAgICAgIHRoaXMudHJhbnNVbml0cyA9IFtdO1xyXG4gICAgICAgIGNvbnN0IHRyYW5zVW5pdHNJbkZpbGUgPSB0aGlzLl9wYXJzZWREb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgndW5pdCcpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdHJhbnNVbml0c0luRmlsZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCB0cmFuc3VuaXQgPSB0cmFuc1VuaXRzSW5GaWxlLml0ZW0oaSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkID0gdHJhbnN1bml0LmdldEF0dHJpYnV0ZSgnaWQnKTtcclxuICAgICAgICAgICAgaWYgKCFpZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fd2FybmluZ3MucHVzaChmb3JtYXQoJ29vcHMsIHRyYW5zLXVuaXQgd2l0aG91dCBcImlkXCIgZm91bmQgaW4gbWFzdGVyLCBwbGVhc2UgY2hlY2sgZmlsZSAlcycsIHRoaXMuX2ZpbGVuYW1lKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy50cmFuc1VuaXRzLnB1c2gobmV3IFhsaWZmMlRyYW5zVW5pdCh0cmFuc3VuaXQsIGlkLCB0aGlzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IHNvdXJjZSBsYW5ndWFnZS5cclxuICAgICAqIEByZXR1cm4gc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc291cmNlTGFuZ3VhZ2UoKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCB4bGlmZkVsZW0gPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAneGxpZmYnKTtcclxuICAgICAgICBpZiAoeGxpZmZFbGVtKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB4bGlmZkVsZW0uZ2V0QXR0cmlidXRlKCdzcmNMYW5nJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRWRpdCB0aGUgc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICogQHBhcmFtIGxhbmd1YWdlIGxhbmd1YWdlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXRTb3VyY2VMYW5ndWFnZShsYW5ndWFnZTogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgeGxpZmZFbGVtID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ3hsaWZmJyk7XHJcbiAgICAgICAgaWYgKHhsaWZmRWxlbSkge1xyXG4gICAgICAgICAgICB4bGlmZkVsZW0uc2V0QXR0cmlidXRlKCdzcmNMYW5nJywgbGFuZ3VhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcmV0dXJuIHRhcmdldCBsYW5ndWFnZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHRhcmdldExhbmd1YWdlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgeGxpZmZFbGVtID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ3hsaWZmJyk7XHJcbiAgICAgICAgaWYgKHhsaWZmRWxlbSkge1xyXG4gICAgICAgICAgICByZXR1cm4geGxpZmZFbGVtLmdldEF0dHJpYnV0ZSgndHJnTGFuZycpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEVkaXQgdGhlIHRhcmdldCBsYW5ndWFnZS5cclxuICAgICAqIEBwYXJhbSBsYW5ndWFnZSBsYW5ndWFnZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0VGFyZ2V0TGFuZ3VhZ2UobGFuZ3VhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHhsaWZmRWxlbSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fcGFyc2VkRG9jdW1lbnQsICd4bGlmZicpO1xyXG4gICAgICAgIGlmICh4bGlmZkVsZW0pIHtcclxuICAgICAgICAgICAgeGxpZmZFbGVtLnNldEF0dHJpYnV0ZSgndHJnTGFuZycsIGxhbmd1YWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGQgYSBuZXcgdHJhbnMtdW5pdCB0byB0aGlzIGZpbGUuXHJcbiAgICAgKiBUaGUgdHJhbnMgdW5pdCBzdGVtcyBmcm9tIGFub3RoZXIgZmlsZS5cclxuICAgICAqIEl0IGNvcGllcyB0aGUgc291cmNlIGNvbnRlbnQgb2YgdGhlIHR1IHRvIHRoZSB0YXJnZXQgY29udGVudCB0b28sXHJcbiAgICAgKiBkZXBlbmRpbmcgb24gdGhlIHZhbHVlcyBvZiBpc0RlZmF1bHRMYW5nIGFuZCBjb3B5Q29udGVudC5cclxuICAgICAqIFNvIHRoZSBzb3VyY2UgY2FuIGJlIHVzZWQgYXMgYSBkdW1teSB0cmFuc2xhdGlvbi5cclxuICAgICAqICh1c2VkIGJ5IHhsaWZmbWVyZ2UpXHJcbiAgICAgKiBAcGFyYW0gZm9yZWlnblRyYW5zVW5pdCB0aGUgdHJhbnMgdW5pdCB0byBiZSBpbXBvcnRlZC5cclxuICAgICAqIEBwYXJhbSBpc0RlZmF1bHRMYW5nIEZsYWcsIHdldGhlciBmaWxlIGNvbnRhaW5zIHRoZSBkZWZhdWx0IGxhbmd1YWdlLlxyXG4gICAgICogVGhlbiBzb3VyY2UgYW5kIHRhcmdldCBhcmUganVzdCBlcXVhbC5cclxuICAgICAqIFRoZSBjb250ZW50IHdpbGwgYmUgY29waWVkLlxyXG4gICAgICogU3RhdGUgd2lsbCBiZSBmaW5hbC5cclxuICAgICAqIEBwYXJhbSBjb3B5Q29udGVudCBGbGFnLCB3ZXRoZXIgdG8gY29weSBjb250ZW50IG9yIGxlYXZlIGl0IGVtcHR5LlxyXG4gICAgICogV2JlbiB0cnVlLCBjb250ZW50IHdpbGwgYmUgY29waWVkIGZyb20gc291cmNlLlxyXG4gICAgICogV2hlbiBmYWxzZSwgY29udGVudCB3aWxsIGJlIGxlZnQgZW1wdHkgKGlmIGl0IGlzIG5vdCB0aGUgZGVmYXVsdCBsYW5ndWFnZSkuXHJcbiAgICAgKiBAcGFyYW0gaW1wb3J0QWZ0ZXJFbGVtZW50IG9wdGlvbmFsIChzaW5jZSAxLjEwKSBvdGhlciB0cmFuc3VuaXQgKHBhcnQgb2YgdGhpcyBmaWxlKSwgdGhhdCBzaG91bGQgYmUgdXNlZCBhcyBhbmNlc3Rvci5cclxuICAgICAqIE5ld2x5IGltcG9ydGVkIHRyYW5zIHVuaXQgaXMgdGhlbiBpbnNlcnRlZCBkaXJlY3RseSBhZnRlciB0aGlzIGVsZW1lbnQuXHJcbiAgICAgKiBJZiBub3Qgc2V0IG9yIG5vdCBwYXJ0IG9mIHRoaXMgZmlsZSwgbmV3IHVuaXQgd2lsbCBiZSBpbXBvcnRlZCBhdCB0aGUgZW5kLlxyXG4gICAgICogSWYgZXhwbGljaXR5IHNldCB0byBudWxsLCBuZXcgdW5pdCB3aWxsIGJlIGltcG9ydGVkIGF0IHRoZSBzdGFydC5cclxuICAgICAqIEByZXR1cm4gdGhlIG5ld2x5IGltcG9ydGVkIHRyYW5zIHVuaXQgKHNpbmNlIHZlcnNpb24gMS43LjApXHJcbiAgICAgKiBAdGhyb3dzIGFuIGVycm9yIGlmIHRyYW5zLXVuaXQgd2l0aCBzYW1lIGlkIGFscmVhZHkgaXMgaW4gdGhlIGZpbGUuXHJcbiAgICAgKi9cclxuICAgIGltcG9ydE5ld1RyYW5zVW5pdChmb3JlaWduVHJhbnNVbml0OiBJVHJhbnNVbml0LCBpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbiwgaW1wb3J0QWZ0ZXJFbGVtZW50PzogSVRyYW5zVW5pdClcclxuICAgICAgICA6IElUcmFuc1VuaXQge1xyXG4gICAgICAgIGlmICh0aGlzLnRyYW5zVW5pdFdpdGhJZChmb3JlaWduVHJhbnNVbml0LmlkKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0KCd0dSB3aXRoIGlkICVzIGFscmVhZHkgZXhpc3RzIGluIGZpbGUsIGNhbm5vdCBpbXBvcnQgaXQnLCBmb3JlaWduVHJhbnNVbml0LmlkKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IG5ld1R1ID0gKDxBYnN0cmFjdFRyYW5zVW5pdD4gZm9yZWlnblRyYW5zVW5pdCkuY2xvbmVXaXRoU291cmNlQXNUYXJnZXQoaXNEZWZhdWx0TGFuZywgY29weUNvbnRlbnQsIHRoaXMpO1xyXG4gICAgICAgIGNvbnN0IGZpbGVFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEZpcnN0RWxlbWVudEJ5VGFnTmFtZSh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ2ZpbGUnKTtcclxuICAgICAgICBpZiAoIWZpbGVFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ0ZpbGUgXCIlc1wiIHNlZW1zIHRvIGJlIG5vIHhsaWZmIDIuMCBmaWxlIChzaG91bGQgY29udGFpbiBhIGZpbGUgZWxlbWVudCknLCB0aGlzLl9maWxlbmFtZSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgaW5zZXJ0ZWQgPSBmYWxzZTtcclxuICAgICAgICBsZXQgaXNBZnRlckVsZW1lbnRQYXJ0T2ZGaWxlID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKCEhaW1wb3J0QWZ0ZXJFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGluc2VydGlvblBvaW50ID0gdGhpcy50cmFuc1VuaXRXaXRoSWQoaW1wb3J0QWZ0ZXJFbGVtZW50LmlkKTtcclxuICAgICAgICAgICAgaWYgKCEhaW5zZXJ0aW9uUG9pbnQpIHtcclxuICAgICAgICAgICAgICAgIGlzQWZ0ZXJFbGVtZW50UGFydE9mRmlsZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGltcG9ydEFmdGVyRWxlbWVudCA9PT0gdW5kZWZpbmVkIHx8IChpbXBvcnRBZnRlckVsZW1lbnQgJiYgIWlzQWZ0ZXJFbGVtZW50UGFydE9mRmlsZSkpIHtcclxuICAgICAgICAgICAgZmlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQobmV3VHUuYXNYbWxFbGVtZW50KCkpO1xyXG4gICAgICAgICAgICBpbnNlcnRlZCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIGlmIChpbXBvcnRBZnRlckVsZW1lbnQgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgY29uc3QgZmlyc3RVbml0RWxlbWVudCA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fcGFyc2VkRG9jdW1lbnQsICd1bml0Jyk7XHJcbiAgICAgICAgICAgIGlmIChmaXJzdFVuaXRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMuaW5zZXJ0QmVmb3JlKG5ld1R1LmFzWG1sRWxlbWVudCgpLCBmaXJzdFVuaXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIG5vIHRyYW5zLXVuaXQsIGVtcHR5IGZpbGUsIHNvIGFkZCB0byBmaXJzdCBmaWxlIGVsZW1lbnRcclxuICAgICAgICAgICAgICAgIGZpbGVFbGVtZW50LmFwcGVuZENoaWxkKG5ld1R1LmFzWG1sRWxlbWVudCgpKTtcclxuICAgICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlZlVuaXRFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEVsZW1lbnRCeVRhZ05hbWVBbmRJZCh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ3VuaXQnLCBpbXBvcnRBZnRlckVsZW1lbnQuaWQpO1xyXG4gICAgICAgICAgICBpZiAocmVmVW5pdEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIERPTVV0aWxpdGllcy5pbnNlcnRBZnRlcihuZXdUdS5hc1htbEVsZW1lbnQoKSwgcmVmVW5pdEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgaW5zZXJ0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpbnNlcnRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmxhenlJbml0aWFsaXplVHJhbnNVbml0cygpO1xyXG4gICAgICAgICAgICB0aGlzLnRyYW5zVW5pdHMucHVzaChuZXdUdSk7XHJcbiAgICAgICAgICAgIHRoaXMuY291bnROdW1iZXJzKCk7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXdUdTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSBuZXcgdHJhbnNsYXRpb24gZmlsZSBmb3IgdGhpcyBmaWxlIGZvciBhIGdpdmVuIGxhbmd1YWdlLlxyXG4gICAgICogTm9ybWFsbHksIHRoaXMgaXMganVzdCBhIGNvcHkgb2YgdGhlIG9yaWdpbmFsIG9uZS5cclxuICAgICAqIEJ1dCBmb3IgWE1CIHRoZSB0cmFuc2xhdGlvbiBmaWxlIGhhcyBmb3JtYXQgJ1hUQicuXHJcbiAgICAgKiBAcGFyYW0gbGFuZyBMYW5ndWFnZSBjb2RlXHJcbiAgICAgKiBAcGFyYW0gZmlsZW5hbWUgZXhwZWN0ZWQgZmlsZW5hbWUgdG8gc3RvcmUgZmlsZVxyXG4gICAgICogQHBhcmFtIGlzRGVmYXVsdExhbmcgRmxhZywgd2V0aGVyIGZpbGUgY29udGFpbnMgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBUaGVuIHNvdXJjZSBhbmQgdGFyZ2V0IGFyZSBqdXN0IGVxdWFsLlxyXG4gICAgICogVGhlIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQuXHJcbiAgICAgKiBTdGF0ZSB3aWxsIGJlIGZpbmFsLlxyXG4gICAgICogQHBhcmFtIGNvcHlDb250ZW50IEZsYWcsIHdldGhlciB0byBjb3B5IGNvbnRlbnQgb3IgbGVhdmUgaXQgZW1wdHkuXHJcbiAgICAgKiBXYmVuIHRydWUsIGNvbnRlbnQgd2lsbCBiZSBjb3BpZWQgZnJvbSBzb3VyY2UuXHJcbiAgICAgKiBXaGVuIGZhbHNlLCBjb250ZW50IHdpbGwgYmUgbGVmdCBlbXB0eSAoaWYgaXQgaXMgbm90IHRoZSBkZWZhdWx0IGxhbmd1YWdlKS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGNyZWF0ZVRyYW5zbGF0aW9uRmlsZUZvckxhbmcobGFuZzogc3RyaW5nLCBmaWxlbmFtZTogc3RyaW5nLCBpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbilcclxuICAgICAgICA6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgY29uc3QgdHJhbnNsYXRpb25GaWxlID0gbmV3IFhsaWZmMkZpbGUodGhpcy5lZGl0ZWRDb250ZW50KCksIGZpbGVuYW1lLCB0aGlzLmVuY29kaW5nKCkpO1xyXG4gICAgICAgIHRyYW5zbGF0aW9uRmlsZS5zZXROZXdUcmFuc1VuaXRUYXJnZXRQcmFlZml4KHRoaXMudGFyZ2V0UHJhZWZpeCk7XHJcbiAgICAgICAgdHJhbnNsYXRpb25GaWxlLnNldE5ld1RyYW5zVW5pdFRhcmdldFN1ZmZpeCh0aGlzLnRhcmdldFN1ZmZpeCk7XHJcbiAgICAgICAgdHJhbnNsYXRpb25GaWxlLnNldFRhcmdldExhbmd1YWdlKGxhbmcpO1xyXG4gICAgICAgIHRyYW5zbGF0aW9uRmlsZS5mb3JFYWNoVHJhbnNVbml0KCh0cmFuc1VuaXQ6IElUcmFuc1VuaXQpID0+IHtcclxuICAgICAgICAgICAgKDxBYnN0cmFjdFRyYW5zVW5pdD4gdHJhbnNVbml0KS51c2VTb3VyY2VBc1RhcmdldChpc0RlZmF1bHRMYW5nLCBjb3B5Q29udGVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uRmlsZTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQge2lzTnVsbE9yVW5kZWZpbmVkfSBmcm9tICd1dGlsJztcclxuaW1wb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGV9IGZyb20gJy4uL2FwaS9pLXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5pbXBvcnQge0lOb3JtYWxpemVkTWVzc2FnZX0gZnJvbSAnLi4vYXBpL2ktbm9ybWFsaXplZC1tZXNzYWdlJztcclxuaW1wb3J0IHtJVHJhbnNVbml0fSBmcm9tICcuLi9hcGkvaS10cmFucy11bml0JztcclxuaW1wb3J0IHtJTm90ZX0gZnJvbSAnLi4vYXBpL2ktbm90ZSc7XHJcbmltcG9ydCB7RE9NVXRpbGl0aWVzfSBmcm9tICcuL2RvbS11dGlsaXRpZXMnO1xyXG5pbXBvcnQge0Fic3RyYWN0VHJhbnNVbml0fSBmcm9tICcuL2Fic3RyYWN0LXRyYW5zLXVuaXQnO1xyXG5pbXBvcnQge1htYk1lc3NhZ2VQYXJzZXJ9IGZyb20gJy4veG1iLW1lc3NhZ2UtcGFyc2VyJztcclxuaW1wb3J0IHtQYXJzZWRNZXNzYWdlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlJztcclxuaW1wb3J0IHtBYnN0cmFjdE1lc3NhZ2VQYXJzZXJ9IGZyb20gJy4vYWJzdHJhY3QtbWVzc2FnZS1wYXJzZXInO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMjMuMDUuMjAxNy5cclxuICogQSBUcmFuc2xhdGlvbiBVbml0IGluIGFuIFhUQiBmaWxlLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBYdGJUcmFuc1VuaXQgZXh0ZW5kcyBBYnN0cmFjdFRyYW5zVW5pdCBpbXBsZW1lbnRzIElUcmFuc1VuaXQge1xyXG5cclxuICAgIHByaXZhdGUgX3NvdXJjZVRyYW5zVW5pdEZyb21NYXN0ZXI6IEFic3RyYWN0VHJhbnNVbml0O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKF9lbGVtZW50OiBFbGVtZW50LCBfaWQ6IHN0cmluZywgX3RyYW5zbGF0aW9uTWVzc2FnZXNGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUsXHJcbiAgICAgICAgICAgICAgICBfc291cmNlVHJhbnNVbml0RnJvbU1hc3RlcjogQWJzdHJhY3RUcmFuc1VuaXQpIHtcclxuICAgICAgICBzdXBlcihfZWxlbWVudCwgX2lkLCBfdHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpO1xyXG4gICAgICAgIHRoaXMuX3NvdXJjZVRyYW5zVW5pdEZyb21NYXN0ZXIgPSBfc291cmNlVHJhbnNVbml0RnJvbU1hc3RlcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldCBjb250ZW50IHRvIHRyYW5zbGF0ZS5cclxuICAgICAqIFNvdXJjZSBwYXJ0cyBhcmUgZXhjbHVkZWQgaGVyZS5cclxuICAgICAqIEByZXR1cm4gY29udGVudCB0byB0cmFuc2xhdGUuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzb3VyY2VDb250ZW50KCk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3NvdXJjZVRyYW5zVW5pdEZyb21NYXN0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NvdXJjZVRyYW5zVW5pdEZyb21NYXN0ZXIuc291cmNlQ29udGVudCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QsIHdldGhlciBzZXR0aW5nIG9mIHNvdXJjZSBjb250ZW50IGlzIHN1cHBvcnRlZC5cclxuICAgICAqIElmIG5vdCwgc2V0U291cmNlQ29udGVudCBpbiB0cmFucy11bml0IHdpbGwgZG8gbm90aGluZy5cclxuICAgICAqIHh0YiBkb2VzIG5vdCBzdXBwb3J0IHRoaXMsIGFsbCBvdGhlciBmb3JtYXRzIGRvLlxyXG4gICAgICovXHJcbiAgICBzdXBwb3J0c1NldFNvdXJjZUNvbnRlbnQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0IG5ldyBzb3VyY2UgY29udGVudCBpbiB0aGUgdHJhbnN1bml0LlxyXG4gICAgICogTm9ybWFsbHksIHRoaXMgaXMgZG9uZSBieSBuZy1leHRyYWN0LlxyXG4gICAgICogTWV0aG9kIG9ubHkgZXhpc3RzIHRvIGFsbG93IHhsaWZmbWVyZ2UgdG8gbWVyZ2UgbWlzc2luZyBjaGFuZ2VkIHNvdXJjZSBjb250ZW50LlxyXG4gICAgICogQHBhcmFtIG5ld0NvbnRlbnQgdGhlIG5ldyBjb250ZW50LlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0U291cmNlQ29udGVudChuZXdDb250ZW50OiBzdHJpbmcpIHtcclxuICAgICAgICAvLyB4dGIgaGFzIG5vIHNvdXJjZSBjb250ZW50LCB0aGV5IGFyZSBwYXJ0IG9mIHRoZSBtYXN0ZXJcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiBhIHBhcnNlciB1c2VkIGZvciBub3JtYWxpemVkIG1lc3NhZ2VzLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbWVzc2FnZVBhcnNlcigpOiBBYnN0cmFjdE1lc3NhZ2VQYXJzZXIge1xyXG4gICAgICAgIHJldHVybiBuZXcgWG1iTWVzc2FnZVBhcnNlcigpOyAvLyBubyB0eXBvISwgU2FtZSBhcyBmb3IgWG1iXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgb3JpZ2luYWwgdGV4dCB2YWx1ZSwgdGhhdCBpcyB0byBiZSB0cmFuc2xhdGVkLCBhcyBub3JtYWxpemVkIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjcmVhdGVTb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpOiBQYXJzZWRNZXNzYWdlIHtcclxuICAgICAgICBpZiAodGhpcy5fc291cmNlVHJhbnNVbml0RnJvbU1hc3Rlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc291cmNlVHJhbnNVbml0RnJvbU1hc3Rlci5jcmVhdGVTb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHRoZSB0cmFuc2xhdGVkIHZhbHVlIChjb250YWluaW5nIGFsbCBtYXJrdXAsIGRlcGVuZHMgb24gdGhlIGNvbmNyZXRlIGZvcm1hdCB1c2VkKS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHRhcmdldENvbnRlbnQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gRE9NVXRpbGl0aWVzLmdldFhNTENvbnRlbnQodGhpcy5fZWxlbWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB0aGUgdHJhbnNsYXRlZCB2YWx1ZSwgYnV0IGFsbCBwbGFjZWhvbGRlcnMgYXJlIHJlcGxhY2VkIHdpdGgge3tufX0gKHN0YXJ0aW5nIGF0IDApXHJcbiAgICAgKiBhbmQgYWxsIGVtYmVkZGVkIGh0bWwgaXMgcmVwbGFjZWQgYnkgZGlyZWN0IGh0bWwgbWFya3VwLlxyXG4gICAgICovXHJcbiAgICB0YXJnZXRDb250ZW50Tm9ybWFsaXplZCgpOiBJTm9ybWFsaXplZE1lc3NhZ2Uge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1lc3NhZ2VQYXJzZXIoKS5jcmVhdGVOb3JtYWxpemVkTWVzc2FnZUZyb21YTUwodGhpcy5fZWxlbWVudCwgdGhpcy5zb3VyY2VDb250ZW50Tm9ybWFsaXplZCgpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0YXRlIG9mIHRoZSB0cmFuc2xhdGlvbi5cclxuICAgICAqIChub3Qgc3VwcG9ydGVkIGluIHhtYilcclxuICAgICAqIElmIHdlIGhhdmUgYSBtYXN0ZXIsIHdlIGFzc3VtZWQgaXQgaXMgdHJhbnNsYXRlZCBpZiB0aGUgY29udGVudCBpcyBub3QgdGhlIHNhbWUgYXMgdGhlIG1hc3RlcnMgb25lLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbmF0aXZlVGFyZ2V0U3RhdGUoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5fc291cmNlVHJhbnNVbml0RnJvbU1hc3Rlcikge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VDb250ZW50ID0gdGhpcy5fc291cmNlVHJhbnNVbml0RnJvbU1hc3Rlci5zb3VyY2VDb250ZW50KCk7XHJcbiAgICAgICAgICAgIGlmICghc291cmNlQ29udGVudCB8fCBzb3VyY2VDb250ZW50ID09PSB0aGlzLnRhcmdldENvbnRlbnQoKSB8fCAhdGhpcy50YXJnZXRDb250ZW50KCkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnbmV3JztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnZmluYWwnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsOyAvLyBub3Qgc3VwcG9ydGVkIGluIHhtYlxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTWFwIGFuIGFic3RyYWN0IHN0YXRlIChuZXcsIHRyYW5zbGF0ZWQsIGZpbmFsKSB0byBhIGNvbmNyZXRlIHN0YXRlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIFJldHVybnMgdGhlIHN0YXRlIHRvIGJlIHVzZWQgaW4gdGhlIHhtbC5cclxuICAgICAqIEBwYXJhbSBzdGF0ZSBvbmUgb2YgQ29uc3RhbnRzLlNUQVRFLi4uXHJcbiAgICAgKiBAcmV0dXJucyBhIG5hdGl2ZSBzdGF0ZSAoZGVwZW5kcyBvbiBjb25jcmV0ZSBmb3JtYXQpXHJcbiAgICAgKiBAdGhyb3dzIGVycm9yLCBpZiBzdGF0ZSBpcyBpbnZhbGlkLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbWFwU3RhdGVUb05hdGl2ZVN0YXRlKHN0YXRlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIE1hcCBhIG5hdGl2ZSBzdGF0ZSAoZm91bmQgaW4gdGhlIGRvY3VtZW50KSB0byBhbiBhYnN0cmFjdCBzdGF0ZSAobmV3LCB0cmFuc2xhdGVkLCBmaW5hbCkuXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBhYnN0cmFjdCBzdGF0ZS5cclxuICAgICAqIEBwYXJhbSBuYXRpdmVTdGF0ZSBuYXRpdmVTdGF0ZVxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbWFwTmF0aXZlU3RhdGVUb1N0YXRlKG5hdGl2ZVN0YXRlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBuYXRpdmVTdGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHNldCBzdGF0ZSBpbiB4bWwuXHJcbiAgICAgKiAobm90IHN1cHBvcnRlZCBpbiB4bWIpXHJcbiAgICAgKiBAcGFyYW0gbmF0aXZlU3RhdGUgbmF0aXZlU3RhdGVcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIHNldE5hdGl2ZVRhcmdldFN0YXRlKG5hdGl2ZVN0YXRlOiBzdHJpbmcpIHtcclxuICAgICAgICAvLyBUT0RPIHNvbWUgbG9naWMgdG8gc3RvcmUgaXQgYW55d2hlcmVcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEFsbCB0aGUgc291cmNlIGVsZW1lbnRzIGluIHRoZSB0cmFucyB1bml0LlxyXG4gICAgICogVGhlIHNvdXJjZSBlbGVtZW50IGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBvcmlnaW5hbCB0ZW1wbGF0ZS5cclxuICAgICAqIEl0IGNvbnRhaW5zIHRoZSBuYW1lIG9mIHRoZSB0ZW1wbGF0ZSBmaWxlIGFuZCBhIGxpbmUgbnVtYmVyIHdpdGggdGhlIHBvc2l0aW9uIGluc2lkZSB0aGUgdGVtcGxhdGUuXHJcbiAgICAgKiBJdCBpcyBqdXN0IGEgaGVscCBmb3IgdHJhbnNsYXRvcnMgdG8gZmluZCB0aGUgY29udGV4dCBmb3IgdGhlIHRyYW5zbGF0aW9uLlxyXG4gICAgICogVGhpcyBpcyBzZXQgd2hlbiB1c2luZyBBbmd1bGFyIDQuMCBvciBncmVhdGVyLlxyXG4gICAgICogT3RoZXJ3aXNlIGl0IGp1c3QgcmV0dXJucyBhbiBlbXB0eSBhcnJheS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNvdXJjZVJlZmVyZW5jZXMoKTogeyBzb3VyY2VmaWxlOiBzdHJpbmcsIGxpbmVudW1iZXI6IG51bWJlciB9W10ge1xyXG4gICAgICAgIGlmICh0aGlzLl9zb3VyY2VUcmFuc1VuaXRGcm9tTWFzdGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zb3VyY2VUcmFuc1VuaXRGcm9tTWFzdGVyLnNvdXJjZVJlZmVyZW5jZXMoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHNldHRpbmcgb2Ygc291cmNlIHJlZnMgaXMgc3VwcG9ydGVkLlxyXG4gICAgICogSWYgbm90LCBzZXRTb3VyY2VSZWZlcmVuY2VzIHdpbGwgZG8gbm90aGluZy5cclxuICAgICAqIHh0YiBkb2VzIG5vdCBzdXBwb3J0IHRoaXMsIGFsbCBvdGhlciBmb3JtYXRzIGRvLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3VwcG9ydHNTZXRTb3VyY2VSZWZlcmVuY2VzKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCBzb3VyY2UgcmVmIGVsZW1lbnRzIGluIHRoZSB0cmFuc3VuaXQuXHJcbiAgICAgKiBOb3JtYWxseSwgdGhpcyBpcyBkb25lIGJ5IG5nLWV4dHJhY3QuXHJcbiAgICAgKiBNZXRob2Qgb25seSBleGlzdHMgdG8gYWxsb3cgeGxpZmZtZXJnZSB0byBtZXJnZSBtaXNzaW5nIHNvdXJjZSByZWZzLlxyXG4gICAgICogQHBhcmFtIHNvdXJjZVJlZnMgdGhlIHNvdXJjZXJlZnMgdG8gc2V0LiBPbGQgb25lcyBhcmUgcmVtb3ZlZC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFNvdXJjZVJlZmVyZW5jZXMoc291cmNlUmVmczoge3NvdXJjZWZpbGU6IHN0cmluZywgbGluZW51bWJlcjogbnVtYmVyfVtdKSB7XHJcbiAgICAgICAgLy8geHRiIGhhcyBubyBzb3VyY2UgcmVmcywgdGhleSBhcmUgcGFydCBvZiB0aGUgbWFzdGVyXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZGVzY3JpcHRpb24gc2V0IGluIHRoZSB0ZW1wbGF0ZSBhcyB2YWx1ZSBvZiB0aGUgaTE4bi1hdHRyaWJ1dGUuXHJcbiAgICAgKiBlLmcuIGkxOG49XCJteWRlc2NyaXB0aW9uXCIuXHJcbiAgICAgKiBJbiB4dGIgb25seSB0aGUgbWFzdGVyIHN0b3JlcyBpdC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGRlc2NyaXB0aW9uKCk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3NvdXJjZVRyYW5zVW5pdEZyb21NYXN0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3NvdXJjZVRyYW5zVW5pdEZyb21NYXN0ZXIuZGVzY3JpcHRpb24oKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbWVhbmluZyAoaW50ZW50KSBzZXQgaW4gdGhlIHRlbXBsYXRlIGFzIHZhbHVlIG9mIHRoZSBpMThuLWF0dHJpYnV0ZS5cclxuICAgICAqIFRoaXMgaXMgdGhlIHBhcnQgaW4gZnJvbnQgb2YgdGhlIHwgc3ltYm9sLlxyXG4gICAgICogZS5nLiBpMThuPVwibWVhbmluZ3xteWRlc2NyaXB0aW9uXCIuXHJcbiAgICAgKiBJbiB4dGIgb25seSB0aGUgbWFzdGVyIHN0b3JlcyBpdC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIG1lYW5pbmcoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5fc291cmNlVHJhbnNVbml0RnJvbU1hc3Rlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc291cmNlVHJhbnNVbml0RnJvbU1hc3Rlci5tZWFuaW5nKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGVzdCwgd2V0aGVyIHNldHRpbmcgb2YgZGVzY3JpcHRpb24gYW5kIG1lYW5pbmcgaXMgc3VwcG9ydGVkLlxyXG4gICAgICogSWYgbm90LCBzZXREZXNjcmlwdGlvbiBhbmQgc2V0TWVhbmluZyB3aWxsIGRvIG5vdGhpbmcuXHJcbiAgICAgKiB4dGIgZG9lcyBub3Qgc3VwcG9ydCB0aGlzLCBhbGwgb3RoZXIgZm9ybWF0cyBkby5cclxuICAgICAqL1xyXG4gICAgcHVibGljIHN1cHBvcnRzU2V0RGVzY3JpcHRpb25BbmRNZWFuaW5nKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENoYW5nZSBkZXNjcmlwdGlvbiBwcm9wZXJ0eSBvZiB0cmFucy11bml0LlxyXG4gICAgICogQHBhcmFtIGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXREZXNjcmlwdGlvbihkZXNjcmlwdGlvbjogc3RyaW5nKSB7XHJcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZCwgZG8gbm90aGluZ1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlIG1lYW5pbmcgcHJvcGVydHkgb2YgdHJhbnMtdW5pdC5cclxuICAgICAqIEBwYXJhbSBtZWFuaW5nIG1lYW5pbmdcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldE1lYW5pbmcobWVhbmluZzogc3RyaW5nKSB7XHJcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZCwgZG8gbm90aGluZ1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGFsbCBub3RlcyBvZiB0aGUgdHJhbnMtdW5pdC5cclxuICAgICAqIFRoZXJlIGFyZSBOTyBub3RlcyBpbiB4bWIveHRiXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBub3RlcygpOiBJTm90ZVtdIHtcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUZXN0LCB3ZXRoZXIgc2V0dGluZyBvZiBub3RlcyBpcyBzdXBwb3J0ZWQuXHJcbiAgICAgKiBJZiBub3QsIHNldE5vdGVzIHdpbGwgZG8gbm90aGluZy5cclxuICAgICAqIHh0YiBkb2VzIG5vdCBzdXBwb3J0IHRoaXMsIGFsbCBvdGhlciBmb3JtYXRzIGRvLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3VwcG9ydHNTZXROb3RlcygpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGQgbm90ZXMgdG8gdHJhbnMgdW5pdC5cclxuICAgICAqIEBwYXJhbSBuZXdOb3RlcyB0aGUgbm90ZXMgdG8gYWRkLlxyXG4gICAgICogTk9UIFN1cHBvcnRlZCBpbiB4bWIveHRiXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXROb3RlcyhuZXdOb3RlczogSU5vdGVbXSkge1xyXG4gICAgICAgIC8vIG5vdCBzdXBwb3J0ZWQsIGRvIG5vdGhpbmdcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvcHkgc291cmNlIHRvIHRhcmdldCB0byB1c2UgaXQgYXMgZHVtbXkgdHJhbnNsYXRpb24uXHJcbiAgICAgKiBSZXR1cm5zIGEgY2hhbmdlZCBjb3B5IG9mIHRoaXMgdHJhbnMgdW5pdC5cclxuICAgICAqIHJlY2VpdmVyIGlzIG5vdCBjaGFuZ2VkLlxyXG4gICAgICogKGludGVybmFsIHVzYWdlIG9ubHksIGEgY2xpZW50IHNob3VsZCBjYWxsIGltcG9ydE5ld1RyYW5zVW5pdCBvbiBJVHJhbnNsYXRpb25NZXNzYWdlRmlsZSlcclxuICAgICAqIEluIHh0YiB0aGVyZSBpcyBub3RoaW5nIHRvIGRvLCBiZWNhdXNlIHRoZXJlIGlzIG9ubHkgYSB0YXJnZXQsIG5vIHNvdXJjZS5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGNsb25lV2l0aFNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmc6IGJvb2xlYW4sIGNvcHlDb250ZW50OiBib29sZWFuLCB0YXJnZXRGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUpOiBBYnN0cmFjdFRyYW5zVW5pdCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDb3B5IHNvdXJjZSB0byB0YXJnZXQgdG8gdXNlIGl0IGFzIGR1bW15IHRyYW5zbGF0aW9uLlxyXG4gICAgICogKGludGVybmFsIHVzYWdlIG9ubHksIGEgY2xpZW50IHNob3VsZCBjYWxsIGNyZWF0ZVRyYW5zbGF0aW9uRmlsZUZvckxhbmcgb24gSVRyYW5zbGF0aW9uTWVzc2FnZUZpbGUpXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB1c2VTb3VyY2VBc1RhcmdldChpc0RlZmF1bHRMYW5nOiBib29sZWFuLCBjb3B5Q29udGVudDogYm9vbGVhbikge1xyXG4gICAgICAgIC8vIGRvIG5vdGhpbmdcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldCB0aGUgdHJhbnNsYXRpb24gdG8gYSBnaXZlbiBzdHJpbmcgKGluY2x1ZGluZyBtYXJrdXApLlxyXG4gICAgICogQHBhcmFtIHRyYW5zbGF0aW9uIHRyYW5zbGF0aW9uXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCB0cmFuc2xhdGVOYXRpdmUodHJhbnNsYXRpb246IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHRhcmdldCA9IHRoaXMuX2VsZW1lbnQ7XHJcbiAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKHRyYW5zbGF0aW9uKSkge1xyXG4gICAgICAgICAgICB0cmFuc2xhdGlvbiA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBET01VdGlsaXRpZXMucmVwbGFjZUNvbnRlbnRXaXRoWE1MQ29udGVudCh0YXJnZXQsIHRyYW5zbGF0aW9uKTtcclxuICAgIH1cclxuXHJcbn1cclxuIiwiaW1wb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICcuLi9hcGkvaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlLWZhY3RvcnknO1xyXG5pbXBvcnQge0lUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZX0gZnJvbSAnLi4vYXBpL2ktdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZSc7XHJcbmltcG9ydCB7SVRyYW5zVW5pdH0gZnJvbSAnLi4vYXBpL2ktdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7Rk9STUFUX1hUQiwgRklMRVRZUEVfWFRCLCBGT1JNQVRfWE1CfSBmcm9tICcuLi9hcGkvY29uc3RhbnRzJztcclxuaW1wb3J0IHtmb3JtYXR9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQge0RPTVV0aWxpdGllc30gZnJvbSAnLi9kb20tdXRpbGl0aWVzJztcclxuaW1wb3J0IHtBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlfSBmcm9tICcuL2Fic3RyYWN0LXRyYW5zbGF0aW9uLW1lc3NhZ2VzLWZpbGUnO1xyXG5pbXBvcnQge1h0YlRyYW5zVW5pdH0gZnJvbSAnLi94dGItdHJhbnMtdW5pdCc7XHJcbmltcG9ydCB7QWJzdHJhY3RUcmFuc1VuaXR9IGZyb20gJy4vYWJzdHJhY3QtdHJhbnMtdW5pdCc7XHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAyMy4wNS4yMDE3LlxyXG4gKiB4dGItRmlsZSBhY2Nlc3MuXHJcbiAqIHh0YiBpcyB0aGUgdHJhbnNsYXRlZCBjb3VudGVycGFydCB0byB4bWIuXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIFh0YkZpbGUgZXh0ZW5kcyBBYnN0cmFjdFRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIGltcGxlbWVudHMgSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIHtcclxuXHJcbiAgICAvLyBhdHRhY2hlZCBtYXN0ZXIgZmlsZSwgaWYgYW55XHJcbiAgICAvLyB1c2VkIGFzIHNvdXJjZSB0byBkZXRlcm1pbmUgc3RhdGUgLi4uXHJcbiAgICBwcml2YXRlIF9tYXN0ZXJGaWxlOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGU7IC8vIGFuIHhtYi1maWxlXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYW4geG1iLUZpbGUgZnJvbSBzb3VyY2UuXHJcbiAgICAgKiBAcGFyYW0gX3RyYW5zbGF0aW9uTWVzc2FnZUZpbGVGYWN0b3J5IGZhY3RvcnkgdG8gY3JlYXRlIGEgdHJhbnNsYXRpb24gZmlsZSAoeHRiKSBmb3IgdGhlIHhtYiBmaWxlXHJcbiAgICAgKiBAcGFyYW0geG1sU3RyaW5nIGZpbGUgY29udGVudFxyXG4gICAgICogQHBhcmFtIHBhdGggUGF0aCB0byBmaWxlXHJcbiAgICAgKiBAcGFyYW0gZW5jb2Rpbmcgb3B0aW9uYWwgZW5jb2Rpbmcgb2YgdGhlIHhtbC5cclxuICAgICAqIFRoaXMgaXMgcmVhZCBmcm9tIHRoZSBmaWxlLCBidXQgaWYgeW91IGtub3cgaXQgYmVmb3JlLCB5b3UgY2FuIGF2b2lkIHJlYWRpbmcgdGhlIGZpbGUgdHdpY2UuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uYWxNYXN0ZXIgaW4gY2FzZSBvZiB4bWIgdGhlIG1hc3RlciBmaWxlLCB0aGF0IGNvbnRhaW5zIHRoZSBvcmlnaW5hbCB0ZXh0cy5cclxuICAgICAqICh0aGlzIGlzIHVzZWQgdG8gc3VwcG9ydCBzdGF0ZSBpbmZvcywgdGhhdCBhcmUgYmFzZWQgb24gY29tcGFyaW5nIG9yaWdpbmFsIHdpdGggdHJhbnNsYXRlZCB2ZXJzaW9uKVxyXG4gICAgICogQHJldHVybiBYbWJGaWxlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX3RyYW5zbGF0aW9uTWVzc2FnZUZpbGVGYWN0b3J5OiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5LFxyXG4gICAgICAgICAgICAgICAgeG1sU3RyaW5nOiBzdHJpbmcsIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgIG9wdGlvbmFsTWFzdGVyPzogeyB4bWxDb250ZW50OiBzdHJpbmcsIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IHN0cmluZyB9KSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLl93YXJuaW5ncyA9IFtdO1xyXG4gICAgICAgIHRoaXMuX251bWJlck9mVHJhbnNVbml0c1dpdGhNaXNzaW5nSWQgPSAwO1xyXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZUZyb21Db250ZW50KHhtbFN0cmluZywgcGF0aCwgZW5jb2RpbmcsIG9wdGlvbmFsTWFzdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGluaXRpYWxpemVGcm9tQ29udGVudCh4bWxTdHJpbmc6IHN0cmluZywgcGF0aDogc3RyaW5nLCBlbmNvZGluZzogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXI/OiB7IHhtbENvbnRlbnQ6IHN0cmluZywgcGF0aDogc3RyaW5nLCBlbmNvZGluZzogc3RyaW5nIH0pOiBYdGJGaWxlIHtcclxuICAgICAgICB0aGlzLnBhcnNlQ29udGVudCh4bWxTdHJpbmcsIHBhdGgsIGVuY29kaW5nKTtcclxuICAgICAgICBpZiAodGhpcy5fcGFyc2VkRG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RyYW5zbGF0aW9uYnVuZGxlJykubGVuZ3RoICE9PSAxKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ0ZpbGUgXCIlc1wiIHNlZW1zIHRvIGJlIG5vIHh0YiBmaWxlIChzaG91bGQgY29udGFpbiBhIHRyYW5zbGF0aW9uYnVuZGxlIGVsZW1lbnQpJywgcGF0aCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob3B0aW9uYWxNYXN0ZXIpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX21hc3RlckZpbGUgPSB0aGlzLl90cmFuc2xhdGlvbk1lc3NhZ2VGaWxlRmFjdG9yeS5jcmVhdGVGaWxlRnJvbUZpbGVDb250ZW50KFxyXG4gICAgICAgICAgICAgICAgICAgIEZPUk1BVF9YTUIsXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uYWxNYXN0ZXIueG1sQ29udGVudCxcclxuICAgICAgICAgICAgICAgICAgICBvcHRpb25hbE1hc3Rlci5wYXRoLFxyXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsTWFzdGVyLmVuY29kaW5nKTtcclxuICAgICAgICAgICAgICAgIC8vIGNoZWNrLCB3ZXRoZXIgdGhpcyBjYW4gYmUgdGhlIG1hc3RlciAuLi5cclxuICAgICAgICAgICAgICAgIGNvbnN0IG51bWJlckluTWFzdGVyID0gdGhpcy5fbWFzdGVyRmlsZS5udW1iZXJPZlRyYW5zVW5pdHMoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG15TnVtYmVyID0gdGhpcy5udW1iZXJPZlRyYW5zVW5pdHMoKTtcclxuICAgICAgICAgICAgICAgIGlmIChudW1iZXJJbk1hc3RlciAhPT0gbXlOdW1iZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl93YXJuaW5ncy5wdXNoKGZvcm1hdChcclxuICAgICAgICAgICAgICAgICAgICAgICAgJyVzIHRyYW5zIHVuaXRzIGZvdW5kIGluIG1hc3RlciwgYnV0IHRoaXMgZmlsZSBoYXMgJXMuIENoZWNrIGlmIGl0IGlzIHRoZSBjb3JyZWN0IG1hc3RlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlckluTWFzdGVyLCBteU51bWJlcikpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnRmlsZSBcIiVzXCIgc2VlbXMgdG8gYmUgbm8geG1iIGZpbGUuIEFuIHh0YiBmaWxlIG5lZWRzIHhtYiBhcyBtYXN0ZXIgZmlsZS4nLCBvcHRpb25hbE1hc3Rlci5wYXRoKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGluaXRpYWxpemVUcmFuc1VuaXRzKCkge1xyXG4gICAgICAgIHRoaXMudHJhbnNVbml0cyA9IFtdO1xyXG4gICAgICAgIGNvbnN0IHRyYW5zVW5pdHNJbkZpbGUgPSB0aGlzLl9wYXJzZWREb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgndHJhbnNsYXRpb24nKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRyYW5zVW5pdHNJbkZpbGUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgbXNnID0gdHJhbnNVbml0c0luRmlsZS5pdGVtKGkpO1xyXG4gICAgICAgICAgICBjb25zdCBpZCA9IG1zZy5nZXRBdHRyaWJ1dGUoJ2lkJyk7XHJcbiAgICAgICAgICAgIGlmICghaWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3dhcm5pbmdzLnB1c2goZm9ybWF0KCdvb3BzLCBtc2cgd2l0aG91dCBcImlkXCIgZm91bmQgaW4gbWFzdGVyLCBwbGVhc2UgY2hlY2sgZmlsZSAlcycsIHRoaXMuX2ZpbGVuYW1lKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGV0IG1hc3RlclVuaXQ6IElUcmFuc1VuaXQgPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fbWFzdGVyRmlsZSkge1xyXG4gICAgICAgICAgICAgICAgbWFzdGVyVW5pdCA9IHRoaXMuX21hc3RlckZpbGUudHJhbnNVbml0V2l0aElkKGlkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnRyYW5zVW5pdHMucHVzaChuZXcgWHRiVHJhbnNVbml0KG1zZywgaWQsIHRoaXMsIDxBYnN0cmFjdFRyYW5zVW5pdD4gbWFzdGVyVW5pdCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZpbGUgZm9ybWF0IGFzIGl0IGlzIHVzZWQgaW4gY29uZmlnIGZpbGVzLlxyXG4gICAgICogQ3VycmVudGx5ICd4bGYnLCAneGxmMicsICd4bWInLCAneHRiJ1xyXG4gICAgICogUmV0dXJucyBvbmUgb2YgdGhlIGNvbnN0YW50cyBGT1JNQVRfLi5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGkxOG5Gb3JtYXQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gRk9STUFUX1hUQjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZpbGUgdHlwZS5cclxuICAgICAqIEhlcmUgJ1hUQidcclxuICAgICAqL1xyXG4gICAgcHVibGljIGZpbGVUeXBlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIEZJTEVUWVBFX1hUQjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHJldHVybiB0YWcgbmFtZXMgb2YgYWxsIGVsZW1lbnRzIHRoYXQgaGF2ZSBtaXhlZCBjb250ZW50LlxyXG4gICAgICogVGhlc2UgZWxlbWVudHMgd2lsbCBub3QgYmUgYmVhdXRpZmllZC5cclxuICAgICAqIFR5cGljYWwgY2FuZGlkYXRlcyBhcmUgc291cmNlIGFuZCB0YXJnZXQuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBlbGVtZW50c1dpdGhNaXhlZENvbnRlbnQoKTogc3RyaW5nW10ge1xyXG4gICAgICAgIHJldHVybiBbJ3RyYW5zbGF0aW9uJ107XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICogVW5zdXBwb3J0ZWQgaW4geG1iL3h0Yi5cclxuICAgICAqIFRyeSB0byBndWVzcyBpdCBmcm9tIG1hc3RlciBmaWxlbmFtZSBpZiBhbnkuLlxyXG4gICAgICogQHJldHVybiBzb3VyY2UgbGFuZ3VhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzb3VyY2VMYW5ndWFnZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmICh0aGlzLl9tYXN0ZXJGaWxlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tYXN0ZXJGaWxlLnNvdXJjZUxhbmd1YWdlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRWRpdCB0aGUgc291cmNlIGxhbmd1YWdlLlxyXG4gICAgICogVW5zdXBwb3J0ZWQgaW4geG1iL3h0Yi5cclxuICAgICAqIEBwYXJhbSBsYW5ndWFnZSBsYW5ndWFnZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0U291cmNlTGFuZ3VhZ2UobGFuZ3VhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIC8vIGRvIG5vdGhpbmcsIHh0YiBoYXMgbm8gbm90YXRpb24gZm9yIHRoaXMuXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGFyZ2V0IGxhbmd1YWdlLlxyXG4gICAgICogQHJldHVybiB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0YXJnZXRMYW5ndWFnZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IHRyYW5zbGF0aW9uYnVuZGxlRWxlbSA9IERPTVV0aWxpdGllcy5nZXRGaXJzdEVsZW1lbnRCeVRhZ05hbWUodGhpcy5fcGFyc2VkRG9jdW1lbnQsICd0cmFuc2xhdGlvbmJ1bmRsZScpO1xyXG4gICAgICAgIGlmICh0cmFuc2xhdGlvbmJ1bmRsZUVsZW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uYnVuZGxlRWxlbS5nZXRBdHRyaWJ1dGUoJ2xhbmcnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFZGl0IHRoZSB0YXJnZXQgbGFuZ3VhZ2UuXHJcbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2UgbGFuZ3VhZ2VcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFRhcmdldExhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB0cmFuc2xhdGlvbmJ1bmRsZUVsZW0gPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAndHJhbnNsYXRpb25idW5kbGUnKTtcclxuICAgICAgICBpZiAodHJhbnNsYXRpb25idW5kbGVFbGVtKSB7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uYnVuZGxlRWxlbS5zZXRBdHRyaWJ1dGUoJ2xhbmcnLCBsYW5ndWFnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWRkIGEgbmV3IHRyYW5zLXVuaXQgdG8gdGhpcyBmaWxlLlxyXG4gICAgICogVGhlIHRyYW5zIHVuaXQgc3RlbXMgZnJvbSBhbm90aGVyIGZpbGUuXHJcbiAgICAgKiBJdCBjb3BpZXMgdGhlIHNvdXJjZSBjb250ZW50IG9mIHRoZSB0dSB0byB0aGUgdGFyZ2V0IGNvbnRlbnQgdG9vLFxyXG4gICAgICogZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZXMgb2YgaXNEZWZhdWx0TGFuZyBhbmQgY29weUNvbnRlbnQuXHJcbiAgICAgKiBTbyB0aGUgc291cmNlIGNhbiBiZSB1c2VkIGFzIGEgZHVtbXkgdHJhbnNsYXRpb24uXHJcbiAgICAgKiAodXNlZCBieSB4bGlmZm1lcmdlKVxyXG4gICAgICogQHBhcmFtIGZvcmVpZ25UcmFuc1VuaXQgdGhlIHRyYW5zIHVuaXQgdG8gYmUgaW1wb3J0ZWQuXHJcbiAgICAgKiBAcGFyYW0gaXNEZWZhdWx0TGFuZyBGbGFnLCB3ZXRoZXIgZmlsZSBjb250YWlucyB0aGUgZGVmYXVsdCBsYW5ndWFnZS5cclxuICAgICAqIFRoZW4gc291cmNlIGFuZCB0YXJnZXQgYXJlIGp1c3QgZXF1YWwuXHJcbiAgICAgKiBUaGUgY29udGVudCB3aWxsIGJlIGNvcGllZC5cclxuICAgICAqIFN0YXRlIHdpbGwgYmUgZmluYWwuXHJcbiAgICAgKiBAcGFyYW0gY29weUNvbnRlbnQgRmxhZywgd2V0aGVyIHRvIGNvcHkgY29udGVudCBvciBsZWF2ZSBpdCBlbXB0eS5cclxuICAgICAqIFdiZW4gdHJ1ZSwgY29udGVudCB3aWxsIGJlIGNvcGllZCBmcm9tIHNvdXJjZS5cclxuICAgICAqIFdoZW4gZmFsc2UsIGNvbnRlbnQgd2lsbCBiZSBsZWZ0IGVtcHR5IChpZiBpdCBpcyBub3QgdGhlIGRlZmF1bHQgbGFuZ3VhZ2UpLlxyXG4gICAgICogQHBhcmFtIGltcG9ydEFmdGVyRWxlbWVudCBvcHRpb25hbCAoc2luY2UgMS4xMCkgb3RoZXIgdHJhbnN1bml0IChwYXJ0IG9mIHRoaXMgZmlsZSksIHRoYXQgc2hvdWxkIGJlIHVzZWQgYXMgYW5jZXN0b3IuXHJcbiAgICAgKiBOZXdseSBpbXBvcnRlZCB0cmFucyB1bml0IGlzIHRoZW4gaW5zZXJ0ZWQgZGlyZWN0bHkgYWZ0ZXIgdGhpcyBlbGVtZW50LlxyXG4gICAgICogSWYgbm90IHNldCBvciBub3QgcGFydCBvZiB0aGlzIGZpbGUsIG5ldyB1bml0IHdpbGwgYmUgaW1wb3J0ZWQgYXQgdGhlIGVuZC5cclxuICAgICAqIElmIGV4cGxpY2l0eSBzZXQgdG8gbnVsbCwgbmV3IHVuaXQgd2lsbCBiZSBpbXBvcnRlZCBhdCB0aGUgc3RhcnQuXHJcbiAgICAgKiBAcmV0dXJuIHRoZSBuZXdseSBpbXBvcnRlZCB0cmFucyB1bml0IChzaW5jZSB2ZXJzaW9uIDEuNy4wKVxyXG4gICAgICogQHRocm93cyBhbiBlcnJvciBpZiB0cmFucy11bml0IHdpdGggc2FtZSBpZCBhbHJlYWR5IGlzIGluIHRoZSBmaWxlLlxyXG4gICAgICovXHJcbiAgICBpbXBvcnROZXdUcmFuc1VuaXQoZm9yZWlnblRyYW5zVW5pdDogSVRyYW5zVW5pdCwgaXNEZWZhdWx0TGFuZzogYm9vbGVhbiwgY29weUNvbnRlbnQ6IGJvb2xlYW4sIGltcG9ydEFmdGVyRWxlbWVudD86IElUcmFuc1VuaXQpXHJcbiAgICAgICAgOiBJVHJhbnNVbml0IHtcclxuICAgICAgICBpZiAodGhpcy50cmFuc1VuaXRXaXRoSWQoZm9yZWlnblRyYW5zVW5pdC5pZCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgndHUgd2l0aCBpZCAlcyBhbHJlYWR5IGV4aXN0cyBpbiBmaWxlLCBjYW5ub3QgaW1wb3J0IGl0JywgZm9yZWlnblRyYW5zVW5pdC5pZCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBuZXdNYXN0ZXJUdSA9ICg8QWJzdHJhY3RUcmFuc1VuaXQ+IGZvcmVpZ25UcmFuc1VuaXQpLmNsb25lV2l0aFNvdXJjZUFzVGFyZ2V0KGlzRGVmYXVsdExhbmcsIGNvcHlDb250ZW50LCB0aGlzKTtcclxuICAgICAgICBjb25zdCB0cmFuc2xhdGlvbmJ1bmRsZUVsZW0gPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAndHJhbnNsYXRpb25idW5kbGUnKTtcclxuICAgICAgICBpZiAoIXRyYW5zbGF0aW9uYnVuZGxlRWxlbSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0KCdGaWxlIFwiJXNcIiBzZWVtcyB0byBiZSBubyB4dGIgZmlsZSAoc2hvdWxkIGNvbnRhaW4gYSB0cmFuc2xhdGlvbmJ1bmRsZSBlbGVtZW50KScsIHRoaXMuX2ZpbGVuYW1lKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRyYW5zbGF0aW9uRWxlbWVudCA9IHRyYW5zbGF0aW9uYnVuZGxlRWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyYW5zbGF0aW9uJyk7XHJcbiAgICAgICAgdHJhbnNsYXRpb25FbGVtZW50LnNldEF0dHJpYnV0ZSgnaWQnLCBmb3JlaWduVHJhbnNVbml0LmlkKTtcclxuICAgICAgICBsZXQgbmV3Q29udGVudCA9IChjb3B5Q29udGVudCB8fCBpc0RlZmF1bHRMYW5nKSA/IGZvcmVpZ25UcmFuc1VuaXQuc291cmNlQ29udGVudCgpIDogJyc7XHJcbiAgICAgICAgaWYgKCEoPEFic3RyYWN0VHJhbnNVbml0PiBmb3JlaWduVHJhbnNVbml0KS5pc0lDVU1lc3NhZ2UobmV3Q29udGVudCkpIHtcclxuICAgICAgICAgICAgbmV3Q29udGVudCA9IHRoaXMuZ2V0TmV3VHJhbnNVbml0VGFyZ2V0UHJhZWZpeCgpICsgbmV3Q29udGVudCArIHRoaXMuZ2V0TmV3VHJhbnNVbml0VGFyZ2V0U3VmZml4KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIERPTVV0aWxpdGllcy5yZXBsYWNlQ29udGVudFdpdGhYTUxDb250ZW50KHRyYW5zbGF0aW9uRWxlbWVudCwgbmV3Q29udGVudCk7XHJcbiAgICAgICAgY29uc3QgbmV3VHUgPSBuZXcgWHRiVHJhbnNVbml0KHRyYW5zbGF0aW9uRWxlbWVudCwgZm9yZWlnblRyYW5zVW5pdC5pZCwgdGhpcywgbmV3TWFzdGVyVHUpO1xyXG4gICAgICAgIGxldCBpbnNlcnRlZCA9IGZhbHNlO1xyXG4gICAgICAgIGxldCBpc0FmdGVyRWxlbWVudFBhcnRPZkZpbGUgPSBmYWxzZTtcclxuICAgICAgICBpZiAoISFpbXBvcnRBZnRlckVsZW1lbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgaW5zZXJ0aW9uUG9pbnQgPSB0aGlzLnRyYW5zVW5pdFdpdGhJZChpbXBvcnRBZnRlckVsZW1lbnQuaWQpO1xyXG4gICAgICAgICAgICBpZiAoISFpbnNlcnRpb25Qb2ludCkge1xyXG4gICAgICAgICAgICAgICAgaXNBZnRlckVsZW1lbnRQYXJ0T2ZGaWxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW1wb3J0QWZ0ZXJFbGVtZW50ID09PSB1bmRlZmluZWQgfHwgKGltcG9ydEFmdGVyRWxlbWVudCAmJiAhaXNBZnRlckVsZW1lbnRQYXJ0T2ZGaWxlKSkge1xyXG4gICAgICAgICAgICB0cmFuc2xhdGlvbmJ1bmRsZUVsZW0uYXBwZW5kQ2hpbGQobmV3VHUuYXNYbWxFbGVtZW50KCkpO1xyXG4gICAgICAgICAgICBpbnNlcnRlZCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIGlmIChpbXBvcnRBZnRlckVsZW1lbnQgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgY29uc3QgZmlyc3RUcmFuc2xhdGlvbkVsZW1lbnQgPSBET01VdGlsaXRpZXMuZ2V0Rmlyc3RFbGVtZW50QnlUYWdOYW1lKHRoaXMuX3BhcnNlZERvY3VtZW50LCAndHJhbnNsYXRpb24nKTtcclxuICAgICAgICAgICAgaWYgKGZpcnN0VHJhbnNsYXRpb25FbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMuaW5zZXJ0QmVmb3JlKG5ld1R1LmFzWG1sRWxlbWVudCgpLCBmaXJzdFRyYW5zbGF0aW9uRWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICBpbnNlcnRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBubyB0cmFucy11bml0LCBlbXB0eSBmaWxlLCBzbyBhZGQgdG8gYnVuZGxlIGF0IGVuZFxyXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25idW5kbGVFbGVtLmFwcGVuZENoaWxkKG5ld1R1LmFzWG1sRWxlbWVudCgpKTtcclxuICAgICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlZlVuaXRFbGVtZW50ID0gRE9NVXRpbGl0aWVzLmdldEVsZW1lbnRCeVRhZ05hbWVBbmRJZCh0aGlzLl9wYXJzZWREb2N1bWVudCwgJ3RyYW5zbGF0aW9uJywgaW1wb3J0QWZ0ZXJFbGVtZW50LmlkKTtcclxuICAgICAgICAgICAgaWYgKHJlZlVuaXRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBET01VdGlsaXRpZXMuaW5zZXJ0QWZ0ZXIobmV3VHUuYXNYbWxFbGVtZW50KCksIHJlZlVuaXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIGluc2VydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW5zZXJ0ZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5sYXp5SW5pdGlhbGl6ZVRyYW5zVW5pdHMoKTtcclxuICAgICAgICAgICAgdGhpcy50cmFuc1VuaXRzLnB1c2gobmV3VHUpO1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50TnVtYmVycygpO1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3VHU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgbmV3IHRyYW5zbGF0aW9uIGZpbGUgZm9yIHRoaXMgZmlsZSBmb3IgYSBnaXZlbiBsYW5ndWFnZS5cclxuICAgICAqIE5vcm1hbGx5LCB0aGlzIGlzIGp1c3QgYSBjb3B5IG9mIHRoZSBvcmlnaW5hbCBvbmUuXHJcbiAgICAgKiBCdXQgZm9yIFhNQiB0aGUgdHJhbnNsYXRpb24gZmlsZSBoYXMgZm9ybWF0ICdYVEInLlxyXG4gICAgICogQHBhcmFtIGxhbmcgTGFuZ3VhZ2UgY29kZVxyXG4gICAgICogQHBhcmFtIGZpbGVuYW1lIGV4cGVjdGVkIGZpbGVuYW1lIHRvIHN0b3JlIGZpbGVcclxuICAgICAqIEBwYXJhbSBpc0RlZmF1bHRMYW5nIEZsYWcsIHdldGhlciBmaWxlIGNvbnRhaW5zIHRoZSBkZWZhdWx0IGxhbmd1YWdlLlxyXG4gICAgICogVGhlbiBzb3VyY2UgYW5kIHRhcmdldCBhcmUganVzdCBlcXVhbC5cclxuICAgICAqIFRoZSBjb250ZW50IHdpbGwgYmUgY29waWVkLlxyXG4gICAgICogU3RhdGUgd2lsbCBiZSBmaW5hbC5cclxuICAgICAqIEBwYXJhbSBjb3B5Q29udGVudCBGbGFnLCB3ZXRoZXIgdG8gY29weSBjb250ZW50IG9yIGxlYXZlIGl0IGVtcHR5LlxyXG4gICAgICogV2JlbiB0cnVlLCBjb250ZW50IHdpbGwgYmUgY29waWVkIGZyb20gc291cmNlLlxyXG4gICAgICogV2hlbiBmYWxzZSwgY29udGVudCB3aWxsIGJlIGxlZnQgZW1wdHkgKGlmIGl0IGlzIG5vdCB0aGUgZGVmYXVsdCBsYW5ndWFnZSkuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjcmVhdGVUcmFuc2xhdGlvbkZpbGVGb3JMYW5nKGxhbmc6IHN0cmluZywgZmlsZW5hbWU6IHN0cmluZywgaXNEZWZhdWx0TGFuZzogYm9vbGVhbiwgY29weUNvbnRlbnQ6IGJvb2xlYW4pXHJcbiAgICAgICAgOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQoJ0ZpbGUgXCIlc1wiLCB4dGIgZmlsZXMgYXJlIG5vdCB0cmFuc2xhdGFibGUsIHRoZXkgYXJlIGFscmVhZHkgdHJhbnNsYXRpb25zJywgZmlsZW5hbWUpKTtcclxuICAgIH1cclxufVxyXG4iLCIvKipcclxuICogQ3JlYXRlZCBieSByb29ibSBvbiAyMS4wMy4yMDE3LlxyXG4gKi9cclxuaW1wb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGV9IGZyb20gJy4vaS10cmFuc2xhdGlvbi1tZXNzYWdlcy1maWxlJztcclxuaW1wb3J0IHtYbGlmZkZpbGV9IGZyb20gJy4uL2ltcGwveGxpZmYtZmlsZSc7XHJcbmltcG9ydCB7WG1iRmlsZX0gZnJvbSAnLi4vaW1wbC94bWItZmlsZSc7XHJcbmltcG9ydCB7Zm9ybWF0fSBmcm9tICd1dGlsJztcclxuaW1wb3J0IHtYbGlmZjJGaWxlfSBmcm9tICcuLi9pbXBsL3hsaWZmMi1maWxlJztcclxuaW1wb3J0IHtGT1JNQVRfWExJRkYxMiwgRk9STUFUX1hMSUZGMjAsIEZPUk1BVF9YTUIsIEZPUk1BVF9YVEJ9IGZyb20gJy4vY29uc3RhbnRzJztcclxuaW1wb3J0IHtYdGJGaWxlfSBmcm9tICcuLi9pbXBsL3h0Yi1maWxlJztcclxuaW1wb3J0IHtJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5fSBmcm9tICcuL2ktdHJhbnNsYXRpb24tbWVzc2FnZXMtZmlsZS1mYWN0b3J5JztcclxuXHJcbi8qKlxyXG4gKiBIZWxwZXIgY2xhc3MgdG8gcmVhZCB0cmFuc2xhdGlvbiBmaWxlcyBkZXBlbmRpbmcgb24gZm9ybWF0LlxyXG4gKiBUaGlzIGlzIHBhcnQgb2YgdGhlIHB1YmxpYyBhcGlcclxuICovXHJcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkgaW1wbGVtZW50cyBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5IHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlYWQgZmlsZSBmdW5jdGlvbiwgcmVzdWx0IGRlcGVuZHMgb24gZm9ybWF0LCBlaXRoZXIgWGxpZmZGaWxlIG9yIFhtYkZpbGUuXHJcbiAgICAgKiBAcGFyYW0gaTE4bkZvcm1hdCBjdXJyZW50bHkgJ3hsZicgb3IgJ3hsZjInIG9yICd4bWInIG9yICd4dGInIGFyZSBzdXBwb3J0ZWRcclxuICAgICAqIEBwYXJhbSB4bWxDb250ZW50IHRoZSBmaWxlIGNvbnRlbnRcclxuICAgICAqIEBwYXJhbSBwYXRoIHRoZSBwYXRoIG9mIHRoZSBmaWxlIChvbmx5IHVzZWQgdG8gcmVtZW1iZXIgaXQpXHJcbiAgICAgKiBAcGFyYW0gZW5jb2RpbmcgdXRmLTgsIC4uLiB1c2VkIHRvIHBhcnNlIFhNTC5cclxuICAgICAqIFRoaXMgaXMgcmVhZCBmcm9tIHRoZSBmaWxlLCBidXQgaWYgeW91IGtub3cgaXQgYmVmb3JlLCB5b3UgY2FuIGF2b2lkIHJlYWRpbmcgdGhlIGZpbGUgdHdpY2UuXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uYWxNYXN0ZXIgaW4gY2FzZSBvZiB4bWIgdGhlIG1hc3RlciBmaWxlLCB0aGF0IGNvbnRhaW5zIHRoZSBvcmlnaW5hbCB0ZXh0cy5cclxuICAgICAqICh0aGlzIGlzIHVzZWQgdG8gc3VwcG9ydCBzdGF0ZSBpbmZvcywgdGhhdCBhcmUgYmFzZWQgb24gY29tcGFyaW5nIG9yaWdpbmFsIHdpdGggdHJhbnNsYXRlZCB2ZXJzaW9uKVxyXG4gICAgICogSWdub3JlZCBmb3Igb3RoZXIgZm9ybWF0cy5cclxuICAgICAqIEByZXR1cm4gZWl0aGVyIFhsaWZmRmlsZSBvciBYbWJGaWxlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUZpbGVDb250ZW50KGkxOG5Gb3JtYXQ6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbENvbnRlbnQ6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kaW5nOiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25hbE1hc3Rlcj86IHt4bWxDb250ZW50OiBzdHJpbmcsIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IHN0cmluZ30pOiBJVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGUge1xyXG4gICAgICAgIHJldHVybiBuZXcgVHJhbnNsYXRpb25NZXNzYWdlc0ZpbGVGYWN0b3J5KCkuY3JlYXRlRmlsZUZyb21GaWxlQ29udGVudChpMThuRm9ybWF0LCB4bWxDb250ZW50LCBwYXRoLCBlbmNvZGluZywgb3B0aW9uYWxNYXN0ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBmaWxlIGZ1bmN0aW9uIGZvciBhbnkgZmlsZSB3aXRoIHVua25vd24gZm9ybWF0LlxyXG4gICAgICogVGhpcyBmdW5jdGlvbnMgdHJpZXMgdG8gZ3Vlc3MgdGhlIGZvcm1hdCBiYXNlZCBvbiB0aGUgZmlsZW5hbWUgYW5kIHRoZSBjb250ZW50IG9mIHRoZSBmaWxlLlxyXG4gICAgICogUmVzdWx0IGRlcGVuZHMgb24gZGV0ZWN0ZWQgZm9ybWF0LCBlaXRoZXIgWGxpZmZGaWxlIG9yIFhtYkZpbGUuXHJcbiAgICAgKiBAcGFyYW0geG1sQ29udGVudCB0aGUgZmlsZSBjb250ZW50XHJcbiAgICAgKiBAcGFyYW0gcGF0aCB0aGUgcGF0aCBvZiB0aGUgZmlsZSAob25seSB1c2VkIHRvIHJlbWVtYmVyIGl0KVxyXG4gICAgICogQHBhcmFtIGVuY29kaW5nIHV0Zi04LCAuLi4gdXNlZCB0byBwYXJzZSBYTUwuXHJcbiAgICAgKiBUaGlzIGlzIHJlYWQgZnJvbSB0aGUgZmlsZSwgYnV0IGlmIHlvdSBrbm93IGl0IGJlZm9yZSwgeW91IGNhbiBhdm9pZCByZWFkaW5nIHRoZSBmaWxlIHR3aWNlLlxyXG4gICAgICogQHBhcmFtIG9wdGlvbmFsTWFzdGVyIGluIGNhc2Ugb2YgeG1iIHRoZSBtYXN0ZXIgZmlsZSwgdGhhdCBjb250YWlucyB0aGUgb3JpZ2luYWwgdGV4dHMuXHJcbiAgICAgKiAodGhpcyBpcyB1c2VkIHRvIHN1cHBvcnQgc3RhdGUgaW5mb3MsIHRoYXQgYXJlIGJhc2VkIG9uIGNvbXBhcmluZyBvcmlnaW5hbCB3aXRoIHRyYW5zbGF0ZWQgdmVyc2lvbilcclxuICAgICAqIElnbm9yZWQgZm9yIG90aGVyIGZvcm1hdHMuXHJcbiAgICAgKiBAcmV0dXJuIGVpdGhlciBYbGlmZkZpbGUgb3IgWG1iRmlsZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGZyb21Vbmtub3duRm9ybWF0RmlsZUNvbnRlbnQoeG1sQ29udGVudDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2Rpbmc6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsTWFzdGVyPzoge3htbENvbnRlbnQ6IHN0cmluZywgcGF0aDogc3RyaW5nLCBlbmNvZGluZzogc3RyaW5nfSk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkoKS5jcmVhdGVGaWxlRnJvbVVua25vd25Gb3JtYXRGaWxlQ29udGVudCh4bWxDb250ZW50LCBwYXRoLCBlbmNvZGluZywgb3B0aW9uYWxNYXN0ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBmaWxlIGZ1bmN0aW9uLCByZXN1bHQgZGVwZW5kcyBvbiBmb3JtYXQsIGVpdGhlciBYbGlmZkZpbGUgb3IgWG1iRmlsZS5cclxuICAgICAqIEBwYXJhbSBpMThuRm9ybWF0IGN1cnJlbnRseSAneGxmJyBvciAneGxmMicgb3IgJ3htYicgb3IgJ3h0YicgYXJlIHN1cHBvcnRlZFxyXG4gICAgICogQHBhcmFtIHhtbENvbnRlbnQgdGhlIGZpbGUgY29udGVudFxyXG4gICAgICogQHBhcmFtIHBhdGggdGhlIHBhdGggb2YgdGhlIGZpbGUgKG9ubHkgdXNlZCB0byByZW1lbWJlciBpdClcclxuICAgICAqIEBwYXJhbSBlbmNvZGluZyB1dGYtOCwgLi4uIHVzZWQgdG8gcGFyc2UgWE1MLlxyXG4gICAgICogVGhpcyBpcyByZWFkIGZyb20gdGhlIGZpbGUsIGJ1dCBpZiB5b3Uga25vdyBpdCBiZWZvcmUsIHlvdSBjYW4gYXZvaWQgcmVhZGluZyB0aGUgZmlsZSB0d2ljZS5cclxuICAgICAqIEBwYXJhbSBvcHRpb25hbE1hc3RlciBpbiBjYXNlIG9mIHhtYiB0aGUgbWFzdGVyIGZpbGUsIHRoYXQgY29udGFpbnMgdGhlIG9yaWdpbmFsIHRleHRzLlxyXG4gICAgICogKHRoaXMgaXMgdXNlZCB0byBzdXBwb3J0IHN0YXRlIGluZm9zLCB0aGF0IGFyZSBiYXNlZCBvbiBjb21wYXJpbmcgb3JpZ2luYWwgd2l0aCB0cmFuc2xhdGVkIHZlcnNpb24pXHJcbiAgICAgKiBJZ25vcmVkIGZvciBvdGhlciBmb3JtYXRzLlxyXG4gICAgICogQHJldHVybiBlaXRoZXIgWGxpZmZGaWxlIG9yIFhtYkZpbGVcclxuICAgICAqL1xyXG4gICAgY3JlYXRlRmlsZUZyb21GaWxlQ29udGVudChpMThuRm9ybWF0OiBzdHJpbmcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbENvbnRlbnQ6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmNvZGluZzogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25hbE1hc3Rlcj86IHsgeG1sQ29udGVudDogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcgfSk6IElUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZSB7XHJcbiAgICAgICAgaWYgKGkxOG5Gb3JtYXQgPT09IEZPUk1BVF9YTElGRjEyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgWGxpZmZGaWxlKHhtbENvbnRlbnQsIHBhdGgsIGVuY29kaW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGkxOG5Gb3JtYXQgPT09IEZPUk1BVF9YTElGRjIwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgWGxpZmYyRmlsZSh4bWxDb250ZW50LCBwYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpMThuRm9ybWF0ID09PSBGT1JNQVRfWE1CKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgWG1iRmlsZSh0aGlzLCB4bWxDb250ZW50LCBwYXRoLCBlbmNvZGluZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpMThuRm9ybWF0ID09PSBGT1JNQVRfWFRCKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgWHRiRmlsZSh0aGlzLCB4bWxDb250ZW50LCBwYXRoLCBlbmNvZGluZywgb3B0aW9uYWxNYXN0ZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0KCdvb3BzLCB1bnN1cHBvcnRlZCBmb3JtYXQgXCIlc1wiJywgaTE4bkZvcm1hdCkpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlYWQgZmlsZSBmdW5jdGlvbiBmb3IgYW55IGZpbGUgd2l0aCB1bmtub3duIGZvcm1hdC5cclxuICAgICAqIFRoaXMgZnVuY3Rpb25zIHRyaWVzIHRvIGd1ZXNzIHRoZSBmb3JtYXQgYmFzZWQgb24gdGhlIGZpbGVuYW1lIGFuZCB0aGUgY29udGVudCBvZiB0aGUgZmlsZS5cclxuICAgICAqIFJlc3VsdCBkZXBlbmRzIG9uIGRldGVjdGVkIGZvcm1hdCwgZWl0aGVyIFhsaWZmRmlsZSBvciBYbWJGaWxlLlxyXG4gICAgICogQHBhcmFtIHhtbENvbnRlbnQgdGhlIGZpbGUgY29udGVudFxyXG4gICAgICogQHBhcmFtIHBhdGggdGhlIHBhdGggb2YgdGhlIGZpbGUgKG9ubHkgdXNlZCB0byByZW1lbWJlciBpdClcclxuICAgICAqIEBwYXJhbSBlbmNvZGluZyB1dGYtOCwgLi4uIHVzZWQgdG8gcGFyc2UgWE1MLlxyXG4gICAgICogVGhpcyBpcyByZWFkIGZyb20gdGhlIGZpbGUsIGJ1dCBpZiB5b3Uga25vdyBpdCBiZWZvcmUsIHlvdSBjYW4gYXZvaWQgcmVhZGluZyB0aGUgZmlsZSB0d2ljZS5cclxuICAgICAqIEBwYXJhbSBvcHRpb25hbE1hc3RlciBpbiBjYXNlIG9mIHhtYiB0aGUgbWFzdGVyIGZpbGUsIHRoYXQgY29udGFpbnMgdGhlIG9yaWdpbmFsIHRleHRzLlxyXG4gICAgICogKHRoaXMgaXMgdXNlZCB0byBzdXBwb3J0IHN0YXRlIGluZm9zLCB0aGF0IGFyZSBiYXNlZCBvbiBjb21wYXJpbmcgb3JpZ2luYWwgd2l0aCB0cmFuc2xhdGVkIHZlcnNpb24pXHJcbiAgICAgKiBJZ25vcmVkIGZvciBvdGhlciBmb3JtYXRzLlxyXG4gICAgICogQHJldHVybiBlaXRoZXIgWGxpZmZGaWxlIG9yIFhtYkZpbGVcclxuICAgICAqL1xyXG4gICAgY3JlYXRlRmlsZUZyb21Vbmtub3duRm9ybWF0RmlsZUNvbnRlbnQoeG1sQ29udGVudDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogc3RyaW5nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2Rpbmc6IHN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbmFsTWFzdGVyPzogeyB4bWxDb250ZW50OiBzdHJpbmcsIHBhdGg6IHN0cmluZywgZW5jb2Rpbmc6IHN0cmluZyB9KVxyXG4gICAgICAgIDogSVRyYW5zbGF0aW9uTWVzc2FnZXNGaWxlIHtcclxuICAgICAgICBsZXQgZm9ybWF0Q2FuZGlkYXRlcyA9IFtGT1JNQVRfWExJRkYxMiwgRk9STUFUX1hMSUZGMjAsIEZPUk1BVF9YTUIsIEZPUk1BVF9YVEJdO1xyXG4gICAgICAgIGlmIChwYXRoICYmIHBhdGguZW5kc1dpdGgoJ3htYicpKSB7XHJcbiAgICAgICAgICAgIGZvcm1hdENhbmRpZGF0ZXMgPSBbRk9STUFUX1hNQiwgRk9STUFUX1hUQiwgRk9STUFUX1hMSUZGMTIsIEZPUk1BVF9YTElGRjIwXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHBhdGggJiYgcGF0aC5lbmRzV2l0aCgneHRiJykpIHtcclxuICAgICAgICAgICAgZm9ybWF0Q2FuZGlkYXRlcyA9IFtGT1JNQVRfWFRCLCBGT1JNQVRfWE1CLCBGT1JNQVRfWExJRkYxMiwgRk9STUFUX1hMSUZGMjBdO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyB0cnkgYWxsIGNhbmRpZGF0ZSBmb3JtYXRzIHRvIGdldCB0aGUgcmlnaHQgb25lXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmb3JtYXRDYW5kaWRhdGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGZvcm1hdENhbmRpZGF0ZSA9IGZvcm1hdENhbmRpZGF0ZXNbaV07XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2xhdGlvbkZpbGUgPSBUcmFuc2xhdGlvbk1lc3NhZ2VzRmlsZUZhY3RvcnkuZnJvbUZpbGVDb250ZW50KFxyXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdENhbmRpZGF0ZSwgeG1sQ29udGVudCwgcGF0aCwgZW5jb2RpbmcsIG9wdGlvbmFsTWFzdGVyKTtcclxuICAgICAgICAgICAgICAgIGlmICh0cmFuc2xhdGlvbkZpbGUpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNsYXRpb25GaWxlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBzZWFtcyB0byBiZSB0aGUgd3JvbmcgZm9ybWF0XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdCgnY291bGQgbm90IGlkZW50aWZ5IGZpbGUgZm9ybWF0LCBpdCBpcyBuZWl0ZXIgWExJRkYgKDEuMiBvciAyLjApIG5vciBYTUIvWFRCJykpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuIl0sIm5hbWVzIjpbInRzbGliXzEuX19leHRlbmRzIiwiZm9ybWF0IiwiVEVYVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0lBRUE7S0FNd0M7O2dCQU52QyxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFLEVBQ1I7b0JBQ0QsWUFBWSxFQUFFLEVBQUU7b0JBQ2hCLE9BQU8sRUFBRSxFQUFFO2lCQUNaOztJQUNzQyw4QkFB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","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n/**\r\n * Created by martin on 30.03.2017.\r\n * Guard that checks wether there is an active project selected.\r\n * If not, it redirects to the home page, where you can select one.\r\n */\r\n@Injectable()\r\nexport class ActiveProjectGuard implements CanActivate {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    routerState: RouterStateSnapshot\r\n  ): Observable<boolean>|Promise<boolean>|boolean {\r\n      if (this.translatorService.currentProject()) {\r\n        return true;\r\n      } else {\r\n        this.router.navigateByUrl('home');\r\n        return false;\r\n      }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {\r\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n  MatAutocompleteModule,\r\n  MatButtonModule, MatCardModule, MatCheckboxModule, MatDialogModule, MatExpansionModule, MatIconModule, MatInputModule, MatListModule,\r\n  MatMenuModule, MatOptionModule, MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule, MatSelectModule, MatSlideToggleModule, MatSnackBarModule,\r\n  MatToolbarModule, MatTooltipModule, MatTreeModule\r\n} from '@angular/material';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\n/**\r\n * All imports of used material components.\r\n */\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n      MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    FlexLayoutModule\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatProgressSpinnerModule,\r\n      MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    FlexLayoutModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' }}\r\n  ],\r\n})\r\nexport class AppMaterialModule { }\r\n","<div id=\"container\" fxLayout=\"column\">\r\n  <mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n      <span id=\"apptitle\">Tiny Translator</span>\r\n      <span>&nbsp;</span>\r\n      <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\" fxLayoutGap=\"10px\">\r\n        <app-language code=\"en\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"de\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"fr\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"en-us\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"ru\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"zh\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"ar\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"in\" [showCode]=\"false\"></app-language>\r\n        <app-language code=\"pt-br\" [showCode]=\"false\"></app-language>\r\n      </div>\r\n    </mat-toolbar-row>\r\n    <mat-toolbar-row>\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" matTooltip=\"Open menu... (configuration options, ...)\" i18n-matTooltip>\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <a mat-icon-button routerLink=\"/home\" routerLinkActive=\"active\" matTooltip=\"List of available projects...\" i18n-matTooltip>\r\n        <mat-icon>home</mat-icon>\r\n      </a>\r\n      <a mat-icon-button routerLink=\"/editproject\" routerLinkActive=\"active\" matTooltip=\"Details of the project (click to open)\" i18n-matTooltip>\r\n        <mat-icon>edit</mat-icon>\r\n      </a>\r\n      <a mat-icon-button routerLink=\"/translate\" routerLinkActive=\"active\" matTooltip=\"Translate the project\" i18n-matTooltip>\r\n        <mat-icon>translate</mat-icon>\r\n        {{currentProjectName() | abbreviate: 30}}\r\n      </a>\r\n      <!-- main menu -->\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"download()\"\r\n                matTooltip=\"export current translation state to file (download)\" i18n-matTooltip>\r\n          <mat-icon>save</mat-icon>\r\n          <span i18n>Save...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"publish()\" [disabled]=\"!publishEnabled()\"\r\n                matTooltip=\"publish translated state to Github...\" i18n-matTooltip>\r\n          <mat-icon>publish</mat-icon>\r\n          <span i18n>Publish...</span>\r\n        </button>\r\n        <button mat-menu-item [matMenuTriggerFor]=\"configMenu\">\r\n          <mat-icon>settings</mat-icon>\r\n          <span i18n>Settings...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"autoTranslate()\"\r\n          matTooltip=\"Translate all untranslated units with Google Translate\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n          <span i18n>Google Translate units...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"navigateToAutoTranslateSummary()\"\r\n                matTooltip=\"Open summary page of last autotranslate run\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n          <span i18n>Last results...</span>\r\n        </button>\r\n      </mat-menu>\r\n      <!-- config menu -->\r\n      <mat-menu #configMenu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"configureAutoTranslate()\"\r\n                matTooltip=\"configure Google Translate API Key\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n          <span i18n>Google Translate settings...</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"configureGithub()\"\r\n                matTooltip=\"configure Github API access\" i18n-matTooltip>\r\n          <span class=\"mat-icon\" id=\"githublogo\">&nbsp;</span>\r\n          <span i18n>Github access settings..</span>\r\n        </button>\r\n      </mat-menu>\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <div id=\"main\" fxFlex=\"1 1 auto\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <div id=\"footer\">\r\n    Version <span id=\"buildversion\">{{buildversion()}}</span>; buildtime <span id=\"buildtime\">{{buildtime()}}</span>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit, Optional} from '@angular/core';\r\nimport {AppConfig, APP_CONFIG} from './app.config';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {SwUpdate} from '@angular/service-worker';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {UpdateAvailableEvent} from '@angular/service-worker/src/low_level';\r\nimport {UpdateAvailableComponent} from './update-available/update-available.component';\r\nimport {ICommitData} from './file-accessors/common/i-file-access-service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app works!';\r\n\r\n  constructor(\r\n    @Inject(APP_CONFIG) private appConfig: AppConfig,\r\n    private translatorService: TinyTranslatorService,\r\n    private router: Router,\r\n    @Optional() private swUpdate: SwUpdate,\r\n    private matSnackBar: MatSnackBar\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.swUpdate) {\r\n      this.swUpdate.available.subscribe((event: UpdateAvailableEvent) => {\r\n        console.log('[App] Update available: current version is ', event.current, ', available version is', event.available);\r\n        this.matSnackBar.openFromComponent(UpdateAvailableComponent, {duration: 3000});\r\n      });\r\n    }\r\n  }\r\n\r\n  buildtime() {\r\n    return this.appConfig.BUILDTIME;\r\n  }\r\n\r\n  buildversion() {\r\n    return this.appConfig.BUILDVERSION;\r\n  }\r\n\r\n  currentProjectName(): string {\r\n    const project = this.translatorService.currentProject();\r\n    return project ? project.name : '';\r\n  }\r\n\r\n  /**\r\n   * Download using Browser functionality..\r\n   */\r\n  download() {\r\n    this.translatorService.downloadProject(this.translatorService.currentProject());\r\n  }\r\n\r\n  /**\r\n   * Publish to the configured backend (Github, ...)\r\n   */\r\n  publish() {\r\n    this.router.navigateByUrl('publishproject');\r\n  }\r\n\r\n  publishEnabled(): boolean {\r\n    return this.translatorService.currentProject() && this.translatorService.currentProject().canPublish();\r\n  }\r\n  /**\r\n   * Auto translate all untranslated units.\r\n   * Redirects to a config page, if Google Translate is currently not available.\r\n   * Otherwise auto translates all untranslated units..\r\n   */\r\n  autoTranslate() {\r\n    this.translatorService.canAutoTranslate().subscribe((canTranslate: boolean) => {\r\n      if (canTranslate) {\r\n        this.translatorService.autoTranslate().subscribe((summary) => {\r\n          console.log('Summary: ', summary.content(), summary); // TODO show Toast or result page...\r\n          this.translatorService.currentProject().setAutoTranslateSummaryReport(summary);\r\n          this.router.navigateByUrl('autotranslatesummary');\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl('configureautotranslate');\r\n      }\r\n    });\r\n  }\r\n\r\n  configureAutoTranslate() {\r\n    this.router.navigateByUrl('configureautotranslate');\r\n  }\r\n\r\n  navigateToAutoTranslateSummary() {\r\n    this.router.navigateByUrl('autotranslatesummary');\r\n  }\r\n\r\n  configureGithub() {\r\n    this.router.navigateByUrl('configuregithub');\r\n  }\r\n\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\nimport {environment} from '../environments/environment';\r\n/**\r\n * Created by martin on 23.03.2017.\r\n * Configuration Data of the application.\r\n */\r\n\r\nexport class AppConfig {\r\n  // URL to Google translate API (optional)\r\n  GOOGLETRANSLATE_API_ROOT_URL?: string;\r\n  // Your API Key, should not be set here, because it is secret\r\n  // can be typed in in the application, but test config needs it\r\n  GOOGLETRANSLATE_API_KEY?: string;\r\n  // a setting for tests!!\r\n  // if set to true, all autotranslations containing placeholder or tags will FAIL BY DESIGN\r\n  // Used to allow testing of report page and filters for failed translations.\r\n  GOOGLETRANSLATE_PROVOKE_FAILURES?: boolean;\r\n  // URL to Github API (optional)\r\n  GITHUB_API_ROOT_URL?: string;\r\n  // Your API Key, should not be set here, because it is secret\r\n  // can be typed in in the application, but test config needs it\r\n  GITHUB_API_KEY?: string;\r\n  GITHUB_PROVOKE_FAILURES?: boolean;\r\n  BUILDVERSION: string;\r\n  BUILDTIME: string;\r\n}\r\n\r\nexport const APP_CONFIG_VALUE: AppConfig = {\r\n  // set values here\r\n  'BUILDVERSION': '0.15.0',\r\n  'BUILDTIME': '2019-04-05', // TODO should be dynamic\r\n  GOOGLETRANSLATE_API_ROOT_URL: 'https://translation.googleapis.com/',\r\n  GOOGLETRANSLATE_API_KEY: environment.googletranslate_api_key,\r\n  GOOGLETRANSLATE_PROVOKE_FAILURES: environment.googletranslate_provoke_failures,\r\n  GITHUB_API_ROOT_URL: 'https://api.github.com/',\r\n  GITHUB_API_KEY: environment.github_api_key,\r\n  GITHUB_PROVOKE_FAILURES: environment.github_provoke_failures,\r\n};\r\n\r\nexport let APP_CONFIG = new InjectionToken<AppConfig>('app.config');\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ServiceWorkerModule} from '@angular/service-worker';\r\nimport {environment} from '../environments/environment';\r\n\r\nimport {APP_CONFIG, APP_CONFIG_VALUE} from './app.config';\r\nimport {routing, appRoutingProviders} from './app.routing';\r\n\r\nimport 'hammerjs';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProjectStarterComponent } from './project-starter/project-starter.component';\r\nimport {TinyTranslatorService} from './model/tiny-translator.service';\r\nimport { TranslationFileStatusComponent } from './translation-file-status/translation-file-status.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { TranslatePageComponent } from './translate-page/translate-page.component';\r\nimport { TranslateUnitComponent } from './translate-unit/translate-unit.component';\r\nimport {DownloaderService} from './file-accessors/download-upload/downloader.service';\r\nimport { TranslateUnitListComponent } from './translate-unit-list/translate-unit-list.component';\r\nimport { AbbreviatePipe } from './common/abbreviate.pipe';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport {ActiveProjectGuard} from './active-project.guard';\r\nimport {BackendServiceAPI} from './model/backend-service-api';\r\nimport {BackendLocalStorageService} from './model/backend-local-storage.service';\r\nimport {AutoTranslateServiceAPI} from './model/auto-translate-service-api';\r\nimport {AutoTranslateGoogleService} from './model/auto-translate-google.service';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { ProjectListComponent } from './project-list/project-list.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { CreateProjectPageComponent } from './create-project-page/create-project-page.component';\r\nimport { ProjectStatusComponent } from './project-status/project-status.component';\r\nimport {AsynchronousFileReaderService} from './file-accessors/download-upload/asynchronous-file-reader.service';\r\nimport { NormalizedMessageInputComponent } from './normalized-message-input/normalized-message-input.component';\r\nimport {TranslateUnitWarningConfirmDialogComponent} from './translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component';\r\nimport {AppMaterialModule} from './app-material.module';\r\nimport { EditProjectPageComponent } from './edit-project-page/edit-project-page.component';\r\nimport { ProjectEditorComponent } from './project-editor/project-editor.component';\r\nimport { ConfigureAutoTranslatePageComponent } from './configure-auto-translate-page/configure-auto-translate-page.component';\r\nimport { AutoTranslateSummaryPageComponent } from './auto-translate-summary-page/auto-translate-summary-page.component';\r\nimport { TranslationUnitFilterService } from './model/filters/translation-unit-filter.service';\r\nimport { FilterStatusComponent } from './filter-status/filter-status.component';\r\nimport { FilterPageComponent } from './filter-page/filter-page.component';\r\nimport { UpdateAvailableComponent } from './update-available/update-available.component';\r\nimport {TranslationFileUploadComponent} from './file-accessors/download-upload/translation-file-upload/translation-file-upload.component';\r\nimport {DownloadUploadService} from './file-accessors/download-upload/download-upload.service';\r\nimport {TranslationFileFromGithubComponent} from './file-accessors/github/translation-file-from-github/translation-file-from-github.component';\r\nimport {GithubAccessorService} from './file-accessors/github/github-accessor.service';\r\nimport {GithubConfigEditorComponent} from './file-accessors/github/github-config-editor/github-config-editor.component';\r\nimport {ConfigureGithubPageComponent} from './file-accessors/github/configure-github-page/configure-github-page.component';\r\nimport {FileExplorerComponent} from './file-accessors/common/file-explorer/file-explorer.component';\r\nimport {FileExplorerDialogComponent} from './file-accessors/common/file-explorer-dialog/file-explorer-dialog.component';\r\nimport {PublishProjectPageComponent} from './publish-project-page/publish-project-page.component';\r\nimport {GithubConfigEditorDialogComponent} from './file-accessors/github/github-config-editor-dialog/github-config-editor-dialog.component';\r\nimport {ConfirmDialogComponent} from './confirm-dialog/confirm-dialog.component';\r\nimport {SaveAsExplorerComponent} from './file-accessors/common/save-as-explorer/save-as-explorer.component';\r\nimport {FileToSaveComponent} from './file-accessors/common/file-to-save/file-to-save.component';\r\nimport {SaveAsExplorerDialogComponent} from './file-accessors/common/save-as-explorer-dialog/save-as-explorer-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AbbreviatePipe,\r\n    AppComponent,\r\n    AutoTranslateSummaryPageComponent,\r\n    ConfigureAutoTranslatePageComponent,\r\n    ConfigureGithubPageComponent,\r\n    ConfirmDialogComponent,\r\n    CreateProjectPageComponent,\r\n    EditProjectPageComponent,\r\n    FileToSaveComponent,\r\n    FileExplorerComponent,\r\n    FileExplorerDialogComponent,\r\n    FilterStatusComponent,\r\n    FilterPageComponent,\r\n    GithubConfigEditorComponent,\r\n    GithubConfigEditorDialogComponent,\r\n    HomePageComponent,\r\n    LanguageComponent,\r\n    NormalizedMessageInputComponent,\r\n    ProjectComponent,\r\n    ProjectEditorComponent,\r\n    ProjectListComponent,\r\n    ProjectStarterComponent,\r\n    ProjectStatusComponent,\r\n    PublishProjectPageComponent,\r\n    SaveAsExplorerComponent,\r\n    SaveAsExplorerDialogComponent,\r\n    TranslationFileStatusComponent,\r\n    TranslatePageComponent,\r\n    TranslateUnitComponent,\r\n    TranslateUnitListComponent,\r\n    TranslationFileUploadComponent,\r\n    TranslationFileFromGithubComponent,\r\n    TranslateUnitWarningConfirmDialogComponent,\r\n    UpdateAvailableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppMaterialModule,\r\n    routing,\r\n    ServiceWorkerModule.register(environment.base_href + 'ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    {provide: APP_CONFIG, useValue: APP_CONFIG_VALUE},\r\n    appRoutingProviders,\r\n    TinyTranslatorService,\r\n    AsynchronousFileReaderService,\r\n    DownloaderService,\r\n    DownloadUploadService,\r\n    GithubAccessorService,\r\n    ActiveProjectGuard,\r\n    {provide: BackendServiceAPI, useClass: BackendLocalStorageService},\r\n    {provide: AutoTranslateServiceAPI, useClass: AutoTranslateGoogleService},\r\n    TranslationUnitFilterService,\r\n  ],\r\n  entryComponents: [\r\n    ConfirmDialogComponent,\r\n    FileExplorerDialogComponent,\r\n    GithubConfigEditorDialogComponent,\r\n    SaveAsExplorerDialogComponent,\r\n    TranslateUnitWarningConfirmDialogComponent,\r\n    UpdateAvailableComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h3 i18n>Autotranslate Run Result</h3>\r\n<div *ngIf=\"!hasTranslateSummaryReport()\">\r\n  <p i18n>No Autotranslate run result available.</p>\r\n</div>\r\n<div *ngIf=\"hasTranslateSummaryReport()\">\r\n  <p>{{autoTranslateSummaryReport().content()}}</p>\r\n  <div *ngIf=\"ignoredResults().length > 0\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"50px\">\r\n      <h4 i18n>Ignored</h4>\r\n      <button fxFlexAlign=\"start\" mat-raised-button color=\"accent\" (click)=\"navigateToAutoTranslatedIgnored()\"\r\n              i18n matTooltip=\"show all untranslated that were ignored by auto translation\" i18n-matTooltip>navigate to ignored units</button>\r\n    </div>\r\n    <mat-list>\r\n      <mat-list-item *ngFor=\"let result of ignoredResults()\">\r\n        <h4 matLine>{{showTransUnitOfResult(result)}}</h4>\r\n        <p matLine>{{result.details()}}</p>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </div>\r\n  <div *ngIf=\"failedResults().length > 0\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"50px\">\r\n      <h4 i18n>Failed</h4>\r\n      <button fxFlexAlign=\"start\" mat-raised-button color=\"accent\" (click)=\"navigateToAutoTranslatedFailed()\"\r\n              i18n matTooltip=\"show all untranslated where auto translation failed\" i18n-matTooltip>navigate to failed units</button>\r\n    </div>\r\n    <mat-list>\r\n      <mat-list-item *ngFor=\"let result of failedResults()\">\r\n        <h4 matLine>{{showTransUnitOfResult(result)}}</h4>\r\n        <p matLine>{{result.details()}}</p>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutGap=\"50px\">\r\n    <button *ngIf=\"autoTranslateSummaryReport().success() > 0\"\r\n            fxFlexAlign=\"start\"\r\n            mat-raised-button color=\"accent\"\r\n            (click)=\"navigateToAutoTranslated()\"\r\n            i18n\r\n            matTooltip=\"show overview of auto translated units\" i18n-matTooltip>navigate to translated units</button>\r\n    <button\r\n            fxFlexAlign=\"start\"\r\n            mat-raised-button color=\"accent\"\r\n            (click)=\"navigateToContinueWork()\"\r\n            i18n\r\n            matTooltip=\"continue translation\" i18n-matTooltip>continue</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AutoTranslateSummaryReport} from '../model/auto-translate-summary-report';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationUnitFilterAll} from '../model/filters/translation-unit-filter-all';\r\nimport {TranslationUnitFilterAutoTranslated} from '../model/filters/translation-unit-filter-autotranslated';\r\nimport {AutoTranslateResult} from '../model/auto-translate-result';\r\nimport {TranslationUnitFilterAutoTranslatedFailed} from '../model/filters/translation-unit-filter-autotranslated-failed';\r\nimport {TranslationUnitFilterAutoTranslatedIgnored} from '../model/filters/translation-unit-filter-autotranslated-ignored';\r\nimport {\r\n  FILTER_AUTOTRANSLATED, FILTER_AUTOTRANSLATED_FAILED, FILTER_AUTOTRANSLATED_IGNORED,\r\n  TranslationUnitFilterService\r\n} from '../model/filters/translation-unit-filter.service';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\n\r\n@Component({\r\n  selector: 'app-auto-translate-summary-page',\r\n  templateUrl: './auto-translate-summary-page.component.html',\r\n  styleUrls: ['./auto-translate-summary-page.component.css']\r\n})\r\nexport class AutoTranslateSummaryPageComponent implements OnInit {\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  constructor(private translatorService: TinyTranslatorService,\r\n              private translationUnitFilterService: TranslationUnitFilterService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    const project = this.translatorService.currentProject();\r\n    if (project) {\r\n      this._autoTranslateSummaryReport = project.autoTranslateSummaryReport();\r\n    }\r\n    this.translationUnitFilterService.setAutotranslateSummaryReport(this._autoTranslateSummaryReport);\r\n  }\r\n\r\n  hasTranslateSummaryReport(): boolean {\r\n    return !isNullOrUndefined(this._autoTranslateSummaryReport);\r\n  }\r\n\r\n  autoTranslateSummaryReport() {\r\n    return this._autoTranslateSummaryReport;\r\n  }\r\n\r\n  ignoredResults(): AutoTranslateResult[] {\r\n    return (this._autoTranslateSummaryReport) ? this._autoTranslateSummaryReport.allResults().filter((result) => result.ignored()) : [];\r\n  }\r\n\r\n  failedResults(): AutoTranslateResult[] {\r\n    return (this._autoTranslateSummaryReport) ? this._autoTranslateSummaryReport.allResults().filter((result) => result.failed()) : [];\r\n  }\r\n\r\n  /**\r\n   * Show a brief overview of the transunit of the result.\r\n   * @param result\r\n   */\r\n  showTransUnitOfResult(result: AutoTranslateResult): string {\r\n    const tu: TranslationUnit = result.translationUnit();\r\n    if (tu) {\r\n      return tu.sourceContentNormalized().dislayText(true);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  navigateToAutoTranslated() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToAutoTranslatedFailed() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_FAILED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToAutoTranslatedIgnored() {\r\n    this.translatorService.currentProject().translationFileView.setActiveFilter(\r\n      this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_IGNORED));\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  navigateToContinueWork() {\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {isNullOrUndefined, isString} from '../common/util';\r\n\r\n/**\r\n * A Pipe to abbreviate long text.\r\n * The text is cut and .. is added at the end.\r\n * The length can be given as parameter.\r\n * Default is 20.\r\n * Examples:\r\n * 'abcdefghijklmnopqrstuvwxyz' | abbreviate -> 'abcdefghijklmnopqrst..'\r\n * 'abcdefghijklmnopqrstuvwxyz' | abbreviate:5 -> 'abcde..'\r\n */\r\n@Pipe({\r\n  name: 'abbreviate'\r\n})\r\nexport class AbbreviatePipe implements PipeTransform {\r\n\r\n  private DEFAULT_LENGTH = 20; // aabreviation length if not given as parameter\r\n\r\n  transform(value: string, lengthParam?: number): any {\r\n    const length = (!isNullOrUndefined(lengthParam))? lengthParam : this.DEFAULT_LENGTH;\r\n    if (isString(value)) {\r\n      if (value.length > length) {\r\n        return value.substring(0, length).concat('..');\r\n      } else {\r\n        return value;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n}\r\n","/**\r\n * Sammlung einfacher Hilfsfunktionen, die man ab und an mal braucht.\r\n */\r\n\r\n/**\r\n * Ersatz für deprecated node isNullOrUndefined-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isNullOrUndefined(value: any) {\r\n    return value === undefined || value === null;\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isString-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isString(value: any) {\r\n    return typeof value === 'string';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isBoolean-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isBoolean(value: any) {\r\n    return typeof value === 'boolean';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isNumber-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isNumber(value: any) {\r\n    return typeof value === 'number';\r\n}\r\n\r\n/**\r\n * Ersatz für deprecated node isArray-Funktion.\r\n * @param value\r\n * @return {boolean}\r\n */\r\nexport function isArray(value: any) {\r\n    return Array.isArray(value);\r\n}\r\n\r\n/**\r\n * Function to filter out duplicates.\r\n * Usage: anArray.filter( onlyUnique )\r\n * @param value\r\n * @param index\r\n * @param self\r\n * @return {boolean}\r\n */\r\nexport function onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n}\r\n\r\n/**\r\n * Liste als kommaseparierter String.\r\n * @param {string[]} list\r\n * @return {string}\r\n */\r\nexport function asCommaSeparatedList(list: string[]): string {\r\n    if (isNullOrUndefined(list)) {\r\n        return '';\r\n    }\r\n    let result = '';\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (i > 0) {\r\n            result = result + ',';\r\n        }\r\n        result = result + list[i];\r\n    }\r\n    return result;\r\n}\r\n","<h3 i18n>Google Translate status for current project</h3>\r\n<div *ngIf=\"autoTranslateDisabled()|async; else okBlock\">\r\n  <p><mat-icon color=\"primary\">error</mat-icon><span i18n>Google Translate is currently disabled due to the following reason:</span></p>\r\n  <p class=\"reason\">{{autoTranslateDisabledReason()|async}}</p>\r\n</div>\r\n<ng-template #okBlock>\r\n  <div>\r\n    <p><mat-icon>done</mat-icon><span i18n>Google Translate is ready to translate from {{sourceLanguage()}} to {{targetLanguage()}}</span></p>\r\n  </div>\r\n</ng-template>\r\n<h3 i18n>Google Translate Settings</h3>\r\n<div class=\"info\">\r\n  <p i18n>To use Google Translate you need an account on <a href=\"https://cloud.google.com\">Google Cloud Platform</a>.</p>\r\n  <p i18n>Then you have to create an API Key.</p>\r\n  <p><span i18n>For details follow:</span> <a href=\"https://support.google.com/cloud/answer/6158862?hl=en\" target=\"_blank\">create an API key for your Google Cloud Platform Console project</a></p>\r\n</div>\r\n<form fxLayout=\"column\">\r\n  <mat-form-field>\r\n    <input matInput [(ngModel)]=\"apiKey\" name=\"apiKey\" placeholder=\"API key\" i18n-placeholder\r\n    matTooltip=\"API Key will be stored in the local storage of your browser. It will not be sent to anywhere but the Google Translate Service.\" i18n-matTooltip>\r\n  </mat-form-field>\r\n  <button color=\"primary\" mat-raised-button i18n (click)=\"setApiKey()\"\r\n          matTooltip=\"API Key will be stored in the local storage of your browser. It will not be sent to anywhere but the Google Translate Service.\" i18n-matTooltip>\r\n    Store API Key\r\n  </button>\r\n</form>\r\n<h3 i18n>Google Translate Test</h3>\r\n<div *ngIf=\"autoTranslateDisabledTest()|async; else okBlockTest\">\r\n  <p><mat-icon color=\"primary\">error</mat-icon><span i18n>Google Translate cannot translate from {{sourceLanguageTest()}} to {{targetLanguageTest()}} due to the following reason:</span></p>\r\n  <p class=\"reason\">{{autoTranslateDisabledReasonTest()|async}}</p>\r\n</div>\r\n<ng-template #okBlockTest>\r\n  <div>\r\n    <p><mat-icon>done</mat-icon><span i18n>Google Translate is ready to translate from {{sourceLanguageTest()}} to {{targetLanguageTest()}}</span></p>\r\n    <p>{{testCallSourceResult}}</p>\r\n    <p>{{testCallTargetResult}}</p>\r\n  </div>\r\n</ng-template>\r\n<form fxLayout=\"column\">\r\n  <mat-form-field>\r\n    <input matInput [(ngModel)]=\"_sourceLanguageTest\" name=\"_sourceLanguageTest\" placeholder=\"Source language code\" i18n-placeholder>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <input matInput [(ngModel)]=\"_targetLanguageTest\" name=\"_targetLanguageTest\" placeholder=\"Target language code\" i18n-placeholder>\r\n  </mat-form-field>\r\n  <button mat-raised-button color=\"accent\" i18n (click)=\"testCall()\"\r\n          matTooltip=\"Test a call\" i18n-matTooltip>\r\n    Test\r\n  </button>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\nconst TEST_MESSAGE = 'Hello world!';\r\n\r\n@Component({\r\n  selector: 'app-configure-auto-translate-page',\r\n  templateUrl: './configure-auto-translate-page.component.html',\r\n  styleUrls: ['./configure-auto-translate-page.component.css']\r\n})\r\nexport class ConfigureAutoTranslatePageComponent implements OnInit {\r\n\r\n  apiKey: string; // connected to input field\r\n\r\n  _sourceLanguage: string;\r\n  _targetLanguage: string;\r\n  _sourceLanguageTest: string;\r\n  _targetLanguageTest: string;\r\n  testCallSourceResult: string;\r\n  testCallTargetResult: string;\r\n\r\n  constructor(private translatorService: TinyTranslatorService) {\r\n    if (this.translatorService.currentProject() && this.translatorService.currentProject().canTranslate()) {\r\n      this._sourceLanguage = this.translatorService.currentProject().translationFile.sourceLanguage();\r\n      this._targetLanguage = this.translatorService.currentProject().translationFile.targetLanguage();\r\n    }\r\n    this._sourceLanguageTest = 'en';\r\n    this._targetLanguageTest = 'de';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiKey = this.translatorService.autoTranslateApiKey();\r\n  }\r\n\r\n  autoTranslateDisabled(): Observable<boolean> {\r\n    return this.translatorService.canAutoTranslate().pipe(map((val) => !val));\r\n  }\r\n\r\n  autoTranslateDisabledReason(): Observable<string> {\r\n    return this.translatorService.autoTranslateDisabledReason();\r\n  }\r\n\r\n  sourceLanguage(): string {\r\n    return this._sourceLanguage;\r\n  }\r\n\r\n  targetLanguage(): string {\r\n    return this._targetLanguage;\r\n  }\r\n\r\n  autoTranslateDisabledTest(): Observable<boolean> {\r\n    return this.translatorService.canAutoTranslateForLanguages(this._sourceLanguageTest, this._targetLanguageTest).pipe(map((val) => !val));\r\n  }\r\n\r\n  autoTranslateDisabledReasonTest(): Observable<string> {\r\n    return this.translatorService.autoTranslateDisabledReasonForLanguages(this._sourceLanguageTest, this._targetLanguageTest);\r\n  }\r\n\r\n  sourceLanguageTest(): string {\r\n    return this._sourceLanguageTest;\r\n  }\r\n\r\n  targetLanguageTest(): string {\r\n    return this._targetLanguageTest;\r\n  }\r\n\r\n  setApiKey() {\r\n    this.translatorService.setAutoTranslateApiKey(this.apiKey);\r\n  }\r\n\r\n  testCall() {\r\n    this.testCallSourceResult = null;\r\n    this.testCallTargetResult = null;\r\n    if (this._sourceLanguageTest !== 'en') {\r\n      this.translatorService.testAutoTranslate(TEST_MESSAGE, 'en', this._sourceLanguageTest)\r\n        .subscribe((translationToSource) => {\r\n          this.testCallSourceResult = translationToSource;\r\n          this.translatorService.testAutoTranslate(translationToSource, this._sourceLanguageTest, this._targetLanguageTest)\r\n            .subscribe((translationToTarget) => {\r\n              this.testCallTargetResult = translationToTarget;\r\n            });\r\n        });\r\n    } else {\r\n      this.testCallSourceResult = TEST_MESSAGE;\r\n      this.translatorService.testAutoTranslate(this.testCallSourceResult, this._sourceLanguageTest, this._targetLanguageTest)\r\n        .subscribe((translationToTarget) => {\r\n          this.testCallTargetResult = translationToTarget;\r\n        });\r\n    }\r\n  }\r\n}\r\n","<h3 matDialogTitle>{{question}}</h3>\n<div mat-dialog-content>\n  <p *ngIf=\"info\" class=\"info\">{{info}}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button color=\"primary\" matDialogClose (click)=\"cancel()\" i18n>Cancel</button>\n  <button mat-button color=\"primary\" matDialogClose (click)=\"accept()\" i18n>Accept</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\nexport interface ConfirmDialogData {\n  question: string;\n  info: string;\n}\n\n/**\n * Dialog used to confirm simple questions.\n * There are 2 possible results:\n * false: User says no to the question.\n * true: User says yes.\n */\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  question: string;\n  info: string;\n\n  constructor(private dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) private data: ConfirmDialogData) { }\n\n  ngOnInit() {\n    this.question = this.data.question;\n    this.info = this.data.info;\n  }\n\n  accept() {\n    this.dialogRef.close(true);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n","<app-project-starter (addProject)=\"addProject($event)\"></app-project-starter>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-project-page',\r\n  templateUrl: './create-project-page.component.html',\r\n  styleUrls: ['./create-project-page.component.css']\r\n})\r\nexport class CreateProjectPageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public addProject(newProject: TranslationProject) {\r\n      this.translatorService.addProject(newProject);\r\n      this.translatorService.setCurrentProject(newProject);\r\n      this.router.navigateByUrl('/translate');\r\n  }\r\n\r\n}\r\n","<app-project-editor [project]=\"currentProject()\" (onEditProject)=\"editProject($event)\"></app-project-editor>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n/**\r\n * Page to show and edit some properties of the current project.\r\n * (name, workflowType).-\r\n */\r\n@Component({\r\n  selector: 'app-edit-project-page',\r\n  templateUrl: './edit-project-page.component.html',\r\n  styleUrls: ['./edit-project-page.component.css']\r\n})\r\nexport class EditProjectPageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public editProject(newProject: TranslationProject) {\r\n    this.translatorService.setCurrentProject(newProject);\r\n    this.translatorService.commitChanges(newProject);\r\n    this.router.navigateByUrl('/translate');\r\n  }\r\n\r\n  public currentProject(): TranslationProject {\r\n    return this.translatorService.currentProject();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {DownloadUploadService} from '../download-upload/download-upload.service';\nimport {IFileAccessService} from './i-file-access-service';\nimport {FileAccessorType} from './file-accessor-type';\nimport {GithubAccessorService} from '../github/github-accessor.service';\n\n/**\n * This service returns a suitable service used to load and save a translation file.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileAccessServiceFactoryService {\n\n  constructor(\n      private downloadUploadService: DownloadUploadService,\n      private githubAccessorService: GithubAccessorService\n  ) { }\n\n  getFileAccessService(filetype: FileAccessorType): IFileAccessService {\n    switch (filetype) {\n      case FileAccessorType.DOWNLOAD_UPLOAD:\n        return this.downloadUploadService;\n      case FileAccessorType.GITHUB:\n        return this.githubAccessorService;\n      default:\n        throw new Error('Unknown file type ' + filetype);\n    }\n  }\n\n}\n","export enum FileAccessorType {\r\n    DOWNLOAD_UPLOAD = 'Browser Upload and Download',\r\n    GITHUB = 'Github'\r\n}\r\n","<h1 mat-dialog-title i18n *ngIf=\"selectableFileType === 'file'\">Select a file</h1>\n<h1 mat-dialog-title i18n *ngIf=\"selectableFileType === 'dir'\">Select a directory</h1>\n<h1 mat-dialog-title i18n *ngIf=\"!selectableFileType\">Select a file or directory</h1>\n<div mat-dialog-content id=\"content\">\n  <ng-container *ngIf=\"root | async; let currentRoot; else loadingOrError\">\n    <h2 mat-dialog-title>{{currentRoot?.configuration.label}}</h2>\n    <app-file-explorer\n            [configurations]=\"configurations\"\n            [root]=\"currentRoot\"\n            [file]=\"file\"\n            [selectableFileType] = \"selectableFileType\"\n            (selectedFile)=\"selectedFile($event)\" >\n    </app-file-explorer>\n  </ng-container>\n  <ng-template #loadingOrError>\n    <div *ngIf=\"errorLoading$ | async; let errorMessage; else loading\">\n      <ng-container i18n>Error loading: {{errorMessage}}.</ng-container>\n    </div>\n    <ng-template #loading>\n      <ng-container i18n>Loading ...</ng-container>\n    </ng-template>\n  </ng-template>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"cancel()\" i18n>Cancel</button>\n  <button mat-button color=\"primary\" [disabled]=\"!isFileSelected()\" [mat-dialog-close]=\"result()\" cdkFocusInitial i18n>Ok</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {IFileDescription} from '../i-file-description';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {FileAccessServiceFactoryService} from '../file-access-service-factory.service';\nimport {catchError} from 'rxjs/operators';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\n\nexport interface FileExplorerDialogData {\n  configurations?: IFileAccessConfiguration[];\n  configuration?: IFileAccessConfiguration;\n  file?: IFileDescription;\n  selectableFileType?: 'file'|'dir';\n}\n\n/**\n * A dialog containing a file explorer.\n */\n@Component({\n  selector: 'app-file-explorer-dialog',\n  templateUrl: './file-explorer-dialog.component.html',\n  styleUrls: ['./file-explorer-dialog.component.scss']\n})\nexport class FileExplorerDialogComponent implements OnInit {\n\n  configurations?: IFileAccessConfiguration[];\n  configuration: IFileAccessConfiguration;\n  file: IFileDescription;\n  selectableFileType: 'file'|'dir';\n  root: Observable<IFileDescription>;\n  errorLoading$ = new Subject<string>();\n  _selectedFile: IFileDescription;\n\n  constructor(\n      private dialogRef: MatDialogRef<FileExplorerDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) data: FileExplorerDialogData,\n      private fileAccessServiceFactoryService: FileAccessServiceFactoryService) {\n    this.configurations = data.configurations;\n    this.configuration = data.configuration;\n    this.file = data.file;\n    this.selectableFileType = data.selectableFileType;\n    this._selectedFile = (this.file) ? this.file : null;\n  }\n\n  ngOnInit() {\n    const accessService = this.fileAccessServiceFactoryService.getFileAccessService(this.configuration.type);\n    const rootDir = this.configuration.rootDescription();\n    this.root = accessService.load(rootDir).pipe(\n        catchError((error) => {\n          this.errorLoading$.next(error.message);\n          return of(undefined);\n        }));\n  }\n\n  selectedFile(file: IFileDescription) {\n    console.log('selected file', file);\n    this._selectedFile = file;\n  }\n\n  isFileSelected(): boolean {\n    return !!this._selectedFile;\n  }\n\n  result() {\n    return this._selectedFile;\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n}\n","<form [formGroup]=\"form\">\n  <mat-form-field *ngIf=\"configurations\">\n    <mat-label i18n>select a configuration..</mat-label>\n    <mat-select placeholder=\"select a configuration..\" i18n-placeholder formControlName=\"selectedConfigurationIndex\" name=\"selectedConfigurationIndex\">\n      <mat-option *ngFor=\"let accessor of configurations; let i = index\" [value]=\"i\">{{accessor.type}} {{accessor.shortLabel()}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-tree *ngIf=\"dataSource\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"file-explorer-tree\">\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding\n                   (click)=\"selected(node)\"\n                   [ngClass]=\"{ 'background-highlight': activeNode === node }\">\n      <button mat-icon-button disabled></button>\n      {{node.item}}\n    </mat-tree-node>\n    <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding\n                   (click)=\"selected(node)\"\n                   [ngClass]=\"{ 'background-highlight': activeNode === node }\">\n      <button mat-icon-button matTreeNodeToggle>\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n        </mat-icon>\n      </button>\n      <mat-icon *ngIf=\"node.maticon\">{{node.maticon}}</mat-icon>\n      <img *ngIf=\"node.icon\" class=\"mat-icon\" src=\"assets/{{node.icon}}\">\n      {{node.item}}\n      <mat-progress-bar *ngIf=\"node.isLoading\"\n                        mode=\"indeterminate\"\n                        class=\"tree-progress-bar\">\n      </mat-progress-bar>\n    </mat-tree-node>\n  </mat-tree>\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {IFileDescription} from '../i-file-description';\nimport {BehaviorSubject, EMPTY, merge, Observable, of} from 'rxjs';\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\nimport {expand, last, map, } from 'rxjs/operators';\nimport {IFileAccessService} from '../i-file-access-service';\nimport {FileAccessServiceFactoryService} from '../file-access-service-factory.service';\nimport {isNullOrUndefined} from '../../../common/util';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n/** Flat node with expandable and level information */\nclass DynamicFlatNode {\n\n  item: string;\n  maticon?: string;\n  icon?: string;\n\n  constructor(public node: IFileDescription, public level = 1, public expandable = false,\n              public isLoading = false) {\n    if (level === 0) {\n      const configLabel = node.configuration.fullLabel();\n      this.item = configLabel.label;\n      this.maticon = configLabel.maticon;\n      this.icon = configLabel.icon;\n    } else {\n      this.item = node.name;\n    }\n  }\n}\n\n/**\n * Database for dynamic file accesss data. When expanding a node in the tree, the data source will need to fetch\n * the descendants data from the service.\n */\nclass FileData {\n\n  private rootLevelNodes: IFileDescription[];\n\n  constructor(root: IFileDescription, private accessService: IFileAccessService, private onlyDirectories: boolean) {\n    this.rootLevelNodes = [root];\n  }\n\n  /** Initial data from database */\n  initialData(): DynamicFlatNode[] {\n    return this.rootLevelNodes.map(dir => new DynamicFlatNode(dir, 0, true));\n  }\n\n  getChildren(node: IFileDescription): Observable<IFileDescription[] | undefined> {\n    if (node.type === 'file') {\n      return of(undefined);\n    } else {\n      const children = node.children;\n      if (isNullOrUndefined(children)) {\n        return this.accessService.load(node).pipe(\n            map((result: IFileDescription) => {\n                return result.children.filter(fd => !this.onlyDirectories || fd.type === 'dir');\n            })\n        );\n      } else {\n        return of(children.filter(fd => !this.onlyDirectories || fd.type === 'dir'));\n      }\n    }\n  }\n\n  isExpandable(node: IFileDescription): boolean {\n    return node.type === 'dir';\n  }\n}\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\nclass DynamicFileDataSource {\n\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\n              private database: FileData) {}\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this.treeControl.expansionModel.changed.subscribe(change => {\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\n          (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: DynamicFlatNode, expandNode: boolean) {\n    const children = this.database.getChildren(node.node);\n    const index = this.data.indexOf(node);\n    if (index < 0) { // If cannot find the node, no op\n      return;\n    }\n\n    node.isLoading = true;\n    children.subscribe(childrenDescr => {\n      if (expandNode) {\n        const nodes = childrenDescr.map(filedescr =>\n            new DynamicFlatNode(filedescr, node.level + 1, this.database.isExpandable(filedescr)));\n        this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n        && this.data[i].level > node.level; i++, count++) {}\n        this.data.splice(index + 1, count);\n      }\n\n      // notify the change\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }, (error) => {\n      console.log('error loading children', error); // TODO\n      node.isLoading = false;\n    });\n  }\n\n  /**\n   * Open the tree up to the given node.\n   * @param node node to be visible\n   * @param callBack called when node is contained in the tree.\n   */\n  openNode(node: IFileDescription, callBack: (node: DynamicFlatNode) => void) {\n    const start: {data: DynamicFlatNode[], index: number, path: string, pathIndex: number}\n      = {data: this.data, index: 0, path: node.path, pathIndex: 0};\n    of(start).pipe(\n      expand(current => {\n        if (current.index < 0 || current.pathIndex < 0) {\n          return EMPTY;\n        } else {\n          return this.openSubdir(current);\n        }\n      }),\n      last()\n    ).subscribe(current => {\n      this.dataChange.next(current.data);\n      if (current.index >= 0) {\n        callBack(current.data[current.index]);\n      }\n    });\n  }\n\n  openSubdir(current: {data: DynamicFlatNode[], index: number, path: string, pathIndex: number})\n    : Observable<{data: DynamicFlatNode[], index: number, path: string, pathIndex: number}> {\n    if (current.index < 0 || current.pathIndex < 0) {\n      return of(current);\n    }\n    const nodeToExpand = current.data[current.index];\n    const pathParts = (current.path) ? current.path.split('/') : [];\n    if (!nodeToExpand || current.pathIndex >= pathParts.length) {\n      return of({data: current.data, index: current.index, path: current.path, pathIndex: -1});\n    }\n    const dirNameToOpen = pathParts[current.pathIndex];\n    return this.database.getChildren(nodeToExpand.node).pipe(\n      map((childrenDescr: IFileDescription[]) => {\n        const nodes = childrenDescr.map(filedescr =>\n          new DynamicFlatNode(filedescr, nodeToExpand.level + 1, this.database.isExpandable(filedescr)));\n        const newData = current.data.slice();\n        newData.splice(current.index + 1, 0, ...nodes);\n        const indexInNewNodes = nodes.findIndex((node) => node.node.name === dirNameToOpen);\n        if (indexInNewNodes < 0) {\n          return {data: current.data, index: -1, path: current.path, pathIndex: current.pathIndex};\n        } else {\n          const newIndex = current.index + 1 + indexInNewNodes;\n          return {\n            data: newData,\n            index: newIndex,\n            path: current.path,\n            pathIndex: current.pathIndex + 1\n          };\n        }\n      })\n    );\n  }\n}\n\n@Component({\n  selector: 'app-file-explorer',\n  templateUrl: './file-explorer.component.html',\n  styleUrls: ['./file-explorer.component.scss']\n})\nexport class FileExplorerComponent implements OnInit {\n\n  /**\n   * The selectable configurations.\n   * If null, there will be no selection.\n   */\n  @Input() configurations?: IFileAccessConfiguration[];\n\n  /**\n   * Root file (a directory) to be shown in the explorer.\n   */\n  @Input() root: IFileDescription;\n\n  /**\n   * Selected file when starting the component.\n   */\n  @Input() file: IFileDescription;\n\n  /**\n   * Determine what sort of entries can be selected.\n   * 'file': only files.\n   * 'dir': only directories\n   * undefined: everything.\n   */\n  @Input() selectableFileType?: 'file'|'dir';\n\n  /**\n   * The selected file node.\n   */\n  @Output() selectedFile: EventEmitter<IFileDescription> = new EventEmitter<IFileDescription>();\n\n  form: FormGroup;\n  _currentRoot: IFileDescription;\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n  dataSource: DynamicFileDataSource;\n\n  activeNode: DynamicFlatNode;\n\n  getLevel = (node: DynamicFlatNode) => node.level;\n\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\n\n  constructor(private formBuilder: FormBuilder, private fileAccessServiceFactoryService: FileAccessServiceFactoryService) {\n  }\n\n  ngOnInit() {\n    this.currentRoot = this.root.configuration.rootDescription();\n    this.initForm();\n    this.form.valueChanges.subscribe((val) => {\n      this.currentRoot = this.configurations[val.selectedConfigurationIndex].rootDescription();\n    });\n  }\n\n  initForm() {\n    if (!this.form) {\n      const index = (!this.root || !this.configurations) ?\n        0 :\n        this.configurations.findIndex(conf => conf.id === this.root.configuration.id);\n      this.form = this.formBuilder.group(\n        {\n          selectedConfigurationIndex: [index]\n        }\n      );\n    }\n  }\n\n  get currentRoot(): IFileDescription {\n    return this._currentRoot;\n  }\n\n  set currentRoot(newRoot: IFileDescription) {\n    if (newRoot) {\n      const accessService = this.fileAccessServiceFactoryService.getFileAccessService(newRoot.configuration.type);\n      const database = new FileData(newRoot, accessService, (this.selectableFileType === 'dir'));\n      this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n      this.dataSource = new DynamicFileDataSource(this.treeControl, database);\n\n      this.dataSource.data = database.initialData();\n      if (this.file && !this._currentRoot) {\n        this.dataSource.openNode(this.file, (node) => { this.activeNode = node; });\n      } else {\n        this.dataSource.openNode(newRoot, (node) => {\n          this.activeNode = node;\n          this.selected(this.activeNode);\n        });\n      }\n      if (this.fileTypeMatches(newRoot)) {\n        this.selectedFile.emit(newRoot);\n      }\n    } else {\n      this.dataSource = null;\n    }\n    this._currentRoot = newRoot;\n  }\n\n  selected(node: DynamicFlatNode) {\n    if (node && this.fileTypeMatches(node.node)) {\n      this.selectedFile.emit(node.node);\n      this.activeNode = node;\n    } else {\n      this.selectedFile.emit(null);\n      this.activeNode = null;\n    }\n  }\n\n  private fileTypeMatches(file: IFileDescription): boolean {\n    if (isNullOrUndefined(this.selectableFileType)) {\n      return true;\n    } else {\n      return this.selectableFileType === file.type;\n    }\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\">\n  <mat-icon *ngIf=\"configuration.fullLabel().maticon\">{{configuration.fullLabel().maticon}}</mat-icon>\n  <img *ngIf=\"configuration.fullLabel().icon\" class=\"mat-icon\" src=\"assets/{{configuration.fullLabel().icon}}\">\n  <p>{{configuration.fullLabel().label}}/{{file.path}}</p>\n  <ng-container *ngIf=\"configurations\">\n    <button color=\"accent\" mat-icon-button (click)=\"openSaveAsExplorer()\"\n            matTooltip=\"Select another location...\" i18n-matTooltip>\n      <mat-icon>edit</mat-icon>\n    </button>\n  </ng-container>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {IFileDescription} from '../i-file-description';\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../file-explorer-dialog/file-explorer-dialog.component';\nimport {MatDialog} from '@angular/material';\nimport {SaveAsExplorerDialogComponent, SaveAsExplorerDialogData} from '../save-as-explorer-dialog/save-as-explorer-dialog.component';\n\n/**\n * A component showing a file.\n * Normally readonly, but if you set \"configurations\", there will be a button opening a save as dialog.\n */\n@Component({\n  selector: 'app-file-to-save',\n  templateUrl: './file-to-save.component.html',\n  styleUrls: ['./file-to-save.component.scss']\n})\nexport class FileToSaveComponent implements OnInit, OnChanges {\n\n  /**\n   * The configurations that can be used to save file.\n   * If set, a save as dialog can be opened.\n   */\n  @Input() configurations: IFileAccessConfiguration[];\n\n  /**\n   * The file to show.\n   */\n  @Input() file: IFileDescription;\n\n  /**\n   * The file selected in the save as dialog.\n   */\n  @Output() selectedFile = new EventEmitter<IFileDescription>();\n\n  configuration: IFileAccessConfiguration;\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.configuration = this.file.configuration;\n  }\n\n  openSaveAsExplorer() {\n    const dialogRef = this.dialog.open(SaveAsExplorerDialogComponent, {\n      data: {\n        configurations: this.configurations,\n        configuration: this.configuration,\n        file: this.file\n      } as SaveAsExplorerDialogData\n    });\n    dialogRef.afterClosed().subscribe((result: IFileDescription) => {\n      if (result) {\n        this.selectedFile.emit(result);\n      }\n    });\n  }\n}\n","import {IFile} from './i-file';\r\nimport {IFileDescription} from './i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\n\r\ninterface SerializedFormV1 {\r\n    version: '1';\r\n    description: string;\r\n    name: string;\r\n    size: number;\r\n    content: string;\r\n}\r\n\r\nexport class GenericFile implements IFile {\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GenericFile {\r\n        const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n        return new GenericFile(\r\n            serializationService.deserializeIFileDescription(v1Object.description),\r\n            v1Object.name,\r\n            v1Object.size,\r\n            v1Object.content);\r\n    }\r\n\r\n    constructor(public description: IFileDescription, public name: string, public size: number, public content: string) { }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            version: '1',\r\n            description: this.description.serialize(serializationService),\r\n            name: this.name,\r\n            content: this.content,\r\n            size: this.size\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    /**\r\n     * Return a copy that has some edited content.\r\n     * @param newContent the changed content\r\n     */\r\n    public copyWithNewContent(newContent: string): IFile {\r\n        return new GenericFile(this.description, this.name, newContent.length, newContent);\r\n    }\r\n\r\n    /**\r\n     * Create a copy that can be stored under a new location.\r\n     * @param saveAs new location to save file\r\n     */\r\n    copyForNewDescription(saveAs: IFileDescription): IFile {\r\n        return new GenericFile(saveAs, this.name, this.content.length, this.content);\r\n    }\r\n\r\n}\r\n","/**\r\n * Interface to read and save file like objects from a backend system.\r\n */\r\nimport {Observable} from 'rxjs';\r\nimport {IFile} from './i-file';\r\nimport {IFileAccessConfiguration} from './i-file-access-configuration';\r\nimport {IFileDescription} from './i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\n\r\n/**\r\n * Data needed to save a file.\r\n */\r\nexport interface ICommitData {\r\n    message: string;\r\n    override?: boolean; // if file to save exists and this is false, an error occures\r\n}\r\n\r\n// changed: if existing file was changed after the initial load\r\n// unchanged: if existing file was not changed after the initial load\r\n// exists_not: if file does not exist\r\nexport enum FileStatus {\r\n    CHANGED = 'CHANGED',\r\n    UNCHANGED = 'UNCHANGED',\r\n    'EXISTS_NOT' = 'EXISTS_NOT'\r\n}\r\n\r\nexport interface IFileStats {\r\n    status: FileStatus;\r\n}\r\n\r\nexport interface IFileAccessService {\r\n\r\n    /**\r\n     * Load a file from the backend system.\r\n     * @param description backend dependent description of the file to load.\r\n     * @return Observable of the loaded file or a directory description.\r\n     */\r\n    load(description: IFileDescription): Observable<IFile|IFileDescription>;\r\n\r\n    /**\r\n     * Save a file in the backend.\r\n     * @param file file loaded from the same backend.\r\n     * @param commitData additional data needed to store it in the backend.\r\n     * @return saved file if successful.\r\n     */\r\n    save(file: IFile, commitData?: ICommitData): Observable<IFile>;\r\n\r\n    /**\r\n     * Get some infos about a file.\r\n     * @param file file (existing or not)\r\n     */\r\n    stats(file: IFile): Observable<IFileStats>;\r\n\r\n    /**\r\n     * Serialize a configuration to store it.\r\n     * @param configuration configuration to be serialized.\r\n     * @param serializationService service to be used.\r\n     * @return serialized form that can be deserialized.\r\n     */\r\n    serialize(serializationService: SerializationService, configuration: IFileAccessConfiguration): string;\r\n\r\n    /**\r\n     * Create a configuration from a stored string (generated by serialize()).\r\n     * @param serializationService service to be used.\r\n     * @param serialzedConfiguration stored configuration string\r\n     * @return deserialized version.\r\n     */\r\n    deserialize(serializationService: SerializationService, serialzedConfiguration: string): IFileAccessConfiguration;\r\n}\r\n","<h1 mat-dialog-title i18n>Select a file to save</h1>\n<div mat-dialog-content id=\"content\">\n  <app-save-as-explorer\n          [configurations]=\"configurations\"\n          [file]=\"file\"\n          (selectedFile)=\"selectedFile($event)\">\n  </app-save-as-explorer>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"cancel()\" i18n>Cancel</button>\n  <button mat-button [disabled]=\"!isFileSelected()\" [mat-dialog-close]=\"result()\" cdkFocusInitial i18n>Ok</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {IFileDescription} from '../i-file-description';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\n\nexport interface SaveAsExplorerDialogData {\n  configurations?: IFileAccessConfiguration[];\n  configuration?: IFileAccessConfiguration;\n  file?: IFileDescription;\n}\n\n/**\n * A Dialog to choose a file to save.\n */\n@Component({\n  selector: 'app-save-as-explorer-dialog',\n  templateUrl: './save-as-explorer-dialog.component.html',\n  styleUrls: ['./save-as-explorer-dialog.component.scss']\n})\nexport class SaveAsExplorerDialogComponent implements OnInit {\n\n  configurations: IFileAccessConfiguration[];\n  file: IFileDescription;\n  _result: IFileDescription;\n\n  constructor(private dialogRef: MatDialogRef<SaveAsExplorerDialogData>,\n              @Inject(MAT_DIALOG_DATA) data: SaveAsExplorerDialogData) {\n    this.configurations = data.configurations;\n    this.file = data.file;\n    this._result = this.file;\n  }\n\n  ngOnInit() {\n  }\n\n  selectedFile(f: IFileDescription) {\n    this._result = f;\n  }\n\n  isFileSelected(): boolean {\n    return !!this._result;\n  }\n\n  result(): IFileDescription {\n    return this._result;\n  }\n\n  cancel() {\n    this.dialogRef.close(null);\n  }\n}\n","<form [formGroup]=\"form\">\n  <app-file-explorer\n          [configurations]=\"configurations\"\n          [root]=\"configuration.rootDescription()\"\n          [file]=\"file\"\n          (selectedFile)=\"setSelectedFileFromExplorer($event)\">\n  </app-file-explorer>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <mat-form-field fxFlex=\"90%\">\n      <mat-label i18n>name</mat-label>\n      <input type=\"text\" placeholder=\"name\" i18n-placeholder matInput formControlName=\"name\" name=\"name\"/>\n    </mat-form-field>\n  </div>\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IFileDescription} from '../i-file-description';\nimport {IFileAccessConfiguration} from '../i-file-access-configuration';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-save-as-explorer',\n  templateUrl: './save-as-explorer.component.html',\n  styleUrls: ['./save-as-explorer.component.css']\n})\nexport class SaveAsExplorerComponent implements OnInit {\n\n  @Input() configurations: IFileAccessConfiguration[];\n  @Input() file: IFileDescription;\n  private _selectedFileInExplorer: IFileDescription;\n  @Output() selectedFile = new EventEmitter<IFileDescription>();\n\n  configuration: IFileAccessConfiguration;\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.configuration = this.file.configuration;\n    this._selectedFileInExplorer = this.file;\n    this.form.valueChanges.subscribe(val => {\n      if (val.name) {\n        this.selectedFile.emit(this._selectedFileInExplorer.createFileDescription(val.name));\n      }\n    });\n  }\n\n  private initForm() {\n    if (!this.form) {\n      this.form = this.formBuilder.group({\n        name: [this.file.name]\n      });\n    }\n  }\n\n  setSelectedFileFromExplorer(newFile: IFileDescription) {\n    this._selectedFileInExplorer = newFile;\n    if (newFile && newFile.type === 'file') {\n      this.form.patchValue({\n        name: newFile.name\n      });\n    } else {\n      this.selectedFile.emit(this._selectedFileInExplorer.createFileDescription(this.form.value.name));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {IFile} from '../common/i-file';\r\n\r\n/**\r\n * Service to read a file.\r\n * (File means an uploaded Blob file object)\r\n * It gives an observable based API instead of just using basic FileReader.\r\n */\r\n\r\ninterface FileResult {\r\n  name: string;\r\n  size: number;\r\n  content: string;\r\n}\r\n\r\n@Injectable()\r\nexport class AsynchronousFileReaderService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Asynchronously read an uploaded file.\r\n   * @param file the file to (may be null, then the Observable will return result with name and content null)\r\n   * @return Observable of file name and content.\r\n   */\r\n  public readFile(file: File): Observable<FileResult> {\r\n    const subject = new ReplaySubject<FileResult>();\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const fileContent = reader.result as string;\r\n        subject.next({name: file.name, size: file.size, content: fileContent});\r\n        subject.complete();\r\n      };\r\n      reader.onerror = () => {\r\n        subject.error(reader.error);\r\n      };\r\n      reader.onabort = () => {\r\n        subject.error('read aborted');\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      subject.next({name: null, size: 0, content: null});\r\n      subject.complete();\r\n    }\r\n    return subject;\r\n  }\r\n\r\n}\r\n","import {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {DownloadUploadFileDescription} from './download-upload-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.DOWNLOAD_UPLOAD;\r\n    version: '1';\r\n}\r\n\r\nexport class DownloadUploadConfiguration implements IFileAccessConfiguration {\r\n\r\n    static _instance = new DownloadUploadConfiguration();\r\n\r\n    readonly type = FileAccessorType.DOWNLOAD_UPLOAD;\r\n\r\n    readonly id = '0';\r\n\r\n    public static singleInstance() {\r\n        return this._instance;\r\n    }\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): DownloadUploadConfiguration {\r\n        return this._instance;\r\n    }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            accessorType: FileAccessorType.DOWNLOAD_UPLOAD,\r\n            version: '1'\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    public equals(another: IFileAccessConfiguration): boolean {\r\n        return another && another.type === FileAccessorType.DOWNLOAD_UPLOAD;\r\n    }\r\n\r\n    public shortLabel(): string {\r\n        return '';\r\n    }\r\n\r\n    public fullLabel(): { maticon?: string; icon?: string; label: string } {\r\n        return {\r\n            maticon: 'save',\r\n            label: ''\r\n        };\r\n    }\r\n\r\n    public rootDescription(): IFileDescription {\r\n        return new DownloadUploadFileDescription('dir', this, null);\r\n    }\r\n\r\n    /**\r\n     * Return a directory with the given path\r\n     */\r\n    public directoryDescription(dirPath: string): IFileDescription {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Check, wether a publish is possible.\r\n     */\r\n    public canPublish(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public copy() {\r\n        return this;\r\n    }\r\n}\r\n","import {SerializationService} from '../../model/serialization.service';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\n\r\ninterface SerializedFormV1 {\r\n    type: FileAccessorType.DOWNLOAD_UPLOAD;\r\n    version: '1';\r\n    name: string;\r\n}\r\n\r\nexport class DownloadUploadFileDescription implements IFileDescription {\r\n\r\n    name: string;\r\n    children = [];\r\n\r\n    static fromBrowserFile(configuration: IFileAccessConfiguration, file: File) {\r\n        return new DownloadUploadFileDescription('file', configuration, file);\r\n    }\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): DownloadUploadFileDescription {\r\n        return DownloadUploadFileDescription.fromBrowserFile(serializationService.deserializeIFileConfiguration(serializedForm), null);\r\n    }\r\n\r\n    constructor(public type: 'file'|'dir',\r\n                public readonly configuration: IFileAccessConfiguration,\r\n                private _file: File, newName?: string) {\r\n        if (!newName && this._file) {\r\n            this.name = this._file.name;\r\n        } else {\r\n            this.name = newName;\r\n        }\r\n    }\r\n\r\n    get browserFile(): File {\r\n        return this._file;\r\n    }\r\n\r\n    get path(): string {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * Download targets are never equal.\r\n     */\r\n    public equals(another: IFileDescription): boolean {\r\n        return false;\r\n    }\r\n\r\n    public isDirectory(): boolean {\r\n        return this.type === 'dir';\r\n    }\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        return JSON.stringify({\r\n            type: FileAccessorType.DOWNLOAD_UPLOAD,\r\n            version: '1',\r\n            name: this.name\r\n        } as SerializedFormV1);\r\n    }\r\n\r\n    public dirname(): IFileDescription|null {\r\n        return null;\r\n    }\r\n\r\n    public createFileDescription(newName: string): IFileDescription {\r\n        return new DownloadUploadFileDescription('file', this.configuration, this._file, newName);\r\n    }\r\n}\r\n","import {Observable, of} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {FileStatus, IFileAccessService, IFileStats} from '../common/i-file-access-service';\r\nimport {IFile} from '../common/i-file';\r\nimport {DownloadUploadFileDescription} from './download-upload-file-description';\r\nimport {AsynchronousFileReaderService} from './asynchronous-file-reader.service';\r\nimport {DownloaderService} from './downloader.service';\r\nimport {map} from 'rxjs/operators';\r\nimport {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {DownloadUploadConfiguration} from './download-upload-configuration';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {GenericFile} from '../common/generic-file';\r\nimport {IFileDescription} from '../common/i-file-description';\r\n\r\n@Injectable()\r\nexport class DownloadUploadService implements IFileAccessService {\r\n\r\n    constructor(\r\n        private fileReaderService: AsynchronousFileReaderService,\r\n        private downloaderService: DownloaderService) {}\r\n\r\n    load(description: DownloadUploadFileDescription): Observable<IFile|IFileDescription> {\r\n        if (description.isDirectory()) {\r\n            return of(description);\r\n        }\r\n        const file = description.browserFile;\r\n        return this.fileReaderService.readFile(file).pipe(\r\n            map(result => {\r\n                return new GenericFile(description, result.name, result.size, result.content);\r\n            })\r\n        );\r\n    }\r\n\r\n    save(file: IFile): Observable<IFile> {\r\n        this.downloaderService.downloadXliffFile(file.description.name, file.content);\r\n        return of(file);\r\n    }\r\n\r\n    stats(file: IFile): Observable<IFileStats> {\r\n        return of({status: FileStatus.EXISTS_NOT});\r\n    }\r\n\r\n    serialize(serializationService: SerializationService, configuration: IFileAccessConfiguration): string {\r\n        return 'DOWNLOAD_UPLOAD';\r\n    }\r\n\r\n    deserialize(serializationService: SerializationService, serialzedConfiguration: string): IFileAccessConfiguration {\r\n        return DownloadUploadConfiguration.singleInstance();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {saveAs} from 'file-saver';\r\n\r\n@Injectable()\r\nexport class DownloaderService {\r\n\r\n  constructor() { }\r\n\r\n  downloadFile(filename: string, content: string, filetype: string) {\r\n    const blob = new Blob([content], {type: filetype});\r\n    saveAs(blob, filename);\r\n  }\r\n\r\n  downloadXliffFile(filename: string, content: string) {\r\n    this.downloadFile(filename, content, 'application/xml');\r\n  }\r\n}\r\n","<form id=\"fileUploadForm\" fxLayout=\"column\" [formGroup]=\"form\">\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\n        <p fxFlex=\"50%\" i18n>Select the file you want to translate.<br>\n            The file can be of format XLIFF 1.2, XLIFF 2.0 or XMB.<br>\n            The file will be stored in your browser local storage until you export the translated version.</p>\n        <div fxLayout=\"column\" fxFlexAlign=\"end\" fxFlex=\"40%\">\n            <input type=\"file\" id=\"fileupload\" (change)=\"fileSelectionChange(input)\" formControlName=\"selectedFiles\"\n                   name=\"selectedFiles\" class=\"inputfile\" #input/>\n            <label for=\"fileupload\">\n                <mat-icon>open_in_browser</mat-icon>&nbsp;<span i18n>Upload a translation file (xlf, xtb)</span></label>\n            <div><span i18n>selected: </span>{{selectedFilesFormatted()}}</div>\n        </div>\n    </div>\n    <div *ngIf=\"isMasterXmbFileNeeded()\" fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\n        <p fxFlex=\"50%\" i18n>You selected an xtb file.<br>\n            This file type only contains one language, the target language.<br>\n            To show you the original source texts, you should also select the master xmb file.</p>\n        <div fxFlex=\"50%\" fxLayout=\"column\">\n            <input type=\"file\" id=\"masterfileupload\" (change)=\"masterXmlFileSelectionChange(masterinput)\"\n                   formControlName=\"selectedMasterXmbFiles\" name=\"selectedMasterXmbFiles\" class=\"inputfile\"\n                   #masterinput/>\n            <label for=\"masterfileupload\">\n                <mat-icon>open_in_browser</mat-icon>&nbsp;<span i18n>Upload master xmb file</span></label>\n            <div><span i18n>selected: </span>{{selectedMasterFilesFormatted()}}</div>\n        </div>\n    </div>\n</form>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {TranslationProject} from '../../../model/translation-project';\nimport {FILETYPE_XTB} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\nimport {IFileDescription} from '../../common/i-file-description';\nimport {DownloadUploadFileDescription} from '../download-upload-file-description';\nimport {DownloadUploadConfiguration} from '../download-upload-configuration';\n\n@Component({\n  selector: 'app-translation-file-upload',\n  templateUrl: './translation-file-upload.component.html',\n  styleUrls: ['./translation-file-upload.component.scss']\n})\nexport class TranslationFileUploadComponent implements OnInit {\n\n  @Input() createdProject?: TranslationProject;\n  @Input() configuration: DownloadUploadConfiguration;\n  @Output() fileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n  @Output() masterXmlFileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n\n  form: FormGroup;\n  private selectedFiles: FileList;\n  private selectedMasterXmbFiles: FileList;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  private initForm() {\n    if (!this.form) {\n      this.form = this.formBuilder.group({\n        selectedFiles: [''],\n        selectedMasterXmbFiles: ['']\n      });\n    }\n  }\n\n  fileSelectionChange(input: HTMLInputElement) {\n    if (input) {\n      this.selectedFiles = input.files;\n    }\n    if (input.files && input.files.length > 0) {\n      const file: File = input.files.item(0);\n      this.fileSelected.emit(\n        DownloadUploadFileDescription.fromBrowserFile(DownloadUploadConfiguration.singleInstance(), file));\n    }\n  }\n\n  masterXmlFileSelectionChange(input: HTMLInputElement) {\n    if (input) {\n      this.selectedMasterXmbFiles = input.files;\n    }\n    if (input.files && input.files.length > 0) {\n      const file: File = input.files.item(0);\n      this.masterXmlFileSelected.emit(\n        DownloadUploadFileDescription.fromBrowserFile(DownloadUploadConfiguration.singleInstance(), file));\n    }\n  }\n\n  selectedFilesFormatted(): string {\n    return this.fileListFormatted(this.selectedFiles);\n  }\n\n  selectedMasterFilesFormatted(): string {\n    return this.fileListFormatted(this.selectedMasterXmbFiles);\n  }\n\n  private fileListFormatted(fileList: FileList): string {\n    if (fileList) {\n      let result = '';\n      for (let i = 0; i < fileList.length; i++) {\n        if (i > 0) {\n          result = result + ', ';\n        }\n        result = result + fileList.item(i).name;\n      }\n      return result;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * If the first file was a xmb file, master is needed.\n   * Enables the input for a second file, the master xmb.\n   */\n  isMasterXmbFileNeeded(): boolean {\n    return this.isFileSelected() &&\n        this.createdProject &&\n        this.createdProject.translationFile &&\n        this.createdProject.translationFile.fileType() === FILETYPE_XTB;\n  }\n\n  isFileSelected(): boolean {\n    return this.selectedFiles && this.selectedFiles.length > 0 && !!this.createdProject;\n  }\n\n}\n","<h3 i18n>Github access settings</h3>\n<p i18n>\n  By configuring an access to Github you can directly import translation files to TinyTranslator and store the translation in your Github repositories.\n</p>\n<div class=\"info\">\n  <p i18n>To use Github you need a <a href=\"https://github.blog/2013-05-16-personal-api-tokens/\" target=\"_blank\">Github Personal API token</a>.</p>\n  <p>The link above describes its purpose and how to create it.</p>\n</div>\n<div fxLayout=\"column\" fxLayoutGap=\"10px\">\n  <mat-expansion-panel *ngFor=\"let configuration of githubConfigurations | async; let i = index\" [expanded]=\"isExpanded(configuration)\">\n    <mat-expansion-panel-header>{{configuration.fullLabel().label}}</mat-expansion-panel-header>\n    <app-github-config-editor\n            [githubConfiguration]=\"configuration\"\n            (storeConfiguration)=\"storeConfiguration($event)\"\n            (deleteConfiguration)=\"deleteConfiguration($event)\">\n    </app-github-config-editor>\n  </mat-expansion-panel>\n  <button mat-fab (click)=\"addConfiguration()\" [disabled]=\"addedConfiguration.getValue()\" matTooltip=\"Add another configuration\" i18n-matTooltip><mat-icon>add</mat-icon></button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FileAccessorType} from '../../common/file-accessor-type';\nimport {GithubConfiguration} from '../github-configuration';\nimport {BackendServiceAPI} from '../../../model/backend-service-api';\nimport {map} from 'rxjs/operators';\nimport {BehaviorSubject, combineLatest, Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-configure-github-page',\n  templateUrl: './configure-github-page.component.html',\n  styleUrls: ['./configure-github-page.component.css']\n})\nexport class ConfigureGithubPageComponent implements OnInit {\n\n  githubConfigurations: Observable<GithubConfiguration[]>;\n  addedConfiguration: BehaviorSubject<GithubConfiguration>;\n\n  constructor(\n      private backendServiceAPI: BackendServiceAPI) {\n  }\n\n  ngOnInit() {\n    this.addedConfiguration = new BehaviorSubject<GithubConfiguration>(null);\n    this.githubConfigurations = combineLatest(\n      this.backendServiceAPI.fileAccessConfigurations().pipe(\n        map(configs => configs\n          .filter(config => config.type === FileAccessorType.GITHUB)\n          .map(config => config  as GithubConfiguration))\n      ), this.addedConfiguration\n    ).pipe(\n        map(values => {\n          const configs = values[0];\n          const added = values[1];\n          return (added === null) ? configs : configs.concat([added]);\n        })\n    );\n  }\n\n  addConfiguration() {\n    this.addedConfiguration.next(new GithubConfiguration(null, '', '', null, null, null));\n  }\n\n  storeConfiguration(configuration: GithubConfiguration) {\n    if (!configuration.id) {\n      this.addedConfiguration.next(null);\n    }\n    this.backendServiceAPI.storeFileAccessConfiguration(configuration);\n  }\n\n  deleteConfiguration(configuration: GithubConfiguration) {\n    if (!configuration.id) {\n      this.addedConfiguration.next(null);\n    } else {\n      this.backendServiceAPI.deleteFileAccessConfiguration(configuration);\n    }\n  }\n\n  isExpanded(configuration: GithubConfiguration): boolean {\n    return configuration.id === null;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FileStatus, ICommitData, IFileAccessService, IFileStats} from '../common/i-file-access-service';\nimport {IFileDescription} from '../common/i-file-description';\nimport {Observable, of, throwError} from 'rxjs';\nimport {GithubConfiguration} from './github-configuration';\nimport {catchError, first, map, switchMap} from 'rxjs/operators';\nimport {GithubApiService, GithubBranch, GithubDirectory, GithubFileContents} from './github-api.service';\nimport {SerializationService} from '../../model/serialization.service';\nimport {IFile} from '../common/i-file';\nimport {GithubFileDescription} from './github-file-description';\nimport {GithubFile} from './github-file';\n\nfunction pathjoin(path: string, subdir: string) {\n  if (subdir && subdir.startsWith('/')) {\n    subdir = subdir.substr(1);\n  }\n  if (path && path.endsWith('/')) {\n    return path + subdir;\n  }\n  return (path) ? path + '/' + subdir : subdir;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubAccessorService implements IFileAccessService {\n\n  constructor(private githubApiService: GithubApiService) { }\n\n  load(description: IFileDescription): Observable<GithubFile|IFileDescription> {\n    const configuration: GithubConfiguration = description.configuration as GithubConfiguration;\n    const branch: GithubBranch = {\n      repo: {\n        owner: configuration.owner,\n        name: configuration.repo\n      },\n      name: configuration.branch\n    };\n    const apiToken = configuration.apiToken;\n    const path = pathjoin(configuration.path, description.path);\n    return this.githubApiService.content(branch, path, apiToken).pipe(\n        first(),\n        map((content: GithubFileContents|GithubDirectory) => {\n          if (content.type === 'dir') {\n            const children = content.entries.map((entry: GithubFileContents|GithubDirectory) => {\n              if (entry.type === 'dir') {\n                return new GithubFileDescription('dir', configuration, pathjoin(description.path, entry.name), entry.name);\n              } else {\n                return new GithubFileDescription('file', configuration, pathjoin(description.path, entry.name), entry.name);\n              }\n            });\n            return new GithubFileDescription('dir', configuration, description.path, description.name, children);\n          } else {\n            const descr = new GithubFileDescription('file', configuration, description.path, description.name);\n            return new GithubFile(descr, content.name, content.size, content.content, content.sha);\n          }\n        })\n    );\n  }\n\n  save(file: GithubFile, commitData: ICommitData): Observable<GithubFile> {\n    const configuration: GithubConfiguration = file.description.configuration as GithubConfiguration;\n    const branch: GithubBranch = {\n      name: configuration.branch,\n      repo: {\n        name: configuration.repo,\n        owner: configuration.owner\n      },\n    };\n    const content: GithubFileContents = {\n      type: 'file',\n      name: file.description.name,\n      branch: branch,\n      path: pathjoin(configuration.path, file.description.path),\n      size: file.size,\n      content: file.content,\n      sha: file.sha\n    };\n    const apiKey = configuration.apiToken;\n    if (!commitData || !commitData.message) {\n      return throwError('no commit message');\n    }\n    const message = commitData.message;\n    return this.stats(file).pipe(\n      map((stats: IFileStats) => {\n        console.log('stats', stats, commitData);\n        if (stats.status !== FileStatus.EXISTS_NOT) {\n          if (commitData.override) {\n            console.log('sha', (stats as any).sha);\n            return (stats as any).sha;\n          } else {\n            throw Error('file exists');\n          }\n        } else {\n          return null;\n        }\n      }),\n      switchMap((sha: string) => {\n        console.log('sha', sha);\n        content.sha = sha;\n        return this.githubApiService.updateContent(branch, content, message, apiKey).pipe(\n          map((newFileContent: GithubFileContents) => {\n            return new GithubFile(\n              file.description,\n              newFileContent.name,\n              newFileContent.size,\n              newFileContent.content,\n              newFileContent.sha);\n          })\n        );\n      })\n    );\n  }\n\n  stats(file: IFile): Observable<IFileStats> {\n    const configuration: GithubConfiguration = file.description.configuration as GithubConfiguration;\n    const branch: GithubBranch = {\n      name: configuration.branch,\n      repo: {\n        name: configuration.repo,\n        owner: configuration.owner\n      },\n    };\n    return this.githubApiService.content(branch, pathjoin(configuration.path, file.description.path), configuration.apiToken).pipe(\n      map((content: GithubFileContents|GithubDirectory) => {\n        if (content.sha === (file as GithubFile).sha) {\n          return {status: FileStatus.UNCHANGED, sha: content.sha};\n        } else {\n          return {status: FileStatus.CHANGED, sha: content.sha};\n        }\n      }),\n      catchError(() => {\n        return of({status: FileStatus.EXISTS_NOT});\n      })\n    );\n  }\n\n  serialize(serializationService: SerializationService, configuration: GithubConfiguration): string {\n    return configuration.serialize(serializationService);\n  }\n\n  deserialize(serializationService: SerializationService, serializedConfiguration: string): GithubConfiguration {\n    return GithubConfiguration.deserialize(serializationService, serializedConfiguration);\n  }\n\n}\n","/**\n * A service to access the github api v3.\n * It can read and write repositories and directories and files in the repositories.\n * Access is authenticated via an OAuth access token.\n */\nimport {Inject, Injectable} from '@angular/core';\nimport {APP_CONFIG, AppConfig} from '../../app.config';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {isArray, isNullOrUndefined} from '../../common/util';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Base64} from 'js-base64';\nimport toBase64 = Base64.toBase64;\nimport fromBase64 = Base64.fromBase64;\n\n/**\n * Representation of a repository.\n */\nexport interface GithubRepo {\n  owner: string;\n  name: string;\n}\n\n/**\n * Representation of a branch in a repository.\n */\nexport interface GithubBranch {\n  repo: GithubRepo; // the repo containing the branch\n  name: string; // name of branch\n}\n\n/**\n * A file.\n */\nexport interface GithubFileContents {\n  type: 'file';\n  branch: GithubBranch;\n  path: string; // path including name\n  name: string; // only name\n  sha: string; // SHA1 of file (needed for update operations)\n  size: number;\n  content?: string; // decoded content, as part of a directory response this is not filled\n}\n\nexport interface GithubDirectory {\n  type: 'dir';\n  branch: GithubBranch;\n  path: string; // path including name\n  name: string; // only name\n  sha: string; // SHA1 of file (needed for update operations)\n  entries?: (GithubFileContents|GithubDirectory)[]; // absent if directory is not read until now\n}\n\n// subset of the data returned from the GitHub API v3\n// Contains only data that is used here.\ninterface RepoFromAPI {\n  name: string;\n  owner: {\n    login: string;\n  };\n}\n\n// subset of the data returned from the GitHub API v3\n// Contains only data that is used here.\ninterface BranchFromAPI {\n  name: string;\n}\n\ninterface FileContentsFromAPI {\n  type: 'file';\n  name: string;\n  path: string;\n  size: number;\n  encoding?: 'base64'; // TODO can there be anything else?\n  content?: string;\n  sha: string;\n}\n\ninterface DirectoryEntryContentsFromAPI {\n  type: 'dir';\n  name: string;\n  path: string;\n  size: number; // always 0 I guess\n  sha: string;\n}\n\ninterface SymlinkContentsFromAPI {\n  type: 'symlink';\n  name: string;\n  path: string;\n  size: number;\n  target: string;\n  sha: string;\n}\n\ninterface SubmoduleContentsFromAPI {\n  type: 'submodule';\n  name: string;\n  path: string;\n  size: number;\n  sha: string;\n}\n\ntype ContentsFromAPI = FileContentsFromAPI | DirectoryEntryContentsFromAPI | SymlinkContentsFromAPI | SubmoduleContentsFromAPI;\n\n/**\n * input type of content update call.\n */\ninterface ContentsUpdateInputAPI {\n  message: string; // Required. The commit message.\n  content: string; // Required. The new file content, using Base64 encoding.\n  sha: string; // Required. The blob SHA of the file being replaced.\n  branch?: string; // The branch name. Default: the repository’s default branch (usually master)\n  // committer and author not used here\n}\n\n/**\n * return type of content update call.\n */\ninterface ContentsUpdateFromAPI {\n  content: {\n    name: string;\n    path: string;\n    sha: string;\n    size: number;\n  };\n}\n\n// subset of the data returned from the GitHub API v3\n// Contains only data that is used here.\n// if requested path is a directory, the answer is an array of the directory content, otherwise it is just the object (normally a file)\ntype FileOrDirectoryContentsFromAPI = ContentsFromAPI | [ContentsFromAPI];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubApiService {\n\n  private readonly _rootUrl: string;\n\n  private _apiKey: string;\n\n  // a setting for tests!!\n  // if set to true, some functions (TODO which functions?) will FAIL BY DESIGN\n  // Used to allow testing of failures.\n  private failByDesign: boolean;\n\n  constructor(@Inject(APP_CONFIG) app_config: AppConfig, private httpClient: HttpClient) {\n    this._rootUrl = app_config.GITHUB_API_ROOT_URL;\n    // API key is secret, normally it is not configured and will be null\n    // it can be set interactively in the app\n    // but in the karma tests it will be set. It is stored than in environment.secret.ts (not in Git)\n    this.setApiKey(app_config.GITHUB_API_KEY); // must be set explicitly via setApiKey()\n    this.failByDesign = app_config.GITHUB_PROVOKE_FAILURES;\n  }\n\n  /**\n   * Headers used for every request.\n   */\n  private headers(apiKey?: string): HttpHeaders {\n    const key = (apiKey) ? apiKey : this.apiKey();\n    return new HttpHeaders()\n        .append('Accept', 'application/vnd.github.v3+json')\n        .append('Authorization', 'token ' + key);\n  }\n\n  /**\n   * Send GET request to API.\n   * @param relativeUrl URL relative to API root.\n   * @param apiKey OAuth-Token\n   * @param parameters additional HTTP Parameters.\n   * @return GET result of type T\n   */\n  private get<T>(relativeUrl: string, apiKey: string, parameters?: HttpParams): Observable<T> {\n    return this.httpClient.get(this.fullUrl(relativeUrl), {headers: this.headers(apiKey), params: parameters}).pipe(\n      map(response => response as T)\n    );\n  }\n\n  /**\n   * Send PUT request to API.\n   * Put an Object of type T, return a result of type U.\n   * @param relativeUrl URL relative to API root.\n   * @param apiKey OAuth-Token\n   * @param body request body to send, will be send as a JSON object.\n   * @param parameters additional HTTP Parameters.\n   * @return PUT result of type U\n   */\n  private put<T, U>(relativeUrl: string, apiKey: string, body: T, parameters?: HttpParams): Observable<U> {\n    return this.httpClient.put(this.fullUrl(relativeUrl), body, {headers: this.headers(apiKey), params: parameters}).pipe(\n        map(response => response as U)\n    );\n  }\n\n  private fullUrl(relativeUrl: string): string {\n    return this._rootUrl + relativeUrl;\n  }\n\n  public apiKey(): string {\n    return this._apiKey;\n  }\n\n  public setApiKey(key: string) {\n    this._apiKey = key;\n  }\n\n  /**\n   * Get a list of repos of the authenticated user.\n   * @param apiKey OAuth token of user.\n   */\n  public repos(apiKey?: string): Observable<GithubRepo[]> {\n    return this.get<RepoFromAPI[]>('user/repos', apiKey).pipe(\n      map(response => response.map((repo: RepoFromAPI) => {\n        return {\n          name: repo.name,\n          owner: repo.owner.login\n        };\n      }))\n    );\n  }\n\n  /**\n   * Get a list of branches of the authenticated user and selected repo.\n   * @param repo the repository to be accessed\n   * @param apiKey OAuth token of user.\n   */\n  public branches(repo: GithubRepo, apiKey?: string): Observable<GithubBranch[]> {\n    return this.get<BranchFromAPI[]>(`repos/${repo.owner}/${repo.name}/branches`, apiKey).pipe(\n        map(response => response.map((branch: BranchFromAPI) => {\n          return {\n            name: branch.name,\n            repo: repo\n          };\n        }))\n    );\n  }\n\n  /**\n   * Get content of a file or directory.\n   * @param branch branch\n   * @param path path\n   * @param apiKey OAuth token of user.\n   */\n  public content(branch: GithubBranch, path: string, apiKey?: string): Observable<GithubFileContents|GithubDirectory> {\n    const repo = branch.repo;\n    const url = `repos/${repo.owner}/${repo.name}/contents/${path}`;\n    return this.get<FileOrDirectoryContentsFromAPI>(\n        url,\n        apiKey,\n        new HttpParams().append('ref', branch.name)\n    ).pipe(\n        map((response: FileOrDirectoryContentsFromAPI) => {\n          if (isArray(response)) {\n            // it is a directory\n            return this.toDirectory(branch, path, response as ContentsFromAPI[]);\n          } else {\n            const singleResponse: ContentsFromAPI = response as ContentsFromAPI;\n            switch (singleResponse.type) {\n              case 'file':\n                return this.toFileContents(branch, response as FileContentsFromAPI);\n              case 'symlink':\n              default:\n                // TODO\n            }\n          }\n        })\n    );\n  }\n\n  /**\n   * Update (or create) a file\n   * @param branch the branch\n   * @param newContents the updated content (path and content must be set, sha must be set, if it is an update)\n   * @param message the commit message\n   * @param apiKey OAuth token of user.\n   */\n  public updateContent(\n      branch: GithubBranch,\n      newContents: GithubFileContents,\n      message: string,\n      apiKey?: string): Observable<GithubFileContents> {\n    const repo = branch.repo;\n    const url = `repos/${repo.owner}/${repo.name}/contents/${newContents.path}`;\n    return this.put<ContentsUpdateInputAPI, ContentsUpdateFromAPI>(\n        url,\n        apiKey,\n        {\n          message: message,\n          content: this.toBase64(newContents.content),\n          sha: newContents.sha,\n          branch: branch.name\n        } as ContentsUpdateInputAPI\n    ).pipe(\n        map((response: ContentsUpdateFromAPI) => {\n          return {\n            type: 'file',\n            branch: branch,\n            path: response.content.path,\n            name: response.content.name,\n            size: response.content.size,\n            content: newContents.content,\n            sha: response.content.sha\n          } as GithubFileContents;\n        })\n    );\n  }\n\n  private toFileContents(branch: GithubBranch, contentApiResponse: FileContentsFromAPI): GithubFileContents {\n    const content = contentApiResponse.content;\n    let decodedContent: string|undefined;\n    if (!isNullOrUndefined(content) && !isNullOrUndefined(contentApiResponse.encoding)) {\n      if (contentApiResponse.encoding === 'base64') {\n        decodedContent = this.fromBase64(content);\n      } else {\n        decodedContent = '??? unknown encoding' + contentApiResponse.encoding;\n      }\n    } else {\n      decodedContent = undefined;\n    }\n    return {\n      type: 'file',\n      branch: branch,\n      path: contentApiResponse.path,\n      name: contentApiResponse.name,\n      size: contentApiResponse.size,\n      content: decodedContent,\n      sha: contentApiResponse.sha\n    };\n  }\n\n  private toDirectory(branch: GithubBranch, path: string, contentApiResponse: ContentsFromAPI[]): GithubDirectory {\n    const entries: (GithubDirectory|GithubFileContents|null)[] = contentApiResponse.map((entry: ContentsFromAPI) => {\n      switch (entry.type) {\n        case 'file':\n          return this.toFileContents(branch, entry);\n        case 'symlink':\n          return null;\n        case 'submodule':\n          return null;\n        case 'dir':\n          return {\n            type: 'dir',\n            branch: branch,\n            path: path,\n            name: entry.name,\n            sha: entry.sha\n          } as GithubDirectory;\n        default:\n          return null;\n      }\n    }).filter(entry => entry !== null);\n    return {\n      type: 'dir',\n      branch: branch,\n      path: path,\n      name: this.basename(path),\n      sha: '',\n      entries: entries\n    };\n  }\n\n  basename(path: string): string {\n    const index = path.lastIndexOf('/');\n    if (index >= 0) {\n      return path.substr(index + 1);\n    } else {\n      return path;\n    }\n  }\n\n  private toBase64(str: string): string {\n    return toBase64(str);\n  }\n\n  private fromBase64(b64str: string): string {\n    return fromBase64(b64str);\n  }\n\n}\n","<h3 matDialogTitle i18n>edit config</h3>\n<div matDialogContent>\n  <app-github-config-editor [githubConfiguration]=\"activeConfiguration.configuration\" (configurationChange)=\"changeActiveConfiguration($event)\">\n  </app-github-config-editor>\n</div>\n<div mat-dialog-actions>\n  <button mat-button matDialogClose [mat-dialog-close]=\"result()\" i18n [disabled]=\"!isActiveConfigurationValid()\">OK</button>\n  <button mat-button matDialogClose (click)=\"cancel()\" i18n>Cancel</button>\n</div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {GithubConfiguration} from '../github-configuration';\n\nexport interface GithubConfigEditorDialogData {\n  configuration: GithubConfiguration;\n}\n\n@Component({\n  selector: 'app-github-config-editor-dialog',\n  templateUrl: './github-config-editor-dialog.component.html',\n  styleUrls: ['./github-config-editor-dialog.component.css']\n})\nexport class GithubConfigEditorDialogComponent implements OnInit {\n\n  activeConfiguration: {valid: boolean, configuration: GithubConfiguration};\n\n  constructor(private dialogRef: MatDialogRef<GithubConfigEditorDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) data: GithubConfigEditorDialogData) {\n    this.activeConfiguration = {valid: false, configuration: data.configuration.copy()};\n  }\n\n  ngOnInit() {\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  changeActiveConfiguration(newValue: {valid: boolean, configuration: GithubConfiguration}) {\n    this.activeConfiguration = newValue;\n  }\n\n  isActiveConfigurationValid(): boolean {\n    return this.activeConfiguration && this.activeConfiguration.valid;\n  }\n\n  result(): GithubConfiguration {\n    return this.isActiveConfigurationValid() ? this.activeConfiguration.configuration : null;\n  }\n}\n","<form fxLayout=\"column\" fxLayoutGap=\"10px\" [formGroup]=\"form\">\n  <mat-form-field>\n    <mat-label i18n>Github API token</mat-label>\n    <input matInput formControlName=\"apiToken\" name=\"apiToken\" placeholder=\"Github API token\" i18n-placeholder\n           matTooltip=\"The configuration including your API token will be stored in the local storage of your browser. It will not be sent to anywhere but the Github API Service.\" i18n-matTooltip>\n    <mat-error *ngIf=\"form.get('apiToken').hasError('tokenInvalid')\" i18n>\n      The token is not valid!\n    </mat-error>\n    <mat-error *ngIf=\"form.get('apiToken').hasError('required')\" i18n>\n      Token is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label i18n>Github repository</mat-label>\n    <input matInput formControlName=\"repo\" name=\"repo\" placeholder=\"Github repository\" i18n-placeholder [matAutocomplete]=\"repos\">\n    <mat-autocomplete #repos=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of availableRepos()\" [value]=\"option\">\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n    <mat-error *ngIf=\"form.get('repo').hasError('repoInvalid')\" i18n>\n      Repository does not exist!\n    </mat-error>\n    <mat-error *ngIf=\"form.get('repo').hasError('repoUncheckable')\" i18n>\n      Repository cannot be checked (invalid API token)!\n    </mat-error>\n    <mat-error *ngIf=\"form.get('repo').hasError('required')\" i18n>\n      Repository is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label i18n>Github branch</mat-label>\n    <input matInput formControlName=\"branch\" name=\"branch\" placeholder=\"Github branch\" i18n-placeholder [matAutocomplete]=\"branches\">\n    <mat-autocomplete #branches=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of availableBranches()\" [value]=\"option\">\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n    <mat-error *ngIf=\"form.get('branch').hasError('branchInvalid')\" i18n>\n      Branch does not exist!\n    </mat-error>\n    <mat-error *ngIf=\"form.get('branch').hasError('branchUncheckable')\" i18n>\n      Branch cannot be checked (invalid API token)!\n    </mat-error>\n  </mat-form-field>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <mat-form-field fxFlex>\n      <mat-label i18n>path</mat-label>\n      <input matInput formControlName=\"path\" name=\"path\" placeholder=\"path\" i18n-placeholder>\n      <mat-error *ngIf=\"form.get('path').hasError('pathInvalid')\" i18n>\n        Path does not exist!\n      </mat-error>\n      <mat-error *ngIf=\"form.get('path').hasError('pathIsNoDir')\" i18n>\n        Path is not a directory!\n      </mat-error>\n    </mat-form-field>\n    <button color=\"accent\" mat-icon-button (click)=\"openPathBrowser()\"\n        matTooltip=\"Select a path\" i18n-matTooltip>\n      <mat-icon>edit</mat-icon>\n    </button>\n  </div>\n  <mat-action-row>\n    <button color=\"primary\" mat-button (click)=\"storeConfigurationClicked()\"\n            [disabled]=\"!form.valid\"\n            matTooltip=\"The configuration including your API token will be stored in the local storage of your browser. It will not be sent to anywhere but the Github API Service.\" i18n-matTooltip>\n      <mat-icon>save</mat-icon>\n      <span i18n>Store configuration</span>\n    </button>\n    <button mat-button matTooltip=\"Delete this configuration\" i18n-matTooltip (click)=\"deleteConfigurationClicked()\">\n      <mat-icon>delete</mat-icon>\n      <span i18n>Delete configuration</span>\n    </button>\n  </mat-action-row>\n</form>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {AbstractControl, AsyncValidatorFn, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {GithubBranch, GithubDirectory, GithubFileContents, GithubApiService, GithubRepo} from '../github-api.service';\nimport {catchError, finalize, first, map, switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {GithubConfiguration} from '../github-configuration';\nimport {IFileDescription} from '../../common/i-file-description';\nimport {MatDialog} from '@angular/material';\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../../common/file-explorer-dialog/file-explorer-dialog.component';\n\n@Component({\n  selector: 'app-github-config-editor',\n  templateUrl: './github-config-editor.component.html',\n  styleUrls: ['./github-config-editor.component.css']\n})\nexport class GithubConfigEditorComponent implements OnInit, OnChanges {\n\n  @Input() githubConfiguration: GithubConfiguration;\n  @Output() storeConfiguration: EventEmitter<GithubConfiguration>\n    = new EventEmitter<GithubConfiguration>();\n  @Output() deleteConfiguration: EventEmitter<GithubConfiguration>\n    = new EventEmitter<GithubConfiguration>();\n\n  form: FormGroup;\n  private _apiTokenValid = false;\n  private _repos: GithubRepo[] = []; // repos for selected api token read from api\n  private _branches: GithubBranch[] = []; // branches for selected repo read from api\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private githubApiService: GithubApiService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateForm();\n  }\n\n  checkApiTokenValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<{[key: string]: any} | null> => {\n      const token = control.value;\n      return of(null).pipe(\n          switchMap(() => {\n            if (!token) {\n              this._apiTokenValid = false;\n              this._repos = [];\n              return of(null);\n            }\n            return this.githubApiService.repos(token).pipe(\n                first(),\n                map(repos => {\n                  this._apiTokenValid = true;\n                  this._repos = repos;\n                  return null;\n                }),\n                catchError(() => {\n                  this._apiTokenValid = false;\n                  this._repos = [];\n                  return of({'tokenInvalid': {value: token}});\n                })\n            );\n          }),\n          finalize(() => {\n            if (this.form) {\n              this.form.get('repo').updateValueAndValidity();\n            }\n          })\n      );\n    };\n  }\n\n  checkRepoValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<{[key: string]: any} | null> => {\n      return of(null).pipe(\n          switchMap(() => {\n            const reponame = control.value;\n            if (!reponame) {\n              this._branches = [];\n              return of(null);\n            }\n            if (!this._apiTokenValid) {\n              this._branches = [];\n              return of({'repoUncheckable': {value: reponame}});\n            }\n            const repo = this._repos.find(r => r.name === reponame);\n            if (!repo) {\n              this._branches = [];\n              return of({'repoInvalid': {value: reponame}});\n            }\n            return this.githubApiService.branches(repo, this.form.value.apiToken).pipe(\n                first(),\n                map(branches => {\n                  this._branches = branches;\n                  return null;\n                }),\n                catchError(() => {\n                  this._apiTokenValid = false;\n                  this._branches = [];\n                  return of({'repoInvalid': {value: reponame}});\n                }),\n            );\n          }),\n          finalize(() => {\n            if (this.form) {\n              this.form.get('branch').updateValueAndValidity();\n            }\n          })\n      );\n    };\n  }\n\n  checkBranchValidator(): AsyncValidatorFn {\n    return ((control: AbstractControl): Observable<{[key: string]: any} | null> => {\n      return of(null).pipe(\n          switchMap(() => {\n            const branchname = control.value;\n            if (!branchname) {\n              return of(null);\n            }\n            if (!this._apiTokenValid) {\n              return of({'branchUncheckable': {value: branchname}});\n            }\n            const branch = this._branches.find(b => b.name === branchname);\n            return of(branch ? null : {'branchInvalid': {value: branchname}});\n          }),\n          finalize(() => {\n            if (this.form) {\n              this.form.get('path').updateValueAndValidity();\n            }\n          })\n      );\n    });\n  }\n\n  /**\n   * Validator to check for valid path.\n   */\n  checkPathValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<{ [key: string]: any } | null> => {\n      return of(null).pipe(\n          switchMap(() => {\n            if (!this.form) {\n              return of(null);\n            }\n            const path = control.value;\n            const apiToken = this.form.value.apiToken;\n            const branchname = this.form.value.branch;\n            const branch = this._branches.find(b => b.name === branchname);\n            if (!path || !branch) {\n              return of(null);\n            }\n            return this.githubApiService.content(branch, path, apiToken).pipe(\n                first(),\n                map((content: GithubFileContents | GithubDirectory) => {\n                  if (content.type !== 'dir') {\n                    control.markAsTouched();\n                    return {'pathIsNoDir': {value: path}};\n                  }\n                }),\n                catchError(() => {\n                  control.markAsTouched();\n                  return of({'pathInvalid': {value: path}});\n                })\n            );\n          })\n      );\n    };\n  }\n\n  initForm() {\n    if (!this.form) {\n      const configuration = (this.githubConfiguration) ? this.githubConfiguration : {apiToken: '', repo: '', branch: '', path: ''};\n      this.form = this.formBuilder.group({\n        apiToken: [configuration.apiToken, [Validators.required], [this.checkApiTokenValidator()]],\n        repo: [configuration.repo, [Validators.required], [this.checkRepoValidator()]],\n        branch: [configuration.branch, [], [this.checkBranchValidator()]],\n        path: [configuration.path, [], [this.checkPathValidator()]]\n      });\n    }\n  }\n\n  updateForm() {\n    if (this.form) {\n      const configuration = (this.githubConfiguration) ? this.githubConfiguration : {apiToken: '', repo: '', branch: '', path: ''};\n      this.form.patchValue(\n        {\n          apiToken: configuration.apiToken,\n          repo: configuration.repo,\n          branch: configuration.branch,\n          path: configuration.path\n        },\n        {emitEvent: false}\n      );\n    }\n  }\n\n  private currentConfiguration(actualPath: string): GithubConfiguration {\n    const id = (this.githubConfiguration) ? this.githubConfiguration.id : null;\n    const reponame = this.form.value.repo;\n    const repo: GithubRepo = this._repos.find(r => r.name === reponame);\n    const owner = (repo) ? repo.owner : null;\n    return new GithubConfiguration(\n      id,\n      this.form.value.apiToken,\n      owner,\n      reponame,\n      this.form.value.branch,\n      actualPath\n    );\n  }\n\n  availableBranches(): string[] {\n    return this._branches.map(branch => branch.name);\n  }\n\n  availableRepos(): string[] {\n    return this._repos.map(repo => repo.name);\n  }\n\n  openPathBrowser() {\n    const conf = this.currentConfiguration('');\n      const dialogRef = this.dialog.open(FileExplorerDialogComponent, {\n          data: {\n              configuration: conf,\n              file: conf.directoryDescription(this.form.value.path),\n              selectableFileType: 'dir'\n          } as FileExplorerDialogData\n      });\n\n      dialogRef.afterClosed().subscribe((result: IFileDescription) => {\n          if (result) {\n              this.form.get('path').patchValue(result.path);\n          }\n      });\n\n  }\n\n  storeConfigurationClicked() {\n    this.storeConfiguration.emit(this.currentConfiguration(this.form.value.path));\n  }\n\n  deleteConfigurationClicked() {\n    this.deleteConfiguration.emit(this.currentConfiguration(this.form.value.path));\n  }\n}\n","import {IFileAccessConfiguration} from '../common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {GithubFileDescription} from './github-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.GITHUB;\r\n    version: '1';\r\n    id: string;\r\n    apiToken: string;\r\n    owner: string;\r\n    repo: string;\r\n    branch: string;\r\n    path: string;\r\n}\r\n\r\nexport class GithubConfiguration implements IFileAccessConfiguration {\r\n\r\n    readonly type = FileAccessorType.GITHUB;\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GithubConfiguration {\r\n        const v1 = JSON.parse(serializedForm) as SerializedFormV1;\r\n        return new GithubConfiguration(v1.id, v1.apiToken, v1.owner, v1.repo, v1.branch, v1.path);\r\n    }\r\n\r\n    constructor(\r\n        private _id: string|null,\r\n        private _apiToken: string,\r\n        private _owner: string,\r\n        private _repo: string,\r\n        private _branch: string|null,\r\n        private _path: string|null\r\n    ) {}\r\n\r\n    serialize(serializationService: SerializationService): string {\r\n       const v1: SerializedFormV1 = {\r\n           accessorType: FileAccessorType.GITHUB,\r\n           version: '1',\r\n           id: this._id,\r\n           apiToken: this._apiToken,\r\n           owner: this._owner,\r\n           repo: this._repo,\r\n           branch: this._branch,\r\n           path: this._path\r\n       };\r\n       return JSON.stringify(v1);\r\n    }\r\n\r\n    copy(): GithubConfiguration {\r\n        return new GithubConfiguration(this._id, this._apiToken, this._owner, this._repo, this._branch, this._path);\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(newId: string) {\r\n        this._id = newId;\r\n    }\r\n\r\n    public equals(another: IFileAccessConfiguration): boolean {\r\n        if (!another || another.type !== FileAccessorType.GITHUB) {\r\n            return false;\r\n        }\r\n        const anotherGitConfiguration = another as GithubConfiguration;\r\n        return this.apiToken === anotherGitConfiguration.apiToken\r\n          && this.repo === anotherGitConfiguration.repo\r\n          && this.branch === anotherGitConfiguration.branch\r\n          && this.path === anotherGitConfiguration.path;\r\n    }\r\n\r\n    public shortLabel(): string {\r\n        return 'repository ' + this._repo;\r\n    }\r\n\r\n    public fullLabel(): { maticon?: string; icon?: string; label: string } {\r\n        const branch = (this._branch) ? this._branch : 'master';\r\n        const owner = (this._owner) ? this._owner : '?';\r\n        const repo = (this._repo) ? this._repo : '?';\r\n        const path = (this._path) ? this._path : '';\r\n        return {\r\n            icon: 'Octocat.jpg',\r\n            label: `${owner}/${repo}@${branch}/${path}`\r\n        };\r\n    }\r\n\r\n    get apiToken(): string {\r\n        return this._apiToken;\r\n    }\r\n\r\n    get owner(): string {\r\n        return this._owner;\r\n    }\r\n\r\n    get repo(): string {\r\n        return this._repo;\r\n    }\r\n\r\n    get branch(): string {\r\n        return this._branch;\r\n    }\r\n\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    public rootDescription(): IFileDescription {\r\n        return new GithubFileDescription('dir', this, '', '');\r\n    }\r\n\r\n    public directoryDescription(dirPath: string): IFileDescription {\r\n        if (!dirPath) {\r\n            dirPath = '';\r\n        }\r\n        const slashIndex = dirPath.lastIndexOf('/');\r\n        const newName = (slashIndex >= 0) ? dirPath.substr(slashIndex + 1) : dirPath;\r\n        return new GithubFileDescription('dir', this, dirPath, newName);\r\n    }\r\n\r\n    /**\r\n     * Check, wether a publish is possible.\r\n     */\r\n    public canPublish(): boolean {\r\n        return true;\r\n    }\r\n\r\n}\r\n","import {SerializationService} from '../../model/serialization.service';\r\nimport {GithubConfiguration} from './github-configuration';\r\nimport {FileAccessorType} from '../common/file-accessor-type';\r\nimport {IFileDescription} from '../common/i-file-description';\r\n\r\ninterface SerializedFormV1 {\r\n    accessorType: FileAccessorType.GITHUB;\r\n    type: 'dir'|'file';\r\n    version: '1';\r\n    configuration: string;\r\n    path: string;\r\n    name: string;\r\n    children?: string[];\r\n}\r\n\r\nexport class GithubFileDescription implements IFileDescription {\r\n\r\n    static deserialize(serializationService: SerializationService, serializedForm: string): GithubFileDescription {\r\n        const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n        const children = (v1Object.type === 'dir') ?\r\n          v1Object.children.map(serializedChild => serializationService.deserializeIFileDescription(serializedChild)) :\r\n          null;\r\n        return new GithubFileDescription(\r\n          v1Object.type,\r\n          serializationService.deserializeIFileConfiguration(v1Object.configuration) as GithubConfiguration,\r\n          v1Object.path,\r\n          v1Object.name,\r\n          children\r\n        );\r\n    }\r\n\r\n    constructor(\r\n      public readonly type: 'dir'|'file',\r\n      public configuration: GithubConfiguration,\r\n      public path: string,\r\n      public name: string,\r\n      public children?: IFileDescription[]) {}\r\n\r\n    public serialize(serializationService: SerializationService): string {\r\n        const v1Object: SerializedFormV1 = {\r\n            accessorType: FileAccessorType.GITHUB,\r\n            type: this.type,\r\n            version: '1',\r\n            configuration: this.configuration.serialize(serializationService),\r\n            path: this.path,\r\n            name: this.name,\r\n            children: (this.children) ? this.children.map(fd => fd.serialize(serializationService)) : null\r\n\r\n        };\r\n        return JSON.stringify(v1Object);\r\n    }\r\n\r\n    public equals(another: IFileDescription): boolean {\r\n        if (!another || !another.configuration) {\r\n            return false;\r\n        }\r\n        if (!this.configuration.equals(another.configuration)) {\r\n            return false;\r\n        }\r\n        return this.type === another.type\r\n          && this.name === another.name\r\n          && this.path === another.path;\r\n    }\r\n\r\n    /**\r\n     * Test, whether it is a directory.\r\n     */\r\n    public isDirectory(): boolean {\r\n        return this.type === 'dir';\r\n    }\r\n\r\n    /**\r\n     * Return the directory of this file.\r\n     * (or the parent, if it is directory)\r\n     */\r\n    public dirname(): IFileDescription|null {\r\n        const slashIndex = this.path.lastIndexOf('/');\r\n        if (slashIndex <= 0) {\r\n            return null;\r\n        }\r\n        const mydir_path = this.path.substr(0, slashIndex - 1);\r\n        const slashIndexPath = mydir_path.lastIndexOf('/');\r\n        const mydir_name = (slashIndexPath >= 0) ? mydir_path.substr(slashIndexPath + 1) : mydir_path;\r\n        return new GithubFileDescription('dir', this.configuration, mydir_path, mydir_name);\r\n    }\r\n\r\n    /**\r\n     * Create a new FileDescription with the given name under this file or directory.\r\n     * If this is a normal file, it returns a file at the same path, but with new name.\r\n     * If this is directory, it returns a file contained in the directory.\r\n     * @param newName name of file\r\n     * @return file\r\n     */\r\n    public createFileDescription(newName: string): IFileDescription {\r\n        if (this.isDirectory()) {\r\n            const newPath = this.path ? this.path + '/' + newName : newName;\r\n            return new GithubFileDescription('file', this.configuration, newPath, newName);\r\n        } else {\r\n            const dir = this.dirname();\r\n            if (dir) {\r\n                return dir.createFileDescription(newName);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import {GenericFile} from '../common/generic-file';\r\nimport {IFileDescription} from '../common/i-file-description';\r\nimport {SerializationService} from '../../model/serialization.service';\r\nimport {IFile} from '../common/i-file';\r\n\r\ninterface SerializedFormV1 {\r\n  version: '1';\r\n  type: 'github';\r\n  description: string;\r\n  name: string;\r\n  size: number;\r\n  content: string;\r\n  sha: string;\r\n}\r\n\r\nexport class GithubFile extends GenericFile {\r\n  sha?: string; // SHA1 of loaded file\r\n\r\n  static deserialize(serializationService: SerializationService, serializedForm: string): GithubFile {\r\n    const v1Object: SerializedFormV1 = JSON.parse(serializedForm);\r\n    return new GithubFile(\r\n      serializationService.deserializeIFileDescription(v1Object.description),\r\n      v1Object.name,\r\n      v1Object.size,\r\n      v1Object.content,\r\n      v1Object.sha);\r\n  }\r\n\r\n  constructor(_description: IFileDescription, _name: string, _size: number, _content: string, _sha: string) {\r\n    super(_description, _name, _size, _content);\r\n    this.sha = _sha;\r\n  }\r\n\r\n  public serialize(serializationService: SerializationService): string {\r\n    return JSON.stringify({\r\n      version: '1',\r\n      type: 'github',\r\n      description: this.description.serialize(serializationService),\r\n      name: this.name,\r\n      size: this.size,\r\n      content: this.content,\r\n      sha: this.sha\r\n    } as SerializedFormV1);\r\n  }\r\n\r\n  /**\r\n   * Return a copy that has some edited content.\r\n   * @param newContent the changed content\r\n   */\r\n  public copyWithNewContent(newContent: string): IFile {\r\n    return new GithubFile(this.description, this.name, newContent.length, newContent, this.sha);\r\n  }\r\n\r\n  /**\r\n   * Create a copy that can be stored under a new location.\r\n   * @param saveAs new location to save file\r\n   */\r\n  copyForNewDescription(saveAs: IFileDescription): IFile {\r\n    return new GithubFile(saveAs, this.name, this.content.length, this.content, this.sha);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\n    <p fxFlex=\"50%\" i18n>Select the file you want to translate.<br>\n    The file can be of format XLIFF 1.2, XLIFF 2.0 or XMB.<br>\n    The file will be stored in your browser local storage until you export the translated version.</p>\n    <button mat-icon-button color=\"accent\" (click)=\"openDialog()\"><mat-icon>explore</mat-icon><span i18n>Open Github Browser...</span></button>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TranslationProject} from '../../../model/translation-project';\nimport {IFileDescription} from '../../common/i-file-description';\nimport {GithubConfiguration} from '../github-configuration';\nimport {MatDialog} from '@angular/material';\nimport {FileExplorerDialogComponent, FileExplorerDialogData} from '../../common/file-explorer-dialog/file-explorer-dialog.component';\n\n@Component({\n  selector: 'app-translation-file-from-github',\n  templateUrl: './translation-file-from-github.component.html',\n  styleUrls: ['./translation-file-from-github.component.css']\n})\nexport class TranslationFileFromGithubComponent implements OnInit {\n\n  @Input() createdProject?: TranslationProject;\n  @Input() configuration: GithubConfiguration;\n  @Output() fileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n  @Output() masterXmlFileSelected: EventEmitter<IFileDescription> = new EventEmitter();\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(FileExplorerDialogComponent, {\n      data: {\n        configuration: this.configuration,\n        selectableFileType: 'file'\n      } as FileExplorerDialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result: IFileDescription) => {\n      if (result) {\n        this.fileSelected.emit(result);\n      }\n    });\n  }\n}\n","<app-translate-unit-list [translationFileView]=\"currentView()\" [workflowType]=\"currentProject()?.workflowType\"\r\n                         [hasAutotranslatedUnits]=\"hasAutotranslatedUnits()\"\r\n                         (changeTranslationUnit)=\"onChangeTranslationUnit($event)\">\r\n\r\n</app-translate-unit-list>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-filter-page',\r\n  templateUrl: './filter-page.component.html',\r\n  styleUrls: ['./filter-page.component.css']\r\n})\r\nexport class FilterPageComponent implements OnInit {\r\n\r\n  constructor(private translationService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentProject(): TranslationProject {\r\n    return this.translationService.currentProject();\r\n  }\r\n\r\n  currentView(): TranslationFileView {\r\n    return this.currentProject() ? this.currentProject().translationFileView : null;\r\n  }\r\n\r\n  /**\r\n   * Navigate to another unit.\r\n   * @param translationUnit\r\n   */\r\n  onChangeTranslationUnit(translationUnit: TranslationUnit) {\r\n    this.translationService.selectTransUnit(translationUnit);\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  hasAutotranslatedUnits(): boolean {\r\n    return this.currentProject()\r\n      && this.currentProject().autoTranslateSummaryReport()\r\n      && this.currentProject().autoTranslateSummaryReport().total() > 0;\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n  <a mat-icon-button routerLink=\"/selectfilter\" routerLinkActive=\"active\"><mat-icon>filter_list</mat-icon>\r\n    <ng-container [ngSwitch]=\"currentFilterName()\">\r\n      <ng-container *ngSwitchCase=\"'all'\" i18n>All units</ng-container>\r\n      <ng-container *ngSwitchCase=\"'autotranslated'\" i18n>Autotranslated units</ng-container>\r\n      <ng-container *ngSwitchCase=\"'autotranslatedFailed'\" i18n>failed Autotranslated</ng-container>\r\n      <ng-container *ngSwitchCase=\"'autotranslatedIgnored'\" i18n>ignored Autotranslated</ng-container>\r\n      <ng-container *ngSwitchCase=\"'untranslated'\" i18n>Untranslated units</ng-container>\r\n      <ng-container *ngSwitchCase=\"'needsReview'\" i18n>Review needed</ng-container>\r\n      <ng-container *ngSwitchCase=\"'bySubstring'\" i18n>Substring {{substringFilterPattern()}}</ng-container>\r\n      <ng-container *ngSwitchDefault>{{currentFilterName()}}</ng-container>\r\n    </ng-container>\r\n  </a>\r\n  <span fxFlex></span>\r\n  <span *ngIf=\"translationFileView?.currentTransUnitIndex() > 0\" i18n>{{translationFileView?.currentTransUnitIndex()}} of {{translationFileView?.scrollabeTransUnitsLength()}}</span>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {TranslationUnitFilterSubstring} from '../model/filters/translation-unit-filter-substring';\r\n\r\n@Component({\r\n  selector: 'app-filter-status',\r\n  templateUrl: './filter-status.component.html',\r\n  styleUrls: ['./filter-status.component.css']\r\n})\r\nexport class FilterStatusComponent implements OnInit {\r\n\r\n  @Input() translationFileView: TranslationFileView;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentFilterName(): string {\r\n    if (this.translationFileView) {\r\n      return this.translationFileView.activeFilter().name();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  substringFilterPattern(): string {\r\n    const activeFilter = this.translationFileView.activeFilter();\r\n    if (activeFilter.name() === 'bySubstring') {\r\n      const filter: TranslationUnitFilterSubstring = <TranslationUnitFilterSubstring> activeFilter;\r\n      return filter.substringFilterPattern();\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <p i18n>{projects().length, plural, =0 {Currently there is no open project.} =1 {Currently there is <b>1</b> open project.} other {Currently there are <b>{{projects().length}}</b> open projects.}}</p>\r\n  <a mat-raised-button color=\"accent\" routerLink=\"/createproject\" i18n>Create a new project</a>\r\n  <p></p>\r\n  <app-project-list [projects]=\"projects()\" (onStartProject)=\"startProject($event)\" (onDeleteProject)=\"deleteProject($event)\" (onSaveProject)=\"saveProject($event)\"></app-project-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {Router} from '@angular/router';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor(private translatorService: TinyTranslatorService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public projects(): TranslationProject[] {\r\n    return this.translatorService.projects();\r\n  }\r\n\r\n  public startProject(project: TranslationProject) {\r\n    this.translatorService.setCurrentProject(project);\r\n    this.router.navigateByUrl('translate');\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.translatorService.deleteProject(project);\r\n  }\r\n\r\n  public saveProject(project: TranslationProject) {\r\n    this.translatorService.downloadProject(project);\r\n  }\r\n}\r\n","<div>\r\n  <span [ngClass]=\"flagClasses()\"></span>\r\n  <span id=\"code\" *ngIf=\"showCode\">{{code}}</span>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n/**\r\n * A component that shows a language.\r\n * The input is some ISO 639-1 Code like \"de\", \"de-ch\", \"en\", \"en-uk\"..\r\n * The component tries to show a matching flag icon and the given code.\r\n */\r\n@Component({\r\n  selector: 'app-language',\r\n  templateUrl: './language.component.html',\r\n  styleUrls: ['./language.component.scss']\r\n})\r\nexport class LanguageComponent implements OnInit {\r\n\r\n  @Input() public code: string; // the ISO 639-1 code\r\n\r\n  @Input() public showCode = true; // if false, just show a flag, otherwise flag + code as text\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * Classes used by flag-icon-css\r\n   * @return {{flag-icon: boolean}}\r\n   */\r\n  public flagClasses(): any {\r\n    const countryCode = this.languageCodeToCountryCode(this.code);\r\n    if (!countryCode) {\r\n      return {\r\n        'flag-icon': true,\r\n        'missing-code': true};\r\n    }\r\n    const flagIconCountry = 'flag-icon-' + countryCode.toLowerCase();\r\n    const result = {\r\n      'flag-icon': true\r\n    };\r\n    result[flagIconCountry] = true;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Map a given language code (ISO 639-1) to country code (ISO-3166-1-alpha 2 code).\r\n   * This is just a best effort approach.\r\n   */\r\n  public languageCodeToCountryCode(languageCode: string): string {\r\n    if (!languageCode) {\r\n      return null;\r\n    }\r\n    const lang = this.langFromLanguageCode(languageCode);\r\n    const region = this.regionFromLanguageCode(languageCode);\r\n    if (region && region.length === 2) {\r\n      return region;\r\n    }\r\n    // table of all lang codes, that are different from country code\r\n    // based on Microsofts Table of Language Culture Names https://msdn.microsoft.com/de-de/library/ee825488%28v=cs.20%29.aspx\r\n    switch (lang.toLowerCase()) {\r\n      case 'af': return 'ZA';\r\n      case 'sq': return 'AL';\r\n      case 'ar': return 'SA';\r\n      case 'hy': return 'AM';\r\n      case 'eu': return 'ES';\r\n      case 'be': return 'BY';\r\n      case 'ca': return 'ES';\r\n      case 'zh': return 'CN';\r\n      case 'cs': return 'CZ';\r\n      case 'da': return 'DK';\r\n      case 'div': return 'MV';\r\n      case 'en': return 'GB';\r\n      case 'et': return 'EE';\r\n      case 'fa': return 'IR';\r\n      case 'gl': return 'IS';\r\n      case 'ka': return 'GE';\r\n      case 'el': return 'GR';\r\n      case 'gu': return 'IN';\r\n      case 'he': return 'IL';\r\n      case 'hi': return 'IN';\r\n      case 'ja': return 'JP';\r\n      case 'kn': return 'IN';\r\n      case 'kk': return 'KZ';\r\n      case 'kok': return 'IN';\r\n      case 'ko': return 'KR';\r\n      case 'ky': return 'KZ';\r\n      case 'ms': return 'MY';\r\n      case 'mr': return 'IN';\r\n      case 'nb': return 'NO';\r\n      case 'nn': return 'NO';\r\n      case 'pa': return 'IN';\r\n      case 'sa': return 'IN';\r\n      case 'sl': return 'SI';\r\n      case 'sw': return 'KE';\r\n      case 'sv': return 'SE';\r\n      case 'syr': return 'SY';\r\n      case 'ta': return 'IN';\r\n      case 'tt': return 'RU';\r\n      case 'te': return 'IN';\r\n      case 'uk': return 'UA';\r\n      case 'ur': return 'PK';\r\n      case 'vi': return 'VN';\r\n      default: return lang;\r\n    }\r\n  }\r\n\r\n  private langFromLanguageCode(languageCode: string): string {\r\n    const parts: string[] = languageCode.split('-');\r\n    if (parts.length > 0) {\r\n      return parts[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private regionFromLanguageCode(languageCode: string): string {\r\n    const parts: string[] = languageCode.split('-');\r\n    if (parts.length > 1) {\r\n      return parts[1];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","\r\nimport {throwError as observableThrowError, Observable, BehaviorSubject, of, forkJoin} from 'rxjs';\r\nimport {Inject, Injectable} from '@angular/core';\r\nimport {\r\n  AutoTranslateDisabledReason, AutoTranslateDisabledReasonKey, AutoTranslateServiceAPI,\r\n  Language\r\n} from './auto-translate-service-api';\r\nimport {APP_CONFIG, AppConfig} from '../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {catchError, map} from 'rxjs/operators';\r\n\r\n/**\r\n * Types form google translate api.\r\n */\r\n\r\ninterface GetSupportedLanguagesRequest {\r\n  target: string; // The language to use to return localized, human readable names of supported\\nlanguages.\r\n}\r\n\r\ninterface LanguagesResource {\r\n  language: string; // code of the language\r\n  name: string; // human readable name (in target language)\r\n}\r\n\r\ninterface LanguagesListResponse {\r\n  languages: LanguagesResource[];\r\n}\r\n\r\ninterface TranslateTextRequest {\r\n  q: string[];  // The input texts to translate\r\n  target: string; // The language to use for translation of the input text\r\n  source: string; // The language of the source text\r\n  format?: string; // \"html\" (default) or \"text\"\r\n  model?: string; // see public documentation\r\n}\r\n\r\ninterface TranslationsResource {\r\n  detectedSourceLanguage?: string;\r\n  model?: string;\r\n  translatedText: string;\r\n}\r\n\r\ninterface TranslationsListResponse {\r\n  translations: TranslationsResource[];\r\n}\r\n\r\n// maximum number of strings to translate in one request (a Google limit!)\r\nconst MAX_SEGMENTS = 128;\r\n\r\n/**\r\n * Auto Translate Service using Google Translate.\r\n */\r\n@Injectable()\r\nexport class AutoTranslateGoogleService extends AutoTranslateServiceAPI {\r\n\r\n  private _rootUrl: string;\r\n\r\n  private _apiKey: string;\r\n\r\n  // a setting for tests!!\r\n  // if set to true, all autotranslations containing placeholder or tags will FAIL BY DESIGN\r\n  // Used to allow testing of report page and filters for failed translations.\r\n  private failByDesign: boolean;\r\n\r\n  /**\r\n   * Cache of supported languages.\r\n   */\r\n  private _subjects: {[target: string]: BehaviorSubject<Language[]>};\r\n\r\n  /**\r\n   * Reason, that currently disables the API.\r\n   * (no key, invalid key)\r\n   */\r\n  private _permanentFailReason: AutoTranslateDisabledReason;\r\n\r\n  /**\r\n   * Strip region code and convert to lower\r\n   * @param lang lang\r\n   * @return lang without region code and in lower case.\r\n   */\r\n  public static stripRegioncode(lang: string): string {\r\n    if (isNullOrUndefined(lang)) {\r\n      return null;\r\n    }\r\n    const langLower = lang.toLowerCase();\r\n    for (let i = 0; i < langLower.length; i++) {\r\n      const c = langLower.charAt(i);\r\n      if (c < 'a' || c > 'z') {\r\n        return langLower.substring(0, i);\r\n      }\r\n    }\r\n    return langLower;\r\n  }\r\n\r\n  constructor(@Inject(APP_CONFIG) app_config: AppConfig, private httpClient: HttpClient) {\r\n    super();\r\n    this._rootUrl = app_config.GOOGLETRANSLATE_API_ROOT_URL;\r\n    // API key is secret, normally it is nit configured and will be null\r\n    // it can be set interactively in the app\r\n    // but in the karma tests it will be set. It is stored than in environment.secret.ts (not in Git)\r\n    this.setApiKey(app_config.GOOGLETRANSLATE_API_KEY); // must be set explicitly via setApiKey()\r\n    this.failByDesign = false;\r\n    if (app_config.GOOGLETRANSLATE_PROVOKE_FAILURES === true) {\r\n      this.failByDesign = true;\r\n    }\r\n  }\r\n\r\n  public apiKey(): string {\r\n    return this._apiKey;\r\n  }\r\n\r\n  public setApiKey(key: string) {\r\n    this._apiKey = key;\r\n    this._permanentFailReason = null;\r\n    this._subjects = {};\r\n    if (!this._apiKey) {\r\n      this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_KEY};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is active.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   */\r\n  public canAutoTranslate(source: string, target: string): Observable<boolean> {\r\n    return this.supportedLanguages().pipe(\r\n        map((languages: Language[]) => {\r\n          const s = AutoTranslateGoogleService.stripRegioncode(source);\r\n          const t = AutoTranslateGoogleService.stripRegioncode(target);\r\n          if (!s || languages.findIndex((lang) => lang.language === s) < 0) {\r\n            return false;\r\n          }\r\n          return (t && languages.findIndex((lang) => lang.language === t) >= 0);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * The reason, why canAutoTranslate returns false.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   * @return reason or null, if API is enabled.\r\n   */\r\n  public disabledReason(source: string, target: string): Observable<AutoTranslateDisabledReason> {\r\n    return this.supportedLanguages().pipe(\r\n        map((languages: Language[]) => {\r\n          if (languages.length === 0) {\r\n            return this._permanentFailReason;\r\n          }\r\n          const s = AutoTranslateGoogleService.stripRegioncode(source);\r\n          if (!s || languages.findIndex((lang) => lang.language === s) < 0) {\r\n            return {reason: AutoTranslateDisabledReasonKey.SOURCE_LANG_NOT_SUPPORTED};\r\n          }\r\n          const t = AutoTranslateGoogleService.stripRegioncode(target);\r\n          if (!t || languages.findIndex((lang) => lang.language === t) < 0) {\r\n            return {reason: AutoTranslateDisabledReasonKey.TARGET_LANG_NOT_SUPPORTED};\r\n          }\r\n          return null;\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return a list of language codes that can be used.\r\n   * Returns codes as \"language\" and readable name.\r\n   * @param target language for readable name. (default is en)\r\n   */\r\n  supportedLanguages(target?: string): Observable<Language[]> {\r\n    if (!target) {\r\n      target = 'en';\r\n    } else {\r\n      target = AutoTranslateGoogleService.stripRegioncode(target);\r\n    }\r\n    if (!this._subjects[target]) {\r\n      if (this._apiKey) {\r\n        this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_PROVIDER};\r\n      } else {\r\n        this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.NO_KEY};\r\n      }\r\n      this._subjects[target] = new BehaviorSubject<Language[]>([]);\r\n      if (this._apiKey) {\r\n        const languagesRequestUrl = this._rootUrl + 'language/translate/v2/languages' + '?key=' + this._apiKey + '&target=' + target;\r\n        this.httpClient.get<{data: LanguagesListResponse}>(languagesRequestUrl).pipe(\r\n            catchError((error: Response) => {\r\n            if (this.isInvalidApiKeyError(error)) {\r\n              this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.INVALID_KEY};\r\n            } else {\r\n              this._permanentFailReason = {reason: AutoTranslateDisabledReasonKey.CONNECT_PROBLEM, details: JSON.stringify(error.body)};\r\n            }\r\n            return [];\r\n           }),\r\n            map((response) => {\r\n          const result: LanguagesListResponse = response.data;\r\n          return result.languages;\r\n        })).subscribe((languages) => {\r\n          this._subjects[target].next(languages);\r\n        });\r\n      }\r\n    }\r\n    return this._subjects[target];\r\n  }\r\n\r\n  private isInvalidApiKeyError(error: Response): boolean {\r\n    if (!error) {\r\n      return false;\r\n    }\r\n    if (error.status === 400) {\r\n      const body = error.body;\r\n      if (body) {\r\n        return JSON.stringify(body).indexOf('API key not valid') >= 0;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Translate a message.\r\n   * @param message the message to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated message or error\r\n   */\r\n  public translate(message: string, from: string, to: string): Observable<string> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const translateRequest: TranslateTextRequest = {\r\n      q: [message],\r\n      target: to,\r\n      source: from,\r\n      // format: TODO useful html or text\r\n    };\r\n    const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n    return this.httpClient.post<{data: TranslationsListResponse}>(realUrl, translateRequest).pipe(map((response) => {\r\n      const result: TranslationsListResponse = response.data;\r\n      return result.translations[0].translatedText;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Translate an array of messages at once.\r\n   * @param messages the messages to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated messages or error\r\n   */\r\n  public translateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    if (messages.length === 0) {\r\n      return of([]);\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const allRequests: Observable<string[]>[] = this.splitMessagesToGoogleLimit(messages).map((partialMessages: string[]) => {\r\n      return this.limitedTranslateMultipleStrings(partialMessages, from, to);\r\n    });\r\n    return forkJoin(allRequests).pipe(map((allTranslations: string[][]) => {\r\n      let all = [];\r\n      for (let i = 0; i < allTranslations.length; i++) {\r\n        all = all.concat(allTranslations[i]);\r\n      }\r\n      return all;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Return translation request, but messages must be limited to google limits.\r\n   * Not more that 128 single messages.\r\n   * @param messages messages\r\n   * @param from from\r\n   * @param to to\r\n   * @return the translated strings\r\n   */\r\n  private limitedTranslateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    if (!this._apiKey) {\r\n      return observableThrowError('error, no api key');\r\n    }\r\n    from = AutoTranslateGoogleService.stripRegioncode(from);\r\n    to = AutoTranslateGoogleService.stripRegioncode(to);\r\n    const translateRequest: TranslateTextRequest = {\r\n      q: messages,\r\n      target: to,\r\n      source: from,\r\n      // format: TODO useful html or text\r\n    };\r\n    const realUrl = this._rootUrl + 'language/translate/v2' + '?key=' + this._apiKey;\r\n    return this.httpClient.post<{data: TranslationsListResponse}>(realUrl, translateRequest).pipe(map((response) => {\r\n      const result: TranslationsListResponse = response.data;\r\n      return result.translations.map((translation: TranslationsResource) => {\r\n        // just for tests, provoke errors and warnings, if explicitly wanted\r\n        if (this.failByDesign) {\r\n          if (translation.translatedText.indexOf('{') >= 0) {\r\n            return 'oopsi';\r\n          }\r\n          if (translation.translatedText.indexOf('<') >= 0) {\r\n            return 'oopsala';\r\n          }\r\n        }\r\n        return translation.translatedText;\r\n      });\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Splits one array of messages to n arrays, where each has at least 128 (const MAX_ENTRIES) entries.\r\n   * @param messages messages\r\n   * @return splitted array\r\n   */\r\n  private splitMessagesToGoogleLimit(messages: string[]): string[][] {\r\n    if (messages.length <= MAX_SEGMENTS) {\r\n      return [messages];\r\n    }\r\n    const result = [];\r\n    let currentPackage = [];\r\n    let packageSize = 0;\r\n    for (let i = 0; i < messages.length; i++) {\r\n      currentPackage.push(messages[i]);\r\n      packageSize++;\r\n      if (packageSize >= MAX_SEGMENTS) {\r\n        result.push(currentPackage);\r\n        currentPackage = [];\r\n        packageSize = 0;\r\n      }\r\n    }\r\n    if (currentPackage.length > 0) {\r\n      result.push(currentPackage);\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n}\r\n","import {TranslationUnit} from './translation-unit';\r\n/**\r\n * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateResult {\r\n\r\n  public static Success(tu: TranslationUnit): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, true, false, null);\r\n  }\r\n\r\n  public static Failed(tu: TranslationUnit, details: string): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, false, false, details);\r\n  }\r\n\r\n  public static Ignored(tu: TranslationUnit, details: string): AutoTranslateResult {\r\n    return new AutoTranslateResult(tu, true, true, details);\r\n  }\r\n\r\n  private constructor(private _transUnit: TranslationUnit, private _success: boolean, private _ignored: boolean, private _details: string) {\r\n\r\n  }\r\n\r\n  public success(): boolean {\r\n    return this._success;\r\n  }\r\n\r\n  public failed(): boolean {\r\n    return !this._success;\r\n  }\r\n\r\n  public ignored(): boolean {\r\n    return this._ignored;\r\n  }\r\n\r\n  public details(): string {\r\n    return this._details;\r\n  }\r\n\r\n  public translationUnit(): TranslationUnit {\r\n    return this._transUnit;\r\n  }\r\n\r\n}\r\n","\r\nimport {throwError, Observable, of} from 'rxjs';\r\n\r\n/**\r\n * Reasons, why you cannot use the API.\r\n */\r\nexport enum AutoTranslateDisabledReasonKey {\r\n  NO_PROVIDER,\r\n  NO_KEY,\r\n  INVALID_KEY,\r\n  SOURCE_LANG_NOT_SUPPORTED,\r\n  TARGET_LANG_NOT_SUPPORTED,\r\n  CONNECT_PROBLEM\r\n}\r\n\r\nexport interface AutoTranslateDisabledReason {\r\n  reason: AutoTranslateDisabledReasonKey;\r\n  details?: string;  // in case of CONNECT_PROBLEM some readable details like status code, error message\r\n}\r\n\r\nexport interface Language {\r\n  language: string; // language code\r\n  name: string; // human readable language name\r\n}\r\n\r\n/**\r\n * Interface of AutoTranslate Service API.\r\n * An AutoTranslateService can translate messages to other languages.\r\n */\r\nexport class AutoTranslateServiceAPI {\r\n\r\n  public apiKey(): string {\r\n    return null;\r\n  }\r\n\r\n  public setApiKey(apiKey: string) {\r\n    // ignore it\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is active.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   */\r\n  public canAutoTranslate(source: string, target: string): Observable<boolean> {\r\n    return of(false);\r\n  }\r\n\r\n  /**\r\n   * The reason, why canAutoTranslate returns false.\r\n   * @param source the language to translate from\r\n   * @param target the language to translate to\r\n   * @return reason or null, if API is enabled.\r\n   */\r\n  public disabledReason(source: string, target: string): Observable<AutoTranslateDisabledReason> {\r\n    return of({reason: AutoTranslateDisabledReasonKey.NO_PROVIDER});\r\n  }\r\n\r\n  /**\r\n   * Return a list of language codes that can be used.\r\n   * Returns codes as \"language\" and readable name.\r\n   * @param target language for readable name. (default is en)\r\n   */\r\n  supportedLanguages(target?: string): Observable<Language[]> {\r\n    return of([]);\r\n  }\r\n\r\n  /**\r\n   * Translate a message.\r\n   * TODO API to be designed\r\n   * @param message the message to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated message or error\r\n   */\r\n  public translate(message: string, from: string, to: string): Observable<string> {\r\n    return throwError('no translation service installed');\r\n  }\r\n\r\n  /**\r\n   * Translate an array of messages at once.\r\n   * @param messages the messages to be translated\r\n   * @param from source language code\r\n   * @param to target language code\r\n   * @return Observable with translated messages or error\r\n   */\r\n  public translateMultipleStrings(messages: string[], from: string, to: string): Observable<string[]> {\r\n    return throwError('no translation service installed');\r\n  }\r\n}\r\n","import {AutoTranslateResult} from './auto-translate-result';\r\nimport {format} from 'util';\r\n/**\r\n * A report about a run of Google Translate over all untranslated unit.\r\n * * Created by martin on 29.06.2017.\r\n */\r\n\r\nexport class AutoTranslateSummaryReport {\r\n\r\n  private _total: number;\r\n  private _ignored: number;\r\n  private _success: number;\r\n  private _failed: number;\r\n  private _allResults: {[id: string]: AutoTranslateResult};\r\n\r\n  constructor() {\r\n    this._allResults = {};\r\n    this._total = 0;\r\n    this._ignored = 0;\r\n    this._success = 0;\r\n    this._failed = 0;\r\n  }\r\n\r\n  /**\r\n   * Add a single result to the summary.\r\n   * @param result\r\n   */\r\n  public addSingleResult(result: AutoTranslateResult) {\r\n    this._allResults[result.translationUnit().id()] = result;\r\n    this._total++;\r\n    if (result.success()) {\r\n      if (result.ignored()) {\r\n        this._ignored++;\r\n      } else {\r\n        this._success++;\r\n      }\r\n    } else {\r\n      this._failed++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Merge another summary into this one.\r\n   * @param anotherSummary\r\n   */\r\n  public merge(anotherSummary: AutoTranslateSummaryReport) {\r\n    this._allResults = Object.assign({}, this._allResults, anotherSummary._allResults);\r\n    this._total += anotherSummary.total();\r\n    this._ignored += anotherSummary.ignored();\r\n    this._success += anotherSummary.success();\r\n    this._failed += anotherSummary.failed();\r\n  }\r\n\r\n  public total(): number {\r\n    return this._total;\r\n  }\r\n\r\n  public ignored(): number {\r\n    return this._ignored;\r\n  }\r\n\r\n  public success(): number {\r\n    return this._success;\r\n  }\r\n\r\n  public failed(): number {\r\n    return this._failed;\r\n  }\r\n\r\n  /**\r\n   * Human readable version of report\r\n   */\r\n  public content(): string {\r\n    return format('Total translated: %s\\nIgnored: %s\\nSuccesful: %s\\nFailed: %s',\r\n      this._total, this._ignored, this._success, this._failed);\r\n  }\r\n\r\n  public singleResult(tuId: string): AutoTranslateResult {\r\n    return this._allResults[tuId];\r\n  }\r\n\r\n  public allResults(): AutoTranslateResult[] {\r\n    const result: AutoTranslateResult[] = [];\r\n    Object.keys(this._allResults).forEach((val) => {\r\n      result.push(this._allResults[val]);\r\n    })\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BackendServiceAPI} from './backend-service-api';\r\nimport {TranslationProject} from './translation-project';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {SerializationService} from './serialization.service';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BackendLocalStorageService extends BackendServiceAPI {\r\n\r\n  private PRAEFIX = 'tinytranslator.';\r\n  private PRAEFIX_PROJECT = this.PRAEFIX + 'project.';\r\n  private KEY_CURRENT_PROJECT_ID = this.PRAEFIX + 'currentproject.id';\r\n  private KEY_CURRENT_TRANSUNIT_ID = this.PRAEFIX + 'currenttransunit.id';\r\n  private KEY_APIKEY = this.PRAEFIX + 'googletranslate.apikey';\r\n  private PRAEFIX_FILE_ACCESS_CONFIGURATION = this.PRAEFIX + 'fileaccessconfiguration.';\r\n\r\n  private _fileAccessConfigurations: BehaviorSubject<IFileAccessConfiguration[]>;\r\n\r\n  constructor(\r\n      private fileAccessServiceFactoryService: FileAccessServiceFactoryService,\r\n      private serializationService: SerializationService\r\n  ) {\r\n    super();\r\n    if (!localStorage) {\r\n      throw new Error('oops, local storage not supported');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store a project.\r\n   */\r\n  store(project: TranslationProject) {\r\n    if (!project.id) {\r\n      project.id = BackendServiceAPI.generateUUID();\r\n    }\r\n    localStorage.setItem(this.keyForProject(project), project.serialize(this.serializationService));\r\n  }\r\n\r\n  /**\r\n   * Get all stored projects.\r\n   */\r\n  projects(): TranslationProject[] {\r\n    const projectKeys = this.getProjectKeys();\r\n    return projectKeys\r\n      .map(key => TranslationProject.deserialize(this.serializationService, localStorage.getItem(key)))\r\n      .sort((p1, p2) => p1.name.localeCompare(p2.name));\r\n  }\r\n\r\n  /**\r\n   * Save id of curent project.\r\n   * @param id of project, null to remove.\r\n   */\r\n  storeCurrentProjectId(id: string) {\r\n    if (!id) {\r\n      localStorage.removeItem(this.KEY_CURRENT_PROJECT_ID);\r\n    } else {\r\n      localStorage.setItem(this.KEY_CURRENT_PROJECT_ID, id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID if current project.\r\n   * @return id of current project or null\r\n   */\r\n  currentProjectId(): string {\r\n    return localStorage.getItem(this.KEY_CURRENT_PROJECT_ID);\r\n  }\r\n\r\n  /**\r\n   * Save ID of last active TransUnit\r\n   * @param tuId active unit id or null.\r\n   */\r\n  storeCurrentTransUnitId(tuId: string) {\r\n    if (!tuId) {\r\n      localStorage.removeItem(this.KEY_CURRENT_TRANSUNIT_ID);\r\n    } else {\r\n      localStorage.setItem(this.KEY_CURRENT_TRANSUNIT_ID, tuId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID of last active TransUnit\r\n   * @return active unit or null.\r\n   */\r\n  currentTransUnitId(): string {\r\n    return localStorage.getItem(this.KEY_CURRENT_TRANSUNIT_ID);\r\n  }\r\n\r\n  deleteProject(project: TranslationProject) {\r\n    if (project && project.id) {\r\n      const key = this.keyForProject(project);\r\n      localStorage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save API Key in store.\r\n   * @param key GoogleTranslate API Key\r\n   */\r\n  storeAutoTranslateApiKey(key: string) {\r\n    if (!key) {\r\n      localStorage.removeItem(this.KEY_APIKEY);\r\n    } else {\r\n      localStorage.setItem(this.KEY_APIKEY, key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get API key from store.\r\n   * @return GoogleTranslate API Key\r\n   */\r\n  autoTranslateApiKey(): string {\r\n    return localStorage.getItem(this.KEY_APIKEY);\r\n  }\r\n\r\n  /**\r\n   * Store a file access configuration.\r\n   * @param configuration the configuration to store.\r\n   */\r\n  storeFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    const added = !configuration.id;\r\n    if (added) {\r\n      configuration.id = BackendServiceAPI.generateUUID();\r\n    }\r\n    const key = this.keyForFileAccessConfiguration(configuration);\r\n    const serialization = this.fileAccessServiceFactoryService.getFileAccessService(configuration.type)\r\n      .serialize(this.serializationService, configuration);\r\n    localStorage.setItem(key, serialization);\r\n    if (this._fileAccessConfigurations) {\r\n      const configs = this._fileAccessConfigurations.getValue();\r\n      const changedConfigs = added ?\r\n        [...configs, configuration] :\r\n        configs.map(conf => conf.id === configuration.id ? configuration : conf);\r\n      this._fileAccessConfigurations.next(changedConfigs);\r\n    }\r\n    return of(configuration);\r\n  }\r\n\r\n  deleteFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    if (configuration && configuration.id) {\r\n      const key = this.keyForFileAccessConfiguration(configuration);\r\n      localStorage.removeItem(key);\r\n      if (this._fileAccessConfigurations) {\r\n        const changedConfigs = this._fileAccessConfigurations.getValue().filter(conf => conf.id !== configuration.id);\r\n        this._fileAccessConfigurations.next(changedConfigs);\r\n      }\r\n      return of(configuration);\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return all saved file access configurations.\r\n   */\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    if (!this._fileAccessConfigurations) {\r\n      const configKeys = this.getFileAccessConfigurationKeys();\r\n      const configs = configKeys\r\n        .map(key => {\r\n          const fileAccessorType = this.getFileAccessorTypeFromKey(key);\r\n          const accessorService = this.fileAccessServiceFactoryService.getFileAccessService(fileAccessorType);\r\n          return accessorService.deserialize(this.serializationService, localStorage.getItem(key));\r\n        })\r\n        .sort((cfg1, cfg2) => cfg1.shortLabel().localeCompare(cfg2.shortLabel()));\r\n      this._fileAccessConfigurations = new BehaviorSubject<IFileAccessConfiguration[]>(configs);\r\n    }\r\n    return this._fileAccessConfigurations;\r\n  }\r\n\r\n  private keyForFileAccessConfiguration(configuration: IFileAccessConfiguration): string {\r\n    return this.PRAEFIX_FILE_ACCESS_CONFIGURATION + configuration.type + '.' + configuration.id;\r\n  }\r\n\r\n  private getFileAccessorTypeFromKey(key: string): FileAccessorType {\r\n    const keyParts = key.split('.');\r\n    const type: string = keyParts[keyParts.length - 2];\r\n    return type as FileAccessorType;\r\n  }\r\n\r\n  private getFileAccessConfigurationKeys(): string[] {\r\n    const result = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key && key.startsWith(this.PRAEFIX_FILE_ACCESS_CONFIGURATION)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private keyForProject(project: TranslationProject) {\r\n    return this.PRAEFIX_PROJECT + project.id;\r\n  }\r\n\r\n  private getProjectKeys(): string[] {\r\n    const result = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      if (key && key.startsWith(this.PRAEFIX_PROJECT)) {\r\n        result.push(key);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","import {TranslationProject} from './translation-project';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {Observable, of} from 'rxjs';\r\n\r\n/**\r\n * Interface of BackendService.\r\n * A BackendService can store and retrieve translation projects.\r\n * It also can store an API key for Google Translate.\r\n * And it can store FileAccessConfigurations.\r\n */\r\nexport class BackendServiceAPI {\r\n\r\n  /**\r\n   * Helper function to generate a unique ID.\r\n   * (from http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript)\r\n   * @return a unique id\r\n   */\r\n  static generateUUID(): string {\r\n    // Public Domain/MIT\r\n    let d = new Date().getTime();\r\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n      d += performance.now(); // use high-precision timer if available\r\n    }\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      const r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Store a project.\r\n   */\r\n  store(project: TranslationProject) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Get all stored projects.\r\n   */\r\n  projects(): TranslationProject[] {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Save id of curent project.\r\n   * @param id of project, null to remove.\r\n   */\r\n  storeCurrentProjectId(id: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ID if current project.\r\n   * @return id of current project or null\r\n   */\r\n  currentProjectId(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Save ID of last active TransUnit\r\n   * @param tuId active unit id or null.\r\n   */\r\n  storeCurrentTransUnitId(tuId: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ID of last active TransUnit\r\n   * @return active unit or null.\r\n   */\r\n  currentTransUnitId(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Delete a project from store.\r\n   * @param project to delete\r\n   */\r\n  deleteProject(project: TranslationProject) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Save API Key in store.\r\n   * @param key to store\r\n   */\r\n  storeAutoTranslateApiKey(key: string) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Get API key from store.\r\n   * @return the key\r\n   */\r\n  autoTranslateApiKey(): string {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Store a file access configuration.\r\n   * @param configuration the configuration to store.\r\n   */\r\n  storeFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    return null;\r\n  }\r\n\r\n  deleteFileAccessConfiguration(configuration: IFileAccessConfiguration): Observable<IFileAccessConfiguration> {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Return all saved file access configurations.\r\n   */\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return of([]);\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\n/**\r\n * Filter that filters all units.\r\n * Created by martin on 27.05.2017.\r\n */\r\nexport class TranslationUnitFilterAll implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return true;\r\n  }\r\n\r\n  public name(): string {\r\n    return 'all';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\n/**\r\n * Filter that filters all units that should be autotranslated by google, but translation failed.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslatedFailed implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (this.autoTranslateSummaryReport) {\r\n      const autotranslateResult = this.autoTranslateSummaryReport.singleResult(tu.id());\r\n      return autotranslateResult && autotranslateResult.failed();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslatedFailed';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\n/**\r\n * Filter that filters all units that should be autotranslated by google, but are ignored.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslatedIgnored implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (this.autoTranslateSummaryReport) {\r\n      const autotranslateResult = this.autoTranslateSummaryReport.singleResult(tu.id());\r\n      return autotranslateResult && autotranslateResult.ignored();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslatedIgnored';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {STATE_TRANSLATED} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\nimport {isNullOrUndefined} from '../../common/util';\r\n/**\r\n * Filter that filters all units that are autotranslated by google.\r\n * This cannot be decided just by looking at the unit, but you must have a list of autotranslated units.\r\n * This list is contained in the AutoTranslateSummaryReport.\r\n * Created by roobm on 10.07.2017.\r\n */\r\nexport class TranslationUnitFilterAutoTranslated implements ITranslationUnitFilter {\r\n\r\n  constructor(private autoTranslateSummaryReport: AutoTranslateSummaryReport) {\r\n\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return this.autoTranslateSummaryReport && tu.targetState() === STATE_TRANSLATED && !isNullOrUndefined(this.autoTranslateSummaryReport.singleResult(tu.id()));\r\n  }\r\n\r\n  public name(): string {\r\n    return 'autotranslated';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {STATE_TRANSLATED} from'@ngx-i18nsupport/ngx-i18nsupport-lib';\r\n/**\r\n * Filter that filters all units that have status \"translated\".\r\n * Created by martin on 30.05.2017.\r\n */\r\nexport class TranslationUnitFilterNeedsReview implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return tu.targetState() === STATE_TRANSLATED;\r\n  }\r\n\r\n  public name(): string {\r\n    return 'needsReview';\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\nimport {isNullOrUndefined} from '../../common/util';\r\n/**\r\n * Filter that filters units, that contain a given substring in source or target.\r\n * Created by martin on 01.06.2017.\r\n */\r\nexport class TranslationUnitFilterSubstring implements ITranslationUnitFilter {\r\n\r\n  constructor(private substring: string) {\r\n  }\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    if (!this.substring) {\r\n      return true;\r\n    }\r\n    const source = tu.sourceContent();\r\n    if (this.matches(source)) {\r\n      return true;\r\n    }\r\n    const target = tu.targetContent();\r\n    if (this.matches(target)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private matches(val: string): boolean {\r\n    if (isNullOrUndefined(val)) {\r\n      return false;\r\n    }\r\n    return val.toLowerCase().includes(this.substring.toLowerCase());\r\n  }\r\n\r\n  public name(): string {\r\n    return 'bySubstring';\r\n  }\r\n\r\n  public substringFilterPattern(): string {\r\n    return this.substring;\r\n  }\r\n}\r\n","import {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnit} from '../translation-unit';\r\n/**\r\n * Filter that filters all units.\r\n * Created by martin on 27.05.2017.\r\n */\r\nexport class TranslationUnitFilterUntranslated implements ITranslationUnitFilter {\r\n\r\n  public filters(tu: TranslationUnit): boolean {\r\n    return !tu.isTranslated();\r\n  }\r\n\r\n  public name(): string {\r\n    return 'untranslated';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ITranslationUnitFilter} from './i-translation-unit-filter';\r\nimport {TranslationUnitFilterAll} from './translation-unit-filter-all';\r\nimport {TranslationUnitFilterAutoTranslated} from './translation-unit-filter-autotranslated';\r\nimport {AutoTranslateSummaryReport} from '../auto-translate-summary-report';\r\nimport {TranslationUnitFilterAutoTranslatedFailed} from './translation-unit-filter-autotranslated-failed';\r\nimport {TranslationUnitFilterAutoTranslatedIgnored} from './translation-unit-filter-autotranslated-ignored';\r\nimport {TranslationUnitFilterNeedsReview} from './translation-unit-filter-needs-review';\r\nimport {TranslationUnitFilterSubstring} from './translation-unit-filter-substring';\r\nimport {TranslationUnitFilterUntranslated} from './translation-unit-filter-untranslated';\r\n\r\nexport const FILTER_ALL = 'all';\r\nexport const FILTER_AUTOTRANSLATED = 'autotranslated';\r\nexport const FILTER_AUTOTRANSLATED_FAILED = 'autotranslatedFailed';\r\nexport const FILTER_AUTOTRANSLATED_IGNORED = 'autotranslatedIgnored';\r\nexport const FILTER_NEEDS_REVIEW = 'needsReview';\r\nexport const FILTER_SUBSTRING = 'bySubstring';\r\nexport const FILTER_UNTRANSLATED = 'untranslated';\r\n\r\n@Injectable()\r\nexport class TranslationUnitFilterService {\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * Create a new filter.\r\n   * @param name one of the FILTER_.. constants\r\n   * @param substr Substring in case of FILTER_SUBSTRING\r\n   * @return {ITranslationUnitFilter} new filter instance\r\n   */\r\n  public getFilter(name: string, substr?: string): ITranslationUnitFilter {\r\n    switch (name) {\r\n      case FILTER_ALL:\r\n        return new TranslationUnitFilterAll();\r\n      case 'autotranslated':\r\n        return new TranslationUnitFilterAutoTranslated(this._autoTranslateSummaryReport);\r\n      case 'autotranslatedFailed':\r\n        return new TranslationUnitFilterAutoTranslatedFailed(this._autoTranslateSummaryReport);\r\n      case 'autotranslatedIgnored':\r\n        return new TranslationUnitFilterAutoTranslatedIgnored(this._autoTranslateSummaryReport);\r\n      case 'needsReview':\r\n        return new TranslationUnitFilterNeedsReview();\r\n      case 'bySubstring':\r\n        return new TranslationUnitFilterSubstring(substr);\r\n      case 'untranslated':\r\n        return new TranslationUnitFilterUntranslated();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Remember the last Autotranslate Summary report.\r\n   * Some filters need that.\r\n   * @param summary\r\n   */\r\n  public setAutotranslateSummaryReport(summary: AutoTranslateSummaryReport) {\r\n    this._autoTranslateSummaryReport = summary;\r\n  }\r\n}\r\n","import {INormalizedMessage, IICUMessage, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {ValidationErrors} from '@angular/forms';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n/**\r\n * Created by martin on 19.05.2017.\r\n * Wrapper around INormalizedMessage for GUI usage.\r\n * Holds the normalized form and the original.\r\n */\r\nexport class NormalizedMessage {\r\n\r\n  /**\r\n   * Original source as string.\r\n   */\r\n  private _original: string;\r\n\r\n  /**\r\n   * normalized message.\r\n   * null if original is unparsable.\r\n   */\r\n  private _normalizedMessage: INormalizedMessage;\r\n\r\n  /**\r\n   * Parse error if message was unparsable.\r\n   */\r\n  private _parseError: string;\r\n\r\n  /**\r\n   * Errors and warnings, lazy evaluated.\r\n   */\r\n  private _errors: ValidationErrors;\r\n  private _errorsInitialized = false;\r\n  private _warnings: ValidationErrors;\r\n  private _warningsInitialized = false;\r\n\r\n  private _sourceMessage: INormalizedMessage;\r\n\r\n  /**\r\n   * Create normalized message\r\n   * @param original the original string.\r\n   * @param normalizedMessage parsed version or null, if parsing error.\r\n   * @param parseError parsing error or (normally) null, if no error.\r\n   */\r\n  constructor(original: string, normalizedMessage: INormalizedMessage, parseError: string, sourceMessage: INormalizedMessage) {\r\n    this._original = original;\r\n    this._normalizedMessage = normalizedMessage;\r\n    this._parseError = parseError;\r\n    this._sourceMessage = sourceMessage;\r\n    this._errorsInitialized = false;\r\n    this._warningsInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Return a copy of the message.\r\n   */\r\n  public copy(): NormalizedMessage {\r\n    return new NormalizedMessage(this._original, this._normalizedMessage, this._parseError, this._sourceMessage);\r\n  }\r\n\r\n  public dislayText(normalize: boolean): string {\r\n    if (normalize) {\r\n      if (this._normalizedMessage) {\r\n        if (this.isICUMessage()) {\r\n          return this._normalizedMessage.asDisplayString() + ' ' + this._normalizedMessage.getICUMessage().asNativeString();\r\n        } else {\r\n          return this._normalizedMessage.asDisplayString();\r\n        }\r\n      } else {\r\n        return this._parseError;\r\n      }\r\n    } else {\r\n      return this._original;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is an ICU message.\r\n   */\r\n  isICUMessage(): boolean {\r\n    return this._normalizedMessage && !isNullOrUndefined(this._normalizedMessage.getICUMessage());\r\n  }\r\n\r\n  getICUMessage(): IICUMessage {\r\n    return this._normalizedMessage ? this._normalizedMessage.getICUMessage() : null;\r\n  }\r\n\r\n  public translate(newValue: string, normalize: boolean): NormalizedMessage {\r\n    let newOriginal: string;\r\n    let newMessage: INormalizedMessage;\r\n    let parseError: string;\r\n    if (normalize) {\r\n      try {\r\n        newMessage = this._sourceMessage.translate(newValue);\r\n        newOriginal = newMessage.asNativeString();\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n        newMessage = null;\r\n        newOriginal = null;\r\n      }\r\n    } else {\r\n      newOriginal = newValue;\r\n      try {\r\n        newMessage = this._sourceMessage.translateNativeString(newValue);\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n      }\r\n    }\r\n    return new NormalizedMessage(newOriginal, newMessage, parseError, this._sourceMessage);\r\n  }\r\n\r\n  /**\r\n   * Auto translate this normalized message via Google Translate.\r\n   * @param autoTranslateService autoTranslateService\r\n   * @param sourceLanguage Language of source\r\n   * @param targetLanguage Language of target\r\n   * @return new translated message (as Observable, it is an async call)\r\n   */\r\n  public autoTranslateUsingService(autoTranslateService: AutoTranslateServiceAPI,\r\n                                   sourceLanguage: string,\r\n                                   targetLanguage: string): Observable<NormalizedMessage> {\r\n    // TODO corner cases to be researched like special tags, ...\r\n    if (this.getICUMessage()) {\r\n      return this.autoTranslateICUMessageUsingService(autoTranslateService, sourceLanguage, targetLanguage);\r\n    } else {\r\n      return autoTranslateService.translate(this.dislayText(true), sourceLanguage, targetLanguage).pipe(\r\n          map((translation: string) => {\r\n            if (!isNullOrUndefined(translation)) {\r\n              return this.translate(translation, true);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n      ));\r\n    }\r\n  }\r\n\r\n  private autoTranslateICUMessageUsingService(autoTranslateService: AutoTranslateServiceAPI,\r\n                                              sourceLanguage: string,\r\n                                              targetLanguage: string): Observable<NormalizedMessage> {\r\n    const icuMessage: IICUMessage = this.getICUMessage();\r\n    const categories = icuMessage.getCategories();\r\n    // check for nested ICUs, we do not support that\r\n    if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n      throw new Error('nested ICU message not supported');\r\n    }\r\n    const allMessages: string[] = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n    return autoTranslateService.translateMultipleStrings(allMessages, sourceLanguage, targetLanguage)\r\n      .pipe(map((translations: string[]) => {\r\n        const icuTranslation: IICUMessageTranslation = {};\r\n        for (let i = 0; i < translations.length; i++) {\r\n          const translationText = translations[i];\r\n          icuTranslation[categories[i].getCategory()] = translationText;\r\n        }\r\n        const result = this.translateICUMessage(icuTranslation);\r\n        return result;\r\n      }));\r\n  }\r\n\r\n  public translateICUMessage(newValue: IICUMessageTranslation): NormalizedMessage {\r\n    let newOriginal: string;\r\n    let newMessage: INormalizedMessage;\r\n    let parseError: string;\r\n      try {\r\n        if (this._normalizedMessage) {\r\n          newMessage = this._normalizedMessage.translateICUMessage(newValue);\r\n        } else {\r\n          newMessage = this._sourceMessage.translateICUMessage(newValue);\r\n        }\r\n        newOriginal = newMessage.asNativeString();\r\n        parseError = null;\r\n      } catch (error) {\r\n        parseError = error.message;\r\n        newMessage = null;\r\n        newOriginal = null;\r\n      }\r\n    return new NormalizedMessage(newOriginal, newMessage, parseError, this._sourceMessage);\r\n  }\r\n\r\n  public nativeString(): string {\r\n    if (this._normalizedMessage) {\r\n      return this._normalizedMessage.asNativeString();\r\n    } else {\r\n      return this._original;\r\n    }\r\n  }\r\n\r\n  public validate(normalize: boolean): ValidationErrors | null {\r\n    if (!this._errorsInitialized) {\r\n      if (normalize) {\r\n        if (this._normalizedMessage) {\r\n          this._errors = this._normalizedMessage.validate();\r\n        } else {\r\n          this._errors = {'parseError': this._parseError};\r\n        }\r\n      } else {\r\n        this._errors = null;\r\n      }\r\n      this._errorsInitialized = true;\r\n    }\r\n    return this._errors;\r\n  }\r\n\r\n  public validateWarnings(normalize: boolean): ValidationErrors | null {\r\n    if (!this._warningsInitialized) {\r\n      if (normalize) {\r\n        if (this._normalizedMessage) {\r\n          this._warnings = this._normalizedMessage.validateWarnings();\r\n        } else {\r\n          this._warnings = null;\r\n        }\r\n      } else {\r\n        this._warnings = null;\r\n      }\r\n      this._warningsInitialized = true;\r\n    }\r\n    return this._warnings;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\nimport {DownloadUploadFileDescription} from '../file-accessors/download-upload/download-upload-file-description';\nimport {DownloadUploadConfiguration} from '../file-accessors/download-upload/download-upload-configuration';\nimport {GithubConfiguration} from '../file-accessors/github/github-configuration';\nimport {GithubFileDescription} from '../file-accessors/github/github-file-description';\nimport {IFile} from '../file-accessors/common/i-file';\nimport {GenericFile} from '../file-accessors/common/generic-file';\nimport {GithubFile} from '../file-accessors/github/github-file';\n\ninterface SerializedFormOfFile {\n  type?: 'github';\n}\n\ninterface SerializedFormOfDescription {\n  accessorType: FileAccessorType;\n  type: 'file'|'dir';\n}\n\ninterface SerializedFormOfConfiguration {\n  accessorType: FileAccessorType;\n}\n\n/**\n * A service to serialize tiny translator objects to strings and deserialze back.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SerializationService {\n\n  constructor() { }\n\n  public deserializeIFile(serializedForm: string): IFile {\n    const obj: SerializedFormOfFile = JSON.parse(serializedForm);\n    switch (obj.type) {\n      case 'github':\n        return GithubFile.deserialize(this, serializedForm);\n      default:\n        return GenericFile.deserialize(this, serializedForm);\n    }\n  }\n\n  public deserializeIFileDescription(serializedForm: string): IFileDescription {\n    const obj: SerializedFormOfDescription = JSON.parse(serializedForm);\n    switch (obj.accessorType) {\n      case FileAccessorType.DOWNLOAD_UPLOAD:\n        return DownloadUploadFileDescription.deserialize(this, serializedForm);\n      case FileAccessorType.GITHUB:\n        return GithubFileDescription.deserialize(this, serializedForm);\n    }\n    return null;\n  }\n\n  public deserializeIFileConfiguration(serializedForm: string): IFileAccessConfiguration {\n    const obj: SerializedFormOfConfiguration = JSON.parse(serializedForm);\n    switch (obj.accessorType) {\n      case FileAccessorType.DOWNLOAD_UPLOAD:\n        return DownloadUploadConfiguration.deserialize(this, serializedForm);\n      case FileAccessorType.GITHUB:\n        return GithubConfiguration.deserialize(this, serializedForm);\n    }\n    return null;\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {TranslationFile} from './translation-file';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {BackendServiceAPI} from './backend-service-api';\r\nimport {TranslationProject, WorkflowType} from './translation-project';\r\nimport {combineLatest, Observable, of} from 'rxjs';\r\nimport {AutoTranslateDisabledReasonKey, AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {TranslationUnit} from './translation-unit';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {FileStatus, ICommitData, IFileAccessService, IFileStats} from '../file-accessors/common/i-file-access-service';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {IFile} from '../file-accessors/common/i-file';\r\nimport {DownloadUploadConfiguration} from '../file-accessors/download-upload/download-upload-configuration';\r\n\r\n@Injectable()\r\nexport class TinyTranslatorService {\r\n\r\n  /**\r\n   * List of projects for work.\r\n   */\r\n  private _projects: TranslationProject[];\r\n\r\n  /**\r\n   * The current project.\r\n   */\r\n  private _currentProject: TranslationProject;\r\n\r\n  constructor(private backendService: BackendServiceAPI,\r\n              private fileAccessServiceFactoryService: FileAccessServiceFactoryService,\r\n              private autoTranslateService: AutoTranslateServiceAPI) {\r\n    this._projects = this.backendService.projects();\r\n    const currentProjectId = this.backendService.currentProjectId();\r\n    if (currentProjectId) {\r\n      this._currentProject = this._projects.find((project) => project.id === currentProjectId);\r\n    }\r\n    const currentTransUnitId: string = this.backendService.currentTransUnitId();\r\n    if (currentTransUnitId && this.currentProject()) {\r\n      const transUnit = this.currentProject().translationFile.allTransUnits().find(tu => tu.id() === currentTransUnitId);\r\n      this.currentProject().translationFileView.selectTransUnit(transUnit);\r\n    }\r\n    this.autoTranslateService.setApiKey(this.backendService.autoTranslateApiKey());\r\n  }\r\n\r\n  /**\r\n   * Add a new project.\r\n   * @param project project\r\n   * @return list of errors found in file selection.\r\n   */\r\n  public addProject(project: TranslationProject): string[] {\r\n    this._projects.push(project);\r\n    this.backendService.store(project);\r\n    // TODO error handling\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Create a new project.\r\n   * (you must add it with addProject to use it).\r\n   * @param projectName projectName\r\n   * @param file selected xlf or xmb file to translate\r\n   * @param masterXmbFile in case of xmb the master file\r\n   * @param workflowType Type of workflow used in project (singleUser versus withReview).\r\n   * @return TranslationProject\r\n   */\r\n  public createProject(projectName: string,\r\n                       file: IFileDescription,\r\n                       masterXmbFile?: IFileDescription,\r\n                       workflowType?: WorkflowType): Observable<TranslationProject> {\r\n    if (isNullOrUndefined(file)) {\r\n      return of(new TranslationProject(projectName, null, workflowType));\r\n    }\r\n    const fileAccessService: IFileAccessService = this.fileAccessServiceFactoryService.getFileAccessService(file.configuration.type);\r\n    return combineLatest(fileAccessService.load(file), (masterXmbFile) ? fileAccessService.load(masterXmbFile) : of(null)).pipe(\r\n        map(contentArray => {\r\n          const loadedFile = contentArray[0];\r\n          const loadedMaster = contentArray[1];\r\n          return TranslationFile.fromFile(loadedFile as IFile, loadedMaster);\r\n        }),\r\n        map((translationFile: TranslationFile) => {\r\n          return new TranslationProject(projectName, translationFile, workflowType);\r\n        })\r\n    );\r\n  }\r\n\r\n  public setCurrentProject(project: TranslationProject) {\r\n    let id: string = null;\r\n    if (project) {\r\n      if (isNullOrUndefined(this._projects.find(p => p === project))) {\r\n        throw new Error('oops, selected project not in list');\r\n      }\r\n      id = project.id;\r\n    }\r\n    this._currentProject = project;\r\n    this.backendService.storeCurrentProjectId(id);\r\n  }\r\n\r\n  public currentProject(): TranslationProject {\r\n    return this._currentProject;\r\n  }\r\n\r\n  /**\r\n   * Select a TranslationUnit, if it is currently in the filtered list.\r\n   * If it is not, will do nothing.\r\n   * @param transUnit transUnit\r\n   */\r\n  public selectTransUnit(transUnit: TranslationUnit) {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      if (this.currentProject().translationFileView.selectTransUnit(transUnit)) {\r\n        this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to next unit.\r\n   */\r\n  public nextTransUnit() {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      const transUnit = this.currentProject().translationFileView.nextTransUnit();\r\n      this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to previous unit.\r\n   */\r\n  public prevTransUnit() {\r\n    if (!this.currentProject()) {\r\n      return;\r\n    } else {\r\n      const transUnit = this.currentProject().translationFileView.prevTransUnit();\r\n      this.backendService.storeCurrentTransUnitId(transUnit.id());\r\n    }\r\n  }\r\n\r\n  public projects(): TranslationProject[] {\r\n    return this._projects;\r\n  }\r\n\r\n  public commitChanges(project: TranslationProject) {\r\n    this.backendService.store(project);\r\n  }\r\n\r\n  public downloadProject(project: TranslationProject) {\r\n    this.fileAccessServiceFactoryService.getFileAccessService(FileAccessorType.DOWNLOAD_UPLOAD)\r\n        .save(project.translationFile.editedFile());\r\n    project.translationFile.markExported();\r\n    this.commitChanges(project);\r\n  }\r\n\r\n  public publishProject(\r\n    project: TranslationProject,\r\n    saveAs: IFileDescription|null,\r\n    commitData: ICommitData,\r\n    confirmModifiedCallback: () => Observable<boolean>,\r\n    confirmOverrideCallback: () => Observable<boolean>): Observable<boolean> {\r\n    let fileToSave = project.translationFile.editedFile();\r\n    const isSavePositionChanged = !!saveAs && !saveAs.equals(fileToSave.description);\r\n    if (isSavePositionChanged) {\r\n      fileToSave = fileToSave.copyForNewDescription(saveAs);\r\n    }\r\n    const fileAccessService =\r\n      this.fileAccessServiceFactoryService.getFileAccessService(fileToSave.description.configuration.type);\r\n    return fileAccessService.stats(fileToSave).pipe(\r\n      switchMap((stats: IFileStats) => {\r\n        if (isSavePositionChanged && stats.status !== FileStatus.EXISTS_NOT) {\r\n          return confirmOverrideCallback().pipe(\r\n            tap(doSave => {commitData.override = doSave; })\r\n          );\r\n        }\r\n        if (!isSavePositionChanged && stats.status === FileStatus.CHANGED) {\r\n          return confirmModifiedCallback().pipe(\r\n            tap(doSave => {commitData.override = doSave; })\r\n          );\r\n        }\r\n        if (!isSavePositionChanged) {\r\n          commitData.override = true;\r\n        }\r\n        return of(true);\r\n      }),\r\n      switchMap((doSave: boolean) => {\r\n        if (doSave) {\r\n          return fileAccessService.save(fileToSave, commitData)\r\n            .pipe(\r\n              tap(() => {\r\n                if (!saveAs) {\r\n                  project.translationFile.markExported();\r\n                  this.commitChanges(project);\r\n                }\r\n              }),\r\n              map(() => {\r\n                return true;\r\n              })\r\n            );\r\n        } else {\r\n          return of(false);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.backendService.deleteProject(project);\r\n    const index = this._projects.findIndex(p => p === project);\r\n    if (index >= 0) {\r\n      this._projects = this._projects.slice(0, index).concat(this._projects.slice(index + 1));\r\n      if (project === this.currentProject()) {\r\n        this.setCurrentProject(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set an API key for Google Translate.\r\n   * Will be stored in local storage.\r\n   * @param key key\r\n   */\r\n  public setAutoTranslateApiKey(key: string) {\r\n    this.autoTranslateService.setApiKey(key);\r\n    this.backendService.storeAutoTranslateApiKey(key);\r\n  }\r\n\r\n  /**\r\n   * Get the currently active Google Translate API key.\r\n   * @return api key\r\n   */\r\n  public autoTranslateApiKey(): string {\r\n    return this.autoTranslateService.apiKey();\r\n  }\r\n\r\n  /**\r\n   * Test, wether auto translation is possible for current project.\r\n   * @return Observable<boolean>\r\n   */\r\n  public canAutoTranslate(): Observable<boolean> {\r\n    if (isNullOrUndefined(this.currentProject()) || !this.currentProject().canTranslate()) {\r\n      return of(false);\r\n    }\r\n    return this.canAutoTranslateForLanguages(\r\n      this.currentProject().translationFile.sourceLanguage(),\r\n      this.currentProject().translationFile.targetLanguage());\r\n  }\r\n\r\n  /**\r\n   * Test, wether auto translation is possible for given languages.\r\n   * @param source Source Language\r\n   * @param target Target Language\r\n   * @return Observable<boolean>\r\n   */\r\n  public canAutoTranslateForLanguages(source: string, target: string): Observable<boolean> {\r\n    return this.autoTranslateService.canAutoTranslate(source, target);\r\n  }\r\n\r\n  /**\r\n   * Reason, why auto translation is not possible for current project.\r\n   * @return Observable<string>\r\n   */\r\n  public autoTranslateDisabledReason(): Observable<string> {\r\n    if (isNullOrUndefined(this.currentProject()) || !this.currentProject().canTranslate()) {\r\n      return of('no translatable project');\r\n    }\r\n    return this.autoTranslateDisabledReasonForLanguages(\r\n      this.currentProject().translationFile.sourceLanguage(),\r\n      this.currentProject().translationFile.targetLanguage());\r\n  }\r\n\r\n  /**\r\n   * Reason, why auto translation is not possible for given languages.\r\n   * @return Observable<string>\r\n   */\r\n  public autoTranslateDisabledReasonForLanguages(source: string, target: string): Observable<string> {\r\n    return this.autoTranslateService.disabledReason(source, target).pipe(\r\n        map((reason) => {\r\n          if (isNullOrUndefined(reason)) {\r\n            return null; // means not disabled, everything is ok!\r\n          }\r\n          switch (reason.reason) {\r\n            case AutoTranslateDisabledReasonKey.NO_PROVIDER:\r\n              return 'no provider';\r\n            case AutoTranslateDisabledReasonKey.NO_KEY:\r\n              return 'no key';\r\n            case AutoTranslateDisabledReasonKey.INVALID_KEY:\r\n              return 'invalid key';\r\n            case AutoTranslateDisabledReasonKey.SOURCE_LANG_NOT_SUPPORTED:\r\n              return 'source language not supported';\r\n            case AutoTranslateDisabledReasonKey.TARGET_LANG_NOT_SUPPORTED:\r\n              return 'target language not supported';\r\n            case AutoTranslateDisabledReasonKey.CONNECT_PROBLEM:\r\n              return 'connection problem: ' + reason.details;\r\n          }\r\n        }\r\n    ));\r\n  }\r\n\r\n  /**\r\n   * Test call the auto translate service.\r\n   * @param message message\r\n   * @param source source\r\n   * @param target target\r\n   * @return translated string\r\n   */\r\n  public testAutoTranslate(message: string, source: string, target: string): Observable<string> {\r\n    return this.autoTranslateService.translate(message, source, target);\r\n  }\r\n\r\n  /**\r\n   * Auto translate all untranslated units.\r\n   */\r\n  public autoTranslate(): Observable<AutoTranslateSummaryReport>  {\r\n    if (this.currentProject() && this.currentProject().translationFile) {\r\n      return this.currentProject().translationFile.autoTranslateUsingService(this.autoTranslateService).pipe(\r\n          map((summary) => {\r\n            this.commitChanges(this.currentProject());\r\n            return summary;\r\n          }\r\n      ));\r\n    } else {\r\n      return of(new AutoTranslateSummaryReport());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all available accessor configurations from backend.\r\n   */\r\n  getFileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return this.backendService.fileAccessConfigurations().pipe(\r\n      map(configs => [DownloadUploadConfiguration.singleInstance(), ...configs])\r\n    );\r\n  }\r\n\r\n}\r\n","import {TranslationUnit} from './translation-unit';\r\nimport {TranslationFile} from './translation-file';\r\nimport {ITranslationUnitFilter} from './filters/i-translation-unit-filter';\r\nimport {TranslationUnitFilterUntranslated} from './filters/translation-unit-filter-untranslated';\r\n\r\n/**\r\n * A view on the current translation file.\r\n * It determines what trans units are currently visible (specified by the active filter).\r\n * It has a pointer to the current trans unit and allows scrolling through the trans units.\r\n * Created by roobm on 27.05.2017.\r\n */\r\n\r\nexport class TranslationFileView {\r\n\r\n  private _translationFile: TranslationFile;\r\n\r\n  private _filter: ITranslationUnitFilter;\r\n\r\n  /**\r\n   * The scroll list (either all or all unitranslated, depending on ScrollMode).\r\n   */\r\n  private _scrollableTransUnits: TranslationUnit[];\r\n\r\n  /**\r\n   * Pointer to current unit (points to _scrollableTransUnits).\r\n   */\r\n  private _currentTransUnitIndex: number = -1;\r\n\r\n  constructor(translationFile: TranslationFile) {\r\n    this._translationFile = translationFile;\r\n    this.setActiveFilter(new TranslationUnitFilterUntranslated());\r\n  }\r\n\r\n  public activeFilter(): ITranslationUnitFilter {\r\n    return this._filter;\r\n  }\r\n\r\n  /**\r\n   * Change active filter.\r\n   * @param {ITranslationUnitFilter} filter\r\n   */\r\n  public setActiveFilter(filter: ITranslationUnitFilter) {\r\n    this._filter = filter;\r\n    if (this._translationFile) {\r\n      const oldCurrent = (this._currentTransUnitIndex >= 0) ? this.currentTransUnit() : null;\r\n      this._scrollableTransUnits = this._translationFile.allTransUnits().filter((tu) => this._filter.filters(tu));\r\n      if (oldCurrent) {\r\n        this._currentTransUnitIndex = this._scrollableTransUnits.findIndex(tu => tu === oldCurrent);\r\n      }\r\n    } else {\r\n      this._scrollableTransUnits = [];\r\n      this._currentTransUnitIndex = -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculate the view by applying the active filter again.\r\n   */\r\n  public refresh(): void {\r\n    this.setActiveFilter(this.activeFilter());\r\n  }\r\n\r\n  public currentTransUnit(): TranslationUnit {\r\n    if (this._scrollableTransUnits.length === 0) {\r\n      return null;\r\n    }\r\n    if (this._currentTransUnitIndex < 0) {\r\n      this._currentTransUnitIndex = 0;\r\n    }\r\n    if (this._currentTransUnitIndex >= 0 && this._currentTransUnitIndex < this._scrollableTransUnits.length) {\r\n      return this._scrollableTransUnits[this._currentTransUnitIndex];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Select given TransUnit\r\n   * @param selectedTransUnit\r\n   * @return true, if selected, false if not in view.\r\n   */\r\n  public selectTransUnit(selectedTransUnit: TranslationUnit): boolean {\r\n    const index = this._scrollableTransUnits.findIndex(tu => tu === selectedTransUnit);\r\n    if (index >= 0) {\r\n      this._currentTransUnitIndex = index;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public nextTransUnit(): TranslationUnit {\r\n    if (this._currentTransUnitIndex >= 0) {\r\n      this._currentTransUnitIndex++;\r\n    }\r\n    return this.currentTransUnit();\r\n  }\r\n\r\n  public prevTransUnit(): TranslationUnit {\r\n    if (this._currentTransUnitIndex >= 1) {\r\n      this._currentTransUnitIndex--;\r\n    }\r\n    return this.currentTransUnit();\r\n  }\r\n\r\n  public hasNext(): boolean {\r\n    if (this._currentTransUnitIndex < 0) {\r\n      return this._scrollableTransUnits.length > 0;\r\n    } else {\r\n      return this._currentTransUnitIndex < (this._scrollableTransUnits.length - 1);\r\n    }\r\n  }\r\n\r\n  public hasPrev(): boolean {\r\n    if (this._currentTransUnitIndex < 0) {\r\n      return false;\r\n    } else {\r\n      return this._currentTransUnitIndex > 0;\r\n    }\r\n  }\r\n\r\n  public scrollabeTransUnits(): TranslationUnit[] {\r\n    return this._scrollableTransUnits;\r\n  }\r\n\r\n  public currentTransUnitIndex(): number {\r\n    return (this._currentTransUnitIndex < 0) ? 0 : this._currentTransUnitIndex + 1;\r\n  }\r\n\r\n  public scrollabeTransUnitsLength(): number {\r\n    return (this._scrollableTransUnits) ? this._scrollableTransUnits.length : 0;\r\n  }\r\n\r\n}\r\n","import {forkJoin, Observable, of} from 'rxjs';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {\r\n  FILETYPE_XTB,\r\n  FORMAT_XMB,\r\n  IICUMessage,\r\n  IICUMessageTranslation,\r\n  ITranslationMessagesFile,\r\n  ITransUnit,\r\n  TranslationMessagesFileFactory\r\n} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {TranslationUnit} from './translation-unit';\r\nimport {AutoTranslateServiceAPI} from './auto-translate-service-api';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {AutoTranslateResult} from './auto-translate-result';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {DownloadUploadFileDescription} from '../file-accessors/download-upload/download-upload-file-description';\r\nimport {IFile} from '../file-accessors/common/i-file';\r\nimport {SerializationService} from './serialization.service';\r\nimport {GenericFile} from '../file-accessors/common/generic-file';\r\n\r\n/**\r\n * A single xlf or xmb file ready for work.\r\n * This is a wrapper around ITranslationMessagesFile.\r\n * It can read from uploaded files and adds errorhandling.\r\n * Created by roobm on 22.03.2017.\r\n */\r\n\r\n// internal representation of serialized form.\r\n// format used since v0.15\r\ninterface ISerializedTranslationFileV2 {\r\n  version: string;\r\n  file: string; // serialized\r\n  editedContent: string;\r\n  master?: string; // serialized\r\n  explicitSourceLanguage: string;\r\n}\r\n\r\n// elder internal representation of serialized form.\r\n// old format, used until v0.14\r\ninterface ISerializedTranslationFile {\r\n  name: string;\r\n  size: number;\r\n  fileContent: string;\r\n  editedContent: string;\r\n  masterContent: string;\r\n  masterName: string;\r\n  explicitSourceLanguage: string;\r\n}\r\n\r\nexport class TranslationFile {\r\n\r\n  private _file: IFile;\r\n\r\n  private _error: string = null;\r\n\r\n  private _master?: IFile;\r\n\r\n  private _translationFile: ITranslationMessagesFile;\r\n\r\n  private _explicitSourceLanguage: string;\r\n\r\n  /**\r\n   * all TransUnits read from file.\r\n   */\r\n  private _allTransUnits: TranslationUnit[];\r\n\r\n  /**\r\n   * Create a TranslationFile from the read file.\r\n   * @param loadedFile read in translation file (xliff, xmb)\r\n   * @param loadedMasterXmbFile optional master for xmb file\r\n   */\r\n  static fromFile(loadedFile: IFile, loadedMasterXmbFile?: IFile): TranslationFile {\r\n    const newInstance = new TranslationFile();\r\n    newInstance._file = loadedFile;\r\n    if (loadedFile.content) {\r\n      try {\r\n        let optionalMaster: any = null;\r\n        if (loadedMasterXmbFile && loadedMasterXmbFile.content) {\r\n          optionalMaster = {\r\n            path: loadedMasterXmbFile.description.name,\r\n            xmlContent: loadedMasterXmbFile.content,\r\n            encoding: null\r\n          };\r\n          newInstance._master = loadedMasterXmbFile;\r\n        }\r\n        newInstance._translationFile =\r\n            TranslationMessagesFileFactory.fromUnknownFormatFileContent(\r\n                loadedFile.content, loadedFile.description.name, 'utf-8', optionalMaster);\r\n        if (newInstance._translationFile.i18nFormat() === FORMAT_XMB) {\r\n          newInstance._error = 'xmb files cannot be translated, use xtb instead'; // TODO i18n\r\n        }\r\n        newInstance.readTransUnits();\r\n      } catch (err) {\r\n        newInstance._error = err.toString();\r\n      }\r\n    }\r\n    return newInstance;\r\n  }\r\n\r\n  /**\r\n   * Create a translation file from the serialization.\r\n   * @param serializationService serializationService\r\n   * @param serializationString serializationString\r\n   * @return TranslationFile\r\n   */\r\n  static deserialize(serializationService: SerializationService, serializationString: string): TranslationFile {\r\n    const deserializedObject = <ISerializedTranslationFile> JSON.parse(serializationString);\r\n    return TranslationFile.fromDeserializedObject(serializationService, deserializedObject);\r\n  }\r\n\r\n  static fromDeserializedObject(\r\n      serializationService: SerializationService,\r\n      deserializedJsonObject: ISerializedTranslationFile|ISerializedTranslationFileV2|any): TranslationFile {\r\n    let deserializedObject: ISerializedTranslationFileV2;\r\n    if (deserializedJsonObject.version) {\r\n      deserializedObject = deserializedJsonObject as ISerializedTranslationFileV2;\r\n    } else {\r\n      // migration from old format\r\n      const v1Object = deserializedJsonObject as ISerializedTranslationFile;\r\n      deserializedObject = {\r\n        version: '1',\r\n        file: new GenericFile(DownloadUploadFileDescription.deserialize(serializationService, null),\r\n          v1Object.name, v1Object.size, v1Object.fileContent)\r\n            .serialize(serializationService),\r\n        editedContent: v1Object.editedContent,\r\n        explicitSourceLanguage: v1Object.explicitSourceLanguage\r\n      };\r\n      if (v1Object.masterContent) {\r\n        deserializedObject.master =\r\n            new GenericFile(DownloadUploadFileDescription.deserialize(serializationService, null),\r\n              v1Object.masterName, 0, v1Object.masterContent)\r\n            .serialize(serializationService);\r\n      }\r\n    }\r\n    const newInstance = new TranslationFile();\r\n    newInstance._file = serializationService.deserializeIFile(deserializedObject.file);\r\n    newInstance._explicitSourceLanguage = deserializedObject.explicitSourceLanguage;\r\n    try {\r\n      const encoding = null; // unknown, lib can find it\r\n      let optionalMaster: {xmlContent: string, path: string, encoding: string} = null;\r\n      if (deserializedObject.master) {\r\n        newInstance._master = serializationService.deserializeIFile(deserializedObject.master);\r\n        optionalMaster = {\r\n          xmlContent: newInstance._master.content,\r\n          path: newInstance._master.description.name,\r\n          encoding: encoding\r\n        };\r\n      }\r\n      newInstance._translationFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(\r\n          deserializedObject.editedContent,\r\n          newInstance._file.description.name,\r\n          encoding,\r\n          optionalMaster);\r\n      newInstance.readTransUnits();\r\n    } catch (err) {\r\n      newInstance._error = err.toString();\r\n    }\r\n    return newInstance;\r\n  }\r\n\r\n  constructor() {\r\n    this._allTransUnits = [];\r\n  }\r\n\r\n  private readTransUnits() {\r\n    this._allTransUnits = [];\r\n    if (this._translationFile) {\r\n      this._translationFile.forEachTransUnit((tu: ITransUnit) => {\r\n        this._allTransUnits.push(new TranslationUnit(this, tu));\r\n      });\r\n    }\r\n  }\r\n\r\n  get name(): string {\r\n    return (this._file && this._file.description) ? this._file.description.name : '';\r\n  }\r\n\r\n  /**\r\n   * In case of xmb/xtb the name of the master xmb file.\r\n   * @return name of master file or null\r\n   */\r\n  get masterName(): string|null {\r\n    return (this._master) ? this._master.description.name : null;\r\n  }\r\n\r\n  get size(): number {\r\n    return this._file.size;\r\n  }\r\n\r\n  get numberOfTransUnits(): number {\r\n    return this._allTransUnits.length;\r\n  }\r\n\r\n  get numberOfUntranslatedTransUnits(): number {\r\n    return (this._translationFile) ? this._translationFile.numberOfUntranslatedTransUnits() : 0;\r\n  }\r\n\r\n  public fileDescription(): IFileDescription {\r\n    return this._file.description;\r\n  }\r\n\r\n  public editedFile(): IFile {\r\n    const content = this.editedContent();\r\n    return this._file.copyWithNewContent(content);\r\n  }\r\n\r\n  /**\r\n   * Type of file.\r\n   * Currently 'xlf', 'xlf2', 'xmb' or or 'xtb'\r\n   * @return type of file\r\n   */\r\n  public fileType(): string {\r\n    if (this._translationFile) {\r\n      return this._translationFile.fileType();\r\n    } else {\r\n      // try to get it by name\r\n      if (this.name && this.name.endsWith('xtb')) {\r\n        return FILETYPE_XTB;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Source language as stored in translation file.\r\n   * @return source language\r\n   */\r\n  public sourceLanguageFromFile(): string {\r\n    return this._translationFile ? this._translationFile.sourceLanguage() : 'unknown';\r\n  }\r\n\r\n  /**\r\n   * Source language from file or explicitly set.\r\n   * @return source language\r\n   */\r\n  public sourceLanguage(): string {\r\n    if (this._translationFile) {\r\n      const srcLang = this._translationFile.sourceLanguage();\r\n      if (isNullOrUndefined(srcLang)) {\r\n        return this._explicitSourceLanguage ? this._explicitSourceLanguage : '';\r\n      } else {\r\n        return srcLang;\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Explicitly set source language.\r\n   * Only used, when file format does not store this (xmb case).\r\n   * @param srcLang source language\r\n   */\r\n  public setSourceLanguage(srcLang: string) {\r\n    this._explicitSourceLanguage = srcLang;\r\n  }\r\n\r\n  public targetLanguage(): string {\r\n    return this._translationFile ? this._translationFile.targetLanguage() : '';\r\n  }\r\n\r\n  public percentageUntranslated(): number {\r\n    if (this.numberOfTransUnits === 0) {\r\n      return 100;\r\n    }\r\n    return 100 * this.numberOfUntranslatedTransUnits / this.numberOfTransUnits;\r\n  }\r\n\r\n  public percentageTranslated(): number {\r\n    return 100 - this.percentageUntranslated();\r\n  }\r\n\r\n  public hasErrors(): boolean {\r\n    return !isNullOrUndefined(this._error);\r\n  }\r\n\r\n  public canTranslate(): boolean {\r\n    return !this.hasErrors() && this.numberOfTransUnits > 0;\r\n  }\r\n\r\n  get error(): string {\r\n    return this._error;\r\n  }\r\n\r\n  /**\r\n   * Show warnings detected in file.\r\n   * @return array of warnings\r\n   */\r\n  public warnings(): string[] {\r\n    return this._translationFile ? this._translationFile.warnings() : [];\r\n  }\r\n\r\n  /**\r\n   * Check, wether file is changed.\r\n   * @return wether file is changed.\r\n   */\r\n  public isDirty(): boolean {\r\n    return this._translationFile && this._file.content !== this.editedContent();\r\n  }\r\n\r\n  /**\r\n   * return content with all changes.\r\n   */\r\n  public editedContent(): string {\r\n    if (this._translationFile) {\r\n      return this._translationFile.editedContent();\r\n    } else {\r\n      this._error = 'cannot save, no valid file';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark file as \"exported\".\r\n   * This means, that the file was downloaded.\r\n   * So the new file content is the edited one.\r\n   */\r\n  public markExported() {\r\n    this._file.content = this.editedContent();\r\n  }\r\n\r\n  /**\r\n   * Return all trans units found in file.\r\n   * @return all trans units found in file\r\n   */\r\n  public allTransUnits(): TranslationUnit[] {\r\n    return this._allTransUnits;\r\n  }\r\n\r\n  /**\r\n   * Return a string representation of translation file content.\r\n   * This will be stored in BackendService.\r\n   */\r\n  public serialize(serializationService: SerializationService): string {\r\n    const serializedObject: ISerializedTranslationFileV2 = {\r\n      version: '2',\r\n      file: this._file.serialize(serializationService),\r\n      editedContent: this.editedContent(),\r\n      master: (this._master) ? this._master.serialize(serializationService) : null,\r\n      explicitSourceLanguage: this._explicitSourceLanguage\r\n    };\r\n    return JSON.stringify(serializedObject);\r\n  }\r\n\r\n  /**\r\n   * Auto translate this file via Google Translate.\r\n   * Translates all untranslated units.\r\n   * @param autoTranslateService the service for the raw text translation via Google Translate\r\n   * @return a summary of the run (how many units are handled, how many sucessful, errors, ..)\r\n   */\r\n  public autoTranslateUsingService(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport> {\r\n    return forkJoin([\r\n      this.doAutoTranslateNonICUMessages(autoTranslateService),\r\n      ...this.doAutoTranslateICUMessages(autoTranslateService)])\r\n      .pipe(\r\n          map((summaries: AutoTranslateSummaryReport[]) => {\r\n            const summary = summaries[0];\r\n            for (let i = 1; i < summaries.length; i++) {\r\n              summary.merge(summaries[i]);\r\n            }\r\n            return summary;\r\n          }\r\n      ));\r\n  }\r\n\r\n  /**\r\n   * Auto translate this file via Google Translate.\r\n   * Translates all untranslated units.\r\n   * @param autoTranslateService the service for the raw text translation via Google Translate\r\n   * @return a summary of the run (how many units are handled, how many sucessful, errors, ..)\r\n   */\r\n  private doAutoTranslateNonICUMessages(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport> {\r\n    // collect all units, that should be auto translated\r\n    const allUntranslated: TranslationUnit[] = this.allTransUnits().filter((tu) => !tu.isTranslated());\r\n    const allTranslatable = allUntranslated.filter((tu) => !tu.sourceContentNormalized().isICUMessage());\r\n    const allMessages: string[] = allTranslatable.map((tu) => {\r\n      return tu.sourceContentNormalized().dislayText(true);\r\n    });\r\n    return autoTranslateService.translateMultipleStrings(allMessages, this.sourceLanguage(), this.targetLanguage())\r\n      .pipe(\r\n          map((translations: string[]) => {\r\n            const summary = new AutoTranslateSummaryReport();\r\n            for (let i = 0; i < translations.length; i++) {\r\n              const tu = allTranslatable[i];\r\n              const translationText = translations[i];\r\n              const result = tu.autoTranslateNonICUUnit(translationText);\r\n              summary.addSingleResult(result);\r\n            }\r\n            return summary;\r\n          }\r\n      ));\r\n  }\r\n\r\n  private doAutoTranslateICUMessages(autoTranslateService: AutoTranslateServiceAPI): Observable<AutoTranslateSummaryReport>[] {\r\n    // collect all units, that should be auto translated\r\n    const allUntranslated: TranslationUnit[] = this.allTransUnits().filter((tu) => !tu.isTranslated());\r\n    const allTranslatableICU = allUntranslated.filter((tu) => !isNullOrUndefined(tu.sourceContentNormalized().getICUMessage()));\r\n    return allTranslatableICU.map((tu) => {\r\n      return this.doAutoTranslateICUMessage(autoTranslateService, tu);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Translate single ICU Messages.\r\n   * @param autoTranslateService autoTranslateService\r\n   * @param tu transunit to translate (must contain ICU Message)\r\n   * @return summaryReport\r\n   */\r\n  private doAutoTranslateICUMessage(\r\n      autoTranslateService: AutoTranslateServiceAPI,\r\n      tu: TranslationUnit): Observable<AutoTranslateSummaryReport> {\r\n    const icuMessage: IICUMessage = tu.sourceContentNormalized().getICUMessage();\r\n    const categories = icuMessage.getCategories();\r\n    // check for nested ICUs, we do not support that\r\n    if (categories.find((category) => !isNullOrUndefined(category.getMessageNormalized().getICUMessage()))) {\r\n      const summary = new AutoTranslateSummaryReport();\r\n      summary.addSingleResult(AutoTranslateResult.Ignored(tu, 'nested icu message'));\r\n      return of(summary);\r\n    }\r\n    const allMessages: string[] = categories.map((category) => category.getMessageNormalized().asDisplayString());\r\n    return autoTranslateService.translateMultipleStrings(allMessages, this.sourceLanguage(), this.targetLanguage())\r\n      .pipe(\r\n          map((translations: string[]) => {\r\n            const summary = new AutoTranslateSummaryReport();\r\n            const icuTranslation: IICUMessageTranslation = {};\r\n            for (let i = 0; i < translations.length; i++) {\r\n              icuTranslation[categories[i].getCategory()] = translations[i];\r\n            }\r\n            const result = tu.autoTranslateICUUnit(icuTranslation);\r\n            summary.addSingleResult(result);\r\n            return summary;\r\n          }\r\n        ), catchError((err) => {\r\n            const failSummary = new AutoTranslateSummaryReport();\r\n            failSummary.addSingleResult(AutoTranslateResult.Failed(tu, err.message));\r\n            return of(failSummary);\r\n          }\r\n      ));\r\n  }\r\n\r\n}\r\n","import {TranslationFile} from './translation-file';\r\nimport {TranslationFileView} from './translation-file-view';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateSummaryReport} from './auto-translate-summary-report';\r\nimport {SerializationService} from './serialization.service';\r\n\r\n/**\r\n * Workflow type determines, how you work with the tool.\r\n * There are 2 modes:\r\n * SINGLE_USER: You are developer and translator in one person.\r\n * You just translate the messages and, when done, reimport it into your application.\r\n * All translations are marked as state \"final\" directly after input.\r\n * WITH_REVIEW: Developer and translator are distinct people.\r\n * All translation are first marked as \"translated\".\r\n * When done, the translator gives it back to the developer, who reviews all marked as \"translated\".\r\n * He then can mark them all as \"final\" or give them back to the translator.\r\n */\r\nexport enum WorkflowType {\r\n  SINGLE_USER,\r\n  WITH_REVIEW\r\n}\r\n\r\n/**\r\n * The role the user has, when working with the tool.\r\n * As a reviewer you can check the translations and mark them as \"final\" at the end.\r\n * As a translator you can translate and give it back to the reviever.\r\n */\r\nexport enum UserRole {\r\n  REVIEWER,\r\n  TRANSLATOR\r\n}\r\n\r\n/**\r\n * A Translation Project.\r\n * A name and a translation file.\r\n */\r\nexport class TranslationProject {\r\n\r\n  public id: string;\r\n\r\n  private _view: TranslationFileView;\r\n\r\n  private _userRole: UserRole;\r\n\r\n  private _autoTranslateSummaryReport: AutoTranslateSummaryReport;\r\n\r\n  /**\r\n   * Create a project from the serialization.\r\n   * @param serializationString string returned from serialize()\r\n   * @return deserialized project\r\n   */\r\n  static deserialize(serializationService: SerializationService, serializationString: string): TranslationProject {\r\n    const deserializedObject: any = JSON.parse(serializationString);\r\n    const project = new TranslationProject(\r\n      deserializedObject.name,\r\n      TranslationFile.deserialize(serializationService, deserializedObject.translationFile),\r\n      deserializedObject.workflowType);\r\n    project.id = deserializedObject.id;\r\n    project.setUserRole(deserializedObject.userRole);\r\n    return project;\r\n  }\r\n\r\n  constructor(private _name: string, private _translationFile: TranslationFile, private _workflowType?: WorkflowType) {\r\n    if (isNullOrUndefined(this._workflowType)) {\r\n      this._workflowType = WorkflowType.SINGLE_USER;\r\n    }\r\n    this._view = new TranslationFileView(_translationFile);\r\n  }\r\n\r\n  /**\r\n   * Return a string represenation of project state.\r\n   * This will be stored in BackendService.\r\n   */\r\n  public serialize(serializationService: SerializationService): string {\r\n    const serializedObject = {\r\n      id: this.id,\r\n      name: this.name,\r\n      translationFile: this.translationFile.serialize(serializationService),\r\n      workflowType: this.workflowType,\r\n      userRole: this.userRole\r\n    };\r\n    return JSON.stringify(serializedObject);\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public setName(name: string) {\r\n    this._name = name;\r\n  }\r\n\r\n  get translationFile(): TranslationFile {\r\n    return this._translationFile;\r\n  }\r\n\r\n  get translationFileView(): TranslationFileView {\r\n    return this._view;\r\n  }\r\n\r\n  get workflowType(): WorkflowType {\r\n    return this._workflowType ? this._workflowType : WorkflowType.SINGLE_USER;\r\n  }\r\n\r\n  public setWorkflowType(type: WorkflowType) {\r\n    this._workflowType = type;\r\n  }\r\n\r\n  get userRole(): UserRole {\r\n    return isNullOrUndefined(this._userRole) ? UserRole.TRANSLATOR : this._userRole;\r\n  }\r\n\r\n  public setUserRole(role: UserRole) {\r\n    this._userRole = role;\r\n  }\r\n\r\n  public isReviewModeActive(): boolean {\r\n    return this._userRole === UserRole.REVIEWER;\r\n  }\r\n\r\n  public hasErrors(): boolean {\r\n    return this.translationFile && this.translationFile.hasErrors();\r\n  }\r\n\r\n  public canTranslate(): boolean {\r\n    return this.translationFile && this.translationFile.canTranslate();\r\n  }\r\n\r\n  /**\r\n   * Check, wether a publish is possible.\r\n   */\r\n  public canPublish(): boolean {\r\n    return this.translationFile && this.translationFile.fileDescription().configuration.canPublish();\r\n  }\r\n\r\n  /**\r\n   * Return report about last executed Autotranslate run.\r\n   * @return report about last executed Autotranslate run.\r\n   */\r\n  public autoTranslateSummaryReport(): AutoTranslateSummaryReport {\r\n    return this._autoTranslateSummaryReport;\r\n  }\r\n\r\n  /**\r\n   * Store summary of last executed AutoTranslate run.\r\n   * @param summary summary of last executed AutoTranslate run\r\n   */\r\n  public setAutoTranslateSummaryReport(summary: AutoTranslateSummaryReport) {\r\n    this._autoTranslateSummaryReport = summary;\r\n  }\r\n}\r\n","import {ITransUnit, INormalizedMessage, STATE_NEW, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {TranslationFile} from './translation-file';\r\nimport {NormalizedMessage} from './normalized-message';\r\nimport {format} from 'util';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {AutoTranslateResult} from './auto-translate-result';\r\n\r\n/**\r\n * A wrapper around ITransUnit.\r\n * Adds some support for easier GUI handling.\r\n * Created by martin on 24.03.2017.\r\n */\r\n\r\nexport class TranslationUnit {\r\n\r\n  private _isDirty: boolean;\r\n  private _normalizedSourceContent: NormalizedMessage;\r\n  private _normalizedTargetContent: NormalizedMessage;\r\n\r\n  constructor(private _translationFile: TranslationFile, private _transUnit: ITransUnit) {\r\n    this._isDirty = false;\r\n  }\r\n\r\n  public translationFile(): TranslationFile {\r\n    return this._translationFile;\r\n  }\r\n\r\n  public id(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.id;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceContent(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.sourceContent();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceContentNormalized(): NormalizedMessage {\r\n    if (this._transUnit) {\r\n      if (!this._normalizedSourceContent) {\r\n        const original = this._transUnit.sourceContent();\r\n        let normalizedMessage: INormalizedMessage = null;\r\n        let parseError: string = null;\r\n        try {\r\n          normalizedMessage = this._transUnit.sourceContentNormalized();\r\n        } catch (error) {\r\n          parseError = error.message;\r\n        }\r\n        this._normalizedSourceContent = new NormalizedMessage(original, normalizedMessage, parseError, normalizedMessage);\r\n      }\r\n      return this._normalizedSourceContent;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetContent(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.targetContent();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetContentNormalized(): NormalizedMessage {\r\n    if (this._transUnit) {\r\n      if (!this._normalizedTargetContent) {\r\n        const original = this._transUnit.targetContent();\r\n        let normalizedMessage: INormalizedMessage = null;\r\n        let parseError: string = null;\r\n        try {\r\n          normalizedMessage = this._transUnit.targetContentNormalized();\r\n        } catch (error) {\r\n          parseError = error.message;\r\n        }\r\n        this._normalizedTargetContent = new NormalizedMessage(\r\n            original, normalizedMessage, parseError, this._transUnit.sourceContentNormalized());\r\n      }\r\n      return this._normalizedTargetContent;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public description(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.description();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public meaning(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.meaning();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public sourceReferences(): {sourcefile: string, linenumber: number}[] {\r\n    if (this._transUnit) {\r\n      return this._transUnit.sourceReferences();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public targetState(): string {\r\n    if (this._transUnit) {\r\n      return this._transUnit.targetState();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public setTargetState(newState: string) {\r\n    if (this._transUnit) {\r\n      this._transUnit.setTargetState(newState);\r\n    }\r\n  }\r\n\r\n  public isDirty(): boolean {\r\n    return this._isDirty;\r\n  }\r\n\r\n  public isTranslated(): boolean {\r\n    return this.targetState() && this.targetState() !== STATE_NEW;\r\n  }\r\n\r\n  public translate(newTranslation: NormalizedMessage) {\r\n    if (this._transUnit) {\r\n      this._transUnit.translate(newTranslation.nativeString());\r\n      this._isDirty = true;\r\n      this._normalizedSourceContent = null;\r\n      this._normalizedTargetContent = null;\r\n    }\r\n  }\r\n\r\n  public autoTranslateNonICUUnit(translatedMessage: string): AutoTranslateResult {\r\n    return this.autoTranslate(this.sourceContentNormalized().translate(translatedMessage, true));\r\n  }\r\n\r\n  public autoTranslateICUUnit(translation: IICUMessageTranslation): AutoTranslateResult {\r\n    return this.autoTranslate(this.sourceContentNormalized().translateICUMessage(translation));\r\n  }\r\n\r\n  /**\r\n   * Try to use the given generated message as a translation.\r\n   * If there are any errors or warnings, translation will not take place.\r\n   * @param translatedMessage translatedMessage\r\n   * @return wether it was successful or not.\r\n   */\r\n  public autoTranslate(translatedMessage: NormalizedMessage): AutoTranslateResult {\r\n    const errors = translatedMessage.validate(true);\r\n    const warnings = translatedMessage.validateWarnings(true);\r\n    if (!isNullOrUndefined(errors)) {\r\n      return AutoTranslateResult.Failed(this, format('errors detected, not translated: %s', JSON.stringify(errors)));\r\n    } else if (!isNullOrUndefined(warnings)) {\r\n      return AutoTranslateResult.Failed(this, format('warnings detected, not translated: %s', JSON.stringify(warnings)));\r\n    } else {\r\n      this.translate(translatedMessage);\r\n      return AutoTranslateResult.Success(this);\r\n    }\r\n  }\r\n}\r\n","<div id=\"container\">\r\n  <ng-container *ngIf=\"readonly\">\r\n    <ng-container *ngIf=\"!isICUMessage() || !normalized\">\r\n      <p>{{textToDisplay()}}</p>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"isICUMessage() && normalized\">\r\n      <div *ngFor=\"let category of getICUMessageCategories(); index as i\" fxLayout=\"row\" fxLayoutGap=\"20px\">\r\n        <p>{{category.getCategory()}}</p>\r\n        <p>{{category.getMessageNormalized().asDisplayString()}}</p>\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n  <form *ngIf=\"!readonly\" [formGroup]=\"form\" fxLayout=\"column\">\r\n    <ng-container *ngIf=\"!isICUMessage() || !normalized\">\r\n      <mat-form-field fxFlex=\"noshrink\">\r\n        <textarea matInput type=\"text\"\r\n          formControlName=\"displayedText\"\r\n          matTextareaAutosize\r\n          [matAutosizeMinRows]=\"2\"\r\n          (keyup.control.enter)=\"accept.next()\">\r\n        </textarea>\r\n     </mat-form-field>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"isICUMessage() && normalized\">\r\n      <div fxFlex=\"noshrink\" *ngFor=\"let category of getICUMessageCategories(); index as i\" fxLayout=\"row\" fxLayoutGap=\"20px\" formArrayName=\"icuMessages\">\r\n        <p>{{category.getCategory()}}</p>\r\n        <mat-form-field fxFlexFill>\r\n          <input matInput type=\"text\" [formControlName]=\"i\" (keyup.control.enter)=\"accept.next()\">\r\n        </mat-form-field>\r\n      </div>\r\n    </ng-container>\r\n  </form>\r\n</div>\r\n","import {\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {NormalizedMessage} from '../model/normalized-message';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {IICUMessageCategory, IICUMessageTranslation} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {Subscription} from 'rxjs';\r\nimport {debounceTime} from 'rxjs/operators';\r\n/**\r\n * A component used as an input field for normalized message.\r\n */\r\n@Component({\r\n  selector: 'app-normalized-message-input',\r\n  templateUrl: './normalized-message-input.component.html',\r\n  styleUrls: ['./normalized-message-input.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NormalizedMessageInputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NormalizedMessageInputComponent implements OnInit, OnChanges, ControlValueAccessor {\r\n\r\n  /**\r\n   * The message to be edited or shown.\r\n   */\r\n  @Input() message: NormalizedMessage;\r\n\r\n  /**\r\n   * Flag, wether the message should be shown in normalized form.\r\n   */\r\n  @Input() normalized: boolean;\r\n\r\n  /**\r\n   * Flag, wether message is read only.\r\n   * Then, there is no input field, but only the text is shown.\r\n   */\r\n  @Input() readonly: boolean;\r\n\r\n  /**\r\n   * Emitted when user presses Ctrl+Enter\r\n   */\r\n  @Output() accept = new EventEmitter<void>();\r\n\r\n  editedMessage: NormalizedMessage;\r\n  form: FormGroup;\r\n  subscription: Subscription;\r\n  disabled = false;\r\n\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!isNullOrUndefined(changes['message'])) {\r\n      this.editedMessage = this.message.copy();\r\n    }\r\n    const isChanged = !isNullOrUndefined(changes['message']) || !isNullOrUndefined(changes['normalized']);\r\n    if (isChanged) {\r\n      this.initForm();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.form = this.formBuilder.group({\r\n      displayedText: [{value: this.textToDisplay(), disabled: this.disabled}],\r\n      icuMessages: this.formBuilder.array(this.initIcuMessagesFormArray())\r\n    });\r\n    this.subscription = this.form.valueChanges.pipe(\r\n        debounceTime(200)\r\n    ).subscribe(formValue => {\r\n        this.valueChanged(formValue);\r\n    });\r\n  }\r\n\r\n  private initIcuMessagesFormArray() {\r\n    if (!this.isICUMessage()) {\r\n      return [];\r\n    }\r\n    return this.getICUMessageCategories().map((category) => {\r\n      return [category.getMessageNormalized().asDisplayString()];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Write a new value to the element.\r\n   */\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a change event.\r\n   */\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called when the control receives a touch event.\r\n   */\r\n  registerOnTouched(fn: any): void {\r\n\r\n  }\r\n\r\n  /**\r\n   * This function is called when the control status changes to or from \"DISABLED\".\r\n   * Depending on the value, it will enable or disable the appropriate DOM element.\r\n   * @param isDisabled isDisabled\r\n   */\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.form = this.formBuilder.group({displayedText: [{value: this.textToDisplay(), disabled: this.disabled}]});\r\n  }\r\n\r\n  /**\r\n   * The text to be shown in the readonly mode.\r\n   * @return text to be shown in readonly mode\r\n   */\r\n  textToDisplay(): string {\r\n    if (this.editedMessage) {\r\n      return this.editedMessage.dislayText(this.normalized);\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test, wether it is an ICU message.\r\n   */\r\n  isICUMessage(): boolean {\r\n    if (this.message) {\r\n      return this.message.isICUMessage();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get list of categories if it is an ICU Message.\r\n   * @return categories or empty array.\r\n   */\r\n  getICUMessageCategories(): IICUMessageCategory[] {\r\n    if (isNullOrUndefined(this.message)) {\r\n      return [];\r\n    }\r\n    const icuMessage = this.message.getICUMessage();\r\n    if (isNullOrUndefined(icuMessage)) {\r\n      return [];\r\n    }\r\n    return icuMessage.getCategories();\r\n  }\r\n\r\n  private valueChanged(value: any) {\r\n    if (!this.readonly && this.message) {\r\n      if (!this.isICUMessage() || !this.normalized) {\r\n        const textEntered = value.displayedText;\r\n        this.editedMessage = this.message.translate(textEntered, this.normalized);\r\n      } else {\r\n        const categories = this.getICUMessageCategories();\r\n        const valuesEntered = value.icuMessages;\r\n        const translation: IICUMessageTranslation = {};\r\n        for (let i = 0; i < value.icuMessages.length; i++) {\r\n          translation[categories[i].getCategory()] = valuesEntered[i];\r\n        }\r\n        this.editedMessage = this.message.translateICUMessage(translation);\r\n      }\r\n    } else {\r\n    }\r\n    this.propagateChange(this.editedMessage);\r\n  }\r\n}\r\n","<div fxLayout=\"column\" style=\"min-width: calc(100vw-16px);\"><!-- 16px = 2xmargin of container page -->\r\n  <h1 i18n>Edit project</h1>\r\n  <form id=\"editProjectForm\" fxLayout=\"column\" [formGroup]=\"form\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field fxFlex=\"80%\">\r\n        <input type=\"text\" placeholder=\"Project name\" i18n-placeholder matInput formControlName=\"projectName\" name=\"projectName\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <p><b i18n>Selected translation file:</b></p>\r\n    <app-translation-file-status\r\n                                 [translationFileView]=\"project?.translationFileView\"\r\n                                 [translationFile]=\"project?.translationFile\">\r\n    </app-translation-file-status>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field *ngIf=\"hasExplicitSourceLanguage()\" fxFlex=\"50%\"\r\n                          matTooltip=\"Your selected file contains no information about the language used. You can set it here explicitly.\" i18n-matTooltip>\r\n        <input placeholder=\"Explicitly set source language\" i18n-placeholder matInput formControlName=\"sourceLanguage\" name=\"sourceLanguage\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <div fxFlex=\"50%\">\r\n        <p i18n>Workflow type you are using</p>\r\n        <mat-radio-group formControlName=\"workflowType\" name=\"workflowType\">\r\n          <mat-radio-button value=\"singleuser\" i18n>Single User</mat-radio-button>\r\n          <mat-radio-button value=\"withReview\" i18n>Translator/Reviewer</mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"isWorkflowWithReview()\">\r\n          <p i18n>Your role</p>\r\n          <mat-radio-group name=\"userRole\" formControlName=\"userRole\">\r\n            <mat-radio-button value=\"translator\" i18n>Translator</mat-radio-button>\r\n            <mat-radio-button value=\"reviewer\" i18n>Reviewer</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button fxFlexAlign=\"center\"\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"editProject()\"\r\n            matTooltip=\"commit changes and continue working\" i18n-matTooltip>\r\n      <mat-icon>edit</mat-icon>&nbsp;<span i18n>Save project changes</span>\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject, UserRole, WorkflowType} from '../model/translation-project';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {isNullOrUndefined} from '../common/util';\r\n\r\n/**\r\n * Component to edit some properties of the current project.\r\n * (name, workflowType).-\r\n */\r\n@Component({\r\n  selector: 'app-project-editor',\r\n  templateUrl: './project-editor.component.html',\r\n  styleUrls: ['./project-editor.component.css']\r\n})\r\nexport class ProjectEditorComponent implements OnInit {\r\n\r\n  @Output() onEditProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  @Input() project: TranslationProject;\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      if (this.project) {\r\n        this.form = this.formBuilder.group({\r\n          projectName: [this.project.name],\r\n          workflowType: [this.workflowTypeToString(this.project.workflowType)],\r\n          userRole: [this.userRoleToString(this.project.userRole)],\r\n          sourceLanguage: [this.project.translationFile.sourceLanguage()],\r\n        });\r\n      } else {\r\n        this.form = this.formBuilder.group({\r\n          projectName: [''],\r\n          workflowType: [this.workflowTypeToString(WorkflowType.SINGLE_USER)],\r\n          userRole: [this.userRoleToString(UserRole.TRANSLATOR)],\r\n          sourceLanguage: [null],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  toWorkflowType(type: string): WorkflowType {\r\n    switch (type) {\r\n      case 'singleuser':\r\n        return WorkflowType.SINGLE_USER;\r\n      case 'withReview':\r\n        return WorkflowType.WITH_REVIEW;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  workflowTypeToString(type: WorkflowType): string {\r\n    switch (type) {\r\n      case WorkflowType.SINGLE_USER:\r\n        return 'singleuser';\r\n      case WorkflowType.WITH_REVIEW:\r\n        return 'withReview';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param type\r\n   * @return {any}\r\n   */\r\n  toUserRole(role: string): UserRole {\r\n    switch (role) {\r\n      case 'translator':\r\n        return UserRole.TRANSLATOR;\r\n      case 'reviewer':\r\n        return UserRole.REVIEWER;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  userRoleToString(role: UserRole): string {\r\n    switch (role) {\r\n      case UserRole.TRANSLATOR:\r\n        return 'translator';\r\n      case UserRole.REVIEWER:\r\n        return 'reviewer';\r\n    }\r\n  }\r\n\r\n  editProject() {\r\n    this.project.setName(this.form.value.projectName);\r\n    this.project.setWorkflowType(this.toWorkflowType(this.form.value.workflowType));\r\n    this.project.setUserRole(this.toUserRole(this.form.value.userRole));\r\n    this.project.translationFile.setSourceLanguage(this.form.value.sourceLanguage);\r\n    this.onEditProject.emit(this.project);\r\n  }\r\n\r\n  selectedFilesFormatted(): string {\r\n    if (this.project && this.project.translationFile) {\r\n      return this.project.translationFile.name;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.toWorkflowType(this.form.value.workflowType) === WorkflowType.WITH_REVIEW;\r\n  }\r\n\r\n  hasExplicitSourceLanguage(): boolean {\r\n    return this.project &&\r\n      this.project.translationFile &&\r\n      !this.project.translationFile.hasErrors() &&\r\n      isNullOrUndefined(this.project.translationFile.sourceLanguageFromFile());\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <app-project *ngFor=\"let project of projects\" [project]=\"project\" (onSave)=\"saveProject($event)\" (onStartWork)=\"startWork($event)\" (onDeleteProject)=\"deleteProject($event)\"></app-project>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\n\r\n@Component({\r\n  selector: 'app-project-list',\r\n  templateUrl: './project-list.component.html',\r\n  styleUrls: ['./project-list.component.css']\r\n})\r\nexport class ProjectListComponent implements OnInit {\r\n\r\n  @Input() projects: TranslationProject[];\r\n\r\n  @Output() onStartProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onDeleteProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onSaveProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public startWork(project: TranslationProject) {\r\n    this.onStartProject.emit(project);\r\n  }\r\n\r\n  public deleteProject(project: TranslationProject) {\r\n    this.onDeleteProject.emit(project);\r\n  }\r\n\r\n  public saveProject(project: TranslationProject) {\r\n    this.onSaveProject.emit(project);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" style=\"min-width: calc(100vw-16px);\"><!-- 16px = 2xmargin of container page -->\r\n  <h1 i18n>Open a new project</h1>\r\n  <form id=\"createProjectForm\" fxLayout=\"column\" [formGroup]=\"form\">\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field fxFlex=\"90%\">\r\n        <input type=\"text\" placeholder=\"Project name\" i18n-placeholder matInput formControlName=\"projectName\" name=\"projectName\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-form-field>\r\n      <mat-select placeholder=\"load translation file from..\" i18n-placeholder formControlName=\"selectedFileAccessConfigurationIndex\" name=\"selectedFileAccessConfigurationIndex\">\r\n        <mat-option *ngFor=\"let accessor of fileAccessConfigurations() | async; let i = index\" [value]=\"i\" i18n>{{accessor.type}} {{accessor.shortLabel()}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <ng-container *ngIf=\"selectedFileAccessConfiguration()\" [ngSwitch]=\"selectedFileAccessConfiguration().type\">\r\n      <app-translation-file-upload *ngSwitchCase=\"'Browser Upload and Download'\"\r\n                                   [createdProject]=\"createdProject\"\r\n                                   [configuration]=\"selectedFileAccessConfiguration()\"\r\n                                   (fileSelected)=\"fileSelectionChange($event)\"\r\n                                   (masterXmlFileSelected)=\"masterXmlFileSelectionChange($event)\">\r\n      </app-translation-file-upload>\r\n      <app-translation-file-from-github *ngSwitchCase=\"'Github'\"\r\n                                        [createdProject]=\"createdProject\"\r\n                                        [configuration]=\"selectedFileAccessConfiguration()\"\r\n                                        (fileSelected)=\"fileSelectionChange($event)\"\r\n                                        (masterXmlFileSelected)=\"masterXmlFileSelectionChange($event)\">\r\n      </app-translation-file-from-github>\r\n    </ng-container>\r\n    <p><b i18n>Selected translation file:</b></p>\r\n    <app-translation-file-status *ngIf=\"isFileSelected()\"\r\n                                 [translationFileView]=\"createdProject?.translationFileView\"\r\n                                 [translationFile]=\"createdProject?.translationFile\">\r\n    </app-translation-file-status>\r\n    <p></p>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <mat-form-field *ngIf=\"needsExplicitSourceLanguage()\" fxFlex=\"50%\"\r\n                          matTooltip=\"Your selected file contains no information about the language used. You can set it here explicitly.\" i18n-matTooltip>\r\n        <input placeholder=\"Explicitly set source language\" i18n-placeholder matInput formControlName=\"sourceLanguage\" name=\"sourceLanguage\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n      <div fxFlex=\"50%\">\r\n        <p i18n>Workflow type you are using</p>\r\n        <mat-radio-group formControlName=\"workflowType\" name=\"workflowType\">\r\n          <mat-radio-button value=\"singleuser\" i18n\r\n                           matTooltip=\"Single user workflow. You are translator and reviewer in one person. Every translated unit will directly get the state 'final'\"\r\n                           matTooltipPosition=\"after\" i18n-matTooltip>Single User</mat-radio-button>\r\n          <mat-radio-button value=\"withReview\" i18n\r\n                           matTooltip=\"Workflow with explicit translator and reviewer. Translation get te state 'translated'. The reviewer must mark them as 'final' later.\"\r\n                           matTooltipPosition=\"after\" i18n-matTooltip>Translator/Reviewer</mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"isWorkflowWithReview()\">\r\n          <p i18n>Your role</p>\r\n          <mat-radio-group name=\"userRole\" formControlName=\"userRole\">\r\n            <mat-radio-button value=\"translator\" i18n>Translator</mat-radio-button>\r\n            <mat-radio-button value=\"reviewer\" i18n>Reviewer</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <p></p>\r\n    <button fxFlexAlign=\"center\"\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"emitAddProject()\"\r\n            matTooltip=\"add as new project and start working\" i18n-matTooltip\r\n            [disabled]=\"!isInputComplete()\">\r\n      <mat-icon>add</mat-icon>&nbsp;<span i18n>Add project</span>\r\n    </button>\r\n  </form>\r\n</div>\r\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationProject, UserRole, WorkflowType} from '../model/translation-project';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\r\nimport {FileAccessorType} from '../file-accessors/common/file-accessor-type';\r\nimport {FileAccessServiceFactoryService} from '../file-accessors/common/file-access-service-factory.service';\r\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\r\nimport {Observable, Subscription} from 'rxjs';\r\n\r\n/**\r\n * The ProjectStarter is an upload component.\r\n * You can upload a file for translation (xliff file normally) to start working with it.\r\n */\r\n@Component({\r\n  selector: 'app-project-starter',\r\n  templateUrl: './project-starter.component.html',\r\n  styleUrls: ['./project-starter.component.scss']\r\n})\r\nexport class ProjectStarterComponent implements OnInit, OnDestroy {\r\n\r\n  @Output() addProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  createdProject: TranslationProject;\r\n\r\n  form: FormGroup;\r\n  private selectedFile: IFileDescription;\r\n  private selectedMasterXmbFile: IFileDescription;\r\n  private _fileAccessConfigurations: Observable<IFileAccessConfiguration[]>;\r\n  private _currentFileAccessConfigurations: IFileAccessConfiguration[];\r\n  private subscriptions: Subscription;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private translatorService: TinyTranslatorService,\r\n              private fileAccessServiceFactoryService: FileAccessServiceFactoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this._fileAccessConfigurations = this.translatorService.getFileAccessConfigurations();\r\n    this.subscriptions = this._fileAccessConfigurations.subscribe(configs => this._currentFileAccessConfigurations = configs);\r\n    this.subscriptions.add(\r\n      this.form.valueChanges.subscribe(formValue => {\r\n        this.valueChanged(formValue);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        projectName: [''],\r\n        selectedFileAccessConfigurationIndex: 0,\r\n        workflowType: ['singleuser'],\r\n        userRole: ['translator'],\r\n        sourceLanguage: [''],\r\n      });\r\n    }\r\n  }\r\n\r\n  fileAccessConfigurations(): Observable<IFileAccessConfiguration[]> {\r\n    return this._fileAccessConfigurations;\r\n  }\r\n\r\n  selectedFileAccessConfiguration(): IFileAccessConfiguration {\r\n    if (this._currentFileAccessConfigurations) {\r\n      return this._currentFileAccessConfigurations[this.form.value['selectedFileAccessConfigurationIndex']];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  fileSelectionChange(file: IFileDescription) {\r\n    this.selectedFile = file;\r\n    this.valueChanged(this.form.value);\r\n  }\r\n\r\n  masterXmlFileSelectionChange(file: IFileDescription) {\r\n    this.selectedMasterXmbFile = file;\r\n    this.valueChanged(this.form.value);\r\n  }\r\n\r\n  valueChanged(formValue) {\r\n    const translationFile = this.selectedFile;\r\n    const masterXmbFile = this.selectedMasterXmbFile;\r\n    this.translatorService.createProject(\r\n      formValue.projectName,\r\n      translationFile,\r\n      masterXmbFile,\r\n      this.toWorkflowType(formValue.workflowType)\r\n    ).subscribe((newProject) => {\r\n      this.createdProject = newProject;\r\n      if (this.createdProject) {\r\n        this.createdProject.setUserRole(this.toUserRole(formValue.userRole));\r\n        if (this.createdProject.translationFile) {\r\n          this.createdProject.translationFile.setSourceLanguage(formValue.sourceLanguage);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param type type\r\n   * @return type as enum\r\n   */\r\n  toWorkflowType(type: string): WorkflowType {\r\n    switch (type) {\r\n      case 'singleuser':\r\n        return WorkflowType.SINGLE_USER;\r\n      case 'withReview':\r\n        return WorkflowType.WITH_REVIEW;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert string type from form to enum.\r\n   * @param role type\r\n   * @return role as enum\r\n   */\r\n  toUserRole(role: string): UserRole {\r\n    switch (role) {\r\n      case 'translator':\r\n        return UserRole.TRANSLATOR;\r\n      case 'reviewer':\r\n        return UserRole.REVIEWER;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  emitAddProject() {\r\n      this.addProject.emit(this.createdProject);\r\n  }\r\n\r\n  /**\r\n   * Check, wether all needed is typed in.\r\n   * Enables the add button.\r\n   */\r\n  isInputComplete(): boolean {\r\n    return this.createdProject && this.createdProject.name && !this.createdProject.hasErrors() && this.isFileSelected();\r\n  }\r\n\r\n  isFileSelected(): boolean {\r\n    return this.selectedFile && !!this.createdProject;\r\n  }\r\n\r\n  needsExplicitSourceLanguage(): boolean {\r\n    return this.createdProject &&\r\n      this.createdProject.translationFile &&\r\n      !this.createdProject.translationFile.hasErrors() &&\r\n      isNullOrUndefined(this.createdProject.translationFile.sourceLanguageFromFile());\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.createdProject && this.createdProject.workflowType === WorkflowType.WITH_REVIEW;\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n  <p><span i18n><b>Project </b> {{project?.name}}</span>\r\n    <button mat-icon-button (click)=\"openProjectDetails()\" matTooltip=\"Details of the project (click to open)\" i18n-matTooltip>\r\n      <mat-icon>info</mat-icon>\r\n    </button>\r\n  </p>\r\n  <app-translation-file-status\r\n    [translationFileView]=\"project?.translationFileView\"\r\n    [translationFile]=\"project?.translationFile\"\r\n    [shortInfo]=\"true\"\r\n    (saved)=\"save($event)\">\r\n  </app-translation-file-status>\r\n</div>\r\n<p *ngIf=\"project?.isReviewModeActive()\">\r\n  <mat-icon matTooltip=\"As a reviewer translation is disabled. You can only mark translated units as reviewed\" i18n-matTooltip>warning</mat-icon>\r\n  <span i18n>You are currently working as reviewer!</span>\r\n</p>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFile} from '../model/translation-file';\r\nimport {Router} from '@angular/router';\r\n\r\n/**\r\n * Shows the actual translation status of a project.\r\n * The layout is made for showing it as part of the toolbar.\r\n * So it is all in one row.\r\n */\r\n@Component({\r\n  selector: 'app-project-status',\r\n  templateUrl: './project-status.component.html',\r\n  styleUrls: ['./project-status.component.css']\r\n})\r\nexport class ProjectStatusComponent implements OnInit {\r\n\r\n  @Input() project: TranslationProject;\r\n  @Input() showActions = true;\r\n\r\n  @Output() onSave: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(translationFile: any) {\r\n    this.onSave.emit(this.project);\r\n  }\r\n\r\n  /**\r\n   * Open a page that shows all the details of the project.\r\n   */\r\n  openProjectDetails() {\r\n    this.router.navigateByUrl('/editproject');\r\n  }\r\n}\r\n","<b>Проект</b> {{project?.name}}","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationProject} from '../model/translation-project';\r\nimport {TranslationFile} from '../model/translation-file';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n  @Input() project: TranslationProject;\r\n  @Input() showActions = true;\r\n\r\n  @Output() onStartWork: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onDeleteProject: EventEmitter<TranslationProject> = new EventEmitter();\r\n  @Output() onSave: EventEmitter<TranslationProject> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save(translationFile: TranslationFile) {\r\n    this.onSave.emit(this.project);\r\n  }\r\n\r\n  startWork() {\r\n    this.onStartWork.emit(this.project);\r\n  }\r\n\r\n  deleteProject() {\r\n    this.onDeleteProject.emit(this.project);\r\n  }\r\n}\r\n","<div fxLayout=\"column\" style=\"min-width: calc(100vw-16px);\"><!-- 16px = 2xmargin of container page -->\n  <h3 i18n>Publish project</h3>\n  <form id=\"publishProjectForm\" fxLayout=\"column\" [formGroup]=\"form\">\n    <p i18n>Publish it at the following location</p>\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n      <app-file-to-save\n              [file]=\"_saveAs\"\n              [configurations]=\"configurations()|async\"\n              (selectedFile)=\"setSaveAs($event)\">\n      </app-file-to-save>\n    </div>\n    <mat-form-field fxFlex=\"90%\">\n      <mat-label i18n>commit message</mat-label>\n      <input type=\"text\" placeholder=\"commit message\" i18n-placeholder matInput formControlName=\"commitMessage\" name=\"commitMessage\"/>\n    </mat-form-field>\n    <div fxLayout=\"row\" fxLayoutGap=\"20px\">\n      <button mat-raised-button color=\"primary\" (click)=\"publish()\" [disabled]=\"form.invalid\"><mat-icon>publish</mat-icon><span i18n>Publish</span></button>\n    </div>\n    <div *ngIf=\"error\">\n      {{error}}\n    </div>\n  </form>\n  <div [hidden]=\"true\">\n    <span i18n #confirmSaveQuestion>Do you really want to override this file?</span>\n    <span i18n #confirmSaveInfo>File already exists.</span>\n    <span i18n #confirmModifyQuestion>Do you really want to override this file?</span>\n    <span i18n #confirmModifyInfo>The file has been modified after you loaded it.</span>\n    <span i18n #publishOkMessage>File successfully saved.</span>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog, MatSnackBar} from '@angular/material';\nimport {IFileDescription} from '../file-accessors/common/i-file-description';\nimport {Observable} from 'rxjs';\nimport {ConfirmDialogComponent, ConfirmDialogData} from '../confirm-dialog/confirm-dialog.component';\nimport {IFileAccessConfiguration} from '../file-accessors/common/i-file-access-configuration';\n\n@Component({\n  selector: 'app-publish-project-page',\n  templateUrl: './publish-project-page.component.html',\n  styleUrls: ['./publish-project-page.component.scss']\n})\nexport class PublishProjectPageComponent implements OnInit {\n\n  translationFile: IFileDescription;\n  _saveAs: IFileDescription;\n  form: FormGroup;\n  error: string;\n\n  @ViewChild('confirmSaveQuestion') confirmSaveQuestion: ElementRef;\n  @ViewChild('confirmSaveInfo') confirmSaveInfo: ElementRef;\n  @ViewChild('confirmModifyQuestion') confirmModifyQuestion: ElementRef;\n  @ViewChild('confirmModifyInfo') confirmModifyInfo: ElementRef;\n  @ViewChild('publishOkMessage') publishOkMessage: ElementRef;\n\n  constructor(private tinyTranslatorService: TinyTranslatorService,\n              private formBuilder: FormBuilder,\n              private dialog: MatDialog,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.translationFile = this.tinyTranslatorService.currentProject().translationFile.fileDescription();\n    this._saveAs = this.translationFile;\n    this.initForm();\n  }\n\n  private initForm() {\n    if (!this.form) {\n      const translationFile = this.tinyTranslatorService.currentProject().translationFile;\n      const name = translationFile.fileDescription().name;\n      this.form = this.formBuilder.group({\n        commitMessage: ['', Validators.required],\n        name: [name]\n      });\n    }\n  }\n\n  private textFromElementRef(ref: ElementRef|null): string {\n    if (!ref) {\n      return '?';\n    } else {\n      return ref.nativeElement.innerText;\n    }\n  }\n\n  openConfirmSaveDialog(): Observable<boolean> {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        question: this.textFromElementRef(this.confirmSaveQuestion),\n        info: this.textFromElementRef(this.confirmSaveInfo)\n      } as ConfirmDialogData\n    });\n    return dialogRef.afterClosed();\n  }\n\n  openConfirmModifiedDialog(): Observable<boolean> {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        question: this.textFromElementRef(this.confirmModifyQuestion),\n        info: this.textFromElementRef(this.confirmModifyInfo)\n      } as ConfirmDialogData\n    });\n    return dialogRef.afterClosed();\n  }\n\n  configurations(): Observable<IFileAccessConfiguration[]> {\n    return this.tinyTranslatorService.getFileAccessConfigurations();\n  }\n\n  publish() {\n    this.tinyTranslatorService.publishProject(this.tinyTranslatorService.currentProject(),\n      this.saveAs(),\n      {\n        message: this.form.value.commitMessage\n      },\n      () => this.openConfirmModifiedDialog(),\n      () => this.openConfirmSaveDialog()\n    ).subscribe((done: boolean) => {\n            this.error = null;\n            if (done) {\n              this.snackBar.open(this.textFromElementRef(this.publishOkMessage), undefined, {\n                duration: 3000,\n              });\n            }\n      }, (error) => {\n          this.error = error.toString();\n      });\n  }\n\n  setSaveAs(f: IFileDescription) {\n    this._saveAs = f;\n  }\n\n  private saveAs(): IFileDescription|null {\n    return this._saveAs === this.translationFile ? null : this._saveAs;\n  }\n}\n","<div id=\"page\" fxLayout=\"row\">\r\n  <app-translate-unit-list [translationFileView]=\"currentView()\" [workflowType]=\"currentProject()?.workflowType\"\r\n                           [hasAutotranslatedUnits]=\"hasAutotranslatedUnits()\"\r\n                           (changeTranslationUnit)=\"onChangeTranslationUnit($event)\"\r\n                           fxFlex=\"0 0 25%\" fxHide.lt-md></app-translate-unit-list>\r\n  <div id=\"transunit\" fxLayout=\"column\" fxFlex=\"grow\">\r\n    <app-filter-status fxHide.gt-sm [translationFileView]=\"currentView()\"></app-filter-status>\r\n    <app-project-status fxHide.lt-md [project]=\"currentProject()\" (onSave)=\"save()\"></app-project-status>\r\n    <app-translate-unit\r\n      [translationFileView]=\"currentView()\"\r\n      [translationUnit]=\"currentTranslationUnit()\"\r\n      [workflowType]=\"currentProject()?.workflowType\"\r\n      [reviewMode]=\"isInReviewMode()\"\r\n      (changed)=\"commitChanges($event)\"></app-translate-unit>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TinyTranslatorService} from '../model/tiny-translator.service';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {TranslationProject, UserRole} from '../model/translation-project';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {NavigationDirection, TranslateUnitChange} from '../translate-unit/translate-unit.component';\r\n\r\n@Component({\r\n  selector: 'app-translate-page',\r\n  templateUrl: './translate-page.component.html',\r\n  styleUrls: ['./translate-page.component.css']\r\n})\r\nexport class TranslatePageComponent implements OnInit {\r\n\r\n  constructor(private translationService: TinyTranslatorService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  currentProject(): TranslationProject {\r\n    return this.translationService.currentProject();\r\n  }\r\n\r\n  currentView(): TranslationFileView {\r\n    return this.currentProject() ? this.currentProject().translationFileView : null;\r\n  }\r\n\r\n  currentTranslationUnit(): TranslationUnit {\r\n    const currentProject = this.currentProject();\r\n    return currentProject ? currentProject.translationFileView.currentTransUnit() : null;\r\n  }\r\n\r\n  commitChanges(translateUnitChange: TranslateUnitChange) {\r\n    const direction = translateUnitChange.navigationDirection;\r\n    if (direction === NavigationDirection.NEXT) {\r\n      this.translationService.nextTransUnit();\r\n    } else if (direction === NavigationDirection.PREV) {\r\n      this.translationService.prevTransUnit();\r\n    }\r\n    if (translateUnitChange.changedUnit) {\r\n      this.translationService.commitChanges(this.currentProject());\r\n      if (this.currentView()) {\r\n        this.currentView().refresh();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to another unit.\r\n   * @param translationUnit\r\n   */\r\n  onChangeTranslationUnit(translationUnit: TranslationUnit) {\r\n    this.translationService.selectTransUnit(translationUnit);\r\n  }\r\n\r\n  save() {\r\n    this.translationService.downloadProject(this.currentProject());\r\n  }\r\n\r\n  isInReviewMode(): boolean {\r\n    return this.currentProject() && this.currentProject().userRole === UserRole.REVIEWER;\r\n  }\r\n\r\n  hasAutotranslatedUnits(): boolean {\r\n    return this.currentProject()\r\n      && this.currentProject().autoTranslateSummaryReport()\r\n      && this.currentProject().autoTranslateSummaryReport().total() > 0;\r\n  }\r\n\r\n}\r\n","<div id=\"list\" fxLayout=\"column\">\r\n  <div id=\"selectfilter\">\r\n    <p i18n>Show</p>\r\n    <mat-radio-group (change)=\"filterChanged($event)\" [(ngModel)]=\"_selectedFilterName\" fxLayout=\"column\">\r\n      <mat-radio-button value=\"all\" i18n>All units</mat-radio-button>\r\n      <ng-container *ngIf=\"hasAutotranslatedUnits\">\r\n        <mat-radio-button value=\"autotranslated\" i18n>Autotranslated units</mat-radio-button>\r\n        <mat-radio-button value=\"autotranslatedFailed\" i18n>failed Autotranslated</mat-radio-button>\r\n        <mat-radio-button value=\"autotranslatedIgnored\" i18n>ignored Autotranslated</mat-radio-button>\r\n      </ng-container>\r\n      <mat-radio-button value=\"untranslated\" i18n>Untranslated units</mat-radio-button>\r\n      <mat-radio-button *ngIf=\"isWorkflowWithReview()\" value=\"needsReview\" i18n>Review needed</mat-radio-button>\r\n      <mat-radio-button value=\"bySubstring\">\r\n        <span i18n>Search</span>&nbsp;\r\n        <mat-form-field>\r\n          <input matInput type=\"text\" placeholder=\"Substring\" i18n-placeholder [(ngModel)]=\"substringToSearch\"\r\n                 (keyup)=\"substringToSearchChange()\" [disabled]=\"_selectedFilterName !== 'bySubstring'\">\r\n        </mat-form-field>\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n  </div>\r\n  <mat-list>\r\n    <h3 matSubheader i18n>Translation Units</h3>\r\n    <mat-list-item *ngFor=\"let tu of transUnits()\" (click)=\"selectTransUnit(tu)\">\r\n      <mat-icon matListAvatar *ngIf=\"tu.targetState() === 'final'\">done</mat-icon>\r\n      <mat-icon matListAvatar *ngIf=\"tu.targetState() === 'translated'\">label_outline</mat-icon>\r\n      <mat-icon matListAvatar *ngIf=\"!tu.isTranslated()\">translate</mat-icon>\r\n      <h4 matLine [ngClass]=\"{'selected': isSelected(tu)}\">{{tu.sourceContentNormalized().dislayText(true) | abbreviate}}</h4>\r\n      <h4 matLine [ngClass]=\"{'selected': isSelected(tu)}\">{{tu.targetContentNormalized().dislayText(true) | abbreviate}}</h4>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {MatRadioChange} from '@angular/material';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {WorkflowType} from '../model/translation-project';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {\r\n  FILTER_ALL, FILTER_AUTOTRANSLATED, FILTER_AUTOTRANSLATED_FAILED, FILTER_AUTOTRANSLATED_IGNORED, FILTER_NEEDS_REVIEW,\r\n  FILTER_SUBSTRING,\r\n  FILTER_UNTRANSLATED,\r\n  TranslationUnitFilterService\r\n} from '../model/filters/translation-unit-filter.service';\r\nimport {debounceTime} from 'rxjs/operators';\r\n\r\n/**\r\n * Component that shows a list of trans units.\r\n * It allows to filter by different criteria and to select a unit.\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit-list',\r\n  templateUrl: './translate-unit-list.component.html',\r\n  styleUrls: ['./translate-unit-list.component.scss']\r\n})\r\nexport class TranslateUnitListComponent implements OnInit {\r\n\r\n  private _translationFileView: TranslationFileView;\r\n  public _selectedFilterName = 'all';\r\n  public substringToSearch: string;\r\n  private substringSubject: Subject<string>;\r\n  private substringSubscription: Subscription;\r\n\r\n  /**\r\n   * workflowType determines, what filters are visibile.\r\n   */\r\n  @Input() workflowType: WorkflowType;\r\n\r\n  @Input() hasAutotranslatedUnits: boolean;\r\n\r\n  /**\r\n   * Emitted, when user wants to navigate to another unit.\r\n   */\r\n  @Output() changeTranslationUnit: EventEmitter<TranslationUnit> = new EventEmitter();\r\n\r\n  constructor(private translationUnitFilterService: TranslationUnitFilterService) {\r\n    this.translationFileView = new TranslationFileView(null);\r\n    this.substringSubject = new Subject<string>();\r\n  }\r\n\r\n  @Input() public get translationFileView() {\r\n    return this._translationFileView;\r\n  }\r\n\r\n  public set translationFileView(view: TranslationFileView) {\r\n    if (view) {\r\n      this._translationFileView = view;\r\n    } else {\r\n      this._translationFileView = new TranslationFileView(null);\r\n    }\r\n    this._selectedFilterName = this._translationFileView.activeFilter().name();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public transUnits(): TranslationUnit[] {\r\n    return this.translationFileView.scrollabeTransUnits();\r\n  }\r\n\r\n  public showAll() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_ALL));\r\n  }\r\n\r\n  public showUntranslated() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_UNTRANSLATED));\r\n  }\r\n\r\n  public showNeedsReview() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_NEEDS_REVIEW));\r\n  }\r\n\r\n  public showBySearchFilter() {\r\n    if (this.substringSubscription) {\r\n      this.substringSubscription.unsubscribe();\r\n    }\r\n    const substr = this.substringToSearch ? this.substringToSearch : '';\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_SUBSTRING, substr));\r\n    this.substringSubscription = this.substringSubject.pipe(debounceTime(200)).subscribe((sub) => {\r\n      this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_SUBSTRING, sub));\r\n    });\r\n  }\r\n\r\n  substringToSearchChange() {\r\n    this.substringSubject.next(this.substringToSearch);\r\n  }\r\n\r\n  public showAutotranslated() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED));\r\n  }\r\n\r\n  public showAutotranslatedFailed() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_FAILED));\r\n  }\r\n\r\n  public showAutotranslatedIgnored() {\r\n    this.translationFileView.setActiveFilter(this.translationUnitFilterService.getFilter(FILTER_AUTOTRANSLATED_IGNORED));\r\n  }\r\n\r\n  filterChanged(changeEvent: MatRadioChange) {\r\n    switch (changeEvent.value) {\r\n      case 'all':\r\n        this.showAll();\r\n        break;\r\n      case 'untranslated':\r\n        this.showUntranslated();\r\n        break;\r\n      case 'needsReview':\r\n        this.showNeedsReview();\r\n        break;\r\n      case 'bySubstring':\r\n        this.showBySearchFilter();\r\n        break;\r\n      case 'autotranslated':\r\n        this.showAutotranslated();\r\n        break;\r\n      case 'autotranslatedFailed':\r\n        this.showAutotranslatedFailed();\r\n        break;\r\n      case 'autotranslatedIgnored':\r\n        this.showAutotranslatedIgnored();\r\n        break;\r\n      default:\r\n        // do nothing\r\n    }\r\n  }\r\n\r\n  public selectTransUnit(tu: TranslationUnit) {\r\n    this.changeTranslationUnit.emit(tu);\r\n  }\r\n\r\n  isSelected(tu: TranslationUnit): boolean {\r\n    return tu && tu === this.translationFileView.currentTransUnit();\r\n  }\r\n\r\n  isWorkflowWithReview(): boolean {\r\n    return this.workflowType === WorkflowType.WITH_REVIEW;\r\n  }\r\n\r\n}\r\n","<h3 matDialogTitle i18n>There are problems with the translation</h3>\r\n<div mat-dialog-content>\r\n  <p class=\"warning\" *ngFor=\"let warning of data.warnings\"><mat-icon>warning</mat-icon>&nbsp;{{warning}}</p>\r\n  <p class=\"error\" *ngFor=\"let error of data.errors\"><mat-icon>error</mat-icon>&nbsp;{{error}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button matDialogClose (click)=\"accept()\" [disabled]=\"data?.errors?.length > 0\" i18n>Accept, I know what I do</button>\r\n  <button mat-button matDialogClose (click)=\"discard()\" i18n>Discard changes</button>\r\n  <button mat-button matDialogClose (click)=\"cancel()\" i18n>Cancel</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n\r\n/**\r\n * Dialog used by translate-unit-component to show errors and warning.\r\n * There are 3 possible results:\r\n * 'cancel': do not do anything, stay on this trans unit.\r\n * 'discard': do not translate, leave transunit unchanged, but go to the next/prev unit.\r\n * 'accept': translate tu as given, ignoring warnings (errors cannot be ignored).\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit-warning-confirm-dialog',\r\n  templateUrl: './translate-unit-warning-confirm-dialog.component.html',\r\n  styleUrls: ['./translate-unit-warning-confirm-dialog.component.css']\r\n})\r\nexport class TranslateUnitWarningConfirmDialogComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<TranslateUnitWarningConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  accept() {\r\n    this.dialogRef.close('accept');\r\n  }\r\n\r\n  discard() {\r\n    this.dialogRef.close('discard');\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close('cancel');\r\n  }\r\n}\r\n","<mat-card *ngIf=\"!translationUnit\">\r\n  <mat-card-header>\r\n    <mat-card-title i18n>No Translation Unit</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content style=\"overflow: hidden\">\r\n    <p i18n>no content</p>\r\n  </mat-card-content>\r\n</mat-card>\r\n<mat-card *ngIf=\"translationUnit\">\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <ng-container i18n>State {{targetState()}}</ng-container>\r\n      <mat-icon *ngIf=\"targetState() === 'final'\">done</mat-icon>\r\n      <mat-icon *ngIf=\"targetState() === 'translated'\">label_outline</mat-icon>\r\n      <mat-icon *ngIf=\"targetState() === 'new'\">translate</mat-icon>\r\n      <button mat-icon-button (click)=\"showTransUnitID()\" matTooltip=\"ID {{transUnitID()}}\"><mat-icon>info</mat-icon></button>\r\n      <button mat-icon-button *ngIf=\"sourceRef()\" (click)=\"showSourceRefInfo()\" matTooltip=\"{{sourceRef()}}\"><mat-icon>location_on</mat-icon></button>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content fxLayout=\"column\" fxLayoutGap=\"5px\" [ngClass.gt-sm]=\"'mdcardcontent_gt'\" [ngClass.lt-md]=\"'mdcardcontent_sm'\">\r\n    <div>\r\n      <div id=\"sourcemessage\">\r\n        <app-language [code]=\"sourceLanguage()\"></app-language>\r\n        <app-normalized-message-input [readonly]=\"true\" [normalized]=\"showNormalized\" [message]=\"sourceContentNormalized()\"></app-normalized-message-input>\r\n        <p *ngIf=\"sourceDescription()\"><b i18n>Description</b> {{sourceDescription()}}</p>\r\n        <p *ngIf=\"sourceMeaning()\"><b i18n>Meaning</b> {{sourceMeaning()}}</p>\r\n      </div>\r\n    </div>\r\n    <form id=\"translation\" fxLayout=\"column\" [formGroup]=\"form\">\r\n      <p fxLayout=\"row\"><span i18n>Your translation to</span>&nbsp;<app-language [code]=\"targetLanguage()\"></app-language></p>\r\n      <div fxLayout=\"row\" fxLayoutGap=\"30px\" fxFlex=\"noshrink\">\r\n        <div fxLayout=\"column\">\r\n          <mat-slide-toggle formControlName=\"showNormalized\" color=\"accent\"\r\n                           matTooltip=\"In normalization mode all markup contained in the messsages is shown in a simplified, format neutral way.\"\r\n                           i18n-matTooltip i18n>Normalization mode\r\n          </mat-slide-toggle>\r\n          <p class=\"normalizationhint\" *ngIf=\"showNormalized\" i18n>(switch off to show native message)</p>\r\n          <p class=\"normalizationhint\" *ngIf=\"!showNormalized\" i18n>(switch on to use normalization)</p>\r\n        </div>\r\n        <button *ngIf=\"!reviewMode\" mat-icon-button\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"accent\"\r\n                (click)=\"undo()\"\r\n                [disabled]=\"!isTranslationChanged()\"\r\n                matTooltip=\"undo changes\" i18n-matTooltip>\r\n          <mat-icon>undo</mat-icon>\r\n        </button>\r\n        <button *ngIf=\"!reviewMode\" mat-mini-fab\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"accent\"\r\n                (click)=\"autoTranslate()\"\r\n                [disabled]=\"autoTranslateDisabled() | async\"\r\n                matTooltip=\"press to get a translation suggestion from Google Translate\" i18n-matTooltip>\r\n          <mat-icon>g_translate</mat-icon>\r\n        </button>\r\n      </div>\r\n      <app-normalized-message-input id=\"translationinput\" [readonly]=\"reviewMode\" [normalized]=\"showNormalized\"\r\n                                    [message]=\"editedTargetContentNormalized()\"\r\n                                    formControlName=\"_editedTargetMessage\"\r\n                                    (accept)=\"next()\"></app-normalized-message-input>\r\n      <p *ngFor=\"let w of warnings()\" class=\"warn\"><mat-icon>warning</mat-icon>&nbsp;{{w}}</p>\r\n      <p *ngFor=\"let e of errors()\" class=\"error\"><mat-icon>error</mat-icon>&nbsp;{{e}}</p>\r\n      <div fxLayout=\"row\">\r\n        <button *ngIf=\"!reviewMode\"\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"primary\"\r\n                (click)=\"markTranslated()\"\r\n                i18n\r\n                matTooltip=\"press to accept the given translation\" i18n-matTooltip>\r\n          mark as translated\r\n        </button>\r\n        <button *ngIf=\"reviewMode && targetState() === 'translated'\"\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"primary\"\r\n                (click)=\"markReviewed()\"\r\n                i18n\r\n                matTooltip=\"press to accept the given translation as reviewed\" i18n-matTooltip>\r\n          mark as reviewed\r\n        </button>\r\n        <button *ngIf=\"reviewMode && targetState() === 'final'\"\r\n                fxFlexAlign=\"start\"\r\n                mat-button color=\"primary\"\r\n                (click)=\"markTranslated()\"\r\n                i18n\r\n                matTooltip=\"press to reset the reviewed translation to 'translated'\" i18n-matTooltip>\r\n          mark as translated, but not reviewed\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button i18n (click)=\"prev()\"\r\n            [disabled]=\"!hasPrev()\"\r\n            matTooltip=\"accept translation and go to previous unit\" i18n-matTooltip>\r\n      Previous\r\n    </button>\r\n    <button mat-button i18n (click)=\"next()\"\r\n            [disabled]=\"!hasNext()\"\r\n            matTooltip=\"accept translation and go to next unit (Keyboard shortcut 'Ctrl Enter')\" i18n-matTooltip>\r\n      Next\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange, SimpleChanges} from '@angular/core';\r\nimport {TranslationUnit} from '../model/translation-unit';\r\nimport {MatDialog, MatSnackBar} from '@angular/material';\r\nimport {NormalizedMessage} from '../model/normalized-message';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Observable, of} from 'rxjs';\r\nimport {TranslateUnitWarningConfirmDialogComponent} from '../translate-unit-warning-confirm-dialog/translate-unit-warning-confirm-dialog.component';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\nimport {WorkflowType} from '../model/translation-project';\r\nimport {STATE_FINAL, STATE_TRANSLATED} from '@ngx-i18nsupport/ngx-i18nsupport-lib';\r\nimport {AutoTranslateServiceAPI} from '../model/auto-translate-service-api';\r\nimport {isNullOrUndefined} from '../common/util';\r\nimport {map} from 'rxjs/operators';\r\n\r\nexport enum NavigationDirection {\r\n  NEXT,\r\n  PREV,\r\n  STAY\r\n}\r\n\r\nexport interface TranslateUnitChange {\r\n  changedUnit?: TranslationUnit;\r\n  navigationDirection: NavigationDirection;\r\n}\r\n\r\n/**\r\n * Component to input a new translation.\r\n * It shows the source and allows to input the target text.\r\n */\r\n@Component({\r\n  selector: 'app-translate-unit',\r\n  templateUrl: './translate-unit.component.html',\r\n  styleUrls: ['./translate-unit.component.css']\r\n})\r\nexport class TranslateUnitComponent implements OnInit, OnChanges {\r\n\r\n  @Input() translationFileView: TranslationFileView;\r\n\r\n  @Input() translationUnit: TranslationUnit;\r\n\r\n  @Input() workflowType: WorkflowType;\r\n\r\n  @Input() showNormalized = true;\r\n\r\n  @Input() reviewMode = false;\r\n\r\n  /**\r\n   * Emitted, when translation is changed and/or the user wants to navigate to next/prev unit.\r\n   * If changedUnit is null, there is no change, but only navigation.\r\n   * @type {EventEmitter<TranslateUnitChange>}\r\n   */\r\n  @Output() changed: EventEmitter<TranslateUnitChange> = new EventEmitter();\r\n\r\n  form: FormGroup;\r\n\r\n  private _editedTargetMessage: NormalizedMessage;\r\n  private _editableTargetMessage: NormalizedMessage;\r\n  private isMarkedAsTranslated = false;\r\n  private isMarkedAsReviewed = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private dialog: MatDialog,\r\n              private _snackbar: MatSnackBar,\r\n              private autoTranslateService: AutoTranslateServiceAPI) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.form.valueChanges.subscribe(formValue => {this.valueChanged(formValue); });\r\n  }\r\n\r\n  private valueChanged(v: any) {\r\n    this._editedTargetMessage = v._editedTargetMessage;\r\n    this.showNormalized = v.showNormalized;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.initForm();\r\n    const changedTranslationUnit: SimpleChange = changes['translationUnit'];\r\n    if (changedTranslationUnit) {\r\n      if (changedTranslationUnit.currentValue) {\r\n        this._editedTargetMessage = changedTranslationUnit.currentValue.targetContentNormalized();\r\n      } else {\r\n        this._editedTargetMessage = null;\r\n      }\r\n      this._editableTargetMessage = null;\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    if (!this.form) {\r\n      this.form = this.formBuilder.group({\r\n        _editedTargetMessage: [this.editedTargetContentNormalized()],\r\n        showNormalized: [this.showNormalized],\r\n      });\r\n    }\r\n  }\r\n\r\n  public transUnitID(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.id();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public targetState(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.targetState();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public targetLanguage(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.translationFile().targetLanguage();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceContent(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.sourceContent();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceContentNormalized(): NormalizedMessage {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.sourceContentNormalized();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public editedTargetContentNormalized(): NormalizedMessage {\r\n    if (isNullOrUndefined(this._editableTargetMessage)) {\r\n      if (this.translationUnit) {\r\n        this._editableTargetMessage = this.translationUnit.targetContentNormalized();\r\n      }\r\n    }\r\n    return this._editableTargetMessage;\r\n  }\r\n\r\n  public sourceLanguage(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.translationFile().sourceLanguage();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceDescription(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.description();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceMeaning(): string {\r\n    if (this.translationUnit) {\r\n      return this.translationUnit.meaning();\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public sourceRef(): string {\r\n    if (this.translationUnit) {\r\n      const refs = this.translationUnit.sourceReferences();\r\n      if (refs.length > 0) {\r\n        return refs[0].sourcefile + ':' + refs[0].linenumber;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open a snackbar to show source ref\r\n   */\r\n  public showSourceRefInfo() {\r\n    const sourceRefMessage = 'Original message position: ' + this.sourceRef(); // TODO i18n it\r\n    this._snackbar.open(sourceRefMessage, 'OK', {duration: 5000}); // TODO i18n it\r\n  }\r\n\r\n  /**\r\n   * Open a snackbar to show units ID\r\n   */\r\n  public showTransUnitID() {\r\n    const message = 'ID: ' + this.transUnitID();\r\n    this._snackbar.open(message, 'OK', {duration: 5000});\r\n  }\r\n\r\n  errors(): any[] {\r\n    if (!this._editedTargetMessage) {\r\n      return [];\r\n    }\r\n    const errors = this._editedTargetMessage.validate(this.showNormalized);\r\n    if (errors) {\r\n      return Object.keys(errors).map(key => errors[key]);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  warnings(): any[] {\r\n    if (!this._editedTargetMessage) {\r\n      return [];\r\n    }\r\n    const errors = this._editedTargetMessage.validateWarnings(this.showNormalized);\r\n    if (errors) {\r\n      return Object.keys(errors).map(key => errors[key]);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  commitChanges(navigationDirection: NavigationDirection) {\r\n    if (this.translationUnit) {\r\n      if (this.isTranslationChanged() || this.isMarkedAsTranslated || this.isMarkedAsReviewed) {\r\n        this.translationUnit.translate(this._editedTargetMessage);\r\n        switch (this.workflowType) {\r\n          case WorkflowType.SINGLE_USER:\r\n            this.translationUnit.setTargetState(STATE_FINAL);\r\n            break;\r\n          case WorkflowType.WITH_REVIEW:\r\n            if (this.isMarkedAsReviewed) {\r\n              this.translationUnit.setTargetState(STATE_FINAL);\r\n            } else {\r\n              this.translationUnit.setTargetState(STATE_TRANSLATED);\r\n            }\r\n            break;\r\n        }\r\n        this.changed.emit({changedUnit: this.translationUnit, navigationDirection: navigationDirection});\r\n        this.isMarkedAsTranslated = false;\r\n        this.isMarkedAsReviewed = false;\r\n      } else {\r\n        this.changed.emit({navigationDirection: navigationDirection});\r\n      }\r\n    }\r\n  }\r\n\r\n  public isTranslationChanged(): boolean {\r\n    const original = this.translationUnit.targetContent();\r\n    if (isNullOrUndefined(this._editedTargetMessage)) {\r\n      return false;\r\n    }\r\n    return original !== this._editedTargetMessage.nativeString();\r\n  }\r\n\r\n  markTranslated() {\r\n    this.openConfirmWarningsDialog().subscribe(result => {\r\n      switch (result) {\r\n        case 'cancel':\r\n          break;\r\n        case 'discard':\r\n          break;\r\n        case 'accept':\r\n          this.isMarkedAsTranslated = true;\r\n          this.commitChanges(NavigationDirection.STAY);\r\n          break;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  undo() {\r\n    this._editableTargetMessage = this.translationUnit.targetContentNormalized().copy();\r\n    this._editedTargetMessage = this._editableTargetMessage;\r\n    this.changed.emit({changedUnit: this.translationUnit, navigationDirection: NavigationDirection.STAY});\r\n  }\r\n\r\n  markReviewed() {\r\n    this.isMarkedAsReviewed = true;\r\n    this.commitChanges(NavigationDirection.STAY);\r\n  }\r\n\r\n  /**\r\n   * If there are errors or warnings, open a dialog to conform what to do.\r\n   * There are 3 possible results:\r\n   * 'cancel': do not do anything, stay on this trans unit.\r\n   * 'discard': do not translate, leave transunit unchanged, but go to the next/prev unit.\r\n   * 'accept': translate tu as given, ignoring warnings (errors cannot be ignored).\r\n   * @return any\r\n   */\r\n  openConfirmWarningsDialog(): Observable<any> {\r\n    const warnings = this.warnings();\r\n    const errors = this.errors();\r\n    if (warnings.length === 0 && errors.length === 0) {\r\n      // everything good, we don´t need a dialog then.\r\n      return of('accept');\r\n    } else if (!this.isTranslationChanged()) {\r\n      return of('accept');\r\n    } else {\r\n      const dialogRef = this.dialog.open(TranslateUnitWarningConfirmDialogComponent,\r\n        {\r\n          data: {errors: errors, warnings: warnings},\r\n          disableClose: true\r\n        }\r\n        );\r\n      return dialogRef.afterClosed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Go to the next trans unit.\r\n   */\r\n  public next() {\r\n    if (this.translationUnit) {\r\n      this.openConfirmWarningsDialog().subscribe(result => {\r\n        switch (result) {\r\n          case 'cancel':\r\n            break;\r\n          case 'discard':\r\n            if (this.translationFileView.hasNext()) {\r\n              this.changed.emit({navigationDirection: NavigationDirection.NEXT});\r\n            }\r\n            break;\r\n          case 'accept':\r\n            const direction = (this.translationFileView.hasNext()) ? NavigationDirection.NEXT : NavigationDirection.STAY;\r\n            this.commitChanges(direction);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check, wether there is a next trans unit.\r\n   * @return wether there is a next trans unit\r\n   */\r\n  public hasNext(): boolean {\r\n    if (this.translationUnit) {\r\n      return this.translationFileView.hasNext();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public prev() {\r\n    if (this.translationUnit) {\r\n      this.openConfirmWarningsDialog().subscribe(result => {\r\n        switch (result) {\r\n          case 'cancel':\r\n            break;\r\n          case 'discard':\r\n            if (this.translationFileView.hasPrev()) {\r\n              this.changed.emit({navigationDirection: NavigationDirection.PREV});\r\n            }\r\n            break;\r\n          case 'accept':\r\n            const direction = (this.translationFileView.hasPrev()) ? NavigationDirection.PREV : NavigationDirection.STAY;\r\n            this.commitChanges(direction);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public hasPrev(): boolean {\r\n    if (this.translationUnit) {\r\n      return this.translationFileView.hasPrev();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Auto translate this unit using Google Translate.\r\n   */\r\n  autoTranslate() {\r\n    this.sourceContentNormalized().autoTranslateUsingService(\r\n      this.autoTranslateService,\r\n      this.sourceLanguage(),\r\n      this.targetLanguage()\r\n    ).subscribe((translatedMessage: NormalizedMessage) => {\r\n        this._editableTargetMessage = translatedMessage;\r\n        this._editedTargetMessage = translatedMessage;\r\n        this.changed.emit({changedUnit: this.translationUnit, navigationDirection: NavigationDirection.STAY});\r\n    });\r\n  }\r\n\r\n  autoTranslateDisabled(): Observable<boolean> {\r\n    if (!this.translationUnit) {\r\n      return of(true);\r\n    }\r\n    return this.autoTranslateService.canAutoTranslate(\r\n      this.translationUnit.translationFile().sourceLanguage(),\r\n      this.translationUnit.translationFile().targetLanguage()).pipe(map(val => !val));\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!shortInfo\" fxLayout=\"column\">\r\n  <p *ngIf=\"translationFile?.hasErrors()\" class=\"error\">{{translationFile?.error}}</p>\r\n  <p *ngFor=\"let warning of translationFile?.warnings()\" class=\"warn\">{{warning}}</p>\r\n  <div fxLayout=\"row\">\r\n    <span i18n>Translate <b>from</b></span>&nbsp;<app-language [code]=\"translationFile?.sourceLanguage()\"></app-language>\r\n    &nbsp;<span i18n><b>to</b></span>&nbsp;<app-language [code]=\"translationFile?.targetLanguage()\"></app-language>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n    <span>{{translationFile?.name}}, </span>\r\n    <span i18n>{{translationFile?.size}} bytes, </span>\r\n    <span i18n>{{translationFile?.numberOfTransUnits}} entries</span>\r\n    <mat-icon *ngIf=\"translationFile?.isDirty()\" matTooltip=\"There are unpublished changes\" i18n-matTooltip>warning</mat-icon>\r\n    <button mat-icon-button color=\"primary\" (click)=\"save()\" matTooltip=\"save current state to file (download)\" i18n-matTooltip><mat-icon>save</mat-icon></button>\r\n  </div>\r\n  <div *ngIf=\"translationFile?.masterName\">\r\n    <span i18n>(translation of file {{translationFile?.masterName}})</span>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n    <mat-progress-spinner mode=\"determinate\" [diameter]=\"30\" [strokeWidth]=\"5\" [value]=\"translationFile?.percentageTranslated()\" color=\"accent\"></mat-progress-spinner>\r\n    <span i18n>{{percentageTranslated()}} % translated</span>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"shortInfo\" fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n    <mat-progress-spinner mode=\"determinate\" [diameter]=\"30\" [strokeWidth]=\"5\" [value]=\"translationFile?.percentageTranslated()\" color=\"accent\"></mat-progress-spinner>\r\n    <span i18n>{{percentageTranslated()}} % translated</span>\r\n  </div>\r\n  <p *ngIf=\"translationFileView?.currentTransUnitIndex() > 0\" i18n>current transunit {{translationFileView?.currentTransUnitIndex()}} of {{translationFileView?.scrollabeTransUnitsLength()}}</p>\r\n  <mat-icon *ngIf=\"translationFile?.isDirty()\" matTooltip=\"There are unpublished changes\" i18n-matTooltip>warning</mat-icon>\r\n  <button mat-icon-button color=\"primary\" (click)=\"save()\" matTooltip=\"export current translation state to file (download)\" i18n-matTooltip><mat-icon>save</mat-icon></button>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {TranslationFile} from '../model/translation-file';\r\nimport {TranslationFileView} from '../model/translation-file-view';\r\n\r\n/**\r\n * Component to show the current status of a loaded translation file.\r\n * It shows the size, number of translations, wether it is changed etc.\r\n */\r\n@Component({\r\n  selector: 'app-translation-file-status',\r\n  templateUrl: './translation-file-status.component.html',\r\n  styleUrls: ['./translation-file-status.component.css']\r\n})\r\nexport class TranslationFileStatusComponent implements OnInit {\r\n\r\n  @Input() translationFile: TranslationFile;\r\n  @Input() translationFileView: TranslationFileView;\r\n  @Input() shortInfo = false;\r\n\r\n  @Output() saved: EventEmitter<TranslationFile> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * percentage translated rounded to 0 digits.\r\n   * @return percentage number\r\n   */\r\n  public percentageTranslated(): string {\r\n    if (this.translationFile) {\r\n      const result: number = this.translationFile.percentageTranslated();\r\n      return result.toFixed(0);\r\n    } else {\r\n      return '0';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save the changed file.\r\n   */\r\n  public save() {\r\n    if (this.translationFile) {\r\n      this.saved.emit(this.translationFile);\r\n    }\r\n  }\r\n}\r\n","<span i18n>A newer version of the app is available (actual version {{actualVersion}}, new version {{availableVersion}})</span>\r\n<button mat-button color=\"primary\" i18n (click)=\"updateApplication()\">Refresh Application</button>\r\n<button mat-button i18n (click)=\"closeSnackbar()\">Ignore</button>\r\n","import {Component, OnInit, Optional} from '@angular/core';\r\nimport {MatSnackBarRef} from '@angular/material';\r\nimport {SwUpdate, UpdateAvailableEvent} from '@angular/service-worker';\r\nimport {take} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-update-available',\r\n  templateUrl: './update-available.component.html',\r\n  styleUrls: ['./update-available.component.css']\r\n})\r\nexport class UpdateAvailableComponent implements OnInit {\r\n\r\n  actualVersion: string;\r\n  availableVersion: string;\r\n\r\n  constructor(private snackBarRef: MatSnackBarRef<any>, @Optional() private updates: SwUpdate) { }\r\n\r\n  ngOnInit() {\r\n    this.actualVersion = 'unknown';\r\n    this.availableVersion = 'unknown';\r\n    if (this.updates) {\r\n      this.updates.available.pipe(take(1)).subscribe((availableEvent: UpdateAvailableEvent) => {\r\n        if (availableEvent.current.appData) {\r\n          this.actualVersion = (<any> availableEvent.current.appData).version;\r\n        }\r\n        if (availableEvent.available.appData) {\r\n            this.availableVersion = (<any> availableEvent.available.appData).version;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  updateApplication() {\r\n    if (this.updates) {\r\n        this.updates.activateUpdate().then(() => document.location.reload());\r\n    }\r\n  }\r\n\r\n  closeSnackbar() {\r\n    this.snackBarRef.dismiss();\r\n  }\r\n}\r\n","// The file content for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  version: '%VERSION%',\r\n  buildtime: '%BUILDTIME%',\r\n  base_href: '%BASE_HREF%',\r\n  googletranslate_api_key: null,\r\n  googletranslate_provoke_failures: false,\r\n  github_api_key: null,\r\n  github_provoke_failures: false,\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}